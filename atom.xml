<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-11-12T06:37:22.896Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>On java 8 基础卷（15-21章）</title>
    <link href="http://example.com/2023/11/12/PL/On%20java8%E5%9F%BA%E7%A1%80%E5%8D%B715-21/"/>
    <id>http://example.com/2023/11/12/PL/On%20java8%E5%9F%BA%E7%A1%80%E5%8D%B715-21/</id>
    <published>2023-11-12T06:36:42.496Z</published>
    <updated>2023-11-12T06:37:22.896Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/PL/OnJava8/x_x.jpg" alt></p><h2 id="15-%E5%BC%82%E5%B8%B8" tabindex="-1">15 异常</h2><ul><li>Java的基本哲学:写得不好的代码无法运行</li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/PL/OnJava8/x_x.jpg&quot; alt&gt;&lt;/p&gt;
&lt;h2 id=&quot;15-%E5%BC%82%E5%B8%B8&quot; tabindex=&quot;-1&quot;&gt;15 异常&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Java的基本哲学:写得不好的代码无法运行&lt;/li</summary>
      
    
    
    
    <category term="读书笔记" scheme="http://example.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Software Debloating 论文阅读 (4)</title>
    <link href="http://example.com/2023/11/06/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/SoftwareDebloating/Software%20Debloating%20%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB(4)/"/>
    <id>http://example.com/2023/11/06/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/SoftwareDebloating/Software%20Debloating%20%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB(4)/</id>
    <published>2023-11-06T08:19:02.870Z</published>
    <updated>2023-11-13T14:55:18.521Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_x.png" alt></p><h1 id="razor%3A-a-framework-for-post-deployment" tabindex="-1">Razor: A Framework for Post-deployment</h1><p>Software Debloating</p><p>28th USENIX Security Symposium　CCFA会</p><h2 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h2><ul><li>最近得debloating技术需要源码,限制了其实际中的应用</li><li>本文提出了一个实际的debloating框架:RAZOR,在部署的二进制代码上进行代码简化<ul><li>基于用户的期望,生成一个最小的满足功能的程序</li><li>同时不只是根据给定的测试用例,RAZOR使用了几种控制流的启发式算法来推断出必要的代码,以支持用户期望的功能</li></ul></li><li>我们再常见的基准上进行测试,同时也在真实的应用上进行测试,包括 火狐浏览器,闭源PDF阅读器FoxitReader,结果显式RAZOR可以在二进制上减少超过70%的代码</li><li>RAZOR简化了代码,并且没有引入新的安全隐患,因此RAZOR是一个实际的框架,可以在对实际的程序使用</li></ul><h2 id="1-%E4%BB%8B%E7%BB%8D" tabindex="-1">1 介绍</h2><ul><li><p>要使这种部署后使用的方法(即面向部署二进制文件的方法)对用户有用,有两个挑战</p><ul><li><ol><li>如何使得对软件了解较少的用户,表达他们对软件特点的需求,即哪个功能需要保留和移除</li></ol></li><li><ol start="2"><li>如何修改软件二进制文件来移除不需要的功能和保留需要的</li></ol></li></ul></li><li><p>为了解决第一个挑战,可以让用户提供一组样例输入集合来解释他们将如何使用这个软件,这样其实输入到输出构成一个映射即可,然而实际中,即使处理相同的输入,也会有不同的执行路径,因此这种方法不可行</p></li><li><p>为了基于用户提供的输入能够实际地简化程序,我们必须找到支持完整功能但处理样例输入时为执行的代码,称为<strong>相关代码</strong></p><ul><li>然而,相关代码地识别很困难,特别地,让用户(甚至开发者)提供一个能够执行某一功能的所有必要代码的输入语料库是一项具有挑战的任务</li><li>此外,即使用户提供了所有可能输入的一些描述(例如样式),仍然很难确定这些输入所有可达的代码</li><li>因此,我们坚信,所有在部署后情况下的去膨胀机制,都应该基于 尽力而为 的启发式机制.<ul><li>启发式方法会尽可能地标识相关代码,同时保留最少的不相关代码</li><li>而死代码消除,增量调试法不适用于本问题,因为它们只关注移除静态死代码 或 保留程序在几个特定输入上的行为</li></ul></li></ul></li><li><p>我们设计了一种启发式方法,基于这样的假设:代码路径差异越大,相关功能越少. 具体地,对于给定的与运行路径 $ p $ ,我们要找到一条不同的路径 $ q $ ,满足</p><ul><li><ol><li>$ q $ 没有不同的指令</li></ol></li><li><ol start="2"><li>$ q $ 没有调用新的函数</li></ol></li><li><ol start="3"><li>$ q $ 不需要额外地库函数</li></ol></li><li><ol start="4"><li>$ q $ 不依赖于具有不同功能地库函数</li></ol></li></ul></li><li><p>然后,我们相信 $ q $ 是与 $ p $ 相关的,将 $ q $ 中的代码视为相关代码</p></li><li><p>从(1)到(4),启发式方法在包括地代码越来愈多,对于给定程序,我们会逐渐提升启发式等级直到生成的程序稳定.然而实际上,在我们的评估中,即使是最激进的启发式方法,也只会使得引入的最终代码少量增加</p></li><li><p>当所有相关代码被确定,我们开发了一个二进制重写平台来删除不必要的代码生成一个简化的程序.</p><ul><li>由于简化程序的特性,我们的平台不会面临一般二进制重写工具的符号化问题[51,52,53,5] <code>TODO</code><ul><li>具体来说,通用二进制重写工具必须保留所有程序功能,但在没有可靠反汇编技术和完成的控制流图(control-flow graph,CFG)下很困难</li><li>对于去膨胀,我们只保留样本输入的功能,其中反汇编和CFG可以通过观察程序运行获得</li></ul></li></ul></li><li><p>我们设计了RAZOR框架来实现部署后的去膨胀,框架由三个部分组成</p><ul><li><strong>Tracer</strong>:监视程序在样例输入上的执行,记录执行代码</li><li><strong>PathFinder</strong>:使用启发式方法从已经执行的代码中推断出更多的相关代码</li><li><strong>Generator</strong>:基于Tracer和PathFinder的输出产生新的二进制文件</li></ul></li><li><p>在RAZOR框架中,我们实现了三个追踪器(两个基于动态二进制插装,一个基于硬件追踪功能),四个启发式路径查找算法,一个二进制生成器</p></li><li><p>为了理解RAZOR的效果,我们再三个基准集进行了测试(1)SPEC CPU2006 基准 (2)ChiselBenchmark 10个程序 (3) 两个真实程序,火狐浏览器和闭源PDF阅读器FoxitReader</p></li><li><p>在我们的评估中,我们基于一组训练输入执行跟踪和去膨胀,并用一组和输入相似但不同的输入进行测试,结果显示</p><ul><li>RAZOR可以减少70-80%的程序大小,同时只引入了1.7%的新二进制文件开销</li><li>我们将RAZOR和CHISEL进行比较,在ChiselBenchmark上,我们发现Chisel简化程度更好,但在测试用例中失败了几个,同时Chisel引入了新的漏洞在简化程序中,例如 由于删除边界检查而导致的缓冲区溢出.而RAZOR不会引入新的问题</li><li>我们还分析了我们的路径查找器识别出的相关代码,并发现不同的启发式方法可以很好的提升程序的鲁棒性</li></ul></li><li><p>综上所述,我们的论文创新如下</p><ul><li><strong>新方法</strong>:RAZOR,在二进制文件上进行使用,需要给定输入</li><li><strong>开源</strong>:<a href="https://github.com/cxreet/razor.">Razor仓库地址</a></li><li><strong>贴合实际,即开即用</strong>:在现实程序中进行了测试,结果显示简化后的程序有显著的减少,更好的安全性</li></ul></li></ul><h2 id="2-%E9%97%AE%E9%A2%98" tabindex="-1">2 问题</h2><h3 id="2.1-motivating-example" tabindex="-1">2.1 Motivating Example</h3><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_1.png" alt></p><ul><li>上图展示了一个膨胀的程序,用于解析不同种类的图片<ul><li>基于用户的选择调用不同的函数</li><li>在<code>parsePNG</code>中<ul><li>代码首先分配内存来保存图像</li><li>然后将内存地址保存在<code>img</code>中</li><li>然后通过使用宏<code>ALIGN(v,a)</code>,确保<code>img</code>按照16字节对齐.</li><li>最后调用函数<code>readToMem</code>将图像内容从文件加载到内存中进一步处理</li></ul></li><li><code>parseJPEG</code>和<code>parseGIF</code>代码类似</li></ul></li><li>然而当用户只需要解析PNG格式的图片,该程序是膨胀的,例如 iPhone设备总是PNG格式的图片,因此不需要解析JPEG的代码,这些代码中可能还存在一些安全问题.</li><li>在现实中,我们可以轻易找到支持过时格式(如PCX,Sun Raster,TGA)的文档阅读器(如MacOS 上的 Preview),我们可以对这些程序进行去膨胀来减小他们的大小和攻击面</li></ul><h3 id="2.2-program-debloating" tabindex="-1">2.2 Program Debloating</h3><ul><li><p>问题定义:给定一个程序 $ P $ , 其有一组功能 $ \mathcal{F} = {F_0,F_1,F_2,…} $ ,用户指定的功能 $ \mathcal{F_u} = {F_i,F_j,F_k,…} $ , 我们的目标是生成一个程序 $ P’ $ 保留在 $ \mathcal{F_u} $ 中的函数,并且拒接对 $ \mathcal{F}-\mathcal{F_u} $中函数的请求</p></li><li><p>本文关注于在软件二进制代码中简化功能:我们从运行中构建一个控制流图CFG来指导基于二进制的简化.</p></li><li><p>下图展示了之前例子在二进制下的状态<img src="../../../images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_2.png" alt></p><ul><li><ol><li>黑色箭头表示过程内跳转</li></ol></li><li><ol start="2"><li>虚线箭头表示过程间跳转</li></ol></li></ul></li><li><p>在CFG中去除不可达的节点,我们可以得到简化后的CFG</p></li></ul><h3 id="2.3-%E6%8C%91%E6%88%98%E5%92%8C%E6%8E%AA%E6%96%BD" tabindex="-1">2.3 挑战和措施</h3><ul><li>功能-&gt;函数-&gt;二进制代码的转换是有挑战的,为此引出两个问题<ul><li><strong>C1</strong>: 如何表达不必要的功能</li><li><strong>C2</strong>: 如何将功能对应到代码</li></ul></li><li>以上问题的可能解决方法是根据用户提供的一组测试用例来观测程序的运行以此识别出相关代码.<ul><li>我们的问题可以描述为:给定二进制程序 $ P_b $ 和一组测试集 $ T={t_i,t_j,t_k…} $ ,每个测试用例 $ t_i $ 触发 $ P_b $ 的一些函数,我们会创建一个最小的程序 $ P_b’ $ 仅支持 $ T $ 中的测试用例触发的函数</li></ul></li><li>测试用例可以帮我们解决<strong>C1,C2</strong>,但测试用例不能完全覆盖所需功能的全部相关代码,即有一些相关代码不会被触发.如果我们仅删除未运行的代码,程序功能将会被破坏<ul><li>例如:在上面解析图片的代码中,第11行的判断可能在测试用例中一直未实现,导致第12行被认为是未执行代码,这将引发问题.</li><li>在本文后续 $5.2 的评估中,展示了如果只是简单的移除未运行的代码,会导致很多问题,甚至程序的崩溃.<strong>并且所有基于测试用例的方法都会有这个问题</strong></li></ul></li><li><strong>C3</strong>: 如何从有限的测试用例中找到相关代码<ul><li>针对此问题,我们提出了基于CFG的启发式方法来推理出更多的相关代码,来支持我们需要的功能</li><li>问题定义:<ul><li>假设 $ T $ 中的测试用例触发了 $  \mathcal{I} = {i_0,i_1,i_2,…}　$ 中的二进制指令,我们的启发式方法会自动地指明更多被测试用例集合 $ T $ 所覆盖功能的相关代码.</li><li>具体地,我们定义一个超集 $ \mathcal{I’} = \mathcal{I} \cup {i_x,i_y,i_z …}$ 并保留在 $ \mathcal{I’} $ 中的所有指令,同时删除其它指令使得代码最小化.</li></ul></li><li>在上面解析照片的例子中,如果测试用例中没有经过12行,我们的启发式搜索将会包括这一相关代码</li><li>在 $5.3 中 我们将会展示我们的启发式方法在查找相关代码上是有效的,并且只会引发少量的代码增加</li></ul></li></ul><h2 id="3-%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1" tabindex="-1">3 系统设计</h2><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_3.png" alt></p><ul><li>上图展示了RAZOR的架构:给定一个膨胀的二进制程序和一组可以触发所需程序功能的测试集,RAZOR移除不需要的代码生成 支持所需功能的最小二进制代码</li><li>为了实现上述目标<ul><li>RAZOR首先使用<code>Tracer</code>收集测试用例上的运行路径</li><li>随后编码路径构造程序的CFG,其中包含所有的运行指令</li><li>接着,RAZOR使用<code>PathFinder</code>来识别出相关代码,即使用启发式方法扩展CFG</li><li>最后基于扩展的CFG<code>Generator</code>重新生成二进制代码来生成满足功能的最小二进制程序</li></ul></li></ul><h3 id="3.1-%E8%BF%90%E8%A1%8C%E8%B7%AF%E5%BE%84%E6%94%B6%E9%9B%86" tabindex="-1">3.1 运行路径收集</h3><p><code>Tracer</code>收集三种信息记录控制流信息</p><ol><li>已执行指令,包括内存地址和原始字节</li><li>条件分支的跳转或不跳转,如 je指令</li><li>间接跳转或调用 的目标地址,如 jmpq *%rax</li></ol><ul><li><p>Tracer记录已执行指令的原始字节以处理动态生成/修改的代码,然而，指令级别的记录效率低下，同时大多数实际程序只包含静态代码</p></li><li><p>因此Tracer从基本块级别的记录开始，仅记录每个已执行基本块的地址;</p><ul><li>在执行过程中，它检测所有动态代码行为，如可写和可执行的内存区域（例如即时编译[13]），或重叠的基本块（例如合法的代码重用[26]），并切换到指令级别的记录以避免遗漏指令。</li><li>一个条件分支可能会被多次执行，最终覆盖一个或两个目标（即fall-through目标和跳转目标）。对于间接跳转/调用指令，我们记录所有已执行的目标并计算它们的频率</li></ul></li><li><p>下图为一个收集的运行路径的例子![]</p><ul><li>记录了分支跳转的情况</li><li>间接跳转的次数<br>(/images/论文/software%20debloating%20论文/(4)_4.png)</li></ul></li><li><p>我们发现使用多种工具收集执行跟踪是值得的</p><ul><li>首先，没有一种机制可以完全高效地记录跟踪信息<ul><li>基于软件的插桩工具:可以忠实地记录所有信息，但引入了显著的开销[7, 25, 6]</li><li>基于硬件的日志:可以有效的记录信息,但需要特殊的硬件,并且不能保证完备性(例如,Intel PT中的数据丢失)</li></ul></li><li>其次,程序在不同跟踪环境下执行的程序将显示不同的路径<ul><li><code>Dynamorio</code>总是将文件名扩展为绝对路径,导致一些程序中不同的执行路径(如 vim)</li></ul></li></ul></li><li><p>因此,我们提供了三种不同的软件和硬件实现,用户可以根据自己的需求选择最好的,甚至可以将多个工具的跟踪信息合并来获得更好的代码覆盖率</p></li><li><p><strong>CFG的构造</strong></p><ul><li>RAZOR使用收集到的执行路径来反汇编二进制文件,并以此可靠地构造CFG. 与先前使用启发式方法确定函数边界的工作[52, 51, 3, 4, 45]不同，RAZOR从执行跟踪中获取准确的指令地址和函数边界信息</li><li>从这种可靠地信息开始,我们可以识别更多地代码指令,随后我们的启发式方法可以将他们是否是相关代码进行考量<ul><li>对于条件分支指令,两个目标都是已知的,都可以有效地进行反汇编</li><li>对于间接跳转/调用指令,我们可以识别出潜在地跳转表</li></ul></li></ul></li></ul><h3 id="3.2-%E5%9F%BA%E4%BA%8E%E5%90%AF%E5%8F%91%E5%BC%8F%E7%9A%84%E8%B7%AF%E5%BE%84%E6%8E%A8%E6%96%AD-heuristic-based-path-inference" tabindex="-1">3.2 基于启发式的路径推断 Heuristic-based Path Inference</h3><p>我们使用最佳尝试的启发式方法以包括更多的相关代码.以下我们将按照保留代码的程度依次介绍</p><ul><li>下图为使用不同启发式方法产生的不同效果<ul><li>左侧为原始CFG,右侧为扩展后的CFG</li><li>代码设计为计算 <code>log(sqrt(max(rax,rbx,rcx)))</code></li><li>虚线表示追踪过程中未执行的分支和块,原始的执行路径是 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub><mo>→</mo><msub><mi>L</mi><mn>2</mn></msub><mo>→</mo><msub><mi>L</mi><mn>3</mn></msub><mo>→</mo><msub><mi>L</mi><mn>5</mn></msub><mo>→</mo><msub><mi>L</mi><mn>7</mn></msub><mo>→</mo><msub><mi>L</mi><mn>9</mn></msub></mrow><annotation encoding="application/x-tex">L_1 \rightarrow L_2 \rightarrow L_3 \rightarrow L_5 \rightarrow L_7 \rightarrow L_9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq><br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_5.png" alt></li></ul></li></ul><h4 id="(1)-%E9%9B%B6%E4%BB%A3%E7%A0%81%E5%90%AF%E5%8F%91%E5%BC%8F-zero-code-heuristic-(zcode)" tabindex="-1">(1) 零代码启发式 Zero-code heuristic (zCode)</h4><ul><li>该启发式方法引入新边(例如基本块之间的跳转)在CFG中</li><li>对于只有一个目标的条件跳转指令,<code>PathFinder</code>会检查非选择目标是否已经在CFG中,如果在,<code>PathFinder</code>也允许从该分支指令跳到非选择目标.<ul><li>这里需要注意到,这是将未运行的代码向与运行的代码中调价,即相关代码,所以总的程序仍然是简化的</li></ul></li><li>在上图中,<code>zCode</code>启发式方法将会引入边 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mn>1</mn><mo>→</mo><mi>L</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">L1\rightarrow L3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">3</span></span></span></span></eq> ,因为 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">L3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">3</span></span></span></span></eq> 是 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">L1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">1</span></span></span></span></eq> 的非选择目标,但之后依然存在在CFG中</li></ul><h4 id="(2)-%E9%9B%B6%E8%B0%83%E7%94%A8%E5%90%AF%E5%8F%91%E5%BC%8F-zero-call-heuristic-(zcall)" tabindex="-1">(2) 零调用启发式 Zero-call heuristic (zCall)</h4><ul><li>该启发式包括不执行任何函数调用的替代执行路径</li><li>使用该启发式方法,<code>PathFinder</code>从条件语句中未被采取的目标出发,并跟着控制流找到最终和 已执行路径合并的新路径. 如果新路径中没有<code>call</code>指令,则将其添加到CFG中</li><li>当<code>PathFinder</code>走到未运行指令时,我们没有准确的信息来反汇编或构建CFG,相反,我们依赖现有的方法[53,3]进行二进制分析</li><li>应用该启发式方法zcall,在上图中,<code>PathFinder</code>将会引入块 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>4</mn></msub></mrow><annotation encoding="application/x-tex">L_4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq> 和边 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mn>3</mn><mo>→</mo><mi>L</mi><mn>4</mn><mo>→</mo><mi>L</mi><mn>5</mn></mrow><annotation encoding="application/x-tex">L3\rightarrow L4 \rightarrow L5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">3</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">5</span></span></span></span></eq>,因为该路径在 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">L_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq> 出进行了合并,且不包含调用指令</li></ul><h4 id="(3)-%E9%9B%B6%E5%BA%93%E8%B0%83%E7%94%A8%E5%90%AF%E5%8F%91%E5%BC%8F-zero-libcall-heuristic-(zlib)" tabindex="-1">(3) 零库调用启发式 Zero-libcall heuristic (zLib)</h4><ul><li>与zCall先死,但<code>PathFinder</code>在包括可选路径时更加激进<ul><li>新路径可以包含同二进制文件中的函数或已执行的外部函数的调用指令</li><li>但zlib不运行调用未执行的外部函数</li></ul></li><li>在上图中,使用该启发式,<code>PathFinder</code>将会引入块 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>6</mn></msub></mrow><annotation encoding="application/x-tex">L_6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq> 和边 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>5</mn></msub><mo>→</mo><mi>L</mi><mn>6</mn><mo>→</mo><mi>L</mi><mn>7</mn></mrow><annotation encoding="application/x-tex">L_5\rightarrow L6 \rightarrow L7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">7</span></span></span></span></eq>,因为该路径没有对未执行的外部函数的调用</li></ul><h4 id="(4)-zero-functionality-heuristic-(zfunc)" tabindex="-1">(4) Zero-functionality heuristic (zFunc)</h4><ul><li>该启发式方法运行包括为执行的外部函数调用只要其不触发新的高级功能</li><li>为了将库函数和功能相关联,我们检查它们的描述并将其手工分组.<ul><li>例如,log和sqrt术语指数和算数字部份,因此认为其基于相似的功能</li></ul></li><li>使用该启发式方法,<code>PathFinder</code>将会引入块 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>8</mn></msub></mrow><annotation encoding="application/x-tex">L_8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq> 和边 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>7</mn></msub><mo>→</mo><mi>L</mi><mn>8</mn><mo>→</mo><mi>L</mi><mn>9</mn></mrow><annotation encoding="application/x-tex">L_7\rightarrow L8 \rightarrow L9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mord">9</span></span></span></span></eq>,因为该路径没有对未执行的外部函数的调用,且不触发新的高级功能</li></ul><h4 id="(5)-%E7%AE%97%E6%B3%95" tabindex="-1">(5) 算法</h4><ul><li>下图展示了<code>PathFinder</code>寻找相关代码的步骤<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_6.png" alt></li></ul><ol><li>对于CFG中的每一个条件语句</li><li>使用<code>get_non_taken_branch</code>得到未执行的分支</li><li>如果两个分支都执行了,继续遍历;否则按照启发式等级进行判断</li><li>如果为执行的分支属于当前CFG且当前启发式等级大于等于 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mi>C</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">zCode</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span></span></span></span></eq>,</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mi>C</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">zCode</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span></span></span></span></eq> 将未执行的分支加入到CFG中</li><li>如果启发式等级比 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mi>C</mi><mi>o</mi><mi>d</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">zCode</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span></span></span></span></eq> 高, <code>PathFinder</code> 将会首先得到从未选择分支出发的可选路径并且最终合并到已执行路径中.</li><li>随后迭代所有的可选路径,在迭代中根据启发式等级调用相应的验证函数</li><li>最后在13和14行,确定该路径是否需要被包括到CFG中</li></ol><h3 id="3.3-%E5%8E%BB%E8%86%A8%E8%83%80%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%90%88%E6%88%90-debloated-binary-synthesization" tabindex="-1">3.3 去膨胀二进制合成 Debloated Binary Synthesization</h3><ul><li><p>通过原始的膨胀二进制代码和扩展的CFG,<code>Generator</code>生成一个简化的二进制文件并包括所有的功能</p><ul><li><ol><li>其将根据CFG反汇编原本的二进制代码,并生成包含所有必要指令的伪汇编文件</li></ol></li><li><ol start="2"><li><code>Generator</code>修改伪汇编代码来创建合法的汇编代码. 这些修改包括 基本块的表示,具体化简介跳转,插入故障处理代码</li></ol></li><li><ol start="3"><li>将汇编代码编译成目标文件,其中包括所需指令的机器码</li></ol></li><li><ol start="4"><li><code>Generator</code>将机器码从目标文件中复制到原始二进制文件的新代码中</li></ol></li><li><ol start="5"><li><code>Generator</code>修改新代码段来修复原始代码和数据的引用</li></ol></li><li><ol start="6"><li>最后,<code>Generator</code>将原始代码段设置为不可执行以减小代码大小.(我们将原始代码段留在去膨胀程序中来支持可能的读取,如switch语句的跳转表[11],该设计将于后续讨论)</li></ol></li></ul></li><li><p>该部分需要底层知识,很费时间,如之后需要再细看</p></li></ul><h4 id="3.3.1-%E5%9F%BA%E6%9C%AC%E5%9D%97%E7%9A%84%E8%A1%A8%E7%A4%BA" tabindex="-1">3.3.1 基本块的表示</h4><h4 id="3.3.2-%E8%B7%B3%E8%BD%AC%E7%9A%84%E5%85%B7%E4%BD%93%E5%8C%96" tabindex="-1">3.3.2 跳转的具体化</h4><h4 id="3.3.3-%E6%95%85%E9%9A%9C%E5%A4%84%E7%90%86%E4%BB%A3%E7%A0%81" tabindex="-1">3.3.3 故障处理代码</h4><h2 id="4-%E5%AE%9E%E7%8E%B0" tabindex="-1">4 实现</h2><ul><li>我们使用1085行C代码、514行C++代码和4034行Python代码实现了RAZOR的原型,如下图所示<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_13.png" alt></li><li>该原型只支持x86-64 ELF二进制文件</li></ul><h3 id="4.1-tracer-implementations" tabindex="-1">4.1 Tracer Implementations</h3><ul><li>我们为用户提供了三种不同的跟踪器,用户可以根据自己的需求选择最好的,甚至可以将多个工具的跟踪信息合并来获得更好的代码覆盖率.</li><li>在我们的评估中，我们使用基于软件的插桩技术来收集简单程序的完整跟踪信息，并使用基于硬件的方法来高效地获取大型程序的跟踪信息。</li></ul><h4 id="(1)-%E9%87%87%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%8F%92%E8%A3%85%E8%BF%9B%E8%A1%8C%E8%B7%9F%E8%B8%AA" tabindex="-1">(1) 采用软件插装进行跟踪</h4><ul><li>使用动态插装工具Dynamorio [7]和Pin [25]来监测程序. 这两个工具都提供了在函数级别、基本块级别和指令级别的插装接口</li><li>我们通过三个插装步骤来收集控制流信息<ul><li><ol><li>在每个基本块的开始处记录起始地址</li></ol></li><li><ol start="2"><li>在每个条件分支指令,在指令和其两个目标之间插入两段代码来监听跳转的信息</li></ol></li><li><ol start="3"><li>在每个间接调用和跳转指令前,记录每次调用的具体目标</li></ol></li></ul></li><li>当基本块和条件分支指令运行后即可移除插装,保留间接跳转和调用指令的插装,以此减少不必要的开销</li></ul><h4 id="(2)-%E4%BD%BF%E7%94%A8%E7%A1%AC%E4%BB%B6%E7%89%B9%E6%80%A7%E8%BF%9B%E8%A1%8C%E8%BF%BD%E8%B8%AA" tabindex="-1">(2) 使用硬件特性进行追踪</h4><ul><li>考虑到软件插装的开销,我们提供了一个基于Intel处理器跟踪（Intel PT）的高效Tracer。</li><li>Intel PT以高度压缩的方式记录流信息的变化：TNT数据包描述了一个条件分支是否被执行；TIP数据包记录了间接分支的目标，例如间接调用和返回。</li><li>由于Intel PT直接将跟踪信息写入物理内存，而无需触及页表或内存缓存，因此它实现了最高效的跟踪。</li><li>可以使用不同平台上其它硬件功能实现更高效的Tracer,如Intel CPU上的分支跟踪存储（BTS）或在ARM CPU上的程序流跟踪（PTM）。</li></ul><h3 id="4.2-%E6%9B%B4%E6%96%B0elf%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86-update-elf-exception-handler" tabindex="-1">4.2 更新ELF异常处理 Update ELF Exception Handler</h3><p>emmm… 看得不是很懂呢,且跟汇编有关,略</p><h2 id="5-%E8%AF%84%E4%BC%B0" tabindex="-1">5 评估</h2><ul><li><p>从以下方面进行评估</p><ul><li>Code reduction:代码简化程度5.1</li><li>Functionality:<ul><li>功能有效性 5.2</li><li>路径寻找的效率 5.3</li></ul></li><li>安全性 5.4</li><li>性能开销 5.5</li><li>现实中的去膨胀 5.6</li></ul></li><li><p><strong>实验设置</strong></p><ul><li>在以下基准下进行评估<ul><li>29 SPEC CPU2006 基准:包括12个C,10个C++,10个Fortran程序</li><li>ChiselBench</li><li>两个现实程序:火狐浏览器和闭源PDF阅读器FoxitReader</li></ul></li><li>使用基于软件的追踪器<code>Dynamorio</code>和<code>Pin</code>来收集执行跟踪</li><li>对于FoxitReader和FireFox,我们使用基于硬件的追踪器<code>Intel PT</code>来收集执行跟踪,以此保证执行速度并避免异常行为</li><li>实验在64位ubuntu 16.04 系统上进行,使用Intel Core i7-6700K CPU, 32GB内存</li></ul></li></ul><h3 id="5.1-%E4%BB%A3%E7%A0%81%E7%AE%80%E5%8C%96%E7%A8%8B%E5%BA%A6" tabindex="-1">5.1 代码简化程度</h3><ul><li>因为RAZOR基于二进制,所以我们比较运行时的内存</li><li>下面对RAZOR和CHISEL进行对比:图a为在SPEC上,图b为在ChiselBench上<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_7.png" alt><ul><li><ol><li>在SPEC中,RAZOR可以平均减少68.19%代码,CHISEL78.8%</li></ol></li><li><ol start="2"><li>在ChiselBench中,Chisel减少83.4%.</li></ol><ul><li>对于7个程序,chisel减少成都优于razor,但是在3个程序中,razor减少更多</li></ul></li></ul></li><li>需要注意的是Chisel更倾向于移除代码,只要满足输入即可</li></ul><h3 id="5.2-%E5%8A%9F%E8%83%BD%E6%9C%89%E6%95%88%E6%80%A7" tabindex="-1">5.2 功能有效性</h3><ul><li><p>使用chiselBenchmark,运行原始二进制文件,使用chisel后的二进制文件,使用razor后的二进制文件进行测试,以确定所需功能是否保留,结果如下图示<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_8.png" alt="5.2"></p></li><li><p>RAZOR在使用保留更多代码的启发式时,最终都会通过功能验证. 而哈人的,Chisel自己只通过了3个,其主要有以下四个问题</p><ul><li><ol><li>错误的操作:因过拟合输入导致,如bzip2</li></ol></li><li><ol start="2"><li>无限循环:因为删除了循环的边界检查,如gzip</li></ol></li><li><ol start="3"><li>崩溃:删除了参数为空检查,如bzip2,date</li></ol></li><li><ol start="4"><li>遗漏输出:CHISEL删除了用于在stdout和stderr上打印输出的代码，导致结果丢失。如grep</li></ol></li></ul></li></ul><h3 id="5.3-%E8%B7%AF%E5%BE%84%E5%AF%BB%E6%89%BE%E7%9A%84%E6%95%88%E7%8E%87" tabindex="-1">5.3 路径寻找的效率</h3><ul><li><p>使用两组实验评估 <code>PathFinder</code>在寻找所需功能的相关代码时的有效性</p><ul><li><ol><li>使用从低到多不同启发式等级的RAZOR来去膨胀程序,找到对每个程序最小的启发式等级</li></ol></li><li><ol start="2"><li>使用N折交叉验证启发式方法的鲁棒性(在5.6中)</li></ol></li></ul></li><li><p>按照以下方法在ChiselBench上测试RAZOR</p><ul><li><ol><li>设计覆盖相同功能集的训练输入和测试输入</li></ol></li><li><ol start="2"><li>使用训练输入跟踪程序,并用不同等级的启发式进行去膨胀 none, zCode, zCall, zLib, zFunc</li></ol></li><li><ol start="3"><li>在测试输入上使用去膨胀后的程序,记录失败情况</li></ol></li></ul></li><li><p><code>PathFinder</code>配置见附录Table7,我们使用相同的选项构造训练集和测试集,但二者间具体的参数不同</p></li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_9.png" alt></p><ul><li><p>上图展示了结果,可以明显看出,随着启发式等级的增加,失败的测试用例显著下降,而简化率的下降却不明显.</p></li><li><p>请注意，zCode启发式方法稍微增加了代码的减小幅度，因为它使得条件跳转的分支更多，从而减少了失败分支的插装。</p></li><li><p>四种启发式作用的例子:略,见论文</p></li><li><p>结论:<code>PathFinder</code>可以有效识别与训练输入线管的代码,并完备由训练输入出发的功能. 它强化了去膨胀二进制文件的同时保持了简化的效率</p></li></ul><h3 id="5.4-%E5%9C%A8%E5%AE%89%E5%85%A8%E6%96%B9%E9%9D%A2%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%A5%BD%E5%A4%84" tabindex="-1">5.4 在安全方面带来的好处</h3><ul><li><p>通过统计减少的bug数来评估去膨胀带来的安全性</p></li><li><p>在ChiselBenchmark中统计其历史bug和如今bug</p><ul><li>对于历史bug,我们探究其补丁是否在去膨胀程序中</li><li>对于如今bug,我们探究其问题代码是否仍存在</li></ul></li><li><p>下图展示了评估结果,当前版本有13个bug,有10个在Chisel中被评估,3个bug存在在老版本<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_10.png" alt></p><ul><li>图中bzip, date, gzip,mkdir, rm, and tar 的六个漏洞仍然存在，因为测试用例执行了相关的有漏洞代码</li><li>另外六个漏洞并非由二进制文件本身引起。例如，CVE-2011-4089是由bash脚本bzexe的竞态条件引起的，而不是由bzip2二进制文件引起的。因此，RAZOR不会禁用此类漏洞。</li></ul></li><li><p>Chisel与RAZOR相比</p><ul><li>Chisel比较激进,在移除了更多漏洞的同时也引入了旧的.</li><li>Razor比较保守,阻碍移除漏洞,但有助于避免新的漏洞</li></ul></li><li><p>同时测量了ROP（Return-Oriented Programming）gadgets的减少情况. 一旦攻击者能够改变控制流,可重用的ROP gadgets的数量将使得程序更易受控制流劫持的攻击</p><ul><li>RAZOR平均减少了 61.9%的ROP gadgets,而Chisel减少了 85.1%</li><li>结果在预期内,我们潜在的有意防止 forward-edge control-flow attacks,即攻击者通过破坏函数指针而不是返回地址来改变控制流</li><li>同时使用新技术可以进一步实现完整的控制流完整性</li></ul></li></ul><h3 id="5.5-%E6%80%A7%E8%83%BD%E5%BC%80%E9%94%80" tabindex="-1">5.5 性能开销</h3><ul><li><strong>时间</strong><ul><li>RAZOR<ul><li>ChiselBenchmark上平均1.78s</li><li>Firefox 8.51s</li><li>FoxitReader 50.42</li></ul></li><li>Chisel:在ChiselBenchmark上要11hours+</li></ul></li><li><strong>运行时开销</strong><ul><li>与SPEC基准测试进行比较,平均而言,RAZOR为去膨胀程序引入1.7%的运行时开销,表明其在现实世界不是是高效的.</li><li>间接调用是开销的主要来源,这里可以进一步优化</li></ul></li></ul><h3 id="5.6-%E5%9C%A8%E7%8E%B0%E5%AE%9E%E7%A8%8B%E5%BA%8F%E4%B8%8A%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">5.6 在现实程序上的去膨胀</h3><ul><li><p>对于Firefox浏览器，我们使用RAZOR加载了排名前50的Alexa网站[28]。我们随机选择了25个网站作为训练输入，并将另外25个网站作为测试输入。</p></li><li><p>对于Foxit Reader，我们使用RAZOR打开并滚动了包含表格、图形和JavaScript代码的55个不同的PDF文件。我们随机选择了其中的15个文件作为训练输入，并将另外40个文件作为测试输入</p></li></ul><h4 id="%E4%BB%A3%E7%A0%81%E7%BC%A9%E5%87%8F%E5%92%8C%E5%8A%9F%E8%83%BD%E6%80%A7" tabindex="-1">代码缩减和功能性</h4><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_11.png" alt></p><p>如上图示,当启发式等级达到zLib时,可以通过所有的测试用例</p><h4 id="%E6%80%A7%E8%83%BD%E6%B6%88%E8%80%97" tabindex="-1">性能消耗</h4><ul><li>在几个基准测试上与运行了去膨胀的Firefox浏览器(启发式等级zLib)并发现RAZOR对Octane [33]、SunSpider [34]、Dromaeo-JS [30]和Dromaeo-DOM [29]基准测试引入了-2.1%、1.6%、0%和2.1%的开销</li><li>对于Foxit Reader未找到基准测试,但打开和滚动pdf未发现明显减速</li></ul><h4 id="%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%3A%E6%AF%8F%E4%B8%AA%E7%BD%91%E7%AB%99%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E9%9A%94%E7%A6%BB" tabindex="-1">应用场景:每个网站的浏览器隔离</h4><ul><li>在传统的浏览器环境中，所有打开的标签页和窗口都在同一个进程和内存空间中运行。这意味着一个恶意网站可以通过注入脚本或其他攻击手段来访问和修改同一进程中的其他站点的内容。这可能导致用户数据泄露、会话劫持和其他安全问题。</li><li>每个网站的浏览器隔离,作为浏览器去除臃肿的一个应用，我们可以创建仅支持特定网站的最小化版本<ul><li>例如，银行可以为其客户提供一个只支持其网站所需功能的最小化浏览器，同时暴露最少的攻击面。</li></ul></li><li>们在三个受欢迎且安全敏感的网站集合上应用了RAZOR：银行网站、电子商务网站和社交媒体网站。可以看出可以带来一定的收益<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_12.png" alt></li></ul><h4 id="%E5%90%AF%E5%8F%91%E5%BC%8F%E6%96%B9%E6%B3%95%E7%9A%84n%E6%8A%98%E4%BA%A4%E5%8F%89%E6%A3%80%E9%AA%8C" tabindex="-1">启发式方法的N折交叉检验</h4><ul><li>首先，我们将Alexa的前50个网站随机分成五组，每组10个网站。我们从中挑选了两组（共20个网站）进行训练，剩下的30个网站用于测试。我们进行了10次这样的评估. 结果略</li><li>其次，我们将Alexa的前50个网站随机分成10组，每组五个网站。我们从中随机挑选了五组（共25个网站）进行训练，剩下的25个网站用于测试。我们进行了10次这样的评估。结果略</li><li>结果表明，我们的启发式方法对于推断具有类似训练输入功能的未执行代码是有效的</li></ul><h2 id="6-%E8%AE%A8%E8%AE%BA" tabindex="-1">6 讨论</h2><h4 id="%E5%B0%BD%E6%9C%80%E5%A4%A7%E5%8F%AF%E8%83%BD%E7%9A%84%E8%B7%AF%E5%BE%84%E6%8E%A8%E6%96%AD-best-effort-path-inference" tabindex="-1">尽最大可能的路径推断 Best-effort path inference</h4><ul><li>将高等级的功能对应到低等级的代码是具有挑战性的,尤其是在代码未开源时</li><li>RAZOR采用基于控制流的启发式方法来推断更多的相关代码,但是这些方法并不完美,都是尽最大你眼里</li><li>目前,启发式的方法在二进制分析和重写中被广泛使用[53,52].通过执行跟踪,RAZOR能够减轻这些工作的局限性,例如找到间接调用目标.</li><li>评估显式,我们的基于控制流的启发式方法在实践中是有效的</li></ul><h4 id="cfi-and-deblaoting" tabindex="-1">CFI and deblaoting</h4><ul><li>控制流完整性Control-flow integrity (CFI)强制每个间接控制流转移（即间接调用/跳转和返回）都前往合法目标[1], 它防止了开发人员无法预料的恶意行为</li><li>而软件去膨胀需要根据用户的需求删除良性但不必要的代码<ul><li>例如,如果函数A被设计为间接调用i的合法目标，CFI将允许从i到A的转移。但是，如果用户不需要A中的功能，软件去膨胀将禁用转移并完全删除函数代码</li></ul></li><li>一方面,去膨胀实现了一种粗粒度的CFI，攻击者只能将控制流转移到剩余的代码。同时简化了一些CFI工作所需的分析，因为代码基础更小</li><li>另一方面,现有的CFI为实施去膨胀提供了基本平台。<ul><li>例如，RAZOR利用了在binCFI [53]中开发的几种二进制分析技术进行优化。</li></ul></li></ul><h4 id="%E5%9F%BA%E4%BA%8E%E5%BA%93%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">基于库的去膨胀</h4><ul><li>我们尝试使用RAZOR对每个程序的库进行去膨胀,又成功的也有失败的<ul><li>例如,在去膨胀libc.so库时,使用zFunc启发式方法最激进的保留代码,还是会触发不同的执行路径. 检查原因时发现其执行路径对环境变化非常敏感<ul><li><ol><li>其包含大量针对内存或字符串的高度优化代码,这戏代码会根据参数值选择最有效的实现方式,如strncmp有16种实现方式</li></ol></li><li><ol start="2"><li>其会根据进程状态进行不同的擦欧总,如每次内存分配,malloc会选择第一个可用块,输入的不同可能会导致malloc遍历完全不同的路径</li></ol></li></ul></li><li>为此我们计划开发针对库的启发式方法来应对环境敏感的运行<ul><li>例如,我们可以在函数级别而不是块级别上进行去膨胀</li></ul></li></ul></li><li>目前我们还将探索基于源码的方法,并尝试将其移植到二进制上</li></ul><h4 id="%E5%88%A0%E9%99%A4%E5%8E%9F%E5%A7%8B%E4%BB%A3%E7%A0%81" tabindex="-1">删除原始代码</h4><ul><li><p>RAZOR当前的设计是将原始代码 保留在去膨胀程序中,并将其权限更改为已读,以减少攻击面.</p></li><li><p>这种设计简化了对代码中潜在数据的处理,程序可能因为一些特殊目的来读取这些数据</p></li><li><p>为了进一步减小程序的大小,我们完全可以删除原始代码部分,具体操作如下</p><ul><li>在执行跟踪期间，我们将原始代码部分设置为仅执行[11]，以便任何从代码部分读取的操作都会触发异常并被追踪器记录；</li><li>我们执行向后的数据流分析，以确定每个记录的内存访问所使用的数据指针的来源；</li><li>在二进制合成过程中，我们将数据从原始代码部分重定位到新的数据部分，并更新新代码以访问新位置。</li></ul></li><li><p>通过这种方法,我们可以解决二进制重写过程中输入的重定位这一挑战性问题.</p><ul><li>实际上,我们进行了研究来了解这个问题的普遍性,我们发现在我们文章中测试用的程序,给定我们的测试用例,没有一个程序会从代码部分读取数据,此时只需要简单的删除原始代码即可,以减小文件大小和内存占用</li></ul></li></ul><h4 id="%E6%9C%AA%E6%9D%A5%E5%B7%A5%E4%BD%9C" tabindex="-1">未来工作</h4><ul><li>我们将开源RAZOR</li><li>我们计划扩展该平台以支持更多格式和架构的二进制文件，包括共享库、32位二进制文件、Windows PE程序、MacOS March-O程序和ARM二进制文件。</li><li>同时，我们将设计更多与安全性相关的启发式方法，使RAZOR能够支持各种真实世界的情况。</li></ul><h2 id="7-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">7 相关工作</h2><h3 id="library-debloating%3A%E5%9F%BA%E4%BA%8E%E5%BA%93%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">Library debloating:基于库的去膨胀</h3><ul><li><p>库旨在未不同的用户提供大量的功能支持,对库去膨胀可以对每个程序定制不同的代码基础,并显著减少代码</p></li><li><p>Mulliner :<em>CodeFreeze</em>:用于从Windows共享库中删除不必要的代码 [36]</p></li><li><p>Quach  :<em>piece-wise</em>:使用分块编译和加载进行去膨胀 [40]</p></li><li><p>Jiang  : 提出从Android应用程序,Java运行时环境和SDK中删除死代码的方法 [23,22]</p></li><li><p>我们的系统与上述方法有两个不同</p></li></ul><ol><li>之前的方法在每次过程开始都要进行二进制重写,而RAZOR通过静态二进制重写生成简化的二进制程序,一次重写永久使用</li><li>库去膨胀使用静态分析找到不用的代码,并且保守地保留了所有可能有用的代码;而我们地系统通过动态执行来跟踪和定位 执行的代码 或通过启发式找到代码,并移除其它地代码</li></ol><h3 id="delta-debugging-%E5%A2%9E%E9%87%8F%E8%B0%83%E8%AF%95%E6%B3%95" tabindex="-1">Delta debugging 增量调试法</h3><ul><li>DD被提出来 最小化触发错误的输出,例如<ul><li>Regehr,<em>C-Reduce</em>[42]:高效生成更小的测试用例</li><li>Sun,<em>Perses</em>[49]:使用形式化语法 很快地 生成更小却功能相同的程序</li><li>Heo,<em>Chisel</em>[15]:使用强化学习来加速DD过程</li></ul></li><li>然而,由DD产生的程序仅支持测试用例,尽管现实中对确定的功能有近乎无限的测试用例.</li><li>相反,RAZOR使用基于控制流的启发式方法,可以推断出更多的必要的相关代码来完备所需的功能</li></ul><h3 id="%E5%9F%BA%E4%BA%8E%E6%BA%90%E4%BB%A3%E7%A0%81%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">基于源代码的去膨胀</h3><ul><li>最近很多方法使用程序分析来简化代码<ul><li>Bu [8] : 提出了一种 <em>bloat-ware</em> 设计范式,该范式分析Java源代码来优化对象分配,避免运行时内存使用膨胀</li><li>Sharif [44] : 提出 <em>Trimmer</em>,将用户提供的被指传播到程序代码中,然后使用编译器优化来减小代码大小</li></ul></li><li>这些系统,以及[42,49,15] 依赖于对源代码的复杂分析,而这些分析不总是能用于部署的系统. 相反,RAZOR仅需要二进制程序,使其更适合实际部署</li></ul><h3 id="%E5%9F%BA%E4%BA%8E%E5%AE%B9%E5%99%A8%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">基于容器的去膨胀</h3><ul><li>容器变得越来越受欢迎,但其代码基础越来越膨胀</li><li>Guo[14] 提出了一个监视程序运行的方法,以识别必要的资源为被追踪的程序创建一个最小的容器</li><li>Rastogi[41] 开发了 <em>Cimplifier</em> , 使用动态分析来收集不同程序的资源使用,然后根据用户定义的策略将原始容器划分为一组较小的容器</li><li>RAZOR也适用于容器或其它系统的去膨胀,例如 Inter PT 支持操作系统的追踪,而这时RAZOR中使用的</li></ul><h3 id="%E5%9F%BA%E4%BA%8E%E7%A1%AC%E4%BB%B6%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">基于硬件的去膨胀</h3><ul><li>近来,硬件设备也是膨胀的,例如通用处理器被过度设计于应用于特定应用,如 嵌入式设备,可穿戴设备和互联网设备</li><li>Cherupalli[10] 提出了一个方法可以自动的从 通用处理器中 移除未使用的门,以生成为特定应用的定制处理器</li><li>目前,软件的膨胀和硬件的膨胀是分开进行的,一个有趣的方向是同时考虑硬件和软件来找到更多的去膨胀空间</li></ul><h2 id="8-%E7%BB%93%E8%AE%BA" tabindex="-1">8 结论</h2><ul><li>本文提出RAZOR,一个用于实际程序去膨胀的框架,它利用一组测试用例和基于控制流的启发式方法,来收集支持用户所需功能的必要代码</li><li>去膨胀的二进制程序有较小的攻击面,改进的安全性保证,鲁棒性的功能和高效的执行</li><li>我们的评估证明,RAZOR是一个实用的,可用于对现实程序简化的去膨胀方法</li></ul><h2 id="9-%E9%98%85%E8%AF%BB%E6%80%BB%E7%BB%93" tabindex="-1">9 阅读总结</h2><ol><li>本文<strong>问题驱动</strong>很好,对于老旧的程序,肯定会有一些过时的功能,这些功能的代码可能会带来安全性的问题,为此需要程序去膨胀</li><li><strong>相关代码</strong>的定义很好,但这应该是出现在基于输入测试用例的方法上,因为测试用例可能不能包括所有情况,所以有的相关代码没有被运行,如果轻易删除会引发问题.<ul><li>但是如果是非基于输入的方法呢</li></ul></li><li>需要坚实的底层基础,如了解汇编和反汇编等,这样才能更好理解本文方法</li><li>去膨胀需要在不同级别进行</li></ol><ul><li><p>本文因是在二进制上,所有可以从块级别出发构造CFG,然后进行去膨胀</p></li><li><p>对于基于源代码的,可以基于函数级别,基于库级别,而对于面向对象的语言,可以对于包级别等</p></li><li><p>问题</p><ul><li><ol><li>第四种启发式方法,即保留最大程度,怎么还要手工标注库的功能区分</li></ol></li><li><ol start="2"><li>方法基于二进制,可以无视软件是否开源直接使用,但相应的需要对应的底层代码知识,不方便开发人员进行二次改造(大概),并且这涉及用户的信任度,真敢用吗</li></ol></li></ul></li></ul><h2 id="10-%E5%A4%8D%E7%8E%B0" tabindex="-1">10 复现</h2><ul><li>使用docker进行复现</li></ul><h3 id="%E5%A4%8D%E7%8E%B0chiselbenchmark" tabindex="-1">复现ChiselBenchmark</h3><p>按照 <a href="https://github.com/cxreet/razor/wiki/Exercises">github网站指示</a> 即可</p><h3 id="%E5%A4%8D%E7%8E%B0lsir" tabindex="-1">复现LSIR</h3><h3 id="%E5%A4%8D%E7%8E%B0%E5%85%B6%E5%AE%83%E5%A4%A7%E7%A8%8B%E5%BA%8F" tabindex="-1">复现其它大程序</h3><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(4)_x.png&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;razor%3A-a-framework-for-post</summary>
      
    
    
    
    <category term="论文" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="Software Engineering" scheme="http://example.com/tags/Software-Engineering/"/>
    
    <category term="Software Debloating" scheme="http://example.com/tags/Software-Debloating/"/>
    
  </entry>
  
  <entry>
    <title>Software Debloating 论文阅读 (3)</title>
    <link href="http://example.com/2023/10/31/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/SoftwareDebloating/Software%20Debloating%20%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB(3)/"/>
    <id>http://example.com/2023/10/31/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/SoftwareDebloating/Software%20Debloating%20%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB(3)/</id>
    <published>2023-10-31T06:49:57.632Z</published>
    <updated>2023-11-13T03:19:49.981Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_x.png" alt></p><h1 id="effective-program-debloating-via-reinforcement-learning-(chisel)" tabindex="-1">Effective Program Debloating via Reinforcement Learning (Chisel)</h1><p>2018 ACM SIGSAC Conference on Computer and Communications Security (CCS ’18)　CCFA会</p><h2 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h2><ul><li>在软件工程中，代码重用和“一刀切”的方法是导致软件规模和复杂性显著增加的主要因素。由此产生的软件膨胀导致了性能下降和安全漏洞的增加。</li><li>我们提出了一个名为Chisel的系统，旨在帮助程序员有效地定制和去膨胀程序。<ul><li>Chisel接受一个待去膨胀的程序和一个对其所需功能的高级别规范作为输入</li><li>输出是一个根据规范正确减少的版本的程序</li><li>与其它方法相比,Chisel通过使用一种基于强化学习的新颖方法来加速搜索减少的程序并扩展到大型程序，从而显著提高了效果。</li></ul></li><li>我们对一组包含10个广泛使用的UNIX实用程序的13-90 KLOC(Kilo lines of code) C源代码套件进行了评估，结果表明Chisel能够成功去除所有不需要的功能并减少攻击面。</li></ul><h2 id="1-%E4%BB%8B%E7%BB%8D" tabindex="-1">1 介绍</h2><ul><li><p>软件膨胀导致性能下降并增加安全漏洞,此外常见库中的各种gadget使得攻击者可以在不向应用程序注入任何代码的情况下执行任意算法</p></li><li><p>此外软件经常包含一些被用户几乎没用过的功能,但没有给用户任何实际和有效的方法去除它们</p><ul><li>目前流行的做法是对现有程序重新进行一个轻量级的实现.例如针对嵌入式平台的轻量级实现:WebServer(Lighttpd),DataBase(SQLite),C/C++ libaries(EGLIBC,yClibc-bg),命令行实用程序(BusyBox,ToyBox). 但这种方法需要源代码开源且需要大量手动工作</li><li>在移动应用程序中,IOS APP引入乐系统瘦身,可以自动检测用户设备型号,仅下载特定设备所需的内容,但这需要开发者标记其软件来对应关系,这导致在IOS上该方法也不常用</li></ul></li><li><p>我们开发了一个实用的系统,使得程序员能够定制和简化程序</p><ul><li>该系统将一个程序,及其需要保留功能的相关高级规范作为输入</li><li>输出一个根据规范正确简化的程序</li></ul></li><li><p>我们认为简化后的程序有效需要以下五个关键点</p><ul><li><strong>Minimality</strong> 最小:系统是否尽可能地 根据期望地特点 修建了程序</li><li><strong>Efficiency</strong> 效率:系统是否高效地 找到了最小化地程序并且可以扩展到大规模的程序</li><li><strong>Robustness</strong> 鲁棒:系统是否避免了 引入新的异常和漏洞 在生成的程序中</li><li><strong>Naturalness</strong> 自然:系统是否生成了 可维护和可扩展 的代码</li><li><strong>Generality</strong> 通用:系统是否可以应用于 大量不同的 程序和特点吗</li></ul></li><li><p>如下图示,Chisel系统需要一个程序P和一个质量测试函数S,来检查获选程序是否满足或与需要的属性冲突,最后输出一个最简化的程序P’同时满足S<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_1.png" alt></p></li><li><p>Chisel提供了一个 在生成程序最小性上的 正是保证,叫做 1-minimality,已经被证实在程序简化中有效</p><ul><li>调用质量测试函数可能很昂贵,例如其可能会参与候选程序的编译和 在程序套件运行</li><li>而1-minimality 保证 缩小算法在最坏情况下,调用质量测试函数的次数 为 程序大小的二次方</li><li>尽管 此保证 不能保证找到最优解,但也有次优性质,也很难扩展到大程序</li><li>而Chisel通过避免生成大量的 语义或语法上 无效的候选程序 来避免这个问题</li></ul></li><li><p>Chisel保证简化后的程序满足给定的属性期望,所以其具有鲁棒性.</p><ul><li>其避免会随换程序或破环其自然性的转换</li><li>最后,其将 程序和属性 都视为黑盒,使其适用于各种不同类型的程序和规范</li></ul></li><li><p>C-REDUCE 和 PERSES不满足上述特点,这两个工具同Chisel一样,接受一个需要简化的程序和一个质量测试函数作为输入,并输出一个简化的程序</p><ul><li>C-REDUCE满足了与Chisel相同的最小性和正确性标准,但其牺牲了效率,自然度和通用性.C-Reduce针对手写的程序转换规则是定制且紧密耦合的,由于这些规则是短时的,所以C-reduce在寻找简化程序时会产生大量的语义和语法无效的候选程序,此外,该工具经常生成不自然的代码</li><li>Perses同样牺牲了效率和通用性,其简化过程是基于语法引导的,这可以避免在搜索过程中产生语法无意义的候选程序.然而依然无法避免语义无效的候选程序,因为其无法感知程序元素间的语义依赖关系(例如def-use关系). 同时,基于语法感知的简化在每一步都太过保守,因此比C-Reduce效率更低.</li></ul></li><li><p>我们客服现有方法限制的 主要技术见解 是 使用 强化学习 来 加速程序的简化</p><ul><li>通过反复的试错,chisel构建并完善了一个静态模型,来决定每个候选程序通过测试的可能性,该模型可以有效的捕捉程序元素间的语义依赖同时引导搜索至最小程序</li><li>Chisel的学习方法是跨语言的,因为模型是从 尝试的候选程序和他们的属性测试结果 的简单向量中 学习的</li></ul></li><li><p>在10个UNIX上广泛使用的实用程序套件上对Chisel进行评估,Chisel高效地收敛到最小程序,由于其它所有方法.</p><ul><li>并成功修复了10个程序中的6个漏洞(CVE),平均消除了66.2%的gadgets,简化的程序通过SOTA的fuzz:AFL的持续三天的进一步验证</li><li>此外,我们还手动分析了简化后的源码,确认删除功能符合预期,同时保留了诸如 模块化和局部性的理想软件工程实践</li></ul></li><li><p><strong>论文贡献总结</strong></p><ul><li><ol><li>提出Chisel系统来减少程序的大小和复杂度,其目标是从现有软件中移除不需要的功能并减少他们的攻击面</li></ol></li><li><ol start="2"><li>提出了一个通用的强化学习框架,为了更高效和更大的程序简化. 该框架可以在不同目标语言和规范上使用</li></ol></li><li><ol start="3"><li>使用一组UNIX的通用程序对Chisel进行评估,结果显示其可以减少软件的缺陷和攻击面且不引入新的bug</li></ol></li></ul></li></ul><h2 id="2-motivating-example" tabindex="-1">2 MOTIVATING EXAMPLE</h2><ul><li>我们通过一个例子(Unix通用工具 tar)来解释Chisel如何帮助程序员定制和简化程序.<ul><li>假设针对嵌入式 我们需要一个简易的tar,目前针对嵌入式的tar有一个BusyBox.原始的tar提供97个命令行选项,BusyBox仅提供8个</li><li>我们将演示如何通过向Chisel提供简单而高级的规范来自动获取与BusyBox有相同功能的程序</li><li>同时我们还将展示这种简化如何导致 简化的代码 和 安全性的增强. 最后我们解释了如何保证结果程序的鲁棒性</li></ul></li></ul><h3 id="2.1-%E6%98%8E%E7%A1%AEchisel%E7%9A%84%E8%BE%93%E5%85%A5" tabindex="-1">2.1 明确Chisel的输入</h3><ul><li>首先,我们需要用户编写一个高等级的特征规范,该规范描述了程序的期望功能.<ul><li>规范可以是一个脚本程序,其接收一个源程序并编译,并检查编译后的程序恮输出行为是否符合期望,如果不符合返回false,否则返回true</li></ul></li></ul><pre><code class="language-bash">1 #!/bin/bash23 function compile &#123;4 clang −o tar.debloat tar−1.14.c5 return $?6 &#125;78 function core &#123;9 # test 1: archiving multiple files10 touch foo bar11 ./tar.debloat cf foo.tar foo bar12 rm foo bar13 ./tar.debloat xf foo.tar14 test −f foo −a −f bar || exit 11516 # test 2: extracting from stdin17 touch foo18 ./tar.debloat cf foo.tar foo19 rm foo20 cat foo.tar | ./tar.debloat x21 test −f foo || exit 122 ... #12 more tests that exercise the 8 target options23 return 024 &#125;2526 function non_core &#123;27 for test_script in ‘ls other_tests/∗.sh‘; do # for all optional test cases28 &#123; sh −x −e $test_script; &#125; &gt;&amp; log29 grep 'Segmentation fault' log &amp;&amp; exit 130 done31 return 032 &#125;3334 compile || exit 135 core || exit 136 non_core || exit 1</code></pre><ul><li>上述代码是一个可用作规范的脚本程序,该脚本包括三个步骤<ul><li><ol><li>第一步中调用complie函数(第三行),检查源程序是否可以编译</li></ol></li><li><ol start="2"><li>第二步调用core函数来检查程序是否表现出期望的属性,这一步包括14个测试用例,用于测试8个命令行选项,仅在通过全部测试用例时进入下一步</li></ol><ul><li>例如:第14行,第一个测试用例,检测是否可以压缩和解压缩文件</li></ul></li><li><ol start="3"><li>第三步调用non_core避免简化带来新的错误,其指定了一种要求,即调用了简化去掉的功能时,程序至少不能崩溃(第29行),如果没有这个要求,简化器可能会随意地删除非核心功能地代码,这将导致移除删除功能被调用后很容易崩溃和受到攻击</li></ol></li></ul></li><li>为了完成这样的脚本,我们需要广泛覆盖目标功能地测试程序,这些测试用例可以通过开发人员使用自动测试生成技术活回归测试套件来获得.本文中,使用开发人员为原始程序写的测试套件</li></ul><h3 id="2.2-chisel%E4%B8%8E%E5%85%B6%E5%AE%83%E6%96%B9%E6%B3%95%E7%9A%84%E7%BB%93%E6%9E%9C%E6%AF%94%E8%BE%83" tabindex="-1">2.2 Chisel与其它方法的结果比较</h3><ul><li>给定tar的原始程序(45778行,13227个语句),12小时内,Chisel生成了简化版本(1687行,538个语句),而C-Reduce和Perses都无法在12小时内生成简化版本,简化例子如下</li></ul><pre><code class="language-C">1 /∗ Chisel: global variable declarations removed ∗/2 34 char ∗safer_name_suffix (char ∗file_name, int link_target) &#123;5     /∗ Chisel: code containing CVE removed ∗/6     return file_name;7 &#125;89 void extract_archive() &#123;10    char ∗file_name = safer_name_suffix(stat_info.file_name, 0);11    /∗ Chisel: overwriting functionalities removed ∗/12 &#125;1314 void list_archive() &#123; ... /∗ same as original ∗/ &#125;1516 void read_and(void ∗(do_something)(void)) &#123;17  enum read_header status;18  while (...) &#123;19    status = read_header();20      switch (status) &#123;21        case HEADER_SUCCESS: (∗do_something)(); continue;22        /∗ Chisel: unnecessary functionalities removed ∗/23        default: break;24      &#125;25    &#125;26 &#125;2728 /∗ Supports only 8 options: −c, −f, −x, −v, −t, −O, −o, −k ∗/29 int main(int argc, char ∗∗argv) &#123;30    int optchar;31    while (optchar = getopt_long(argc, argv) != −1) &#123;32        switch (optchar) &#123;33          case 'x': read_and(&amp;extract_archive); break;34          case 't': read_and(&amp;list_archive); break;35          /∗ Chisel: unsupported options removed ∗/36        &#125; 37      &#125;38 ... /∗ same as original ∗/39 &#125;/*  Code snippet of the original version of tar*/1 int absolute_names;2 int ignore_zeros_option;3 struct tar_stat_info stat_info;45 char ∗safer_name_suffix (char ∗file_name, int link_target) &#123;6     char ∗p;7     if (absolute_names) &#123;8       p = file_name;9     &#125; else &#123;10      /∗ CVE−2016−6321 ∗/11      /∗ Incorrect sanitization when &quot;file_name&quot; contains &quot;..&quot; ∗/12      /∗ &quot;p&quot; points to the longest suffix of &quot;file_name&quot; without &quot;../&quot; ∗/13      ...14    &#125;15    ...16    return p;17 &#125;1819 void extract_archive() &#123;20    char ∗file_name = safer_name_suffix(stat_info.file_name, 0);21    /∗ Overwrite &quot;file_name&quot; if exists ∗/22    ...23 &#125;2425 void list_archive() &#123; ... &#125;26 void read_and(void ∗(do_something)(void)) &#123;27    while (...) &#123;28       enum read_header status = read_header();29      switch (status) &#123;30        case HEADER_SUCCESS: (∗do_something)(); continue;31        case HEADER_ZERO_BLOCK:32          if (ignore_zeros_option) continue;33          else break;34        ...35        default: break;36      &#125;37    &#125;38  ...39 &#125;4041 /∗ Support all options: −x, −t, −P, −i, ... ∗/42 int main(int argc, char ∗∗argv) &#123;43    int optchar;44    while (optchar = getopt_long(argc, argv) != −1) &#123;45      switch (optchar) &#123;46        case 'x': read_and(&amp;extract_archive); break;47        case 't': read_and(&amp;list_archive); break;48        case 'P': absolute_names = 1; break;49        case 'i': ignore_zeros_option = 1; break;50        ...51      &#125;52    &#125;53  ...54 &#125;</code></pre><ol><li><code>main</code>函数中reduced版本,与原始版本比较,减少了不需要得选项</li><li><code>read_and</code>函数检查输入文件的头部,并在头部无效时进行异常处理,如果头部有效,根据命令调用响应函数.在简化版本中,异常处理部分被移除,头部无效即终止程序</li><li><code>safer_name_suffix</code>函数通过和三处冗余分支得到显著简化</li></ol><ul><li>实现上述简化,不能只是用典型的静态分析和动态分析<ul><li>静态分析保守地保留了所有代码部分,因为在编译时命令行选项和输入文件都是未知的,因此静态方法无法删除函数<code>read_and</code>中的任何代码,因为原本代码中29行status无法确定</li><li>动态可达性不能删除函数<code>safer_name_suffix</code>中的任何代码,因为测试用例中没有执行选项’-P’,所以变量absolute_name总为0,结果动态方法总是覆盖第9行地分支,因此无法删除从原始代码第9行开始的讨论安全漏洞的方法</li></ul></li></ul><h3 id="2.3-%E5%88%86%E6%9E%90chisel%E7%9A%84%E8%BE%93%E5%87%BA" tabindex="-1">2.3 分析Chisel的输出</h3><ul><li>从两方面进行 输出安全漏洞和进一步验证</li></ul><h4 id="%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E7%A7%BB%E9%99%A4" tabindex="-1">安全漏洞移除</h4><ul><li><p>tar工具在解压缩文件时的安全漏洞和修复措施。原始版本的tar存在一个漏洞，允许攻击者通过恶意构造的路径名覆盖现有文件。开发人员通过忽略包含’…/'的路径名来修复了这个问题。在Chisel版本中，由于删除了相关功能，这个漏洞无法再被利用。</p></li><li><p>详细情况请看论文描述</p></li></ul><h4 id="%E8%BF%9B%E4%B8%80%E6%AD%A5%E9%AA%8C%E8%AF%81" tabindex="-1">进一步验证</h4><ul><li>化简后的程序很小,并且很大程度上保留了语法结构,用户可以很轻松的与源代码进行比较.复杂的代码也可以通过比较工具清晰的展示缩减程度</li><li>此外,化简后的大小和复杂度可以使用准确的自动化技术.<ul><li>为了检查简化版本是否引入了新bug,我们使用现有的技术进行推理(例如 静态/动态分析,模糊测试,运行时监控或验证),来提高正确率</li><li>我们对简化后的tar进行了静态分析和随机模糊测试</li></ul></li><li>去膨胀化使得人工检查静态分析称为可能<ul><li>例如,Sparrow[13]是一种用于发现安全漏洞的静态分析器，它在一秒钟内只为简化后的tar程序生成了19个警报，而原始程序则生成了1,290个警报。经过手动检查，我们得出结论认为所有19个警报都是假的。</li></ul></li><li>去臃肿化后的程序还可以通过随机测试工具（如模糊器）进行高效测试<ul><li>我们在简化后的tar程序上运行了AFL工具[1]，即使在三天内也没有找到任何导致失败的输入。这提高了对去臃肿化后的程序正确性的信心。</li></ul></li></ul><h2 id="3-%E8%83%8C%E6%99%AF" tabindex="-1">3 背景</h2><p>本节正式定义了我们的程序去臃肿化设置,并介绍了基于我们的程序去臃肿化方法的 增量调试和强化学习的概念。</p><h3 id="3.1-%E7%A8%8B%E5%BA%8F%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">3.1 程序去膨胀</h3><ul><li>定义<ul><li>令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>∈</mo><mi mathvariant="double-struck">P</mi><mo separator="true">,</mo><mi mathvariant="double-struck">P</mi></mrow><annotation encoding="application/x-tex">P \in \mathbb{P},\mathbb{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8833em;vertical-align:-0.1944em;"></span><span class="mord mathbb">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathbb">P</span></span></span></span></eq>是所有程序的集合</li><li>一个<code>property 属性</code> 定义各位一个属性测试函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>:</mo><mi mathvariant="double-struck">P</mi><mo>→</mo><mi mathvariant="double-struck">B</mi></mrow><annotation encoding="application/x-tex">O:\mathbb{P} \rightarrow \mathbb{B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">B</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">B</mi><mo>=</mo><mo stretchy="false">{</mo><mi>T</mi><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\mathbb{B} = \{T,F\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">}</span></span></span></span></eq>,当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi></mrow><annotation encoding="application/x-tex">O(P)=T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></eq>时,当且仅当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></eq>有该属性,否则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mi>F</mi></mrow><annotation encoding="application/x-tex">O(P)=F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq></li><li>令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>P</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|P|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">∣</span></span></span></span></eq>为P的大小,根据一个合适的度量标准,例如语句或符号的数量</li></ul></li><li>给定一个程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></eq>,一个属性测试函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></eq>满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi></mrow><annotation encoding="application/x-tex">O(P)=T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></eq>,程序去膨胀的目标是找到最小的程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo lspace="0em" rspace="0em">∗</mo></msup><mo>∈</mo><mi mathvariant="double-struck">P</mi></mrow><annotation encoding="application/x-tex">P^{*} \in \mathbb{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">P</span></span></span></span></eq>满足 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>P</mi><mo>∗</mo></msup><mo>=</mo><msub><mrow><mi>a</mi><mi>r</mi><mi>g</mi><mtext> </mtext><mi>m</mi><mi>i</mi><mi>n</mi></mrow><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><mi mathvariant="double-struck">P</mi></mrow></msub><mi mathvariant="normal">∣</mi><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mtext> </mtext><mtext> </mtext><mtext> </mtext><mi>O</mi><mo stretchy="false">(</mo><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi></mrow><annotation encoding="application/x-tex">P^* = {arg\,min}_{P&#x27; \in \mathbb{P}} |P&#x27;| \,\,\,\,\,s.t.\,\,\,O(P&#x27;)=T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7387em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0734em;vertical-align:-0.2715em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">min</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2381em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mathbb mtight">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2715em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></span></eqn></section><ul><li>如果实现这个目标则成为全局最小性,但这是NPC问题</li><li>因此实践中去膨胀的追求为一个更可行的目标称为 <code>1-minimality</code>[45]. 一个程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo>∗</mo></msup><mo>∈</mo><mi mathvariant="double-struck">P</mi></mrow><annotation encoding="application/x-tex">P^* \in \mathbb{P}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">P</span></span></span></span></eq>被称为 <code>1-minimality</code>当且仅当对于任意的从<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>∗</mo></mrow><annotation encoding="application/x-tex">P*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord">∗</span></span></span></span></eq>删除单个元素获得的变体<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>不能通过属性测试</li></ul></li></ul><h3 id="3.2-delta-debugging(dd-for-short)" tabindex="-1">3.2 Delta Debugging(DD for short)</h3><h4 id="%E7%AE%97%E6%B3%95%E6%8F%8F%E8%BF%B0" tabindex="-1">算法描述</h4><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_2.png" alt></p><ul><li>给定程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></eq>和属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></eq>,DD首先将输入程序转换为列表<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span></eq>,其中包含任意粒度(tokens,lines,函数)</li></ul><ol><li>初始化时,将解决方案设为L,分区数设为n(第1,2行)</li><li>当前解决方案候选L划分为n个分区(第4行)</li><li>对于每个分区<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">u_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>算法测试 该分区(或其补集) 是否可以保留属性(第5,7行)</li><li>如果能保留,删除其补集,否则删除分区(第6,8行)</li><li><ol><li>如果一个分区通过属性测试,DD将n设置为2重复该过程;</li><li>如果一个补集通过测试,DD将n设置为n-1,维持当前粒度等级;</li><li>当没有分区和补集通过属性测试时,DD将每个分区分为两半</li></ol></li><li>如果每个分区都不能分割(12行),则返回对应剩余元素列表L的程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">P&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>(13行);</li><li>否则,通过将每个剩余分区分成两半继续主循环(10行)</li><li>此算法最坏复杂度为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi>P</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(|P|^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li></ol><h4 id="%E7%AE%97%E6%B3%95%E4%BE%8B%E5%AD%90" tabindex="-1">算法例子</h4><pre><code class="language-C">1 int f1 () &#123; return 0; &#125;2 int f2 () &#123; return 1; &#125;3 int f3 () &#123; return 1; &#125;4 int f4 () &#123; return 1; &#125;5 int f5 () &#123; return 1; &#125;6 int f6 () &#123; return 1; &#125;7 int f7 () &#123; return 1; &#125;8 int main () &#123; return f1(); &#125;</code></pre><ul><li>考虑上述简单的C代码,我们的目标属性时终止并返回0,同时定义在函数粒度上进行简化,因此,最小的程序应该仅包含函数 f1和main.</li><li>下图展示了算法的迭代过程<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_3.png" alt></li></ul><ol><li>最初两次迭代中,算法尝试两个分区(n=2),每个分区包含前四行和最后四行。</li><li>由于这两个分区都无法保留属性，算法通过将n设置为4来增加粒度，并尝试了四个分区，但都失败了（迭代3-6）。</li><li>然后算法尝试了这四个分区的补集。在第8次迭代中，算法找到了一个保留属性的补集。通过将n减1，算法保持当前的粒度并尝试当前候选的n = 3个子集。</li><li>由于所有三个子集（⟨f1, f2⟩，⟨f5, f6⟩，⟨f7, main⟩）都已经尝试过，所以它们被跳过。然后它尝试它们的补集，并在第9次迭代中找到另一个较小的程序。</li><li>再次将n减1，算法保持当前的粒度并尝试当前候选的n = 2个子集。同样，所有两个子集（及其补集）都已经尝试过并且失败了。</li><li>现在算法将粒度翻倍（n &lt;- 2 × 2），并尝试四个子集（迭代10-13），但都失败了。</li><li>继续尝试它们的补集，在第15次迭代中找到了另一个正确的补集。n = 4 - 1 = 3</li><li>现在它尝试程序的n = 3个子集及其补集，并在最后一次迭代中找到最小解决方案。</li></ol><h3 id="3.3-%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0-reinforcement-learning" tabindex="-1">3.3 强化学习 Reinforcement Learning</h3><h4 id="%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E5%86%B3%E7%AD%96%E8%BF%87%E7%A8%8B-markov-decision-process" tabindex="-1">马尔可夫决策过程 Markov Decision Process</h4><ul><li>Markov Decision Process(MDP) 是一个用于解决顺序决策问题的框架.在这个框架中,一个代理(agent)作为学习者和决策者,与所谓的环境进行交互,代理根据每个状态下的行为从环境中获得奖励. 形式上,MDP有以下几个部分<ul><li>一组状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>,初始状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub><mo>∈</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">s_0 \in S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq></li><li>一组动作<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal">A</span></span></span></span></eq>和函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>:</mo><mi>S</mi><mo>→</mo><msup><mn>2</mn><mi mathvariant="script">A</mi></msup></mrow><annotation encoding="application/x-tex">A:S\rightarrow 2^{\mathcal{A}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathcal mtight">A</span></span></span></span></span></span></span></span></span></span></span></span></eq>,指定每个状态下可用的函数</li><li>过渡模型<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>:</mo><mi>S</mi><mo>×</mo><mi mathvariant="script">A</mi><mo>→</mo><mi>P</mi><mi>r</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T:S\times \mathcal{A} \rightarrow Pr(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq>,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(s&#x27;|s,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></eq>表示从状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span></eq>执行动作<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>转移到状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">s&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>的概率</li><li>奖励函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>:</mo><mi>S</mi><mo>→</mo><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">R:S\rightarrow \mathbb{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">R</span></span></span></span></eq>,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">R(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></eq>表示状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span></span></span></span></eq>的预期奖励</li></ul></li><li>求解MDP的目标是找到一个策略 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi><mo>:</mo><mi>S</mi><mo>→</mo><mi mathvariant="script">A</mi></mrow><annotation encoding="application/x-tex">\pi: S \rightarrow \mathcal{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal">A</span></span></span></span></eq> ,该策略指定了在给定状态下的代理采取的理想的行为.通常我们感兴趣的是找到一个最优的策略 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>π</mi><mo lspace="0em" rspace="0em">∗</mo></msup></mrow><annotation encoding="application/x-tex">\pi^{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span></span></span></span></eq> ,使得对于每个状态 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>∈</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">s\in S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>,其被定义为 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>π</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi><munder><mo><mi>a</mi><mi>r</mi><mi>g</mi><mtext> </mtext><mi>m</mi><mi>a</mi><mi>x</mi></mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></munder></mi><mi><munder><mo><mo>∑</mo></mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munder></mi><mi>T</mi><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><msup><mi>V</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi^* (s) = \underset{a\in A(s)}{arg \,max} \underset{s&#x27;}{\sum } T(s&#x27;|s,a)V^*(s&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.344em;vertical-align:-1.294em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.1146em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">A</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1604em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.856em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section> 其中 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>V</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V^*(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></eq> 表示在代理在状态s下施行最优策略是奖励的期望和,其是如下递归定义 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>V</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>+</mo><mi>γ</mi><mi><munder><mo><mo>∑</mo></mo><msup><mi>S</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munder></mi><mi>T</mi><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><msup><mi>π</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msup><mi>V</mi><mo>∗</mo></msup><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> V^*(s) = R(s) + \gamma \underset{S&#x27;}{\sum} T(s&#x27;|s,\pi^*(S)) V^*(s&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.3443em;vertical-align:-1.2943em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2943em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">))</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section> 其中 <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 8: \gamma $̲ 是一个折扣因子,用于平衡当前…" style="color:#cc0000">\gamma $ 是一个折扣因子,用于平衡当前奖励和未来奖励的重要性. 通常情况下,我们假设 $0 \leq \gamma \leq 1</span></eq> ,并且 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span></eq> 越大,未来奖励的重要性越高</li></ul><h4 id="%E5%9F%BA%E4%BA%8E%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0" tabindex="-1">基于模型的强化学习</h4><ul><li>基于模型的强化学习（Model-based Reinforcement Learning，MBRL）是一种在马尔可夫决策过程（Markov Decision Process，MDP）中使用模型来指导代理与环境交互的技术。</li><li>MBRL通过预测环境对代理在每个状态下采取的动作的响应来学习转移概率和奖励模型。</li><li>在解决MDP的过程中，MBRL跟踪状态转换和动作，根据获取的信息更新模型。</li><li>对于每个状态，代理根据模型估计未来奖励的期望总和，并选择使未来奖励期望总和最大化的动作。</li></ul><h2 id="4-%E6%88%91%E4%BB%AC%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">4 我们的方法</h2><h3 id="4.1-%E9%9D%9E%E6%AD%A3%E5%BC%8F%E6%8F%8F%E8%BF%B0" tabindex="-1">4.1 非正式描述</h3><ul><li><p>我们方法的关键是优先考虑能通过属性测试候选者,以此来快速收敛出一个解决方案,相当于在DD中减少属性测试的失败率,减少遍历失败的候选者的时间</p></li><li><p>为此,我们使用MBRL,维护一个模型来预测每个候选者通过属性测试的几率.</p></li><li><p>与原生DD相比,基于上面的例子,我们的算法只需要调用10次即可,下面详细展示使用标准树决策模型时算法的每次迭代<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_4.png" alt></p><ol><li>第一次迭代中,程序P通过属性测试,将此结果添加到模型数据集中,此时模型预测全部程序都能通过测试</li><li>使用模型考虑优先候选者,此时二者优先级相同,故第一次迭代随机选择子集⟨f5, f6, f7, main⟩,没有通过测试,此结果添加至数据集中,形成图中(b)中第一个<strong>决策树,内部节点表示特定函数的存在条件,叶子节点表示给定程序通过属性测试的概率</strong>.第一棵树预测包含f4的程序通过属性测试,没有则不通过</li><li>第二次迭代选择第一次的补集⟨f1, f2, f3, f4⟩并失败,此结果加入数据集,模型决策树发生变化. 现在分区大小缩小一半,目前模型认为需要同时又f4和main才能通过属性测试</li><li>第三次迭代中,&lt; f1,f2 &gt;的补集被预测通过测试,但没有,将数据加入数据集得到新的预测树,预测同时需要&lt; f2, main&gt; 才能通过测试</li><li>在经过6次迭代后,获得理想决策树,认为包含main和f1是能通过属性测试的,此后再分区大小再缩小,均不能通过属性测试,因此迭代终止,返回程序&lt; main, f1&gt; 为最小程序</li></ol></li></ul><h3 id="4.2-%E7%94%A8%E4%BA%8Edd%E7%9A%84mdp" tabindex="-1">4.2 用于DD的MDP</h3><ul><li><p>接下来对用于DD的MDP作正式定义</p></li><li><p>给定原始程序P和属性测试函数O,MDP的目标是找到一个好的策略来引导DD找到满足O的最小程序</p></li><li><p>MDP的每个组件定义如下</p><ul><li>State:为候选程序列表和粒度等级的二元组<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">S = \langle L, n \rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">⟩</span></span></span></span></eq>,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span></eq>是候选程序列表,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span></eq>是粒度等级</li><li>Action:状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">s=\langle L,n \rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">⟩</span></span></span></span></eq>的可能的行为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></eq>定义为<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">⟨</mo><mo stretchy="false">⟨</mo><msub><mi>u</mi><mn>1</mn></msub><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">⟨</mo><mo stretchy="false">⟨</mo><msub><mi>u</mi><mi>n</mi></msub><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">⟩</mo><mo stretchy="false">}</mo><mspace width="1em"><mo stretchy="false">(</mo><mi>s</mi><mi>u</mi><mi>b</mi><mi>s</mi><mi>e</mi><mi>t</mi><mi>s</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>∪</mo><mtext> </mtext><mo stretchy="false">{</mo><mo stretchy="false">⟨</mo><mo stretchy="false">⟨</mo><mi>L</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mn>1</mn></msub><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">⟨</mo><mo stretchy="false">⟨</mo><mi>L</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>n</mi></msub><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">⟩</mo><mo stretchy="false">}</mo><mtext> </mtext><mtext> </mtext><mtext> </mtext><mtext> </mtext><mo stretchy="false">(</mo><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi><mi>l</mi><mi>e</mi><mi>m</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi><mo stretchy="false">)</mo><mspace linebreak="newline"></mspace><mo>∪</mo><mo stretchy="false">{</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mn>2</mn><mi>n</mi><mo stretchy="false">⟩</mo><mo stretchy="false">}</mo><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>r</mi><mi>e</mi><mtext> </mtext><mtext> </mtext><mi>g</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>u</mi><mi>l</mi><mi>a</mi><mi>r</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">A(s)=\{ \langle \langle u_1 \rangle ,2 \rangle,..., \langle \langle u_n \rangle ,2 \rangle \} \quad (subsets) \\ \cup\, \{ \langle \langle L/u_1 \rangle ,n-1 \rangle,..., \langle \langle L/u_n \rangle ,n-1 \rangle \} \,\,\,\, (complements) \\ \cup \{ \langle  L  ,2n \rangle \} (more\,\, granularity)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{⟨⟨</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">⟨⟨</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">⟩}</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal">b</span><span class="mord mathnormal">se</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∪</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{⟨⟨</span><span class="mord mathnormal">L</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">⟨⟨</span><span class="mord mathnormal">L</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">⟩}</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord mathnormal">co</span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.01968em;">pl</span><span class="mord mathnormal">e</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∪</span><span class="mopen">{⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mclose">⟩}</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">ore</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">an</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></eqn></section> 即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A(s)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span></span></span></span></eq>由当前状态中下一个候选程序和所有粒度对组成</li><li>Transition function:转移函数定义如下,(<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mi>a</mi><mo>=</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">s=\langle L,n \rangle,a=s&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>) <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(s&#x27;|s,a)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span></span></span></span></eq>定义为<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mtext> </mtext><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⟨</mo><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">⟩</mo><mtext> </mtext><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mtext> </mtext><mi>O</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mtext> </mtext><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⟨</mo><mi>L</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">⟩</mo><mtext> </mtext><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mtext> </mtext><mi>O</mi><mo stretchy="false">(</mo><mi>L</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mi>f</mi><mtext> </mtext><mtext> </mtext><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mn>2</mn><mi>n</mi><mo stretchy="false">⟩</mo><mtext> </mtext><mtext> </mtext><mo separator="true">,</mo><mtext> </mtext><mtext> </mtext><mi mathvariant="normal">∄</mi><mi>i</mi><mi mathvariant="normal">.</mi><mi>O</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo>∨</mo><mi>O</mi><mo stretchy="false">(</mo><mi>L</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mtext> </mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">T(s&#x27;|s,a)=\begin{cases} 1 &amp; if\,\,s&#x27;=\langle u_i,2 \rangle \,\,,\,\,O(u_i)=T \\ 1 &amp; if\,\,s&#x27;=\langle L/u_i,n-1 \rangle \,\,,\,\,O(L/u_i)=T\\ 1 &amp; if\,\,s&#x27;=\langle L,2n \rangle \,\,,\,\, \nexists i. O(u_i)=T \lor O(L/u_i)=T\ \\0 &amp; otherwise \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-1.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.592em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-5.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.13em;"><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.13em;"><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">L</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mclose">⟩</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord amsrm">∄</span><span class="mord mathnormal">i</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∨</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace"> </span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">se</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></eqn></section> 即状态转移仅放生在 下一个候选程序通过属性测试 或 需要更小的粒度时</li><li>Reward function:奖励函数定义如下 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mspace width="1em"><mo stretchy="false">(</mo><mi>L</mi><mtext> </mtext><mtext> </mtext><mi>i</mi><mi>s</mi><mtext> </mtext><mtext> </mtext><mn>1</mn><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>a</mi><mi>l</mi><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mspace width="1em"><mo stretchy="false">(</mo><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">R( \langle L,n \rangle ) = \begin{cases} 1\quad (L\,\,is\,\,1-minimal) \\ 0\quad (otherwise)\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">⟩)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">minima</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">se</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></eqn></section> 即当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span></eq>是1-minimal时,奖励为1,否则为0</li></ul></li><li><p>解决MDP是不切实际的,为此使用MBRL</p></li><li><p>我们学习了一个概率模型 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">M</mi><mo>:</mo><mi mathvariant="double-struck">P</mi><mo>→</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\mathcal{M}: \mathbb{P} \rightarrow [0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6889em;"></span><span class="mord mathbb">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></eq> ,返回候选程序通过属性测试函数的概率 并 从中获得策略</p></li><li><p>我们用 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>T</mi><mo>^</mo></mover><mo separator="true">,</mo><mover accent="true"><mi>R</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{T},\hat{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1412em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></eq>表示<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo separator="true">,</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">T,R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span></eq>的估计,他们的定义和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal">M</span></span></span></span></eq>而不是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span></eq>,</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>T</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></eq>定义如下 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>T</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="script">M</mi><mo stretchy="false">(</mo><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>K</mi><mrow><mi>s</mi><mo separator="true">,</mo><mi>a</mi></mrow></msub><mspace width="1em"><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⟨</mo><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="script">M</mi><mo stretchy="false">(</mo><mi>L</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>K</mi><mrow><mi>s</mi><mo separator="true">,</mo><mi>a</mi></mrow></msub><mspace width="1em"><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⟨</mo><mi>L</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><msub><mo>∏</mo><mrow><mo stretchy="false">⟨</mo><msup><mi>L</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">⟩</mo><mo>∈</mo><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mn>1</mn><mo>−</mo><mi mathvariant="script">M</mi><mo stretchy="false">(</mo><msup><mi>L</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><msub><mi>K</mi><mrow><mi>s</mi><mo separator="true">,</mo><mi>a</mi></mrow></msub><mspace width="1em"><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mn>2</mn><mi>n</mi><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mn>2</mn><mi>n</mi><mo>≤</mo><mi mathvariant="normal">∣</mi><mi>L</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mspace width="1em"><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mn>2</mn><mi>n</mi><mo stretchy="false">⟩</mo><mo separator="true">,</mo><mn>2</mn><mi>n</mi><mo>≥</mo><mi mathvariant="normal">∣</mi><mi>L</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\hat{T}(s&#x27;|s,a) = \begin{cases} \mathcal{M}(u_i)/K_{s,a} \quad (s&#x27; = \langle u_i,2 \rangle) \\ \mathcal{M}(L /u_i)/K_{s,a} \quad (s&#x27; = \langle L/u_i,n-1 \rangle) \\ (\prod_{\langle L&#x27;,n&#x27;\rangle \in A(s)/s&#x27;}1-\mathcal{M}(L&#x27;))/K_{s,a} \quad (s&#x27; = \langle L,2n \rangle,2n\leq|L|) \\ 0 \quad (s&#x27; = \langle L,2n \rangle,2n\geq|L|)\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1968em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:5.8027em;vertical-align:-2.6514em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-1.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.592em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-5.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1514em;"><span style="top:-5.1514em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathcal">M</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">⟩)</span></span></span><span style="top:-3.7114em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathcal">M</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">L</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">⟩)</span></span></span><span style="top:-2.2714em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2253em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⟨</span><span class="mord mtight"><span class="mord mathnormal mtight">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">⟩</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">A</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span><span class="mord mtight">/</span><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4747em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathcal">M</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">))</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣</span><span class="mord mathnormal">L</span><span class="mord">∣</span><span class="mclose">)</span></span></span><span style="top:-0.7886em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mclose">⟩</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣</span><span class="mord mathnormal">L</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6514em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></eqn></section> 其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mrow><mi>s</mi><mo separator="true">,</mo><mi>a</mi></mrow></msub></mrow><annotation encoding="application/x-tex">K_{s,a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>是一个归一化因子,使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>T</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{T}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></eq>成为一个概率分布<ul><li>前两个例子中,转移概率被定义为子集和他的补集通过质量测试函数的概率</li><li>另外两个例子针对更小的粒度,其概率为,1减去所有子集通过属性测试的概率. 最后如果粒度已经达到最小,则转移概率为0</li></ul></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>R</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></eq>定义如下 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>R</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi mathvariant="normal">∣</mi><mi>L</mi><mi mathvariant="normal">∣</mi></mrow></munder><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi mathvariant="script">M</mi><mo stretchy="false">(</mo><mi>L</mi><mi mathvariant="normal">/</mi><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{R}(\langle L,n\rangle) = \prod_{1\leq i\leq |L|}(1 - \mathcal{M}(L/u_i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1968em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">⟩)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.566em;vertical-align:-1.516em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.809em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mrel mtight">≤</span><span class="mord mathnormal mtight">i</span><span class="mrel mtight">≤</span><span class="mord mtight">∣</span><span class="mord mathnormal mtight">L</span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathcal">M</span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mord">/</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></eqn></section> 其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">u_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span></eq>的部分,即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>R</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mo stretchy="false">⟨</mo><mi>L</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">⟩</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{R}(\langle L,n\rangle)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1968em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(⟨</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">⟩)</span></span></span></span></eq> 表示<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span></eq>在模型<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">M</mi></mrow><annotation encoding="application/x-tex">\mathcal{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal">M</span></span></span></span></eq>下为1-minimal的概率</li></ul></li><li><p>最后给定估计的转移和奖励函数 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>T</mi><mo>^</mo></mover><mo separator="true">,</mo><mover accent="true"><mi>R</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{T},\hat{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1412em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></eq>,我们的目标是找到最优策略 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>π</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mi><munder><mo><mi>a</mi><mi>r</mi><mi>g</mi><mtext> </mtext><mtext> </mtext><mi>m</mi><mi>a</mi><mi>x</mi></mo><mrow><mi>a</mi><mo>∈</mo><mi>A</mi><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo></mrow></munder></mi><mi><munder><mo><mo>∑</mo></mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munder></mi><mover accent="true"><mi>T</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">)</mo><mover accent="true"><mi>V</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mspace width="1em"><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mspace></mrow><annotation encoding="application/x-tex">\hat{\pi}(s) = \underset{a\in A(s)}{arg\,\, max}\underset{s&#x27;}{\sum} \hat{T}(s&#x27;|s,a) \hat{V}(s&#x27;) \quad (1) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.344em;vertical-align:-1.294em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.1146em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight">A</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">s</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1604em;"><span></span></span></span></span></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.856em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">)</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></eqn></section> 其中 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>V</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></eq> 是在策略 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>π</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{\pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></eq>下的期望价值和,其定义如下 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>V</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>=</mo><mover accent="true"><mi>R</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo>+</mo><mi>γ</mi><mi><munder><mo><mo>∑</mo></mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munder></mi><mover accent="true"><mi>T</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>s</mi><mo separator="true">,</mo><mover accent="true"><mi>π</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>s</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mover accent="true"><mi>V</mi><mo>^</mo></mover><mo stretchy="false">(</mo><msup><mi>s</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mspace width="1em"><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><mi>γ</mi><mo>≤</mo><mn>1</mn><mo stretchy="false">)</mo><mspace width="1em"><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mspace></mspace></mrow><annotation encoding="application/x-tex"> \hat{V}(s) = \hat{R}(s) + \gamma \underset{s&#x27;}{\sum} \hat{T}(s&#x27;|s,\hat{\pi}(s)) \hat{V}(s&#x27;) \quad (0\leq \gamma \leq 1) \quad (2) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1968em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1968em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.344em;vertical-align:-1.294em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.856em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.294em;"><span></span></span></span></span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mclose">))</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></eqn></section> 其中 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>V</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span></eq> 可以通过动态规划获得.</p><ul><li>根据该策略,由行为导致的状态转移和奖励 为被用于 改进估计值,这将继续优化政策.</li><li>在我们的评估中,我们发现当 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\gamma = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></eq> 时 效果最好(即仅考虑即时奖励)</li></ul></li></ul><h3 id="4.3-%E9%9D%99%E6%80%81%E6%A8%A1%E5%9E%8B" tabindex="-1">4.3 静态模型</h3><p>我们描述了如何学习上述模型。我们的目标是使用该模型来预测给定程序 $ P $ 的 $ O§ $ 的概率。我们从程序去膨胀过程中收集的数据中学习模型。</p><ul><li><p><strong>特征表示</strong>:假设一个程序由 $ n $ 个元素组成 $ \langle u_1,…u_n \rangle $ , 每个 $ P $ 的子程序 $ P’ $ 被特点编码函数 $ F $ 编码成一个长度为 $ n $ 的二进制向量 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><msup><mi>P</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">⟨</mo><msub><mi>b</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>b</mi><mi>n</mi></msub><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex"> F(P&#x27;) = \langle b_1,...,b_n \rangle </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⟨</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">⟩</span></span></span></span></span></eqn></section> 其中 $ b_i = 1 $ 当且仅当 $ u_i \in P’ $,否则 $ b_i = 0 $.</p></li><li><p><strong>数据标记</strong>:每个特征向量被一个布尔值标记 $ \mathcal{O}§ $ ,表示该程序是否通过属性测试. 每个标记数据在DD过程中每次实验中进行收集</p></li><li><p><strong>模型学习</strong>:使用现成的监督学习模型如决策树,该算法在DD过程中说及特征向量和标记. 该模型可以预测 对于一个给定的特征向量 $ P $ 预测其标记 $ \mathcal{O}§ $ . 通过将 $ \mathcal{O} $ 替换为 $ \mathcal{M} $ , 我们可以定义近似版本的 $ \hat{T} , \hat{R}$</p></li></ul><h3 id="4.4-%E5%9F%BA%E4%BA%8E%E5%AD%A6%E4%B9%A0%E7%9A%84%E7%A8%8B%E5%BA%8Fdebloating" tabindex="-1">4.4 基于学习的程序Debloating</h3><ul><li>现在正式说明我们的方法<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_5.png" alt></li><li>入参:<ul><li><ol><li>原始程序 $ P $ 和属性测试函数 $ O $</li></ol></li><li><ol start="2"><li>一个现成的监督学习方法 $ \mathcal{L} $ ,用于学习模型</li></ol></li><li><ol start="3"><li>一个特征编码函数 $ F $ ,用于将程序编码为特征向量</li></ol></li></ul></li><li>算法解析<ul><li>第2行,状态 $ s $ 初始化为原始程序</li><li>第3行,数据集 $ D $ 初始化为 原始程序的特征向量和其标签(T) 的二元组</li><li>第4-13行为主循环,直至程序不能再分割<ul><li>第5行更新数据集</li><li>第6行计算当前模型得到的策略</li><li>第7行根据策略选择下一个状态</li><li>第8行检查属性测试是否通过</li><li>第9行:当前状态通过属性测试 或 需要更细粒度划分程序的时候,改变当前状态,</li><li>第12行:属性测试结果添加到数据集中</li></ul></li></ul></li></ul><h2 id="5-%E8%AF%84%E4%BC%B0" tabindex="-1">5 评估</h2><ul><li><strong>Q1. Effectiveness</strong>:debloating的质量和时间</li><li><strong>Q2. Security</strong>:是否移除的缺陷和攻击面的减少</li><li><strong>Q3. Robustness</strong>:对未见过输入的鲁棒性</li></ul><h3 id="5.1-%E5%AE%9E%E9%AA%8C%E8%AE%BE%E7%BD%AE" tabindex="-1">5.1 实验设置</h3><ul><li><strong>实施</strong>:<ul><li>我们将Chisel作为C程序的简化器,采用了基于语法引导的分层增量调试法(Delta-Debugging)<ul><li>Chisel首先使用标准的增量调试法简化全局级组件(全局变量声明,类型定义,函数定义等)</li><li>随后递归的再局部级组件(赋值,循环体,条件语句等)</li><li>局部级简化完成或,Chisel重新调用全局级简化，并继续整个过程直到找到一个最小版本</li><li>同时,Chisel通过简单的依赖分析,拒接无用的程序(如缺失主函数等)</li></ul></li><li>Chisel由2361行OCaml代码组成。我们使用FastDT3的现成决策树算法来学习模型。我们使用精确的决策树（即不使用提升/袋装法，也不限制树的最大深度）。所有实验在3.0 GHz和128 GB内存的Linux机器上进行</li></ul></li><li><strong>基准 Benchmarks</strong><ul><li>使用GNU软件包中的10个基准程序来评估Chisel,</li><li>下表展示了这些程序的特征</li><li>且这些程序均为开源且广泛应用</li><li>每个都有一个或多个已知的安全漏洞CVE</li><li>并且有人工缩减的版本,可以在BusyBox中找到</li></ul></li><li><strong>规范</strong><ul><li>期望保留的功能参考了BusyBox的实现,我们假设BusyBox默认配置支持的选项是每个程序的核心功能</li><li>处于安全考虑,我们强制简化的程序在执行非核心功能程序时不产生任何未定义的行为(不仅是崩溃),例如缓冲区溢出或使用未初始化的变量</li><li>为此,我们使用Clang的sanitizer选项[4]编译程序在运行时监视未定义的行为</li><li>为了广泛的测试所有功能,我们从源代码仓库收集了测试用例</li><li>总的来说,Chisel生成的简化版本的程序满足以下限制<ul><li><ol><li>可以编译</li></ol></li><li><ol start="2"><li>与原始程序相比在核心功能上有着相同的输出</li></ol></li><li><ol start="3"><li>在执行非核心功能时不会产生未定义的行为</li></ol></li></ul></li><li>此外,为每次运行设置时间限制,防止由Chisel引入的无限循环的程序</li></ul></li><li><strong>基线化简器</strong>:C-REDUCE 和 PERSES</li></ul><h3 id="5.2-%E7%AE%80%E5%8C%96%E7%9A%84%E6%95%88%E7%8E%87" tabindex="-1">5.2 简化的效率</h3><ul><li><ol><li>简化大小</li></ol><ul><li>使用以下三种情况进行比较<ul><li>原始程序</li><li>基于静态分析 Sparrow [13] 删除未使用的代码: statements 从 172,304 到 55,848 (32.4%) (因为Unix实用程序有公共库)</li><li>Chisel:减少89.1%,只剩6111</li></ul></li></ul></li><li><ol start="2"><li>与现有方法比较运行时间</li></ol><ul><li>Chisel在12h内完成简化,因其不仅避免了语法错误,也学习去避免了语义错误</li><li>C-REDUCE超时6个,因其是基于行的简化器</li><li>PERSES超时2个,因其是一个纯粹的基于语法的简化器</li></ul></li><li><ol start="3"><li>与BusyBox中的人工简化版本比较</li></ol><ul><li>BusyBox为一个单一的可执行程序,通过子命令调用所有工具</li><li>BusyBox有7个程序比Chisel生成的程序更小,但这主要因为人工可以使用更优化的代码和数据结构,总的来说,Chisel生成的代码大小合理</li></ul></li><li><ol start="4"><li>Chisel比现有方法产生的程序更自然,使得人可以维护和扩展,同时保留了原始结构 和 软件工程实践(如模块化和局部化)</li></ol></li><li><ol start="5"><li>与Cov进行比较,证明Chisel的必要,覆盖率使用llvm-cov [11]计算,结果如下图示,结果显示Chisel可以比朴素的Cov方法显著的减少更多的代码<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_7.png" alt></li></ol></li></ul><h3 id="5.3-%E5%AE%89%E5%85%A8%E5%A2%9E%E5%BC%BA" tabindex="-1">5.3 安全增强</h3><ol><li>首先检查简化后程序,查看Chisel是否已经去除已知的露铜</li><li>计算原始程序和简化程序的gadgets数量衡量攻击面的减少,这里使用ROP-gadget[12]工具</li><li>使用SOTA静态缓冲区溢出分析器Sparrow [13],检查所有报告的警报</li></ol><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_8.png" alt></p><ul><li>结果展示如上图<ul><li><ol><li>Chisel 去除了10个程序中6个的CVEs</li></ol></li><li><ol start="2"><li>去除了潜在的攻击面,具体而言平均减少了 66.2%的ROP gadgets</li></ol></li><li><ol start="3"><li>减少了95.4%的缓冲区溢出警报,剩下的警报较少进行手动检查后确认是假警报</li></ol></li></ul></li></ul><h3 id="5.4-%E9%B2%81%E6%A3%92%E6%80%A7" tabindex="-1">5.4 鲁棒性</h3><ul><li>通过SOTA 模糊器 AFL,生成随机的命令行输入 和 必要的输入文件进行测试,实验进行了三天</li></ul><ol><li>大多数情况下,Chisel生成的程序在测试中表现良好,模型测试没有检测到崩溃.此外,由于有sanitizer的保护,Chisel生成程序时有效的过滤掉了错误的程序</li><li>然而在未见过的输入可能会出现错误.<ul><li>根据我们的经验,随机模糊测试可以丰富测试脚本生成更健壮的程序:将使得简化后程序崩溃的模糊测试生成样例加入到测试脚本中,并重新运行Chisel和模糊测试,程序健壮性进一步提升,接下来3天内模糊器没有发生崩溃</li></ul></li></ol><h2 id="6-%E5%AF%B9%E6%9C%89%E6%95%88%E6%80%A7%E7%9A%84%E5%A8%81%E8%83%81" tabindex="-1">6 对有效性的威胁</h2><ol><li>Chisel可能会因为<strong>测试脚本返回不确定</strong>的结果而出错.<ul><li>主要有未定义的行为引起,我们可以使用sanitizer来过滤这些有问题的程序,但如果目标程序使用了未受相同保护方案编译外部库,则无法过滤. 如果外部库是开源的话可以通过再编译进行解决</li><li>另一个原因是我们避免了 不能终止的程序 产生,因为简化可能导致不能终止(如去除了循环语句的终止条件),为此我们设置了时间限制. 然而如果限制不够大,测试脚本可能返回不能确定的结果.这个问题可以通过动态监测和躲避无限循环解决</li></ul></li><li><strong>测试用例不够完备</strong><ul><li>我们使用AFL模糊测试工具对生成的程序进行了鲁棒性测试。然而，如果输入需要符合特定的格式，我们的测试可能不够全面，因为我们无法向AFL提供特定的语法，使其能够通过过滤不合法的测试输入来剪枝搜索空间。</li><li>为了解决这个问题，我们可以使用基于语法的模糊测试工具[25, 44]。</li></ul></li><li><strong>静态分析的不确定性</strong><ul><li>我们使用Sparrow静态分析器与AFL一起测试鲁棒性。尽管该分析器对于大多数C程序功能是准确的，但如果目标程序具有复杂的指针算术操作或由未知语义的API函数引起的复杂控制流程，则可能会存在不确定性。</li><li>在实践中，由于设计一个完全准确的静态分析器极其具有挑战性，因此会使用对于不同语言功能而言是准确的各种静态分析工具[31]。在此方面，我们可以通过结合多个具有不同功能的静态分析器的结果来缓解这个问题。</li></ul></li></ol><h2 id="7-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">7 相关工作</h2><ul><li><strong>程序Debloating</strong>:现在有很多在不同粒度缓解软件膨胀的技术<ul><li>coarse-grained(大粒度级,如应用级)<ul><li>例子:Rastogi et al. [35] 容器级别 Docker. 可以根据用户的限制将一个复杂容器分成多个简单的小容器,其方法基于动态分析获取应用的信息</li></ul></li><li>finer-grained(小粒度级)<ul><li>JRed [28] 和 RedDroid [27] 去除了Java和Android应用中的未使用的类和方法</li><li>Quach et al. [34] 提出了一个简化系统 ,在编译和加载中去除不必要的代码,其系统通过静态分析和基于训练的技术计算函数依赖来简化应用和库</li></ul></li><li>与之前方法比较,Chisel可以再更细的粒度进行简化,如语句级别. 现有的小粒度的方法基于静态分析只能去除不用的代码,而Chisel很激进甚至可以出去在运行路径上的代码</li><li><strong>程序膨胀检查</strong><ul><li>Bhattacharya等人[19]介绍了一种分析技术，用于检测Java应用程序中可能的膨胀源;我们的方法自动删除相对于属性测试程序的冗余代码</li></ul></li><li><strong>监测和减少运行时内存膨胀</strong><ul><li>这与程序debloating正交但互补,因为程序debloating可能潜在缓解这一问题通过移除运行路径上的代码</li></ul></li></ul></li><li><strong>测试输入最小化</strong><ul><li>目前很多简化程序的方法都是 最小化使得编译器或解释器不会崩溃的程序,由于其不关注简化后的代码是否可以运行或维护,最后产生的代码安全性和可读性都很差. 例如C-REDUCE不能维护程序的软件工程时间,而我们的目标是开发人员可以后续使用的精简程序</li><li>现有的方法仅通过简单的指导来搜寻最小的程序.最近出现了能够识别程序<em>语法结构</em>的方法,这种先验知识可以避免很多语法错误的程序的尝试,但不能从<em>语义</em>上避免错误.我们的系统通过构建静态模型避免了语义上错误的尝试. 同时,我们的方法可以加速现有的所有方法,包括又非结构化输入的增量调试法</li></ul></li><li><strong>程序切片和可达性分析</strong><ul><li>切片是从程序中提取的与某个感兴趣点的值相关的子部分,通常由静态分析和动态分析得出. 我们的方法旨在更一般的属性并且不需要特定的语义和依赖分析,且我们的方法可以获得比程序切片更小的程序</li><li>在我们的实验中，我们与可达性分析相比较，而不是使用切片技术，原因如下。<ul><li>动态切片包含了在程序的特定执行下影响目标变量值的所有语句。然而，从高级规范中确定感兴趣的变量和程序点可能是具有挑战性的。即使用户手动注释这些目标，动态切片对于程序精简可能仍然效果不佳。例如，“safer_name_suffix” 的输出实际上取决于函数中的大部分语句。因此，与 Chisel（相比，动态切片无法消除漏洞。</li></ul></li><li>静态可达性计算通常会因为静态分析的不可判定性而产生对实际可达代码的不精确近似。<ul><li>通常无法有效处理复杂的控制流，例如间接过程调用（如 setjmp / longjmp，函数指针或反射）、复杂的条件语句和指针算术。</li><li>而我们的方法不受这些问题的限制。动态可达性计算在代码大小方面可能比静态方法更有效。然而，我们的研究表明，我们的方法产生的程序比基于动态可达性的程序具有更小的攻击面</li></ul></li></ul></li></ul><h2 id="8-%E7%BB%93%E8%AE%BA" tabindex="-1">8 结论</h2><ul><li><p>我们提出了Chisel, 一种基于 增量调试法的学习系统,用于程序debloating</p><ul><li>我们的方法通过给定的测试脚本高效地简化程序</li><li>学习到的概率模型加速找到最小程序的速度</li><li>此外这种精简方法除去了一些漏洞,并显著减少了潜在的攻击面</li><li>此外,简化获得的 程序大小和复杂度 运行更进一步应用精确的推理方法和人工检查</li></ul></li><li><p>在未来,计划在以下方向扩展Chisel</p><ul><li><ol><li>探索更好的概率模型和高效的增量学习方法</li></ol></li><li><ol start="2"><li>设计除 IO 之外的其它规范</li></ol></li><li><ol start="3"><li>应用于简化二进制等其它语言的方法</li></ol></li></ul></li></ul><h2 id="9-%E9%98%85%E8%AF%BB%E6%80%BB%E7%BB%93" tabindex="-1">9 阅读总结</h2><ul><li>Chisel:使用强化学习框架辅助增量调试法来进行程序去膨胀</li><li>问题:<ul><li><ol><li>需要用户提供属性测试函数,很麻烦的</li></ol></li><li><ol start="2"><li>增量调试法很慢的,套上强化学习更慢了</li></ol></li><li><ol start="3"><li>删除的代码取决于输入,并且只会删除代码,因为使用的是增量调试法</li></ol></li></ul></li></ul><h2 id="10-%E5%A4%8D%E7%8E%B0" tabindex="-1">10 复现</h2><ul><li><p>在win11上使用ubuntu20.04虚拟机</p><ul><li>直接下载源码,编译运行,运行失败,应该是新版被不兼容旧版本的问题</li><li>于是在虚拟机上使用docker,在docker上跑chisel,最小的gzip跑了14h(</li></ul></li><li><p>结论:很慢的,之后也不用跑了,感受下效果练练手就行了</p></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(3)_x.png&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;effective-program-debloating-</summary>
      
    
    
    
    <category term="论文" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="Software Engineering" scheme="http://example.com/tags/Software-Engineering/"/>
    
    <category term="Software Debloating" scheme="http://example.com/tags/Software-Debloating/"/>
    
  </entry>
  
  <entry>
    <title>Software Debloating 论文阅读 (2)</title>
    <link href="http://example.com/2023/10/28/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/SoftwareDebloating/Software%20Debloating%20%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB(2)/"/>
    <id>http://example.com/2023/10/28/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/SoftwareDebloating/Software%20Debloating%20%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB(2)/</id>
    <published>2023-10-28T13:24:36.754Z</published>
    <updated>2023-10-28T13:48:34.732Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2.-sok%3A-a-tale-of-reduction%2C-security%2C-and-correctness---evaluating-program-debloating-paradigms-and-their-compositions" tabindex="-1">2. SoK: A Tale of Reduction, Security, and Correctness - Evaluating Program Debloating Paradigms and Their Compositions</h2><p>ESORICS 2023 - 28th European Symposium on Research in Computer Security, Lecture Notes in Computer Science, Springer, 2023.(CCF B)</p><h3 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h3><ul><li>本文提出 DebloatBencha,一个可以 扩展的,可持续的 基准平台,可以比较方法间的不同</li><li>然后,对现阶段的技术进行了一个全面的比较</li><li>我们整合了4种不同的方法进行比较,揭漏了其中的一些隐秘<ul><li>基于源程序的</li><li>基于编译器的中间表示</li><li>基于运行时的二进制代码</li><li>基于外部库的</li></ul></li><li>同时我们也将一些方法进行了结合,发现了一些方法组合起来的效果((e.g., Chisel-Occam, Chisel-Occam-Razor)优于单独实用的效果</li></ul><h3 id="1-%E4%BB%8B%E7%BB%8D" tabindex="-1">1 介绍</h3><ul><li><p>当前去膨胀方法遇到的挑战:不能合适地去评估正确性和表现,首要的原因是缺乏一个基准平台,由此简历多样化的分析工具的路径变得不清晰且代价高昂</p></li><li><p><strong>评估平台</strong>:设计DEBLOATBENCHA基准框架,来评估目标程序是C/C++ 的去膨胀方法,因为C/C++ 使用范围广且攻击面多</p><ul><li>当前平台集成了一组软件去膨胀研究,代表了四种类别:Chisel(源代码),Occam（编译器中间表示）,Razor（可执行二进制文件）和Piece-wise（外部库）</li><li>当前目标程序套件包括10个来自ChiselBencha的实用程序,3个基于GUI(graphical user interface)的程序和2个面向网络的程序</li><li>该平台提供易于使用的命令行接口来运行不同的去膨胀工具</li><li>同时平台设计有可定制性和可扩展性</li></ul></li><li><p><strong>评估去膨胀方法</strong>:对 继承在评估平台的4种方法进行了全面的研究,具体而言,检查了由去膨胀方法生成的二进制文件的正确性,内存使用量,磁盘大小,安全相关的代码片段,运行时间的变化,我们发现</p><ul><li>基于静态分析的方法(Occam,PECEC-WISE)通过了所有测试</li><li>使用动态分析的方法(Chisel,Razor)的二进制文件随着去膨胀程度的增加失败的测试越多</li><li>CHisel对非核心工具程序无法产生二进制文件,RAZOR也在3个非核心工具程序无法产生二进制文件,这表明测试驱动的去膨胀器在处理GUI和网络编程的程序中存在限制</li><li>此外,四个工具中有三个运行很快,可以集成到软件阶段工作流中,我们创建了首种将多个工具组合来应用到单个二进制文件的方法,根据我们实验证明,这种组合可在某些方面达到很好的效果</li></ul></li><li><p>在平台的开发和方法评估中,我们同时也修复报告了一些bug,并提出了一些改进方法</p></li><li><p>我们的贡献总结</p><ul><li><ol><li>开发了一种易于扩展的框架 DebloatBenchA ,来评估去膨胀算法.为 目标程序套件(10个来自ChiselBencha的实用程序,3个基于GUI(graphical user interface)的程序和2个面向网络的程序) 创建了82个变体来进行鲁棒性测试. 在该框架中集成了4种不同类型的方法,目前正在开源中</li></ol></li><li><ol start="2"><li>对4种方法进行了全面的评估,发现了一些隐秘,并提出了一些改进方法</li></ol></li><li><ol start="3"><li>利用多个去膨胀方法的优势,提出了一种组合分析方法,经过评估显示优于单个方法</li></ol></li></ul></li></ul><h3 id="2-%E5%8E%BB%E8%86%A8%E8%83%80%E7%AE%97%E6%B3%95" tabindex="-1">2 去膨胀算法</h3><ul><li>DebloatBencha支持应用级和库级别的去膨胀,因为评估内核级的去膨胀需要与  应用级和库级别 不同的机制,故暂不考虑.下表总结了各种应用程序和库级别的程序去膨胀方法<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_1.png" alt></li></ul><h4 id="2.1-%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%BA%A7%E5%88%AB%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">2.1 应用程序级别的去膨胀</h4><ul><li>应用程序级的去膨胀器可以分为三类<ul><li>源代码级:包括Chisel,C-Reduce,Perses,大部分源代码级的方法使用delta调试算法的变体进行去膨胀.delta调试算法(Delta-debugging)使用一个测试集来涵盖去膨胀后程序拥有行为,但会导致过拟合.<ul><li>根据辛等人论文所说,Chisel在简化程度上表现最佳,因此,我们选择了Chisel作为源代码级的去膨胀器代表</li></ul></li><li>中间代码级:该级别工具的操作作用在LLVM位码上,使用部分求值法对代码进行缩减.<ul><li>例子:OCCAM算法,该算法结合部分求值和类型理论来移除不必要的代码,支持多趟跨模型分析</li><li>由于OCCAM是唯一开源的支持自动化分析的工具,所以我们选择其为中间代码级别的代表</li></ul></li><li>二进制代码级:该级别方法依赖于执行跟踪,由选择的测试用例(RAZOR)或模糊测试(Ancile)触发<ul><li>例子:Razor运行二进制代码在测试用例上,然后使用 Tracer来收集运行踪迹,然后解码踪迹,用执行过的指令来构建程序的CFG(Control Flow Graph 控制流图),Ancile还需要一组测试用例来作为模糊器的种子</li><li>因为Razor是开源的,所以我们选择其为二进制代码级的代表</li></ul></li></ul></li></ul><h4 id="2.2-%E5%BA%93%E7%BA%A7%E5%88%AB%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80" tabindex="-1">2.2 库级别的去膨胀</h4><ul><li>库级别的去膨胀器可以分为三种:<ul><li>(1) 静态时:给定一组应用,静态去膨胀器会静态的环境下对动态链接库进行去膨胀,从而永久替代原始的库集合(e.g. Nibbler)</li><li>(2) 加载时:在将目标库加载到内存时对函数进行去膨胀(RIECE-WISE)</li><li>(3) 运行时:仅在运行时加载需要的函数(BlankIt)</li></ul></li><li>由于PIECE_WISE是开源的,所以我们选择其为库级别的代表</li></ul><h3 id="3-debloatbencha%E6%A1%86%E6%9E%B6%E7%9A%84%E7%BB%84%E6%88%90" tabindex="-1">3 DebloatBencha框架的组成</h3><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_2.png" alt></p><ul><li><p>框架架构如上图.</p><ul><li>设计遵循了 开闭原则(Open-Close Principle),即对扩展开放,对修改关闭,以确保更好的可扩展性和可维护性</li><li>基于容器的方式来构建建构以隔离不同方法使用的环境,并为每个方法构建相应容器</li><li>使用基于命令行工具的管理系统(称为编排器)来构建和管理这些容器的生命周期</li><li>框架中的每个输入程序都有一个相关的配置文件描述其各种元数据(例如 测试样例位置,构建信息)</li><li>由于不同的程序使用不同的专有程序输入,为每个容器提供一个适配器将程序输入转换为框架自己的格式</li></ul></li><li><p>框架组成,主要有三部分:(1)输入程序(2)去膨胀工具(3)编排器和测量脚本.</p><ul><li>输入程序,编排器和测量脚本位于主机种,去膨胀工具和适配器位于容器中</li></ul></li></ul><h4 id="%E5%8E%BB%E8%86%A8%E8%83%80%E5%B7%A5%E5%85%B7" tabindex="-1">去膨胀工具</h4><ul><li>在框架中的每个去膨胀工具通过容器创建</li><li>框架使用一个配置文件收集与一个程序相关的输入</li><li>同时创建了一个脚本来解析配置文件并且为每个工具生成各自的输出,该脚本称为 适配器脚本,该脚本将工具和框架链接起来</li></ul><h4 id="%E7%9B%AE%E6%A0%87%E7%A8%8B%E5%BA%8F%E5%A5%97%E4%BB%B6" tabindex="-1">目标程序套件</h4><ul><li>从ChiselBencha中选择了10个实用程序,为了评估通用性,选择3个GUI程序和2个网络程序,作为目标程序套件</li><li>为了捕捉多样性,我们为每个应用选择多样性的部署上下文. 我们将一个目标程序和其特定的部署上下文称为一个变体</li><li>下表总结了完成工作负载的82个变体<br><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_3.png" alt></li></ul><h4 id="%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B" tabindex="-1">测试用例</h4><ul><li>测试用例的数量影响基于测试用例去膨胀工具的训练时间,因此选择高质量的测试用例来最大化覆盖同时不影响性能很重要.</li><li>给定一个应用的运行配置,生成其高质量的测试用例是一个活跃的研究领域.但这个问题是一个正交问题(指与当前讨论的问题或主题无关的问题),这种自动化超出了本文的范围,因此我们使用人工创造的测试用例.</li><li>在准备这些测试用例时,我们的目标是捕捉多样化行为来最大化覆盖范围</li></ul><h4 id="%E6%B5%8B%E9%87%8F%E8%84%9A%E6%9C%AC" tabindex="-1">测量脚本</h4><ul><li>通过以下五个指标衡量 (?哪有五个)<ul><li><ol><li>去膨胀后二进制文件的正确性</li></ol></li><li><ol start="2"><li>二进制文件大小的减少</li></ol></li><li><ol start="3"><li>从 gadgets 减少的角度进行安全性分析</li></ol></li><li><ol start="4"><li>去膨胀时间</li></ol></li></ul></li><li>没有使用 CVE 进行安全评估，主要是因为与功能相关。消除它们更可能受到功能选择的影响，而不是工具本身。</li></ul><h4 id="%E5%86%85%E5%AD%98gadget%E8%AE%A1%E6%95%B0" tabindex="-1">内存gadget计数</h4><ul><li>PIECE-WISE 在 外部库 加载进入内存时 以 函数为单位 对其进行简化,然后我们使用gdb来寻找在内存中简化版本库中缺失的函数.在收集到信息后,我们通过用NOPS替换确实的函数体来创建一个新版本的库.最后我们使用个版本的库使用ROPgadget工具来收集ROP gadgets</li></ul><h3 id="4-debloatbencha-%E7%9A%84%E5%AE%9E%E9%AA%8C%E9%85%8D%E7%BD%AE" tabindex="-1">4 DebloatBenchA 的实验配置</h3><ul><li>集成4种去膨胀工具</li><li>我们进行了两组实验，以测量独立工具和它们的组合的性能。</li><li>最后，我们讨论了用于比较性能的指标。</li></ul><h4 id="4.1-%E7%8B%AC%E7%AB%8B%E6%A8%A1%E5%BC%8F" tabindex="-1">4.1 独立模式</h4><ul><li>CHISEL配置:从Chisel的作者那里，我们了解到CIL [34]用于合并较早版本的Chisel中输入程序的C文件。为了成功运行Chisel，我们重新使用了来自ChiselBench的10个coreutils程序的合并C文件。对于其他5个大型程序，我们利用了其构建系统集成功能。</li><li>OCCAM配置:OCCAM支持很多策略来简化二进制文件,每个策略都会产生不同的简化程度,从激进到没有特征化.运行一个有效性检查的试验来找到最佳配置,我们选择 the onlyonce(最佳配置) 来衡量比较OCCAM性能</li><li>RAZOR配置:RAZOR的性能取决于Pathfinder模块所使用的启发式方法的选择.由于RAZOR运行的比其它程序块,我们为每种启发式方法创建了多个版本的二进制文件,从中选择正确率最高的版本进行性能分析和与其它工具的比较</li><li>PIECE-WISE配置:首先使用了Docker容器提供的预构建编译器和加载器.我们使用 musl-libc v1.1.15 作为我们程序套件中每个输入程序的依赖库.然后,我们使用 PIECE-WISE 的对依赖库进行简化. 为了对比,我们要创建非PIECE-WISE编译的二进制文件,我们使用PIECE-WISE仓库提供的同样的Docker容器,同时下载未经修改的LLVM和Clang以及musl-libc,并与之前PIECE-WISE使用的版本相同</li></ul><h4 id="4.2-%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F" tabindex="-1">4.2 组合模式</h4><ul><li>因为不同方法在不同程序代码级别运行,所以可以将多种方法运用到同一个程序上,例如CHISEL在源代码级别进行简化,然后产生的二进制用RAZOR进行进一步简化,依据这一思想,我们构思了4种工具的组合来对框架的输入程序组进行简化<ul><li><ol><li>Chisel-Occam</li></ol></li><li><ol start="2"><li>Chisel-Occam-Razor</li></ol></li><li><ol start="3"><li>Chisel-Razor</li></ol></li><li><ol start="4"><li>Occam-Razor</li></ol></li></ul></li><li>因为PIECE-WISE需要同时在源代码和二进制上进行简化,所以其只能与CHISEL进行组合,我们尝试了其组合,但效果有限</li><li>对于给定的指标,我们将 组合方法的性能 和 单个工具的最优情况 进行比较</li></ul><h3 id="5-%E5%8E%BB%E8%86%A8%E8%83%80%E5%99%A8%E7%9A%84%E8%AF%84%E4%BC%B0" tabindex="-1">5 去膨胀器的评估</h3><ul><li>研究问题<ul><li>RQ1:去膨胀方法是否会对目标应用程序的正确性产生负面影响？</li><li>RQ2:在简化单个程序大小规模时各方法的效果如何?</li><li>RQ3:简化程序对程序 gadget相关安全性有何影响?</li><li>RQ4:实际中,各简化程序的使用性如何</li><li>RQ5:组合多个 去膨胀方法是否有进一步的提升</li></ul></li></ul><h4 id="5.1-%E5%9C%A810%E4%B8%AA-utilcore%E7%A8%8B%E5%BA%8F%E4%B8%8A%E7%9A%84%E8%AF%84%E4%BC%B0" tabindex="-1">5.1 在10个 utilcore程序上的评估</h4><ul><li><p><strong>RQ1:工具正确性</strong>:首先使用测试用例评估 去膨胀器的正确性,总是会高估正确性,因为测试用例可能无法覆盖全部情况</p><ul><li><ol><li>下图表示了各方法的正确度 <img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_4.png" alt></li></ol><ul><li>基于静态分析的方法,OCCAM和PIECE-WISE通过了全部测试用例</li><li>基于动态分析的方法,CHISEL和RAZOR通过了大部分测试用例</li><li>OCCAM的正确性最好因为他的静态部分求职方法保守地保留了给定参数地所有功能.CHISEL表现不好因为其过度依赖于给定的测试脚本</li></ul></li><li><ol start="2"><li>下图表示了方法随训练数据的变化正确度的变化:可以看出随着训练数据的增多,正确性在增加<img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_5.png" alt></li></ol></li></ul></li><li><p><strong>RQ2:大小简化程度</strong>:去膨胀一个目标应用程序就是通过在一个特定地部署环境下删除不用的代码来减小其大小,其效果体现在磁盘中二进制文件的大小,各方法表现如下图所示(图中减少百分比为正表示二进制文件变小程度)</p><ul><li><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_6.png" alt></li><li>CHISEL在源代码中简化,可以减少二进制代码大小,增加训练量有时会增加代码大小</li><li>OCCAM在中间代码中简化,可以减少二进制代码大小,由于OCCAM的部分求值方法可能会增加函数的数量,有时会增加代码大小</li><li>RAZOR保留原始二进制代码并使用转换后的代码扩充它</li><li>PIECE-WISE将表示程序控制流图的元数据添加到二进制文件中</li></ul></li><li><p><strong>RQ3:Gadget 的表现</strong>: 原始ROP gadget数量和代码大小并不是评估二进制文件漏洞的可靠指标.[14, 15]。Homescu等人[24]认为，gadget可以根据提供的功能类型进行分类，每个类别只需要一个成员即可用于特定类别的攻击。他们构造了“micro-gadgets”类别（限制为最大长度为3字节），这些gadget提供了每个类别的基础。我们报告了去bloating对ASLR-proof和Turing-complete表达能力的两个类别中的变化的影响。如下图示</p><ul><li><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_7.png" alt></li><li>在两种类别中,CHISEL有着最高的减少程度</li><li>在Turing-complete中,OCCAM比RAZOR有效,而在ASLR-proof中,RAZOR比OCCAM有效</li><li>而PIECE-WISE在这两个类别中几乎没有减少gadget</li></ul></li><li><p><strong>RQ4:工具实用性</strong>:为了了解每种去膨胀工具潜在部署环境,我们测量了其在框架工作负载上所有变体上运行的时间,如下图示</p><ul><li><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_8.png" alt></li><li>CHISEL使用13000s,是其它方法的三个数量级,因为其依靠马尔可夫决策过程来找到满足所提供测试用例的最小语句子集。</li><li>PIECE-WISE,OCCAM,RAZOR分别为22.1,4.9,5.2 s,因为其主要依靠静态分析,因此这三种方法更容易应用到传统的优化流程种</li></ul></li><li><p><strong>总结</strong></p><ul><li><strong>正确性</strong>:Chisel: 80.4%, Occam: 100%, Razor: 94.8%, Piece-Wise:100%. 基于静态分析的比基于动态分析的效果好</li><li><strong>磁盘上大小</strong>:CHISEL和OCCAM 减小大小,而RAZOR和PIECE_WISE因为扩充了原始二进制大小,造成二进制大小变大</li><li><strong>Gadat表现</strong>:CHISEL表现比其它方法都好</li><li><strong>去膨胀时间</strong>:CHISEL比其它方法时间长很多(3.75h),PIECE-WISE,OCCAM,RAZOR分别为22.1,4.9,5.2 s</li></ul></li></ul><h4 id="5.2-%E5%9C%A85%E4%B8%AA%E9%9D%9Eutilcore%E7%A8%8B%E5%BA%8F%E4%B8%8A%E7%9A%84%E8%AF%84%E4%BC%B0" tabindex="-1">5.2 在5个非utilcore程序上的评估</h4><ul><li><strong>RQ1:正确性</strong>:<ul><li>使用247个测试用例,来自5个非utilcore程序的22个变体.</li><li>在容器种对目标程序进行去膨胀</li><li>在主机系统中进行正确性测试(因为GUI不好在容器中)</li><li>评估显示<ul><li>只有OCCAM和PIECE-WISE产生了正确的二进制文件可以通过所有的测试用例</li><li>RAZOR可以产生vlc和ngnix的正确二进制文件,而其它不行</li><li>CHISEL一个都不能正确产生</li></ul></li></ul></li><li><strong>RQ2:简化性</strong>:一定程度上都增大了二进制文件的大小</li><li>RQ1和RQ2的表现如下图示 <img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_9.png" alt></li><li><strong>RQ3:Gadget 的表现</strong><ul><li>PIECE-WISE的最大平均时间是129.67s(在Graphicsmagick上),最小是13.66s(在Gvpdf上)</li><li>OCCAM平均最大时间是95.6s(在Graphicsmagick上),最小是1.3s(在Vlc上)</li><li>RAZOR最大平均时间120s</li></ul></li><li><strong>RQ4:工具实用性</strong>:只有OCCAM将两种类别的gadget都移除了,RAZOR还增加了Turing-complete类别的gadget,如下图示<ul><li><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_10.png" alt></li></ul></li></ul><h4 id="5.3-%E5%8E%BB%E8%86%A8%E8%83%80%E5%99%A8%E7%BB%84%E5%90%88" tabindex="-1">5.3 去膨胀器组合</h4><ul><li><p>为了更有意义的比较,尽在utilcore程序上进行比较(以为有的方法不能再非utilcore上运行)</p></li><li><p>将四种方法的组合取首字母组合进行表示,如COR表示CHISEL-OCCAM-RAZOR组合运行,组合运行时需要保证最后的二进制程序能够运行</p></li><li><p>组合后正确性和简化性如下图示</p><ul><li><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_11.png" alt></li><li><strong>正确性</strong>:由于CHISEL在单独测试中未通过测试用例的几率大,这些未通过的测试用例在组合测试中被去除,同时由于OCCAM通过了所有测试用例,因此作为基线</li><li><strong>简化度</strong>:<ul><li>单个工具的最大简化度是CHISEL减少了70.4%,而CO组合的简化度是 74.6%,COR为67.5%</li></ul></li><li><strong>Gadget表现</strong>:<ul><li><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_12.png" alt></li><li>在Turing-complete ROP中 单个工具的最好情况是CHISEL,减少了36.6%,然而COR达到了38.8%,CO更是达到了50.5%</li><li>在ASLR-proof ROP中,单个工具最好情况是CHISEL,减少了28.2%,而CO,CR,COR表现都更出色,分别为45.9%、40.4%和45.8%。</li></ul></li></ul></li><li><p>对于CHISEL和PIECE-WISE的组合,在使用CHISEL进行去膨胀后,PIECE-WISE只能在去膨胀的10个程序中成功编译五个,且这些程序中,grep,date和tar三个程序的变体无法被PIECE_WISE编译.这是因为musl-libc和glibc不兼容导致的,CHISEL使用的glibc而PIECE-WISE使用的musl-libc</p></li><li><p><strong>组合总结</strong></p><ul><li>正确性:对于非Chisel流水线，它能够生成正确的二进制文件</li><li>大小:CO组合由于单个方法</li><li>Gadget:CO,COR组合均优于单个Chisel</li></ul></li></ul><h3 id="6-%E8%AE%A8%E8%AE%BA" tabindex="-1">6 讨论</h3><h3 id="6.1-%E8%AE%BE%E8%AE%A1%E9%80%89%E6%8B%A9%E7%9A%84%E5%BD%B1%E5%93%8D" tabindex="-1">6.1 设计选择的影响</h3><ul><li><strong>CHISEL在测试用例上的依赖</strong>:<ul><li>我们的评估揭示了CHISEL在二进制文件上的正确性最弱,这是因为CHISEL对测试脚本有着很强的依赖.同时这些脚本也很难保证是对的,即使脚本正确,CHISEL也可能出现问题.</li><li>在我们的实验中,平均有超过96%的去膨胀的时间是用在了运行属性测试脚本上</li></ul></li><li><strong>OCCAM的部分求值法</strong>:<ul><li>部分求值法降低了OCCAM的可用性,它只允许非冲突的标志存在于去膨胀的二进制程序中.(我们称两个标志是非冲突的,仅当它们可以在同一个执行过程中同时执行).因此,对于两个冲突的标志,需要创建两个变体.</li><li>然而,我们要注意到在OCCAM中通过部分求值法,可以使得 去膨胀程序 易于通过配置去设置,以为其不需要小心和无聊地使用测试用例,其质量会影响去膨胀二进制文件地可用性</li></ul></li><li><strong>RAZOR中基于跟踪地简化</strong>:<ul><li>RAZOR的不同启发式搜索影响其正确性和简化性,所以我们需要对使用不同的启发方法进行充分评估,已选择最佳的启发方法,保留合理的功能,下图展示了启发度级别与正确性的关系</li><li><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_13.png" alt></li><li>此外,RAZOR的训练时间取决于提供给他的测试用例数量,下图展示了其关系</li><li><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_2_14.png" alt></li></ul></li><li><strong>PIECE-WISE中加载时间的缩减</strong>:<ul><li>PIECE-WISE在编译时计算程序的依赖图并将其添加到ELF头文件中的.dep部分,用于减少加载时间,但这显著增加了大小.对于一些应用而言,大小的增加可能盖过了其好处</li></ul></li></ul><h3 id="6.2-%E7%A0%94%E7%A9%B6%E7%9A%84%E9%99%90%E5%88%B6" tabindex="-1">6.2 研究的限制</h3><ul><li>目前DebloatBenchA仅选择了每一类中的单个工具,并提供了深入的分析.然而工具的覆盖范围可以很容易地进行扩展.</li><li>目前 目标应用程序的选择受到了 去膨胀器功能的限制</li><li>我们创建了大量的测试用例来覆盖训练和测试,但总有疏漏</li></ul><h3 id="7-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">7 相关工作</h3><ul><li><strong>C/C++程序特化方向</strong>:<ul><li>主要有三个方向<ul><li>(1)源代码级（例如Chisel [22]、C-Reduce [42]、Perses [46]和DomGad [52]）</li><li>(2)中间代码级（例如Trimmer [6, 7, 44]、LLPE [45]、LMCAS [8]和Occam [31, 33]）</li><li>(3)二进制代码级.（例如Razor [37]）</li><li>另外也有库级别 ( 例如Piece-wise [39]、BlankIt [36]和Nibbler [5])</li></ul></li><li>DebloatBenchA是第一个系统地审查所有类别的工具以强调每种方法的优势和劣势的基准测试。</li><li>我们的评估还强调，组合多种方法具有比任何单个工具更好的性能的潜力。</li></ul></li><li><strong>环境/系统级的去膨胀</strong><ul><li>MultiK [29]和shard [4]提供了针对应用程序的内核级别的去bloat化</li><li>Cimplifier [41]使用动态分析来检测容器内的具有逻辑上不同之处的应用程序，并自动将其分解为较小的容器。</li><li>LightBlue [50]利用静态分析执行应用程序引导的固件去bloat化。</li><li>CDE [20]利用执行跟踪来识别应用程序的依赖项以实现无缝移植</li><li>最近，Hassan等人开发了一个名为DebloatBenchC的框架来评估容器去bloat化器[21]。</li></ul></li><li><strong>去膨胀的其它程序语言的研究</strong><ul><li>Piranha [40]针对Objective-C</li><li>JShrink [16]; JSCleaner [17], Lacuna [35], Muzeel [30],Stubbifier [48] and [49] 针对JS</li><li>Red [26]，JAX [47]，BloatLid [18] Depclean [2]和[9]分别针对基于Java和PHP的应用程序</li><li>也有在字节码上的研究 [19, 28].</li></ul></li></ul><h3 id="8-%E7%BB%93%E8%AE%BA" tabindex="-1">8 结论</h3><ul><li><ol><li>我们提出了DebloatBenchA,一个可扩展可维护的基准测试框架,用于对程序去膨胀方法进行严格的评估</li></ol></li><li><ol start="2"><li>我们将Chisel,Occam,Razor,Piece-wise集成到该框架中,进行了全面的比较研究.</li></ol><ul><li>我们发现保守的静态分析工具更能产生正确的二进制文件</li><li>而激进的动态分析工具在减少二进制文件大小,gadget类方面表现更好</li><li>而Piece-wise在增大二进制文件大小的同时未能减少任何gadget类</li><li>基于测试用例的工具在非coreuntils程序上的表现不好</li></ul></li><li><ol start="3"><li>对不同阶段多去膨胀工具的组合使用开辟了道路</li></ol></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;2.-sok%3A-a-tale-of-reduction%2C-security%2C-and-correctness---evaluating-program-debloating-paradigms-and-their-compositions&quot; tabin</summary>
      
    
    
    
    <category term="论文" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="Software Engineering" scheme="http://example.com/tags/Software-Engineering/"/>
    
    <category term="Software Debloating" scheme="http://example.com/tags/Software-Debloating/"/>
    
  </entry>
  
  <entry>
    <title>用户研究论文阅读</title>
    <link href="http://example.com/2023/10/22/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/%E7%94%A8%E6%88%B7%E7%A0%94%E7%A9%B6%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/"/>
    <id>http://example.com/2023/10/22/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/%E7%94%A8%E6%88%B7%E7%A0%94%E7%A9%B6%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/</id>
    <published>2023-10-22T09:37:26.640Z</published>
    <updated>2023-10-23T07:24:17.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1.-trust-enhancement-issues-in-program-repair" tabindex="-1">1. Trust Enhancement Issues in Program Repair</h2><p>2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE)</p><h3 id="00-%E6%91%98%E8%A6%81" tabindex="-1">00 摘要</h3><ul><li>自动化程序修复既是是一项新兴技术,通过学习、搜索和语义分析来自动修复程序中的错误和漏洞。</li><li>然而为了该技术更广泛的使用,对自动生成的补丁的信任是必要的,为此本文对100多位开发人员进行类调查,以了解他们对自动化程序修复的信任问题。</li><li>根据开发者偏好的调查反馈，我们对现有的基于测试套件的程序修复工具进行了定量评估。我们发现它们无法在一个小时的可接受时间范围内生成排名前10的高质量补丁。</li><li>我们的定性研究中开发者的反馈以及对现有修复工具的定量考察观察结果指出了推动程序修复研究的可行见解。具体而言，我们注意到在可接受的时间限制内生成修复补丁很大程度上取决于利用足够丰富的搜索空间的抽象表示</li><li>此外，尽管开发者的额外输入对于生成或排名补丁很有价值，但他们似乎对于大规模的人机交互并不感兴趣。</li></ul><h3 id="01-%E4%BB%8B%E7%BB%8D" tabindex="-1">01 介绍</h3><ul><li><p>令人惊讶的,无论学术界还是工业界,有关开发者对自动化程序修复信任的研究几乎没有(软件去膨胀也是一样)</p></li><li><p>我们希望研究开发者 不愿意使用程序修复的原因 是不是在于 不想依赖于自动生成的代码;这会有深远的影响,因为最近LLM的出现为自动生成代码完成工作带来了希望</p></li><li><p>本文中研究了如何增强开发者对自动生成的补丁的信任的问题,首先确定了与开发者对自动生成的补丁的信任相关的研究问题,分为两个类别</p><ul><li>a. 开发者对自动修复技术的期望,为此研究一下问题<ul><li>RQ1:开发者对应用自动化程序修复（以下简称APR）的兴趣程度有多大，以及他们如何设想使用它？</li><li>RQ2:软件开发人员可以提供额外的输入来增加对生成的补丁的信任度吗？</li><li>RQ3:自动程序修复（Automated Program Repair，APR）产生的补丁能增加开发者的信任的证据有哪些？</li></ul></li><li>b. 现有程序修复技术在满足开发者期望方面可能存在的不足,<ul><li>RQ4:现有自动修复技术能否在可接受的时间范围内(0.5/1/2 小时)确定高质量补丁的位置</li><li>RQ5:在APR的效率上,额外的输入(例如修复位置和额外的测试案例)会带来什么影响</li></ul></li></ul></li><li><p>对于a,我们在100多名专业软件开发人员中进行调查（共有35个问题）,多数为开发人员,少数为高级人员如架构师.结果显示</p><ul><li>开发人员对使用APR生成的少量(不超过10个)补丁持开放态度,但这些补丁要在可接受的时间范围内生成</li><li>此外开发人员愿意接受程序修复方法的标准(可以证明程序修复的正确性),同时也愿意提供额外的输入来推动APR的发展</li><li>开发人员最接受的额外输入是额外的测试用例</li></ul></li><li><p>对于b</p><ul><li>在我们的实验中会严格要求时间不超过1小时</li><li>同时对著名的修复工具进行比较和定量分析,得出结论:搜索空间的表示在在可接受的时间范围内产生合理/正确的补丁中很重要</li><li>最后,我们注意到APR可以视为微观层面的自动代码生成,通过研究APR的信任问题,我们也可以初步了解如何增强自动生成代码的信任</li></ul></li></ul><h3 id="02-%E7%A8%8B%E5%BA%8F%E4%BF%AE%E5%A4%8D%E4%B8%AD%E7%9A%84%E8%A7%84%E8%8C%83" tabindex="-1">02 程序修复中的规范</h3><ul><li><p>本段回顾这些规范讨论他们如何影响补丁的质量</p></li><li><p>测试套件即规范 Test Suites as Specification.</p><ul><li>修复目标:通过测试组件中所有测试用例来修复程序</li><li>问题:带来过拟合,因为测试套件可能不完整</li></ul></li><li><p>约束即规范 Constraints as Specification</p><ul><li>修复目标:修补程序使满足给定的约束</li><li>问题:实际中不能总是可以得到约束条件;同时满足约束后的程序不一定和源程序功能相同</li></ul></li><li><p>代码样式即规范 Code Patterns as Specification</p><ul><li>问题:不能满足功能的正确性</li></ul></li></ul><h3 id="03-%E8%B0%83%E6%9F%A5%E6%96%B9%E6%B3%95" tabindex="-1">03 调查方法</h3><ul><li><p>不可靠的过拟合补丁会导致开发人员对APR工具失去信任。这促使我们询问/调查开发人员如何增强APR以获得他们的信任。我们设计并进行了一项针对软件从业者的调查，旨在回答前三个研究问题（RQ1-3）。</p></li><li><p>调查询问35个问题,分为6类,问题包括 开放性和封闭性问题的组合,采用多项选择或5点李克特量表,问卷使用Microsoft Forms创建和部署</p><ul><li>C1 APR的使用情况（RQ1）：开发人员是否会使用APR，以及如何使用。</li><li>C2 输入/规范的可用性（RQ2）：开发人员可以为APR技术提供哪些类型的输入工件。</li><li>C3 对信任的影响（RQ2）：额外的输入将如何影响对自动生成的补丁的信任。</li><li>C4 解释（RQ3）：开发人员期望自动生成的补丁提供哪些证据/解释。</li><li>C5 APR副产品的使用情况（RQ3）：APR的哪些副产品对开发人员有用，例如用于手动修复错误。</li><li>C6 背景：参与者在软件开发过程中的角色和经验。</li></ul></li><li><p>通过两个渠道发放调查问卷 (1) Amazon Mturk,(2)向全球公司联系人放松私人链接. 随后对回复进行过滤,最终得到了103个有效的回复</p></li><li><p>分析措施:略</p></li></ul><h3 id="04-%E8%B0%83%E6%9F%A5%E7%BB%93%E6%9E%84" tabindex="-1">04 调查结构</h3><h4 id="4.1-developer-engagement-with-apr-(rq1)-%E5%BC%80%E5%8F%91%E8%80%85%E5%9C%A8apr%E7%9A%84%E5%8F%82%E4%B8%8E" tabindex="-1">4.1 Developer engagement with APR (RQ1) 开发者在APR的参与</h4><ul><li><p>本部分研究C1类</p></li><li><p>APR的接受度:</p><ul><li>额外的用户提供的文档，如测试用例，有助于增加对自动生成的补丁的信任。</li><li>但完全的开发者信任需要进行开发者手动的补丁审查,自动化动态和静态分析的测试报告，以及对补丁的解释，可以促进审查工作的进行。</li></ul></li><li><p>APR的交互</p><ul><li>开发者期望与APR的交互量较少，例如仅提供初始文档，测试用例。</li><li>APR应该能够在较短的时间内（30分钟至60分钟内）生成少量（5到10个）的补丁</li><li>APR应该要集成到现有的DevOps流程中，以支持开发工作流程。</li></ul></li></ul><h4 id="4.2-availability%2Fimpact-of-artifacts-(rq2)-%E6%96%87%E6%A1%A3%E7%9A%84%E5%8F%AF%E7%94%A8%E6%80%A7%2F%E5%BD%B1%E5%93%8D" tabindex="-1">4.2 Availability/Impact of Artifacts (RQ2) 文档的可用性/影响</h4><ul><li>本部分研究C2,C3类,调查开发者可以提供哪些额外的文档,以及这些文档对APR信任的影响:额外的测试用例,程序断言,逻辑约束</li><li>此外,参与者希望和工具交互较少,但如果工具提出了一些问题,开发者愿意提供额外的输入</li><li>大多数参与者认为出</li></ul><h4 id="4.3-%E8%A1%A5%E4%B8%81-%E7%9A%84%E8%A7%A3%E9%87%8A%2F%E8%AF%81%E6%8D%AE" tabindex="-1">4.3 补丁 的解释/证据</h4><h3 id="05-%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95" tabindex="-1">05 评估方法</h3><h3 id="06.-%E8%AF%84%E4%BC%B0%E7%BB%93%E6%9E%9C" tabindex="-1">06. 评估结果</h3><h4 id="6.1-apr-within-realistic-boundaries-apr-%E5%9C%A8%E7%8E%B0%E5%AE%9E%E8%8C%83%E5%9B%B4%E5%86%85(rq4)" tabindex="-1">6.1 APR within realistic boundaries APR 在现实范围内(RQ4)</h4><h4 id="6.2-impact-of-additional-inputs-%E9%A2%9D%E5%A4%96%E8%BE%93%E5%85%A5%E7%9A%84%E5%BD%B1%E5%93%8D(rq5)" tabindex="-1">6.2 Impact of additional inputs 额外输入的影响(RQ5)</h4><h3 id="07-threats-to-validity-%E5%AF%B9%E6%9C%89%E6%95%88%E6%80%A7%E7%9A%84%E5%A8%81%E8%83%81" tabindex="-1">07 THREATS TO VALIDITY 对有效性的威胁</h3><h3 id="08-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">08 相关工作</h3><h3 id="09-%E8%AE%A8%E8%AE%BA" tabindex="-1">09 讨论</h3><ul><li><p>在本文中，我们研究了提高开发人员对自动生成的补丁的信任度所涉及的问题。</p><ul><li>通过与100多名实践者的详细研究，我们探讨了开发人员对自动化程序修复工具的期望和容忍程度。</li><li>然后，我们对现有的修复工具进行定量评估，以模拟新手APR用户的经验。我们的定性和定量研究表明，需要探索的方向包括：减少与修复工具的交互、交换生成的测试用例等作为输入和修复工具输出的工件，以及关注抽象搜索空间表示而不是搜索算法框架。每个修复工具都有许多参数，我们只使用了默认参数设置，就像新手用户所期望的那样——我们没有探索各种参数设置。为了了解修复工具的全部功能，未来有必要系统地探索大量的参数设置，并尝试使用不同的超时时间来运行这些工具。</li></ul></li><li><p>自动化代码生成越来越火,但我们是否可以信任这种自动生成的代码,这将是一个吸引人的研究</p></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1.-trust-enhancement-issues-in-program-repair&quot; tabindex=&quot;-1&quot;&gt;1. Trust Enhancement Issues in Program Repair&lt;/h2&gt;
&lt;p&gt;2022 IEEE/ACM 44t</summary>
      
    
    
    
    <category term="论文" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="Software Engineering" scheme="http://example.com/tags/Software-Engineering/"/>
    
    <category term="Software Repair" scheme="http://example.com/tags/Software-Repair/"/>
    
  </entry>
  
  <entry>
    <title>Software Debloating 论文阅读 (1)</title>
    <link href="http://example.com/2023/10/10/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/SoftwareDebloating/Software%20Debloating%20%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB(1)/"/>
    <id>http://example.com/2023/10/10/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/SoftwareDebloating/Software%20Debloating%20%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB(1)/</id>
    <published>2023-10-10T10:07:31.621Z</published>
    <updated>2023-10-31T08:12:01.134Z</updated>
    
    <content type="html"><![CDATA[<h2 id="studying-and-understanding-the-tradeoffs-between-generality-and-reduction-in-software-debloating" tabindex="-1">Studying and Understanding the Tradeoffs Between Generality and Reduction in Software Debloating</h2><p>2022,In 37th IEEE/ACM International Conference on Automated Software Engineering (CCF A类会议)</p><h3 id="00-%E6%91%98%E8%A6%81" tabindex="-1">00 摘要</h3><ul><li><p>现有程序去膨胀方法通过使用配置文件作为识别程序特性的依据,通常是以一组输入的形式提供.具体来说,给定一个程序和输入,这些技术将生成一个在这些输入上正确运行的简化程序</p></li><li><p>然而只关注简化会和输入过拟合,为此我们需要考虑通用性,即未在配置文件中的输入的正确性</p></li><li><p>为此,我们对4种去膨胀方法(3种SOTA,1种基准方法)在25个程序和这些程序的不同输入集上进行了减少和通用性的实证评估。结果表明，这些方法确实会产生对使用的输入过拟合并且通用性较低的程序。</p></li><li><p>基于这些结果，我们还提出了两种新的增强方法，并评估了它们的有效性。这个额外的评估结果显示，这两种方法可以在不显著影响减少程序大小的情况下提高程序的通用性。</p></li><li><p>最后，由于不同的方法具有不同的优势和劣势，我们还提供了指南，以帮助用户根据其特定需求和背景选择最合适的方法。</p></li></ul><h3 id="01-%E4%BB%8B%E7%BB%8D" tabindex="-1">01 介绍</h3><ul><li><p>软件越来越复杂,带来的软件肿胀问题影响软件性能和安全</p></li><li><p>基于输入的指定软件预期功能方法: 通过输入来指定软件预期功能.然而因为输入只能覆盖有限的功能,所以这种方法会导致过拟合</p></li><li><p>因此简化和通用性需要同时考虑,然而这两点有着固有的矛盾,我们的去膨胀方法要在这两点间取得平衡</p></li><li><p>早期去膨胀方法激进的追求大小的缩减,忽略了通用性;</p></li><li><p>两种新的方法考虑了通用性,但未正确地衡量,并且没有 简化和通用性地平衡</p><ul><li><strong>Debop</strong>:(Qi Xin, Myeongsoo Kim, Qirun Zhang, and Alessandro Orso. 2020. Program debloating via stochastic optimization. In 2020 IEEE/ACM 42st International Conference on Software Engineering: New Ideas and Emerging Results (ICSE-NIER).):根据提供的输入评估程序的通用性，而不考虑未观察到的输入</li><li><strong>Razor</strong>(Chenxiong Qian, Hong Hu, Mansour Alharthi, Pak Ho Chung, Taesoo Kim,and Wenke Lee. 2019. RAZOR: A Framework for Post-deployment Software Debloating):使用一个弱（基于崩溃）的预测模型来确定程序的行为正确性，并评估通用性</li></ul></li><li><p>进行一项研究,评估基于输入地去膨胀方法在 简化,通用性及二者权衡之间地表现</p><ul><li>调查了3种面向C程序的SOTA(Chisel,Debop,Razor),1种基准方法(Cov)基于代码覆盖率进行去膨胀。</li><li>应用于包含25个程序的两个不同基准测试集,进行 去膨胀和通用性评估</li><li>评估方法<ul><li>评估去膨胀方法:使用两种简化类型:基于大小和攻击面</li><li>评估通用性方法:使用两种通用类型:正确性(C-通用性) 和 鲁棒性(R-通用性)</li><li>评估二者间的平衡:使用F-score度量</li></ul></li></ul></li><li><p>实验结果显示</p><ul><li>Chesel和Debop并未考虑程序处理未观察到的输入的能力,会较低的C通用性</li><li>Razor通过基于覆盖率的减少和基于启发式的增强,在C通用性上表现较好,但在R通用性上表现较差</li></ul></li><li><p>为了解决这些问题,我们提出了两种增强方法CovF和CovA,旨在提高R,C-通用性和通用性和简化的权衡,这俩种方法均基于Cov,但是CovF基于模糊测试,而CovA基于分析的代码增强,以此识别互补相关的代码,并在去膨胀时简化这些代码</p></li><li><p>具体来说,对于程序p和输入集合I</p><ul><li><ol><li>CovF和CovA首先调用Cov从p中删除未被I执行的代码,得到去膨胀程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{cov}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>.</li></ol></li><li><ol start="2"><li>CovF利用模糊测试生成可以暴露<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{cov}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>鲁棒性问题的输入,从p中恢复代码,消除这些问题;CovA利用静态和动态分析计算得到信息来增强<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{cov}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,即通过静态程序依赖关系,执行频率和覆盖灵活性等</li></ol></li></ul></li><li><p>直观地说,CovF专注于导致<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{cov}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>崩溃地代码,CovA保留与<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{cov}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>相关地代码,由此产生具有增强鲁棒性和正确性地程序</p></li><li><p>实际情况下去膨胀涉及多个相互冲突地目标,本次研究中有四个具体目标</p><ul><li>高的简化度</li><li>攻击面减少</li><li>C-通用性</li><li>R-通用性</li></ul></li><li><p>同时我们所考虑的方法各有优缺点,为此我们提供了一个指南,帮助用户选择方法</p></li></ul><h3 id="02-%E8%83%8C%E6%99%AF" tabindex="-1">02 背景</h3><h4 id="2.1-%E5%9F%BA%E4%BA%8E%E8%BE%93%E5%85%A5%E7%9A%84%E5%8E%BB%E8%86%A8%E8%83%80%E6%96%B9%E6%B3%95" tabindex="-1">2.1 基于输入的去膨胀方法</h4><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>为程序,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>为一组输入的集合,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></eq>为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>在输入为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></eq>上的执行结果.</li><li>给定<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>,基于输入的去膨胀方法通过生成一个简化程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">p&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>,使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mi>I</mi></mrow><annotation encoding="application/x-tex">i\in I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6986em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p&#x27;(i)=p(i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></eq></li></ul><h4 id="2.2-%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95" tabindex="-1">2.2 评估方法</h4><h5 id="2.2.1-%E7%AE%80%E5%8C%96%E5%BA%A6" tabindex="-1">2.2.1 简化度</h5><ul><li>两种简化度度量方法<ul><li>基于大小的简化度(size reduction): <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>r</mi><mi>e</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>−</mo><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">sred(p,p&#x27;)=\frac{size(p) - size(p&#x27;)}{size(p)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal">sre</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5845em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0645em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">ze</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">ze</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">ze</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></eq>为程序大小,有两种度量方法<ul><li><ol><li>语句数</li></ol></li><li><ol start="2"><li>执行时内存的字节数</li></ol></li></ul></li><li>基于攻击面的简化度(attack surface reduction): <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>r</mi><mi>e</mi><mi>d</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>a</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>f</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>−</mo><mi>a</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>f</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><mrow><mi>a</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>f</mi><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">ared(p,p&#x27;)=\frac{asurf(p)-asurf(p&#x27;)}{asurf(p)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">re</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.5845em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0645em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mclose mtight">)</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>s</mi><mi>u</mi><mi>r</mi><mi>f</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">asurf()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></eq>表示用程序包含的面向返回编程（ROP,Return-Oriented-Programming）小工具的数量来衡量程序的攻击面。<ul><li>ROP（Return-Oriented Programming）小工具是一系列机器指令的序列，通常以返回指令结束。攻击者可以利用漏洞（例如堆栈溢出）来覆盖一个小工具的返回地址，从而改变控制流并执行恶意代码。ROP小工具通常用于测量攻击面。我们使用ROPgadget工具来计算ROP小工具的数量。</li></ul></li></ul></li></ul><h5 id="2.2.2-%E9%80%9A%E7%94%A8%E6%80%A7" tabindex="-1">2.2.2 通用性</h5><ul><li>C通用性(correctness-based):收集另一个输入集合<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">I&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>,使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∩</mo><mi>I</mi><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">I&#x27; \cap I = \emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></eq>,有<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msub><mo>∑</mo><mrow><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∣</mi><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">cgen(p&#x27;,I&#x27;)=\frac{\sum_{i&#x27;\in I&#x27;} p&#x27;(i&#x27;)=p(i&#x27;)}{|I&#x27;|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.654em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.134em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5546em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2854em;"><span style="top:-2.2854em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.6068em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8496em;"><span style="top:-2.8496em;margin-right:0.1em;"><span class="pstrut" style="height:2.5556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8496em;"><span style="top:-2.8496em;margin-right:0.1em;"><span class="pstrut" style="height:2.5556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3494em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq>,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(),p&#x27;()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></eq>表示<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo separator="true">,</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">p,p&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>产生的输出,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|I&#x27;|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></eq>表示输入的数量<ul><li>两种不同类型的C通用性<ul><li><ol><li>当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">I&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>为输入全集时,得到的通用性称为 all-input-based c-generality</li></ol></li><li><ol start="2"><li>当𝐼’是一个包含与𝐼相关的输入（例如，用于测试类似功能）,得到的通用性称为 related-input-based c-generality</li></ol></li></ul></li></ul></li><li>R通用性(robustness-based):该指标衡量对于未被观测到的输入的适应能力,反映了程序的可靠性. 同样收集另一个输入集合<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">I&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>,使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∩</mo><mi>I</mi><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">I&#x27; \cap I = \emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msub><mo>∑</mo><mrow><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub><mi>r</mi><mi>o</mi><mi>b</mi><mi>u</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∣</mi><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">rgen(p&#x27;,I&#x27;)=\frac{\sum_{i&#x27;\in I&#x27;} robust(p&#x27;(i&#x27;))}{|I&#x27;|}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.654em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.134em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5546em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2854em;"><span style="top:-2.2854em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.6068em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8496em;"><span style="top:-2.8496em;margin-right:0.1em;"><span class="pstrut" style="height:2.5556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8496em;"><span style="top:-2.8496em;margin-right:0.1em;"><span class="pstrut" style="height:2.5556em;"></span><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3494em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight">ro</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">t</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose mtight">))</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>o</mi><mi>b</mi><mi>u</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">robust()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ro</span><span class="mord mathnormal">b</span><span class="mord mathnormal">u</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span></eq>表示程序运行结束后是否崩溃(如 段错误). 本文通过生产 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq> 的fuzzed 版本得到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">I&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq></li></ul><h5 id="2.2.3-%E7%AE%80%E5%8C%96%E5%BA%A6-%E9%80%9A%E7%94%A8%E6%80%A7-%E6%9D%83%E8%A1%A1" tabindex="-1">2.2.3 简化度-通用性 权衡</h5><ul><li>使用调和平均数,或F-score<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>r</mi><mi>e</mi><mi>d</mi><mo separator="true">,</mo><mi>g</mi><mi>e</mi><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mn>2</mn><mo>⋅</mo><mi>r</mi><mi>e</mi><mi>d</mi><mo>⋅</mo><mi>g</mi><mi>e</mi><mi>n</mi></mrow><mrow><mi>r</mi><mi>e</mi><mi>d</mi><mo>+</mo><mi>g</mi><mi>e</mi><mi>n</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">f(red,gen) = \frac{2\cdot red \cdot gen}{red+gen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">re</span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4133em;vertical-align:-0.4811em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">⋅</span><span class="mord mathnormal mtight">re</span><span class="mord mathnormal mtight">d</span><span class="mbin mtight">⋅</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4811em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq></li></ul><h3 id="03-%E7%9B%B8%E5%85%B3%E5%8E%BB%E8%86%A8%E8%83%80%E6%96%B9%E6%B3%95" tabindex="-1">03 相关去膨胀方法</h3><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>a</mi><mi>z</mi><mi>o</mi><mi>r</mi></mrow><annotation encoding="application/x-tex">Razor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">zor</span></span></span></span></eq> 是 binary-based ,修改程序的二进制码</li><li>其他方法是 source-based ,修改程序源代码</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">CovF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq>都是基于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">Cov</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></eq>的,他们的强化方法也可以用到其它方法上</li></ul><h4 id="3.1-previous-input-based-approaches%3A-chisel%2Cdebop%2Crazor" tabindex="-1">3.1 Previous Input-Based Approaches: ChISEL,DEBOP,RAZOR</h4><ul><li><p>CHISEL是一种基于 强化学习引导(reinforcement-learning-guided),增量调试(delta-debugging-base)的 减量化(reduction-oriented) 去膨胀算法</p></li><li><p>DEBOP 是一种 多目标方法(multi-objective),考虑了三个因素(size reduction,attack surface reduction,generality),并在这三个因素中寻求平衡</p></li><li><p>RAZOR 是一种 基于 追踪(tracing),启发式增强(heuristic-based augmentation)和二进制重写(binary-rewriting) 的 二进制级的精简方法</p></li></ul><h4 id="3.2-cov%3Acoverage-based-debloating" tabindex="-1">3.2 Cov:Coverage-Based Debloating</h4><ul><li><p>给定一个程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>和输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">Cov</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></eq> Instrument(启动,引导?) <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq> 使用<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq> 识别出运行的语句,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">Cov</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></eq>会删除<strong>未被使用的语句</strong>和<strong>使用过但不需要</strong>(比如定义了但未被使用的变量)的语句</p></li><li><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">Cov</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></eq> 原型 使用 llvm-cov 和 gcov:依赖于Clang构建 抽象语法树(AST abstract syntax tree),遍历AST上所有语句,通过分析覆盖报告<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">Cov</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></eq>找到为执行的语句进行删除,同时通过依赖分析,还可以删除其它不必要的语句</p><ul><li><ol><li>“dangling”(悬空指令):没有实际操作且条件没有实际作用的指令,如 if(x==0){}</li></ol></li><li><ol start="2"><li>未使用的变量命名</li></ol></li><li><ol start="3"><li>未使用的标签语句</li></ol></li></ul></li></ul><h4 id="3.3-covf%3A-coverage-based-debloating-with-fuzz-based-augmentation" tabindex="-1">3.3 CovF: Coverage-Based Debloating with Fuzz-Based Augmentation</h4><ul><li><strong>问题</strong>:基于覆盖率的方法通常会消除未执行的代码生成过度简化的代码,即过拟合</li><li><strong>解决</strong>:开发CovF,基于模糊测试增强的方法,提升精简后程序的鲁棒性</li><li><strong>方法描述</strong>:<ul><li><ol><li>给定程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>和输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>,使用<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi></mrow><annotation encoding="application/x-tex">Cov</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></eq>生成精简程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{cov}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ol></li><li><ol start="2"><li>基于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>进行模糊测试生成输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">I&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>,使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">I&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq> 与 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq> 鲁棒性相关,即可以使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{cov}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>崩溃或无法终止</li></ol><ul><li>当前实现中CovF使用 <strong>黑盒模糊测试工具 Radamsa</strong> 应用于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>,生成<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>I</mi><mrow><mi>i</mi><mi>n</mi><mi>i</mi><mi>t</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">I&#x27;_{init}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0106em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ini</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span></eq>然后运行<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{cov}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>对<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>I</mi><mrow><mi>i</mi><mi>n</mi><mi>i</mi><mi>t</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">I&#x27;_{init}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0106em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ini</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span></eq>进行测试,识别出 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>∈</mo><msubsup><mi>I</mi><mrow><mi>i</mi><mi>n</mi><mi>i</mi><mi>t</mi></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">I&#x27;\in I&#x27;_{init}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.791em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0106em;vertical-align:-0.2587em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-2.4413em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ini</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span></span></span></span></eq>使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p_{cov}(I&#x27;)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq>崩溃或无法终止</li></ul></li><li><ol start="3"><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">CovF</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq>保留被<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo separator="true">,</mo><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">I,I&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>执行的语句,删除其它语句,得到最终程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mrow><mi>c</mi><mi>o</mi><mi>v</mi><mi>f</mi></mrow></msub></mrow><annotation encoding="application/x-tex">p_{covf}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ol></li></ul></li><li><strong>注意</strong>:原始程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>可能本来就存在鲁棒性问题,该问题并不是由去膨胀引起的,CovF只是通过模糊测试找到了这些问题</li></ul><h4 id="3.4-cova%3A-coverage-based-debloating-with-analysis-based-augmentation" tabindex="-1">3.4 CovA: Coverage-Based Debloating with Analysis-Based Augmentation</h4><ul><li><strong>问题</strong>:CovF方法可以通过 产生 不合规的输入增强程序的鲁棒性,但这些输入更多锻炼了非核心逻辑,但没有锻炼到其它不同特性<ul><li>例子:对输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>:</mo><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>m</mi><mn>777</mn><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>d</mi><mi>i</mi><mi>r</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">i:&quot;-m 777 testdir&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">m</span><span class="mord">777</span><span class="mord mathnormal">t</span><span class="mord mathnormal">es</span><span class="mord mathnormal">t</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">&quot;</span></span></span></span></eq>很难模糊测试到另一个输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>:</mo><mi mathvariant="normal">&quot;</mi><mo>−</mo><mi>m</mi><mi>a</mi><mo>=</mo><mi>r</mi><mi>w</mi><mi>x</mi><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>d</mi><mi>i</mi><mi>r</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">i&#x27;:&quot;-m a=rwx testdir&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord">&quot;</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ma</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">x</span><span class="mord mathnormal">t</span><span class="mord mathnormal">es</span><span class="mord mathnormal">t</span><span class="mord mathnormal">d</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">&quot;</span></span></span></span></eq>,这两个鲁棒相关,但<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">i&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>涉及到另一个功能<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo>:</mo><mtext>使用符号表示权限而不是数字</mtext><mo separator="true">,</mo><mtext>创建一个目录</mtext></mrow><annotation encoding="application/x-tex">f:使用符号表示权限而不是数字,创建一个目录</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord cjk_fallback">使用符号表示权限而不是数字</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">创建一个目录</span></span></span></span></eq>,因此模糊测试很难保留该功能<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq></li></ul></li><li><strong>方法</strong>:<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>通过 对函数间的依赖关系和精简后的程序运行踪迹 进行 静态和静态分析 推断 需要被增强的相关代码</li><li><strong>方法效果</strong>:<ul><li><ol><li>与CovF相比,直接识别与功能相关的函数并保留</li></ol></li><li><ol start="2"><li>通过对函数进行增强,降低了生成 语法或语义无用的程序(e.g.:有循环但没break的语句)</li></ol></li><li><ol start="3"><li>CovA对每一个函数计算一个增强分数,是对与所需功能的相关估计,该分数基于函数的依赖关系,执行频率和覆盖变化,越高与功能相关性越高</li></ol></li><li><ol start="4"><li>针对不同的输入时,如果一个方法的覆盖率经常发生变化,则该方法需要进行额外的增强</li></ol></li><li><ol start="5"><li>最后我们可以根据得到的分数选择前<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span></eq>个函数进行增强</li></ol></li></ul></li><li><strong>方法具体</strong>:给定程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>和输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>,增强阈值<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>o</mi><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">top_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq><ul><li><ol><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>首先得到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>所有函数,对每个函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>,计算三个分数:<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>f</mi><mi>i</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>−</mo><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mo separator="true">,</mo><mi>f</mi><mi>r</mi><mi>e</mi><mi>q</mi><mi>u</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>y</mi><mo>−</mo><mi>f</mi><mi>r</mi><mi>e</mi><mi>q</mi><mo separator="true">,</mo><mi>f</mi><mi>l</mi><mi>e</mi><mi>x</mi><mi>i</mi><mi>b</mi><mi>i</mi><mi>l</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo>−</mo><mi>f</mi><mi>l</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">specificity-spec,frequency-freq,flexibility-flex</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">ec</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">cy</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">ibi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span></span></span></span></eq>,用map存储;分数详解在后面</li></ol></li><li><ol start="2"><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>对这些分数进行标准化,然后计算归一化分数的平均值左右增强分数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>u</mi><mi>g</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">aug(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">ug</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></eq> <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>u</mi><mi>g</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>s</mi><mi>p</mi><mi>e</mi><msub><mi>c</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mi>r</mi><mi>e</mi><msub><mi>q</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mi>l</mi><mi>e</mi><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">aug(f) = \frac{spec_n(f)+freq_n(f)+flex_n(f)}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">ug</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">e</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">re</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq> ,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>p</mi><mi>e</mi><msub><mi>c</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mi>r</mi><mi>e</mi><msub><mi>q</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mi>l</mi><mi>e</mi><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">spec_n(f),freq_n(f),flex_n(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">re</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></eq>分别表示<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mi>r</mi><mi>e</mi><mi>q</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mi>l</mi><mi>e</mi><mi>x</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">spec(f),freq(f),flex(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">ec</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></eq>的标准化值</li></ol></li><li><ol start="3"><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>对函数按照增强分数进行排序然后生成一个简化的程序,该简化程序包含(1) 经过输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>后精简的代码,和(2) 与前<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mi>o</mi><msub><mi>p</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">top_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>个函数相关的代码</li></ol></li></ul></li><li><strong>分数详解</strong><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>f</mi><mi>i</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Specificity</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Sp</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></eq>(特异性值):<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>通过静态分析,更具体说是以来分析计算得到,表现了函数与程序具体特点的相关程度<ul><li>为了计算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>f</mi><mi>i</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Specificity</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Sp</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>构建了一个函数调用图,对每个函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>计算一个指标,该指标基于 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>依赖函数的数量<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>f</mi><mi>a</mi><mi>n</mi><mo>−</mo><mi>i</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(fan-in)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">an</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">in</span><span class="mclose">)</span></span></span></span></eq>和 依赖<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>的函数的数量<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>f</mi><mi>a</mi><mi>n</mi><mo>−</mo><mi>o</mi><mi>u</mi><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(fan-out)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">an</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></eq>,最后<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>f</mi><mi>i</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Specificity</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Sp</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></eq>计算公式如下 <section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi>p</mi><mi>e</mi><mi>c</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mi>u</mi><mi>t</mi><mi>i</mi><mi>l</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>f</mi><mi>a</mi><mi>n</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><mi>N</mi></mfrac><mo>×</mo><mfrac><mrow><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mfrac><mi>N</mi><mrow><mi>f</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>u</mi><mi>t</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow></mfrac><mo stretchy="false">)</mo></mrow><mrow><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">spec(f) = 1 - util(f) = 1 - \frac{fanin(f) }{N} \times \frac{\log(\frac{N}{fanout(f)+1})}{\log(N)} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">p</span><span class="mord mathnormal">ec</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">anin</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.7183em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7823em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mord mathnormal mtight">an</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">t</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></eqn></section></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></eq>是函数的总数;<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>a</mi><mi>n</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>f</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>u</mi><mi>t</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">fanin(f),fanout(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">anin</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">an</span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></eq>是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>a</mi><mi>n</mi><mo>−</mo><mi>i</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">fan-in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">an</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">in</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>a</mi><mi>n</mi><mo>−</mo><mi>o</mi><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">fan-out</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">an</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span></eq>,分别是 图中调用<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>的函数数量和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>调用的函数数量</li><li>由某论文可知 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mi>t</mi><mi>i</mi><mi>l</mi></mrow><annotation encoding="application/x-tex">util</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span></eq>取值<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">0-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></eq>之间,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>a</mi><mi>n</mi><mi>i</mi><mi>n</mi><mo separator="true">,</mo><mi>f</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>u</mi><mi>t</mi></mrow><annotation encoding="application/x-tex">fanin,fanout</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">anin</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">an</span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span></span></span></span></eq>取值0到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>N</mi><mi mathvariant="normal">∣</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">|N|-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></eq>之间,而当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>a</mi><mi>n</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">fanin(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">anin</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></eq>越大,即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>被更多函数调用,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>a</mi><mi>n</mi><mi>o</mi><mi>u</mi><mi>t</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">fanout(f)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">an</span><span class="mord mathnormal">o</span><span class="mord mathnormal">u</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span></span></span></span></eq>越小,即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>调用的函数越少,则函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>更可能是一个工具类,有很高的实用性指标,所以它有较低的 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>p</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>f</mi><mi>i</mi><mi>c</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Specificity</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Sp</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">i</span><span class="mord mathnormal">c</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></eq>值</li></ul></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>r</mi><mi>e</mi><mi>q</mi><mi>u</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Frequency</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal" style="margin-right:0.03588em;">cy</span></span></span></span></eq>(调用频率):公式<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mi>r</mi><mi>e</mi><mi>q</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><msub><mi>N</mi><mi>f</mi></msub><msub><mi>N</mi><mi>I</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">freq(f,I)=\frac{N_f}{N_I}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">re</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1963em;vertical-align:-0.836em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></eqn></section><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">N_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>表示函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>中被调用的次数,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>I</mi></msub></mrow><annotation encoding="application/x-tex">N_I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>表示<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>中输入的数量</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>l</mi><mi>e</mi><mi>x</mi><mi>i</mi><mi>b</mi><mi>i</mi><mi>l</mi><mi>i</mi><mi>t</mi><mi>y</mi><mo stretchy="false">(</mo><mtext>灵活度</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Flexibility(灵活度)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">Fl</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">ibi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mopen">(</span><span class="mord cjk_fallback">灵活度</span><span class="mclose">)</span></span></span></span></eq>:<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>分析函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>的执行情况<ul><li>对于每个被<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>执行的函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>跟踪对于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>中的每个<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></eq>,被<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></eq>执行的所有语句集合<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S(f,i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span></eq>.如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>没有被<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span></eq>执行,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">S(f,i)=\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></eq></li><li>然后计算在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>中被执行函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>中唯一语句集合<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c(f,I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></eq></li><li>例子:假设<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>中包含3个输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>i</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">i_0,i_1,i_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>被这些输入执行的语句集合分别是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><msub><mi>i</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msub><mi>s</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>S</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><msub><mi>i</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msub><mi>s</mi><mn>0</mn></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>S</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><msub><mi>i</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><msub><mi>s</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>1</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">S(f,i_0)= \{ s_0,s_1 \},S(f,i_1)=\{s_0\},S(f,i_2)=\{s_0,s_1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></eq>,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">s_0,s_1,s_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是三个语句.此时<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">c(f,I)=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">2</span></span></span></span></eq>,因为有两个唯一的语句集合,即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>s</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>1</mn></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mo stretchy="false">{</mo><msub><mi>s</mi><mn>0</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{s_0,s_1\},\{s_0\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>计算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></eq>的灵活性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>l</mi><mi>e</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">flex</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span></span></span></span></eq>公式:<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>l</mi><mi>e</mi><mi>x</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>I</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>c</mi><mo stretchy="false">(</mo><mi>f</mi><mo separator="true">,</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><msub><mi>N</mi><mi>I</mi></msub></mfrac></mrow><annotation encoding="application/x-tex">flex(f,I)=\frac{c(f,I)}{N_I}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4553em;vertical-align:-0.4453em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4453em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq> 其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>I</mi></msub></mrow><annotation encoding="application/x-tex">N_I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>中输入的数量;</li><li>使用机理:对于低 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mi>l</mi><mi>e</mi><mi>x</mi><mi>i</mi><mi>b</mi><mi>i</mi><mi>l</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">flexibility</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">ibi</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></eq>的函数,他在执行未被观察到的输入时,其行为可能会发生变化的概率较小,因此<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq>认为这些函数增强的优先级较低</li></ul></li></ul></li></ul><h3 id="04-%E8%AF%84%E4%BC%B0" tabindex="-1">04 评估</h3><ul><li>探究以下四个问题<br>• RQ1：就减少程度、c-普适性和它们之间的权衡而言，所考虑的方法有何区别？<br>• RQ2：就减少程度、r-普适性和它们之间的权衡而言，所考虑的方法有何区别？<br>• RQ3：当使用越来越多的输入进行精简时，所考虑的方法的表现如何？<br>• RQ4：这些方法的效率如何？</li></ul><h4 id="4.1-%E5%B7%A5%E5%85%B7%E5%AE%9E%E7%8E%B0" tabindex="-1">4.1 工具实现</h4><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>H</mi><mi>I</mi><mi>S</mi><mi>E</mi><mi>L</mi><mo separator="true">,</mo><mi>D</mi><mi>E</mi><mi>B</mi><mi>O</mi><mi>P</mi><mo separator="true">,</mo><mi>R</mi><mi>A</mi><mi>Z</mi><mi>O</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">CHISEL,DEBOP,RAZOR</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.05764em;">SE</span><span class="mord mathnormal">L</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">EBOP</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">ZOR</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>o</mi><mi>v</mi><mi>F</mi><mo separator="true">,</mo><mi>C</mi><mi>o</mi><mi>v</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">CovF,CovA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">A</span></span></span></span></eq></li></ul><h4 id="4.2-%E5%9F%BA%E5%87%86(benchmarks)" tabindex="-1">4.2 基准(Benchmarks)</h4><h5 id="4.2.1-%E5%9F%BA%E5%87%86%E7%A8%8B%E5%BA%8F" tabindex="-1">4.2.1 基准程序</h5><ul><li><p>在我们的评估中，我们使用了两组程序：十个实用程序（Util）和来自SIR基准[2]的15个程序（SIR）。</p><ul><li>这十个实用程序，因为它们在之前的精简方法CHISEL,DEBOP,RAZOR的评估中使用过。对于这些程序，我们使用了它们在Chisel基准[20]中提供的单文件版本。一个单文件程序包含一个C文件，将项目中所有原始C源文件合并在一起。</li><li>一组15个程序，它们是SIR基准提供的所有C程序。它们代表了不同类型的程序，包括词法分析器（printtokens）、实用程序（例如make）、Unix shell（bash）和文本编辑器（vim）。我们选择这些基准程序也是因为它们有大量（从几百到几千个）相关的测试。拥有大量的测试能够有效评估精简程序的普适性，并对使用不断增加的输入进行精简的效果进行全面调查。对于SIR程序，我们使用CIL合并工具[1]为它们获取了用于精简的单文件版本。</li></ul></li><li><p>下表表示了25个程序的基准:</p><ul><li>从属 belong (Bench)</li><li>名字 name (Program)</li><li>代码行数 size in lines of code (LOC)</li><li>函数数量 number of functions (#Func)</li><li>语句数量  statements (#Stmt)</li></ul></li><li><p>SIR基准包含七个程序(SSIR),比另外八个小(LSIR),我们应该重点分析方法在使用程序和大型程序上的效果,因为去膨胀技术更适用于大程序</p></li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/%5Csoftware%20debloating%20%E8%AE%BA%E6%96%87/(1)_1_1.png" alt></p><h5 id="4.2.2-%E8%BE%93%E5%85%A5" tabindex="-1">4.2.2 输入</h5><ul><li><p>在对程序进行去膨胀和通用性评估时,由于需要大量的输入,所以没有使用与程序关联的人为创建的小的数据集,而是通过谷歌搜索,在网络上获得真实用户的输入</p></li><li><p>实用工具输入</p><ul><li>具体而言,我们为每个实用工具收集十个输入集,均来自真实用户,网站来源见引用</li><li>下1介绍了输入的统计信息，包括#TotalIn（总输入数）、#MinIn（所有输入集中最小输入数的集合𝑆𝑚𝑖𝑛）、#MaxIn（所有输入集中最大输入数的集合𝑆𝑚𝑎𝑥）和#AvgIn（所有输入集的平均输入数）,程序的总输入数（#TotalIn）</li></ul></li><li><p>SIR程序输入</p><ul><li>我们将与程序相关的输入集<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">I_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>分为两个子集<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">I_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">I_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,用于评估去简化效果和正确性</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">I_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>:从<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">I_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中随机选择10个输入,使其大小约等于实用工具输入的数量</li><li>额外的三个<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">I_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>:分别占<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>u</mi></msub></mrow><annotation encoding="application/x-tex">I_u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><mi mathvariant="normal">%</mi><mo separator="true">,</mo><mn>20</mn><mi mathvariant="normal">%</mi><mo separator="true">,</mo><mn>30</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">10\%,20\%,30\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9444em;vertical-align:-0.1944em;"></span><span class="mord">10%</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">20%</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">30%</span></span></span></span></eq>,并获得相应的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">I_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>集合,以评估输入大小与简化效果之间的关系</li></ul></li><li><p>为了评估基于相关输入的通用性，我们针对不同的程序使用了不同的方法来识别相关输入。</p><ul><li>对于接受带选项的命令行输入的程序（例如bzip2），如果它们使用相同的选项集，我们认为两个输入是相关的，这种方法类似于Razor [49]的评估中所使用的方法。</li><li>对于bash和vim，提供的输入已经使用标签标记了它们所使用的功能（例如，算术功能的标签为“arith”）。因此，对于这些输入，我们使用标签来确定它们之间的相关性。</li><li>对于所有其他程序，即SSIR程序，我们认为所有输入都是相关的。</li></ul></li><li><p>为了评估鲁棒性,我们使用了Radamsa [53]和AFL [4]基于去除冗余代码的输入来生成一组模糊输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>𝐼</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">𝐼&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq></p></li></ul><h5 id="4.2.3-%E6%A0%A1%E9%AA%8C%E5%99%A8" tabindex="-1">4.2.3 校验器</h5><ul><li>我们使用校验器来评估程序的行为正确性和稳健性<ul><li>校验器比较 简化程序的输出和原始程序的输出</li><li>对于 实用程序,也要考虑程序的 退出值,打印的消息,所生成的文件;对于文件,会检查文件内容(必要时需要检查文件的权限)</li><li>对于SIR程序,使用其原始的对应的校验器;此外我们开发了一个校验器来评估鲁棒性</li><li>为了确定程序是否崩溃，oracle会检查一系列表示异常终止的退出代码</li></ul></li></ul><h4 id="4.3-%E9%85%8D%E7%BD%AE" tabindex="-1">4.3 配置</h4><h5 id="4.3.1-%E8%AF%84%E4%BC%B0%E6%96%B9%E6%B3%95" tabindex="-1">4.3.1 评估方法</h5><ul><li><p>对与每个实用程序 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>,获得10组输入,使用 去膨胀方法<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></eq>基于 输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">I_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>生成 简化程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">p&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>测量这些程序的简化程度、通用性和权衡得分，并计算它们的平均值作为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>𝑇</mi></mrow><annotation encoding="application/x-tex">𝑇</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></eq>所实现的得分。</p><ul><li>为了衡量c-generality，我们对于每个未用于去冗余的输入集合（共九组），执行<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>𝑝</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">𝑝&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>，并计算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>𝑝</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">𝑝&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>正确行为的输入比例的平均值</li></ul></li><li><p>对于每个SIR程序 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>,使用 去膨胀方法<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></eq>基于 输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">I_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>生成 简化程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">p&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>\</p><ul><li>基于测试输入<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">I_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>评估<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">p&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>的正确性</li><li>基于模糊测试输入和校验器<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>I</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">I&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>评估<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">p&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></eq>的鲁棒性</li></ul></li></ul><h5 id="4.3.2-%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE" tabindex="-1">4.3.2 参数设置</h5><ul><li>使用默认参数运行 CHISEL,DEBOP,RAZOR<ul><li>由于CHISEL和DEBOP运行时间长,设置时间上限6h</li><li>RAZOR在四个级别上进行增强并进行实验</li></ul></li><li>对于CovF,从输入集选择最多100个输入,使用Radamsa为每个选定的输入生成10模糊测试输入进行去膨胀</li><li>对于CovA,试验了15个K值,比较不同的结果</li><li>为了衡量通用性,我们设置了10s的超时,因为一个去膨胀程序对一个输入可能不会停止</li></ul><h5 id="4.3.3-%E5%B9%B3%E5%8F%B0" tabindex="-1">4.3.3 平台</h5><ul><li>Ubuntu-18.04机器上运行的260GB RAM和32 AMD-Opteron 1.4GHz处理器,该机器需要超过284小时(11天)才能完成所有实验的去膨胀工作</li></ul><h4 id="4.4-%E6%8E%A2%E7%A9%B6%E9%97%AE%E9%A2%98%E4%B8%80%3A%E7%AE%80%E5%8C%96%E5%BA%A6%2C%E6%AD%A3%E7%A1%AE%E6%80%A7%E5%92%8C%E6%9D%83%E8%A1%A1" tabindex="-1">4.4 探究问题一:简化度,正确性和权衡</h4><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_1_2.png" alt></p><h5 id="4.4.1-chisel%E5%92%8Cdebop%2Ccov-%E6%AF%94%E8%BE%83" tabindex="-1">4.4.1 CHISEL和DEBOP,COV 比较</h5><ul><li>CHISEL和DEBOP的正确性较低,低于0.6,即这两种方法容易产生过拟合的程序</li><li>Tradeoff中,CHISEL和DEBOP的基于大小的F-score较低,即这两种方法在正确性和简化度的平衡不如Cov</li><li>原因:<ul><li><ol><li>CHISEL基于增量调试,在删除代码时非常激进.但其增量调试费时,所以在大型程序上CHISEL无法修建大量不需要的代码</li></ol></li><li><ol start="2"><li>DEBOP依赖随机优化,基于Cov的代码再进行删除,因此DEBOP不会增加COV的正确性,但可以提高简化度,所以DEBOP会生产高简化度和低正确性的程序</li></ol></li></ul></li><li>对于实用程序,CHISEL和DEBOP移除的ROP gadgets比Cov多,导致RelAF和AllAF分数略高.(ROP gadgets，全称Return Oriented Programming gadgets，指的是一段以汇编指令&quot;ret&quot;结尾的一小段指令序列。这些 gadgets 可以被用来修改某些地址的内容，从而有效地控制程序的执行流程。本文即指攻击面)<ul><li>原因:<ul><li><ol><li>DEBOP和CHISEL在执行路径中删除语句,可以有效减少ROP gadgets</li></ol></li><li><ol start="2"><li>DEBOP将ROP gadgets的减少列为目标之一</li></ol></li></ul></li><li>对于大程序,由于CHISEL费时,其减少攻击面的能力降低</li></ul></li></ul><h5 id="4.4.2-covf%2C-cova%2C-and-others-%E6%AF%94%E8%BE%83" tabindex="-1">4.4.2 CovF, CovA, and others 比较</h5><ul><li>CovF和CovA的正确性高于Cov,CovA尤其明显,且CovA时正确性最高的方法;CovF更专注于鲁棒性,所以正确性较低于CovA</li><li>CovF和CovA的简化程度小于Cov,但在4.5中可以看到这两个方法可以在不影响简化程度的情况下显著提高程序通用性</li><li>CovF和CovA的基于攻击面的F分数较低,因为方法基于Cov,无法有效减少攻击面;优化Cov以减少攻击面,这可能是未来的一个研究方向</li></ul><h5 id="4.4.3-razor%E5%92%8C%E5%9F%BA%E4%BA%8E%E6%BA%90%E4%BB%A3%E7%A0%81%E7%9A%84%E6%96%B9%E6%B3%95%E6%AF%94%E8%BE%83" tabindex="-1">4.4.3 RAZOR和基于源代码的方法比较</h5><ul><li>RAZOR时基于二进制的方法,其获得了高简化和高正确的分数,即其在两个基准测试中的大小和攻击面的F分都是最高的,原因是<ul><li><ol><li>指令级别的操作</li></ol><ul><li>因此RAZOR的搜索空间比基于源代码的大,能找到更多更好的权衡空间.</li><li>同时因为RAZOR能够在指令级别上修改编译器带来的冗余代码,将其和基于源代码的方法相比可能不恰当.</li><li>为此我们使用RAZOR基于覆盖率的方法(称为RazorCov)生成没有增强的简化程序,发现通过修建指令生成的程序内存大小和攻击面都比Cov小,从而有更大的增强空间</li></ul></li><li><ol start="2"><li>使用增强来补充输入中未被测试到的代码</li></ol></li></ul></li></ul><h5 id="4.4.5-%E5%9C%A8%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8A%E7%9A%84%E6%AF%94%E8%BE%83" tabindex="-1">4.4.5 在小程序上的比较</h5><ul><li>Cov没有达到高简化分数和高F分数,CovA和CovF简化分数提高但F分依然不高.这似乎意味着基于源代码的方法在小型程序上的效果不好</li><li>Chisel和Debop简化分数和F分数都很高,因为程序搜索空间小. Razor因为基于二进制,所以简化分数和F分数都很高</li></ul><h4 id="4.5-%E6%8E%A2%E7%A9%B6%E9%97%AE%E9%A2%98%E4%BA%8C%3A%E7%AE%80%E5%8C%96%E5%BA%A6%2C%E9%B2%81%E6%A3%92%E6%80%A7%E5%92%8C%E6%9D%83%E8%A1%A1" tabindex="-1">4.5 探究问题二:简化度,鲁棒性和权衡</h4><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_1_3.png" alt></p><ul><li><p>上图第二列展示了所有方法的平均鲁棒性分数,这些分数基于Radamsa生成的模糊输入计算而成.同时表格显示了三种 简化分数和权衡分数</p></li><li><p>结论</p><ul><li>CovF实现了最高的鲁棒性,并且简化分数和Cov并没有差太多</li><li>基于输入的方法对于未观察到的输入鲁棒性都很低,因为其去冗余的输入只反映了程序的典型使用情况</li><li>Razor生成的简化程序鲁棒性最低,且RazorCov的鲁棒性更低,其对输入过拟合严重<ul><li>原因:大多数程序中,Razor的增强与稳定性无关,只会追求更好的简化程度,这会排除一些防御性检查,如printf和exit等,</li></ul></li></ul></li><li><p>还使用了AFL [4] 评估测试每种方法生成的简化程序的鲁棒性,结果显示CovF具有最高的r-generality（0.87），其次是Chisel，其r-generality为0.75，其他方法的得分均为0.67。CovF也是实现最高基于大小的权衡得分的方法：SF为0.76，MF为0.71。这些结果进一步证实了CovF的有效性。</p></li><li><p>还使用Radamsa生成的模糊输入对SSIR中的所有小程序进行了测试，并发现对于这些程序，所有方法都实现了较高的r-generality，其中CovF的得分最高（0.96），而Razor的得分最低（0.88）。与我们在第4.4.4节中展示的情况类似，CovF和CovA使用的基于源代码的增强策略在小程序中往往是无效的，因为这些程序只能进行有限的代码减少。</p></li></ul><h4 id="4.6-%E6%8E%A2%E7%A9%B6%E9%97%AE%E9%A2%98%E4%B8%89%3A%E5%BD%93%E4%BD%BF%E7%94%A8%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%9A%E7%9A%84%E8%BE%93%E5%85%A5%E8%BF%9B%E8%A1%8C%E7%B2%BE%E7%AE%80%E6%97%B6%EF%BC%8C%E6%89%80%E8%80%83%E8%99%91%E7%9A%84%E6%96%B9%E6%B3%95%E7%9A%84%E8%A1%A8%E7%8E%B0" tabindex="-1">4.6 探究问题三:当使用越来越多的输入进行精简时，所考虑的方法的表现</h4><ul><li>实验不同数量的输入时不同的简化方法的表现</li><li>使用SIR基准进行了这个实验,因为其有大量的测试集</li><li>对每个程序<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></eq>,创建三个输入集<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">I_1,I_2,I_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>0</mn></msub><mo>⊂</mo><msub><mi>I</mi><mn>1</mn></msub><mo>⊂</mo><msub><mi>I</mi><mn>2</mn></msub><mo>⊂</mo><msub><mi>I</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">I_0\subset I_1 \subset I_2 \subset I_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,并且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>I</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">I_1,I_2,I_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的大小分别为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><mi mathvariant="normal">%</mi><mo separator="true">,</mo><mn>20</mn><mi mathvariant="normal">%</mi><mo separator="true">,</mo><mn>30</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">10\%,20\%,30\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9444em;vertical-align:-0.1944em;"></span><span class="mord">10%</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">20%</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">30%</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">I_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是之前实验的10个输入集;使用这些输入集进行去膨胀,用剩下的输入集进行正确性评估,使用Radamsa生成的模糊输入进行鲁棒性评估</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/software%20debloating%20%E8%AE%BA%E6%96%87/(1)_1_4.png" alt></p><ul><li>上图展示了不同方法在减少（mred和aread）、通用性（allcgen, relcgen, 和 rgen）以及权衡（从mf-allcgen到af-rgen）方面的平均得分</li><li>结论<ul><li>当输入规模增大,简化分数会降低,但正确性会提高</li><li>当输入规模增大,鲁棒性不会显著提升,同时由于鲁棒性的增加少于代码的增加,对应的F分可能会下降</li></ul></li></ul><h4 id="4.7-%E6%8E%A2%E7%A9%B6%E9%97%AE%E9%A2%98%E5%9B%9B%3A%E8%BF%99%E4%BA%9B%E6%96%B9%E6%B3%95%E7%9A%84%E6%95%88%E7%8E%87" tabindex="-1">4.7 探究问题四:这些方法的效率</h4><ul><li>Chisel和Debop最耗时,平均需要4.7小时和5.4小时来生成一个去臃肿的程序</li><li>Razor、Cov和CovA的效率更高，平均只需要0.2分钟、0.4分钟和0.6分钟来生成一个去臃肿的程序。</li><li>因为基于覆盖的方法不需要像Chisel和Debop那样反复执行相同的输入</li><li>此外,增强过程也是高效的,除CovF需要模糊测试外,但也只要3.3分钟</li></ul><h4 id="4.8-%E8%AE%A8%E8%AE%BA" tabindex="-1">4.8 讨论</h4><ul><li><p>选择软件去膨胀方法的建议</p><ul><li>Razor在减少大小和c-通用性之间取得了良好的平衡，但生成的去臃肿程序可能存在鲁棒性问题，即在未观察到的输入上执行时可能会崩溃或无法终止。因此，如果鲁棒性很重要且程序源代码可用，用户应考虑使用基于源代码的方法。</li><li>其中，Cov是一种简单的方法，可以产生合理的结果。在鲁棒性是优先考虑的情况下，应该优先选择CovF。</li><li>相反，如果主要目标是高正确性通用性，用户应考虑使用CovA。</li><li>如果特别关注大小减小并且效率不是问题，Chisel是一个不错的选择，因为它的去臃肿过程可能需要花费几个小时才能完成，特别是对于大型程序。</li><li>最后，如果去臃肿的主要原因是减少攻击面，应该使用Debop。</li></ul></li><li><p>我们的研究证明了在去臃肿时考虑减少和通用性的重要性，并为在不显著降低减少程度的情况下提高通用性提供了解决方案</p></li><li><p>这里的一个困难是很难衡量实际的程序通用性并确定改进它的方法</p></li><li><p>另一个可能的研究方向是,探索一种 可以指导 ,基于输入的去膨胀方法的, 估计通用性的技术</p></li></ul><h4 id="4.9-%E6%9C%89%E6%95%88%E6%80%A7%E5%A8%81%E8%83%81" tabindex="-1">4.9 有效性威胁</h4><ul><li>内部威胁:使用了作者提供的Chisel、Debop和Razor的实现，并对我们实施的方法进行了仔细测试</li><li>外部威胁:评估基于一组包含10个Unix实用程序和15个SIR程序的数据集，我们收集了不同的输入集合。需要进行额外的实证研究来评估我们的结果是否适用于其他程序和输入。</li></ul><h3 id="05-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">05 相关工作</h3><ul><li><p>除基于输入的方法外,还有一些其它方法</p><ul><li>基于人工注释的特征规范,基于人工开发的领域采样,数据配置和调查 的方法</li><li>针对特定类型的应用程序的 (Chrome浏览器,Android应用程序)的方法</li><li>不移除不需要的功能,而是以来静态分析删除未使用的代码或裁剪指令和库的方法</li><li>在给定领域进行程序大小缩减(如容器,服务器系统,Java应用程序等)</li><li>或专注于特定任务(如安全性检查,API特化等)</li></ul></li><li><p>Cimplifier方法,特别是在对容器的去膨胀时,使用了类似于CovF的技术</p><ul><li>但CovF使用模糊测试提高程序鲁棒性,生成额外的输入</li><li>Cimplifier使用符号执行来获取额外的输入，以改善对所需系统资源的识别。</li></ul></li></ul><h5 id="%E5%88%86%E6%94%AF%2F%E8%B7%AF%E5%BE%84-%E9%A2%84%E6%B5%8B" tabindex="-1">分支/路径 预测</h5><ul><li>CovA于CovF的增强旨在简化程序中保留正确的代码,所以本文的研究也与 静态 分支/路径 预测有关<ul><li>但是,静态分支/路径预测的目标是提高程序的性能,而不是简化程序,所以他们不需要考虑简化和泛化的权衡</li><li>且原本预测更多基于 启发式方法和机器学习,本文预测 基于模糊测试和静态和动态分析</li></ul></li></ul><h5 id="%E7%89%B9%E5%BE%81%E8%AF%86%E5%88%AB%E5%AE%9A%E4%BD%8D" tabindex="-1">特征识别定位</h5><ul><li>本文去膨胀算法依赖于一组输入来识别所需的特征及对应的代码,这与特征识别定位的方法有关,这些方法可以用于简化对程序的理解,对去膨胀算法有帮助</li></ul><h5 id="%E7%A8%8B%E5%BA%8F%E4%BF%AE%E5%A4%8D" tabindex="-1">程序修复</h5><ul><li>类似于去膨胀算法,依赖于一组测试用例来指定程序的正确行为.因此同样可能会出现过拟合并,或修复错误</li><li>解决此类问题的技术包括 生成新的测试用例,根据启发式方法优先考虑补丁,使用概率模型</li></ul><h3 id="06-%E7%BB%93%E8%AE%BA%E5%92%8C%E6%9C%AA%E6%9D%A5%E5%B7%A5%E4%BD%9C" tabindex="-1">06 结论和未来工作</h3><ul><li><p>以往的去膨胀方法主要关注于简化程序,而忽略了程序的通用性和鲁棒性,为了填补这一空白,本文进行了研究</p><ul><li><ol><li>将三种SOTA的去膨胀方法和基础方法应用于25个程序和这些程序不同的输入集</li></ol></li><li><ol start="2"><li>系统的评估了他们在 简化程度,泛化程度以及二者间权衡程度的比较</li></ol></li></ul></li><li><p>同时,本文提出了两个新的方法,实验证明了他们在不影响简化程度的情况下,在简化程度和泛化程度取得了更好的权衡</p></li><li><p>本文的研究还表明了不同方法间的优势和劣势,我们提供了一份指南帮助用户根据需求来选择最合适的去膨胀方法,同时我们的研究也为未来的研究提供了方向</p></li><li><p>未来工作</p><ul><li>如何根据程序大小,输入覆盖及其它因素动态调整简化的程度</li><li>通过包括更多程序,额外的模糊测试 进行鲁棒性评估</li><li>进行用户研究,评估在实际场景使用去膨胀技术的可行性</li><li>调查在工业实际中去膨胀方法的使用情况</li></ul></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;studying-and-understanding-the-tradeoffs-between-generality-and-reduction-in-software-debloating&quot; tabindex=&quot;-1&quot;&gt;Studying and Underst</summary>
      
    
    
    
    <category term="论文" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="Software Engineering" scheme="http://example.com/tags/Software-Engineering/"/>
    
    <category term="Software Debloating" scheme="http://example.com/tags/Software-Debloating/"/>
    
  </entry>
  
  <entry>
    <title>八股</title>
    <link href="http://example.com/2023/09/11/%E6%9D%82%E8%AE%B0/%E5%85%AB%E8%82%A1/"/>
    <id>http://example.com/2023/09/11/%E6%9D%82%E8%AE%B0/%E5%85%AB%E8%82%A1/</id>
    <published>2023-09-11T14:47:58.326Z</published>
    <updated>2023-09-11T15:07:50.487Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.jsdelivr.net/npm/katex/dist/katex.min.css&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.jsdelivr.net/npm/markdown-</summary>
      
    
    
    
    <category term="文章" scheme="http://example.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="面试" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>P2PFaaS</title>
    <link href="http://example.com/2023/08/16/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/P2PFaaS/"/>
    <id>http://example.com/2023/08/16/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/P2PFaaS/</id>
    <published>2023-08-16T13:48:11.677Z</published>
    <updated>2023-06-06T01:30:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.sciencedirect.com/science/article/pii/S2352711022002084">论文连接</a></p><h2 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h2><p>在边缘和雾计算环境中，通常会设计和测试实施调度和负载均衡解决方案的分布式算法。通常适用于该环境的操作范式要求用户调用最近的节点来执行任务，并且由于服务必须在一组节点之间分布，使用FaaS（函数即服务）的无服务器范式是最有前景的策略。基于这些前提条件，我们设计并实现了一个名为P2PFaaS的框架。该框架基于Docker容器构建，允许在一组节点之间实现完全分散的调度或负载均衡算法。通过依赖三个基本服务，即调度服务、发现服务和学习器服务，该框架允许实现任何类型的调度解决方案，即使基于强化学习。最后，该框架提供了一个即插即用的解决方案，可以在x86服务器和基于ARM的边缘节点（例如树莓派）上安装和测试。</p><h2 id="%E8%BD%AF%E4%BB%B6%E6%8F%8F%E8%BF%B0" tabindex="-1">软件描述</h2><h3 id="1.1-%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84" tabindex="-1">1.1 软件架构</h3><p><img src="/images/%E8%AE%BA%E6%96%87/P2PFaaS/%E6%9E%B6%E6%9E%84%E5%9B%BE.png" alt></p><ul><li>调度器服务在端口18080上监听，并作为框架的入口，客户端可以通过REST API请求执行函数。</li><li>学习器服务在端口19020上监听，并实现了用于调度器服务进行调度决策的强化学习模型的训练和推断。</li><li>发现服务在端口19000上监听，并实现了节点的发现。</li></ul><h3 id="1.2-%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B" tabindex="-1">1.2 操作流程</h3><p><img src="/images/%E8%AE%BA%E6%96%87/P2PFaaS/%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B.PNG" alt></p><ol><li>客户端调用URL请求执行一个函数</li><li>采取操作（这里如果配置了基于RL的调度器，需将当前状态传递给 学习器服务，然后获得操作）</li><li>开始操作<ol><li>可将请求转发到另一节点，通过http来调用</li><li>可将请求加入本地队列等待执行</li><li>拒绝请求</li></ol></li><li>最终的函数执行通过向函数的容器发出http来调用，执行完毕后，输出数据转发给客户端</li><li>如果调度器基于RL，此时可进行模型的训练，调整模型参数</li></ol><h4 id="%E8%B0%83%E5%BA%A6%E6%9C%8D%E5%8A%A1" tabindex="-1">调度服务</h4><p>调度器模块是用Go语言编写的。选择这种编程语言是因为它专门为Web服务器的开发而设计。<br><img src="/images/%E8%AE%BA%E6%96%87/P2PFaaS/%E8%B0%83%E5%BA%A6%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.jpg" alt></p><ul><li><p>API模块：API模块在调度器服务中扮演重要角色，它处理来自客户端的API请求。</p><ul><li>首先，它负责准备函数执行请求，包括根据请求参数和配置信息构建请求，并将其传递给实际的调度器进行处理。</li><li>其次，API模块还负责为配置更新准备有效载荷，即根据客户端的请求更新调度器的配置信息。</li></ul></li><li><p>调度服务容器启动时，会启动两个线程</p><ul><li>Web服务器线程：负责处理HTTP API调用</li><li>工作线程：负责管理内部任务队列</li></ul></li><li><p>调度器模块</p><ul><li>设计目的：允许调度算法的可互换性，为此设置了调度接口，可以完成调度算法的实例化和配置<pre><code class="language-Go">type scheduler interface &#123;GetFullName() stringGetScheduler() *types.SchedulerDescriptorSchedule(req *types.ServiceRequest) (*JobResult, error)&#125;</code></pre></li><li>调度函数实现对函数执行请求的有效调度，可以采取三种可能操作<ul><li>拒绝请求：返回HTTP错误码500并关闭客户端请求</li><li>在当前节点执行请求：在本地进行排队</li><li>将请求转发到其它节点：再次使用调度函数来调度请求，但这次请求标记为“External”，请求的转发通过&quot;API/Peer&quot;模块实现</li></ul></li></ul></li><li><p>队列模块：限制并行运行函数的数量，通常所说的节点中可以执行的并行任务数量的参数称为K。队列由一个实现生产者-消费者模式的线程管理。</p><ul><li>采用上述方式实现的队列限制了并行性，针对没有相关计算能力的边缘设备</li><li>这种队列的设计与M/M/1/K和M/M/K/K队列模型相匹配，这些模型可以帮助设计者确定最佳的系统参数，以实现所需的性能和可靠性。</li></ul></li><li><p>FaaS管理器模块：负责将函数执行请求转发到正确的FaaS函数容器。</p><ul><li>该模块允许进一步解耦，可以使用不同的FaaS容器技术</li><li>Docker自动完成将容器名称转换为FaaS容器的IP地址名称解析</li><li>该模块保证请求被正确地路由到相应的FaaS容器，从而实现高效的函数执行。</li></ul></li><li><p>配置器模块：管理启动时的配置（称为 “静态”）和运行时的配置（称为 “动态”）</p></li><li><p>日志模块：过多的日志记录可能会减慢服务速度并增加任务的延迟</p></li><li><p>调度器服务模块和学习器服务模块：实现服务间的交互</p></li></ul><h4 id="%E5%AD%A6%E4%B9%A0%E5%99%A8%E6%9C%8D%E5%8A%A1" tabindex="-1">学习器服务</h4><p><img src="/images/%E8%AE%BA%E6%96%87/P2PFaaS/%E5%AD%A6%E4%B9%A0%E5%99%A8%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84.jpg" alt></p><ul><li><p>该服务实现强化学习模型，用于进行调度决策</p></li><li><p>强化学习模型分为三个实体</p><ul><li>状态：以字符串形式编码，包含当前节点的负载</li><li>动作：被映射为调度动作</li><li>奖励：奖励驱动学习过程，可以取决于总任务的时间<ul><li>例如，如果任务在特定时间完成，可以给予正面奖励，为此，需要客户端能够训练模型，因为只有当函数输出到达客户端才能知道最终延迟</li></ul></li></ul></li><li><p>学习实体：封装成一个数据结构，包括</p><ul><li>EID：一个递增的编号</li><li>状态：一个字符串</li><li>动作：一个浮点数</li><li>奖励：一个浮点数</li></ul></li><li><p>学习线程：学习过程由学习线程执行，它负责在所有所需的实体都存在时延迟训练。（这里不是很懂强化学习）</p></li><li><p>训练模型：跳了</p></li></ul><h4 id="%E5%8F%91%E7%8E%B0%E6%9C%8D%E5%8A%A1" tabindex="-1">发现服务</h4><ul><li>使用Go语言编写，目的是让节点了解他的邻居。</li><li>该服务基于八卦算法（gossip algorithm）在启动时必须通过另一个节点的IP（称为“初始服务器”）进行配置。</li></ul><h2 id="%E5%BD%B1%E5%93%8D" tabindex="-1">影响</h2><ul><li><p>这项工作中提出的P2PFaaS框架可能是第一个开源可用的框架，它通过采用完全去中心化（对等）方案，实现了节点之间的分布式调度和负载平衡算法的实现。</p></li><li><p>该框架对于该领域的研发人员(设计和测试实施调度和负载均衡解决方案的分布式算法),可以用于测试设计的算法是否能够在真实设备上进行可能的实现，，以及在哪些条件下它们可以工作</p></li><li><p>由于代码的可移植性，P2PFaaS也很容易在多个SoC计算机（如树莓派）上部署，通过利用OpenBalena来避免使用虚拟机，以便在真实计算机设备上测试算法</p></li><li><p>在真实设备上测试这种类型的算法对研究和特别是算法设计有明显的影响。真实环境的一系列条件和特殊特征往往无法通过模拟和数学模型轻易掌握。</p></li></ul><h2 id="%E7%BB%93%E8%AE%BA" tabindex="-1">结论</h2><ul><li><p>本论文中，我们介绍了P2PFaaS框架，这是一个软件套件，可用于在一组真实节点之间测试和评估调度和负载均衡算法。我们展示了该框架的基本特点，包括模块化、可移植性以及通过设计的接口轻松更改核心调度算法的可能性。我们还详细介绍了组成框架的三个服务：调度器、学习器和发现服务。</p></li><li><p>对该框架的进一步改进主要朝着两个方向进行。</p><ul><li>第一个方向是改进服务迁移的管理，通过支持动态函数分配和可用性来实现。</li><li>第二个方向涉及绿色边缘计算，目前正在开发额外的模块，以允许评估考虑节点能量方面的调度和负载均衡算法。</li></ul></li></ul><h2 id="%E4%B8%93%E6%9C%89%E5%90%8D%E8%AF%8D%E7%90%86%E8%A7%A3" tabindex="-1">专有名词理解</h2><h3 id="%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97%E5%92%8C%E9%9B%BE%E8%AE%A1%E7%AE%97" tabindex="-1">边缘计算和雾计算</h3><ul><li><p>边缘计算（Edge Computing）侧重于将计算和数据处理推向物理世界的边缘，即接近数据生成源头的位置。边缘计算将计算任务和数据处理分布在边缘设备、边缘节点或边缘服务器上，以实现低延迟、实时性和快速响应的数据处理。它强调将计算资源尽可能靠近数据源，以减少数据传输延迟和网络拥塞，并支持一些特定的边缘应用场景，如智能交通、物联网、智能工厂等。边缘计算更注重在边缘节点上进行本地计算和决策，将关键的数据处理任务尽可能地下沉到边缘，减少对云端的依赖。</p></li><li><p>雾计算（Fog Computing）是一种介于边缘和云之间的计算模型，弥补了边缘设备和云数据中心之间的距离。雾计算引入了中间层的雾节点（Fog Node）或边缘节点（Edge Node），这些节点位于边缘设备和云数据中心之间，用于处理边缘设备生成的数据和提供边缘服务。雾计算的目标是解决传统云计算模型中的一些挑战，如高延迟、带宽限制和网络拥塞。它通过将计算和存储资源推向边缘，减少数据传输到云端的时间，提供更快速的数据处理和更高带宽的支持。</p></li><li><p>虽然边缘计算和雾计算有一些相似之处，例如将计算资源放置在边缘设备附近、提供低延迟的数据处理等，但也存在一些区别：</p><ul><li><p>范围和位置：边缘计算更注重在物理世界的边缘部署计算资源，即离数据生成源头较近的位置。而雾计算更关注于边缘设备和云数据中心之间的中间层，即雾节点，这些节点位于边缘和云之间的位置。</p></li><li><p>任务分发和处理：边缘计算侧重于在边缘节点上进行本地计算和决策，将关键的数据处理任务下沉到边缘。而雾计算更倾向于在雾节点上进行边缘设备生成数据的处理和分析，同时提供边缘服务。</p></li><li><p>应用场景：边缘计算更适用于对实时性、低延迟和快速响应有较高要求的应用场景，如智能交通、物联网等。而雾计算更关注于在边缘设备和云之间提供更灵活和高效的计算模型，适用于智能城市、工业物联网等场景。</p></li></ul></li></ul><p>综上所述，边缘计算和雾计算都是为了满足分布式计算需求而提出的模型，它们在计算资源的位置、任务分发和处理方式以及适用的应用场景上有一些不同。根据具体的应用需求和场景特点，可以选择合适的计算模型来满足需求。</p><h3 id="websocket%E6%B1%A0" tabindex="-1">WebSocket池</h3><ul><li><p>WebSocket池（WebSocket Pool）是一种管理和复用WebSocket连接的机制。在使用WebSocket与服务器进行实时通信时，每次创建和关闭WebSocket连接都会产生一定的开销，特别是在高并发场景下，频繁创建和关闭连接可能会对服务器的性能和资源造成负担。</p></li><li><p>为了避免频繁地创建和关闭WebSocket连接，可以使用WebSocket池来管理这些连接。WebSocket池维护一组预先创建的WebSocket连接，并在需要时将连接提供给应用程序使用，而不是每次都重新创建连接。当应用程序完成使用后，连接会被放回池中，以备下次使用。</p></li><li><p>WebSocket池的好处包括：</p><ul><li>减少连接创建和关闭的开销：通过复用连接，可以减少每次创建和关闭连接所需的时间和资源消耗，提高服务器的性能和资源利用率。</li><li>提高响应速度：由于连接已经建立，可以立即开始进行通信，而不需要等待连接建立的时间，从而减少了通信的延迟。</li><li>控制连接数：通过维护连接池，可以限制并发连接的数量，避免服务器过载或资源耗尽的情况发生。</li></ul></li></ul><h3 id="go%E8%AF%AD%E8%A8%80" tabindex="-1">Go语言</h3><ul><li>Go语言（也称为Golang）是一种开源编程语言，由Google开发。它具有高效的并发性能和内置的网络库，使其非常适合构建高性能的Web服务器和分布式系统。Go语言的设计目标之一是简单易用，同时也注重代码的可读性和可维护性。</li><li>调度器模块的编写采用Go语言，这意味着该模块可以利用Go语言的特性和生态系统，快速地处理并发请求、提供网络服务，并具备良好的性能和可靠性。通过使用Go语言编写调度器模块，可以更容易地构建可扩展的、高效的Web服务器，并实现可靠的任务调度和资源分配功能。</li></ul><h3 id="m%2Fm%2F1%2Fk%E5%92%8Cm%2Fm%2Fk%2Fk%E9%98%9F%E5%88%97%E6%A8%A1%E5%9E%8B" tabindex="-1">M/M/1/K和M/M/K/K队列模型</h3><p>M/M/1/K和M/M/K/K队列模型是用于描述排队系统的数学模型。</p><ul><li>其中&quot;M&quot;代表到达率和服务率都是随机的泊松分布，&quot;1&quot;代表只有一个服务台，&quot;K&quot;代表系统容量，即队列的最大长度。当队列长度达到K时，新到达的请求将被拒绝。</li><li>在M/M/K/K模型中，&quot;K&quot;代表服务台的数量，即系统可以同时服务的最大请求数量。</li><li>这些模型可以用于评估系统的性能，并帮助设计者确定最佳的系统参数，以实现所需的性能和可靠性。</li></ul><h3 id="%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0" tabindex="-1">强化学习</h3><ul><li>强化学习（Reinforcement Learning）是一种机器学习的分支，其目标是通过代理与环境的交互来学习最优行为策略。在强化学习中，代理通过观察环境的状态并执行动作，从环境中接收奖励信号来评估其行为的好坏，然后根据奖励信号调整其策略，以最大化长期累积奖励。</li><li>强化学习的核心概念包括状态（State）、动作（Action）、奖励（Reward）和策略（Policy）：<ul><li>状态（State）：代表环境的当前情况或特征。它可以是离散的或连续的，并且通常由观察到的环境信息来表示。</li><li>动作（Action）：代理在给定状态下可以执行的操作或决策。动作可以是离散的或连续的，具体取决于问题的性质。</li><li>奖励（Reward）：代表代理在执行动作后从环境中获得的即时反馈。奖励可以是正面的、负面的或零，用于指导代理的学习过程。</li><li>策略（Policy）：代理的策略定义了在给定状态下选择动作的方式。策略可以是确定性的（确定选择一个动作）或概率性的（以一定概率选择不同的动作）。</li></ul></li><li>强化学习的核心挑战是在未知环境中通过与环境的交互来学习最优策略。代理通过尝试不同的动作，并根据获得的奖励信号来调整策略。在学习过程中，代理会通过探索（Exploration）和利用（Exploitation）的权衡来平衡对新动作的探索和对已知高奖励动作的利用。</li><li>强化学习方法包括基于值函数的方法（如Q-learning和Sarsa）和基于策略的方法（如Policy Gradient和Actor-Critic）。近年来，深度强化学习（Deep Reinforcement Learning）结合了深度神经网络和强化学习的方法，使得代理能够从原始感知输入中学习，并在复杂的任务中取得了重大突破。</li><li>强化学习在许多领域有着广泛的应用，包括机器人控制、游戏玩法、自动驾驶、金融交易等。它具有通过与环境的交互学习最优策略的能力，使得它成为解决许多复杂问题的有效工具。</li></ul><h3 id="%E5%85%AB%E5%8D%A6%E7%AE%97%E6%B3%95%EF%BC%88gossip-algorithm%EF%BC%89" tabindex="-1">八卦算法（gossip algorithm）</h3><ul><li>八卦算法（Gossip Algorithm）是一种分布式算法，用于在一个大规模的系统中进行信息传播和共享。它的设计灵感来源于人们在日常生活中进行谣言传播的行为，因此得名为&quot;八卦算法&quot;。</li><li>八卦算法的基本思想是通过节点之间的随机通信来传播信息。每个节点都维护一个局部的信息视图，包含了一部分已知节点的信息。在每一轮通信中，节点随机选择一个邻居节点，并向其发送自己所知道的信息。接收节点会将发送节点的信息与自己已知的信息进行合并，并将自己所知的信息继续传播给其他随机选择的邻居节点。通过不断的随机通信和信息传播，整个系统中的节点逐渐将信息进行共享，从而达到全局信息的一致性。</li><li>八卦算法的特点和优势包括：<ul><li>去中心化：八卦算法不依赖于中心节点或全局控制节点，每个节点都可以进行信息的传播和接收，从而实现了去中心化的通信和共享。</li><li>随机性：算法中的随机选择邻居节点的步骤使得信息能够快速传播到整个系统中，同时避免了某些节点成为瓶颈或集中点。</li><li>容错性：八卦算法具有一定的容错性，即使在系统中存在一些故障节点或通信延迟，整个系统仍然能够保持信息的传播和一致性。</li><li>可扩展性：八卦算法适用于大规模系统，随着节点数量的增加，算法的性能和效果并不会显著下降。</li></ul></li><li>八卦算法在分布式系统中有广泛的应用，例如数据复制、一致性维护、状态同步等。它提供了一种简单而有效的方式来实现节点之间的信息共享和传播，并在分布式环境中实现了一致性和可靠性。</li></ul><h3 id="soc%E8%AE%A1%E7%AE%97%E6%9C%BA" tabindex="-1">Soc计算机</h3><ul><li><p>SoC（System-on-a-Chip）计算机是一种集成了处理器、内存、存储、通信接口和其他相关组件的单芯片计算机系统。它将多个功能单元集成到一个芯片上，具有较小的尺寸和较低的功耗。SoC计算机通常用于嵌入式系统、移动设备和物联网应用中，因为它们提供了高度集成和高效的计算能力。</p></li><li><p>树莓派（Raspberry Pi）是一种知名的SoC计算机，由树莓派基金会开发。它以其低成本、小巧的尺寸和广泛的可扩展性而受到广泛关注。树莓派计算机具有基于ARM架构的处理器、内存、存储、通信接口和各种输入输出端口，可以运行不同的操作系统和应用程序。由于其易于使用和开放的设计，树莓派成为学习计算机科学和物联网开发的理想平台之一。</p></li></ul><h3 id="openbalena" tabindex="-1">OpenBalena</h3><ul><li>OpenBalena是一个开源的物联网平台，用于管理和部署容器化应用程序到大规模的嵌入式设备集群，其中包括树莓派等SoC计算机。它是Balena（<a href="http://xn--Resin-dq1hk7vmw4k.io">前身为Resin.io</a>）的开源版本，旨在提供一个灵活的解决方案，使开发者能够轻松地管理和远程部署应用程序到物联网设备。</li><li>通过OpenBalena，用户可以创建和管理设备群组、监控设备状态、远程部署应用程序、执行设备管理任务等。它提供了一套完整的工具和API，使得将应用程序部署到物联网设备变得简单和可扩展。</li><li>使用OpenBalena可以极大地简化物联网设备的管理和部署过程，尤其对于大规模的设备集群而言。它提供了可视化的界面和命令行工具，使用户能够轻松地管理和监控设备，同时支持自动化部署和更新应用程序。</li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S2352711022002084&quot;&gt;论文连接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;0-%E6%91%98%E8%A6%81&quot; tabindex=&quot;-1&quot;&gt;0 </summary>
      
    
    
    
    <category term="论文" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="边缘计算" scheme="http://example.com/tags/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/"/>
    
    <category term="Faas" scheme="http://example.com/tags/Faas/"/>
    
    <category term="ServerLess" scheme="http://example.com/tags/ServerLess/"/>
    
    <category term="雾计算" scheme="http://example.com/tags/%E9%9B%BE%E8%AE%A1%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>FaaS Execution Models for Edge Applications</title>
    <link href="http://example.com/2023/08/16/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/FaaS%20Execution%20Models%20for%20Edge%20Applications/"/>
    <id>http://example.com/2023/08/16/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/FaaS%20Execution%20Models%20for%20Edge%20Applications/</id>
    <published>2023-08-16T13:48:11.674Z</published>
    <updated>2023-06-06T02:46:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://arxiv.org/pdf/2111.06595.pdf" alt="论文连接"></p><h2 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h2><ul><li><p>在这篇论文中，我们解决了在边缘网络中支持基于函数即服务（FaaS）模型的有状态工作流的问题。</p></li><li><p>特别是我们关注数据传输问题，由于某些边缘场景中通信链路速度有限，这可能成为性能瓶颈。为此，我们提出了三种不同的方案：</p><ul><li>纯FaaS实现</li><li>StateProp（应用状态在整个函数链中传播）</li><li>以及StateLocal（状态仅保留在运行函数的工作节点上，需要时进行检索）。</li></ul></li><li><p>然后，我们将提出的方案扩展到应用程序建模为有向无环图（DAG）的更一般情况，这种建模方法涵盖了广泛的实际应用场景，例如物联网（IoT）领域。</p></li><li><p>我们的贡献通过原型实现进行了验证。在模拟条件下的实验表明，应用数据本地化原则显著减少了所需的网络流量并改善了端到端的延迟性能，尤其是在边缘节点上进行本地缓存和低链路速度的情况下。</p></li></ul><h2 id="1-%E4%BB%8B%E7%BB%8D" tabindex="-1">1 介绍</h2><ul><li>这篇论文中，我们针对有状态函数工作流中的数据传输问题（包括参数/返回值和应用状态）</li><li>以第2节中介绍的实际应用案例为动机进行了研究，</li><li>在回顾现有技术（第3节）之后，</li><li>我们在我们之前的工作中总结了研究结果（第4节），提出了三种完全去中心化的执行模型：PureFaaS、StateProp和StateLocal</li><li>第5节中，这些模型扩展到将应用程序建模到DAG的更一般情况</li><li>第6节中比较他们的性能</li><li>第7节中得出结论</li></ul><h2 id="2-%E5%8A%A8%E6%9C%BA%EF%BC%9A%E5%AE%9E%E9%99%85%E5%BA%94%E7%94%A8%E6%A1%88%E4%BE%8B" tabindex="-1">2 动机：实际应用案例</h2><ul><li><p>一个用于智慧城市的实时分析框架，与几个高影响的应用相关</p><ul><li>自动检测异常交通情况</li><li>检测拥挤区域</li><li>保护脆弱人群</li><li>公共事件中的情绪识别等</li></ul></li><li><p>这些应用程序有着相似的总体结构<img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E6%A1%88%E4%BE%8B%E6%80%BB%E4%BD%93%E7%BB%93%E6%9E%84.jpg" alt></p><ul><li>从传感器获取数据开始，首先进行匿名化处理以删除个人数据，然后提取相关特征并用于触发基于机器学习（ML）的决策过程。</li><li>此时普通的Serverless不能在这里采用，原因<ul><li><ol><li>无状态执行是不够的：一些组件需要对程序状态进行读写访问</li></ol></li><li><ol start="2"><li>FaaS支持函数链，但这里工作流程为DAG</li></ol></li></ul></li></ul></li><li><p>这些应用的状态可以保存在3个位置</p><ul><li><ol><li>本地客户端</li></ol></li><li><ol start="2"><li>边缘节点</li></ol></li><li><ol start="3"><li>云端</li></ol></li></ul></li><li><p>而对于这些可保存状态的文职，随着传感器获得数据大小的增加，3个位置时延的增加有所不同<img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E6%A1%88%E4%BE%8B%E6%97%B6%E5%BB%B6.jpg" alt></p><ul><li>云端时延最高，且随着状态的增大而显著增大</li><li>状态在边缘或者客户端维护时，没有明显增加，但事实需要更高的网络流量成本</li></ul></li><li><p>综上：由DAG状态函数组成的数据密集型应用程序（例如实时智慧城市分析）的性能在很大程度上取决于状态的存储位置，而这也是本文研究的主题。</p></li><li><p>DAG状态应用程序并不是特殊情况，依据阿里巴巴数据中心的生产系统中收集的真实云应用程序的跟踪信息：</p><ul><li>由DAG组成的占21.7%</li><li>单个任务28.6%</li><li>链占49.7%</li></ul></li></ul><h2 id="3-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">3 相关工作</h2><ul><li>云中的无服务器平台依赖于底层容器编排系统，这些系统处理自动缩放并负责保持一致的性能。然而，当在边缘使用这些编排工具时，设备是异构且集群化的，这会导致低效的性能。</li><li>支持有状态应用程序是云中无服务器计算定位文件中确定的关键研究挑战之一</li><li>目前，边缘网络中的有状态FaaS在很大程度上尚未被探索，这是我们的动机，探索不同的方法来处理函数调用的链和DAG的参数和状态分配。在实际部署中，可以将复杂的状态管理系统与我们在本文中提出的执行模型结合使用。</li><li>之后再补充</li></ul><h2 id="4-%E6%9C%89%E7%8A%B6%E6%80%81%E7%9A%84%E5%87%BD%E6%95%B0%E9%93%BE" tabindex="-1">4 有状态的函数链</h2><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9E%8B.jpg" alt></p><ul><li>图中共有四个边缘节点，表示为ni，每个节点都托管一个无服务器平台，可以通过一组工作节点执行一个或多个类型的Lambda函数，表示为λi。例如，n1可以执行Lambda函数λ1和λ4，但不能执行λ2和λ3。</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E7%A4%BA%E4%BE%8B%E7%94%A8%E6%88%B7%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F.jpg" alt></p><ul><li>考虑上图的示例用户应用程序<ul><li>客户端需要将输出提供给λ1</li><li>λ1需要应用状态SA，其输出out1需要提供λ2</li><li>以此类推，最终输出out4返回客户端</li></ul></li><li>在云中，有状态函数通过访问外部服务（例如内存数据库或存储服务）来实现无状态函数。然而这种方法在边缘上并不高效，由此提出三种方法，下列方法中假设函数分配为：[λ1，λ2，λ3，λ4] → [n1，n4，n2，n1]。</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/PureFaaS%E6%96%B9%E6%B3%95.jpg" alt></p><ul><li>PureFaaS中，函数链中的函数一个接一个地执行，并且每次调用时都会来回传输每个函数所需的状态，如上图示，只要满足以下两个条件，就可以在商业/开源的无服务器平台上轻松实现此策略<ul><li><ol><li>函数的签名（包括参数和返回值）支持客户端嵌入所需的状态</li></ol></li><li><ol start="2"><li>客户端事先知道每个下一个被调用的函数所需的状态。</li></ol></li></ul></li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/StateProp%E6%96%B9%E6%B3%95.jpg" alt></p><ul><li>StateProp中，它利用了大多数无服务器平台提供的链式功能，如上图示，客户端将应用程序的完整状态嵌入到函数的参数和返回值中：不使用嵌入状态的函数将简单地将其传递，而其他函数将将接收到的修改后的状态作为函数参数嵌入，并最终返回给客户端。</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/StateLocal%E6%96%B9%E6%B3%95.jpg" alt></p><ul><li>StateLocal将状态保留在边缘节点中,如上图所示，不是将状态嵌入到函数调用中，而是仅传递指针。<ul><li>当一个Lambda函数需要状态时，它通过指针检索状态，然后成为状态的新所有者，从而修改链中后续函数调用中的状态指针。</li><li>这样，客户端最终将返回所有状态的更新指针列表，以便在后续应用程序执行中使用它们，或者在需要时从边缘节点中撤回状态。</li></ul></li></ul><h2 id="5-%E6%89%A9%E5%B1%95%E5%88%B0dag" tabindex="-1">5 扩展到DAG</h2><h3 id="5.1-dag%E7%89%B9%E5%AE%9A%E7%AC%A6%E5%8F%B7%E8%A1%A8%E7%A4%BA" tabindex="-1">5.1 DAG特定符号表示</h3><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E4%BE%9D%E8%B5%96%E5%9B%BE1.jpg" alt></p><ul><li>一组任务之间的关系：如果任务λi必须在任务λj之前执行，则存在边λi → λj。这些先行关系定义了一个有向图，称为任务依赖图，最后形成DAG</li><li>任务也可能依赖某些状态：态依赖图是一个无向图，其中边λi → Sx表示任务λj需要访问状态Sx。任务依赖图和状态依赖图的并集生成任务-状态依赖图；如上图示</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E4%BE%9D%E8%B5%96%E5%9B%BE2.jpg" alt></p><ul><li><p>在应用程序的单次执行过程中，可能会出现多个任务需要在同一状态上操作的情况，就像上图中的示例一样。根据应用程序的内部逻辑，可能会出现以下情况</p><ul><li><ol><li>执行顺序无关紧要</li></ol></li><li><ol start="2"><li>λ2必须在λ3之前执行</li></ol></li><li><ol start="3"><li>λ3必须在λ2之前执行</li></ol></li></ul></li><li><p>服务器无状态平台需要从应用程序中了解依赖于共享状态的任务的执行时间顺序，以保持状态的因果一致性。为此，我们通过以下方式来捕捉这种时间顺序，将任务-状态依赖图进行扩展：</p><ul><li>如果λi和λj都使用相同的状态，并且λi必须在λj之前执行以确保共享状态的因果一致性，我们添加一个虚拟边λi → λj，虚线表示，如上图示。</li></ul></li><li><p>添加虚拟边会影响可以实现的并行性：没有状态依赖关系的情况下，在上图中的DAG可以执行为{λ1, λ2 | λ3, λ4}（其中|表示两个任务可以并行执行）</p><ul><li>但在下图中需要虚拟边λ4 → λ2，但这会创建循环λ2 → λ3 → λ4，从而导致死锁：λ4无法执行，直到它接收到λ3的输出，而λ3无法运行，直到它接收到λ2的输出，而λ2在λ4执行完成之前无法访问状态S.</li><li>由于应用程序可以检测到这种情况，并且这反映了逻辑设计问题，因此我们假设我们感兴趣的应用程序仅限于具有非循环的扩展任务-状态依赖图。<br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/%E4%BE%9D%E8%B5%96%E5%9B%BE3.jpg" alt></li></ul></li></ul><h3 id="5.2-purefaas%E6%A8%A1%E5%9E%8B%E6%89%A9%E5%B1%95" tabindex="-1">5.2 PureFaaS模型扩展</h3><ul><li>PureFaaS在链式函数调用和DAG中的使用方式保持不变，除了可以并行执行一些任务外。类似于拓扑排序，下图为示例</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/PureFaaS%E6%A8%A1%E5%9E%8B%E6%8B%93%E5%B1%951.jpg" alt><br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/PureFaaS%E6%A8%A1%E5%9E%8B%E6%8B%93%E5%B1%95.jpg" alt></p><h3 id="5.3-stateprop%2Fstatelocal%E6%A8%A1%E5%9E%8B%E6%89%A9%E5%B1%95" tabindex="-1">5.3 StateProp/StateLocal模型扩展</h3><ul><li><p>StateProp和StateLocal都依赖于工作节点在当前函数完成后调用下一个函数；它们在状态管理方面有所区别：StateProp沿着函数调用链传递状态，而StateLocal将状态保留在最后使用它的边缘节点内部。</p></li><li><p>首先，一个任务可能有多个输入，比如λ2和λ3都希望在各自的任务结束后执行λ4，因此“每个函数执行下一个函数”的概念并不像链式函数那样明确定义。我们通过引入异步调用的概念来解决这个问题：当一个函数终止时，它总是调用下一个函数（根据DAG的直接后继），但只有在所有输入都可用时才触发任务的执行。(这里相当于拓朴排序)</p><ul><li>如果情况不是这样，则前一个函数的输出暂时存储在边缘节点上，函数会暂停执行<img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/5_3_1.jpg" alt></li><li>上图中的模式，增加了边缘节点上服务器无状态平台的复杂性，因为它们必须为每个不完整的操作维护一个临时状态。</li><li>但这种异步调用本身并不能解决问题：当λ2和λ3不同时调用n4节点的λ4时，将发生死锁</li></ul></li><li><p>因此，为了支持StateProp/StateLocal，至少在DAG应用的单个执行期间，所有工作节点都需要知道函数与边缘节点之间的映射关系。这样，我们可以确保所有工作节点将在相同的边缘节点上调用后续任务的执行，这将带来以下影响</p><ul><li><ol><li>函数与边缘节点之间的映射信息必须沿着执行DAG传递，这会略微增加协议开销</li></ol></li><li><ol start="2"><li>必须有一个能够在DAG被调用时“解析”所有函数的过程（例如，可以由客户端完成），这可能会增加启动延迟</li></ol></li></ul></li><li><p>但仍不够支持StateProp/StateLocal，如果λ2和λ3都依赖于相同的状态S。无论相对顺序如何，都需要将由第一个要执行的函数（例如λ2）修改的更新状态传递给另一个函数（例如λ3）。但是两者之间没有调用路径，即λ3不是DAG中λ2的后代，这使得仅仅依靠状态传播变得不可能。因此，提出第二个修改</p><ul><li>不再将状态嵌入函数参数（或其引用，对于StateLocal而言）</li><li>而是每个访问状态的函数将其直接发送给下一个将使用它的工作节点，根据状态依赖图和因果一致性约束，这两者已经是已知的。</li><li>因此，函数的工作节点必须准备好不仅接收异步调用并临时存储其参数，还要存储更新的状态，这些状态也是异步到达的。</li></ul></li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/5_3_2.jpg" alt></p><ul><li>上图是同PureFaaS解决的依赖图中StateProp/StateLocal的顺序图，两者之间唯一的区别在于对于StateLocal，状态必须从最后的所有者中检索</li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/5_3_3.jpg" alt></p><ul><li><p>上表为所有方案的流量交换</p></li><li><p>总结：StateProp和StateLocal可以支持DAG应用程序，但需要进行以下主要修改：</p><ul><li>工作节点必须支持异步函数调用</li><li>在单个DAG执行期间，函数和边缘节点之间的绑定必须为所有工作节点所知，而状态不能随参数一起传播</li></ul></li><li><p>这些变化增加了在边缘节点上运行的软件的复杂性和协议开销，并加剧了可能存在的有关披露专有信息的担忧</p></li></ul><h2 id="6-%E8%A1%A8%E7%8E%B0%E8%AF%84%E4%BC%B0" tabindex="-1">6 表现评估</h2><h3 id="6.1-%E6%89%A7%E8%A1%8C" tabindex="-1">6.1 执行</h3><ul><li><p>在ServerlessOnEdge框架中实现这三种方案</p><ul><li>该框架是一个分布式的调度无状态FaaS函数的框架</li><li>有论文团队开发和维护</li><li>在github开源</li></ul></li><li><p>在该框架中</p><ul><li>客户端通过e路由器调用请求函数</li><li>同时e路由器在无服务平台上充当中间人的角色，将无状态请求转发到根据负载和网络条件可用的多个目的地之一</li><li>实现了e计算机，它可以模拟具有特定配置的无服务器平台，包括计算速度、内存、容器数量等</li><li>ServerlessOnEdge使用谷歌的gRPC进行客户端、e路由器和e计算机之间的通信。</li></ul></li><li><p>PureFaaS的实现</p><ul><li><ol><li>客户端在每个函数调用时将所需的状态嵌入参数中</li></ol></li><li><ol start="2"><li>e计算机将嵌入的状态作为函数返回值的一部分返回</li></ol></li><li><ol start="3"><li>如果满足先决条件，会调用多个函数（仅适用于DAG）</li></ol></li></ul></li><li><p>StateProp的实现</p><ul><li><ol><li>实现异步调用：立即返回空的确认消息，而真正的输出由链中的最后一个e计算机作为主动回应消息提供给客户端</li></ol></li><li><ol start="2"><li>在每个e计算机上安装了一个附带的e路由器，用于调度由其e计算机生成的函数调用作为函数链的一部分执行，这样系统中的每个e计算机可以知道链中下一个函数的目的地</li></ol></li></ul></li></ul><p><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/6_1_1.jpg" alt></p><ul><li><p>上图展示了StateProp的实现</p><ul><li λ1, λ4>图中共有5个边缘节点(主机1到主机5)，调用两个函数链</li><li>客户端在主机0上，主机0上e路由器被客户端用于调用链中的第一个函数（λ1，转发到主机1）</li><li>主机1上的e路由器接收到对λ4的下一次调用（转发到主机4）</li><li>主机4上的e计算机不需要经过其附带的e路由器，因为它可以将最终响应发送给主机0上的客户端</li></ul></li><li><p>StateLocal要求与StateProp相同，但还需要需他的一些升级</p><ul><li><ol><li>系统消息必须支持远程状态，即不直接嵌入函数调用/响应中的状态，而是通过它们的名称和端点间接引用</li></ol></li><li><ol start="2"><li>状态由称为状态服务器的新组件进行管理，它们是与每个e计算机和客户端共存的简单内存键值存储</li></ol></li><li><ol start="3"><li>消息流与StateProp完全相同，但在每个函数调用时，e计算机检索所需的远程状态，然后将其复制到本地状态服务器中；为了做到这一点，状态依赖性也嵌入在函数调用请求消息中。</li></ol></li></ul></li></ul><h3 id="6.2-%E7%BB%93%E6%9E%9C" tabindex="-1">6.2 结果</h3><ul><li>进行了两批实验，分别是函数链和有向无环图（DAG）</li></ul><h4 id="%E5%87%BD%E6%95%B0%E9%93%BE%EF%BC%9A" tabindex="-1">函数链：</h4><ul><li>实验条件：<ul><li>客户端执行长度为L（3或6）的函数链</li><li>其中每个函数随机选择自λ1、…、λ5，并可能重复。</li><li>我们假设应用程序有S个状态（3或6），其中第i个状态的大小为（1+i）×10 kB（以0为基的索引）；</li><li>每个状态依赖于随机选择的随机基数从0（无依赖关系）到L（链中的所有函数都依赖于该状态）。</li><li>输入参数和返回值的大小被假设为相同，并且等于A（10 kB或100 kB）。一组函数<br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/6_2_1.jpg" alt></li></ul></li><li>如上图示，将在各个场景中使用不同执行模型获得的平均端到端延迟进行了比较，其中网络设备之间的链路速率从1 Mb/s增加到100 Mb/s。<ul><li>在左上角的图中<ul><li>PureFaaS和StateProp几乎重叠：这是因为状态和参数的大小相对较小；</li><li>直到链路速率低于20 Mb/s，StateLocal具有更低的平均延迟，这要归功于其更智能的仅在需要时传输状态的方法</li><li>然而，随着链路速率的提高，优势逐渐减小，直到延迟高于50 Mb/s和100 Mb/s链路速率下PureFaaS/StateProp的延迟：在如此高的连接速率下，数据传输变得与（或高于）建立TCP连接来检索/更新状态的时间相当</li></ul></li><li>在相反的情况，即右下角的图中<ul><li>StateProp和StateLocal的性能相当</li><li>除了在高链路速率下：这是因为链条比其他情景中的链条要短，数据传输由输入/输出参数主导，这两种方案的处理是一样的</li></ul></li><li>右上图和左下图是中间状况<ul><li>StateLocal在所有较慢的链路速率下都实现了更好的性能</li><li>而PureFaaS始终位于StateProp的顶部。</li></ul></li></ul></li><li>总结：<ul><li>对于函数链，考虑到实际的协议开销，根据状态大小和网络速度，存在将状态保持在边缘节点（StateLocal）和将其嵌入到函数调用中之间的权衡。</li><li>StateProp的性能始终优于PureFaaS。<br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/6_2_2.jpg" alt></li></ul></li><li>对比函数链时，三种模型中的平均网络流量,如上图，此时链路速度100Mb/s，时StateLocal表现最差的时候<ul><li>PureFaaS生成的流量始终大于StateProp生成的流量，而后者始终大于StateLocal生成的流量</li><li>对于函数链，即使在高网络速度下，StateLocal的开销（以所需的流量速率为衡量）明显低于其他方案，但这并不总是转化为更低的端到端延迟。</li></ul></li></ul><h3 id="dag" tabindex="-1">DAG</h3><ul><li>考虑由一系列阶段组成的应用程序，每个阶段都有一个分支函数，该函数生成多个无状态调用，然后是一个有状态的收集任务。这种结构在ML应用程序中非常典型</li><li>我们使用了3个阶段，每个阶段有5个分支。函数是从边缘节点中随机选择的，状态依赖关系也是随机的，使用与链式结构相同的方法。<br><img src="/images/%E8%AE%BA%E6%96%87/FaaS%20Execution%20Models%20for%20Edge%20Application/6_2_3.jpg" alt></li><li>在上图中，展示了平均延迟随链路速率从1 Mb/s增加到100 Mb/s的变化（对数-对数图），以及仅针对链路速率为100 Mb/s的网络流量<ul><li>我们发现PureFaaS在所有情况下都优于StateProp，且在参数大小较小时优势更为突出。这是因为调用的总函数数量远远超过链式情况，这会严重影响将所有状态嵌入到调用和响应中。</li><li>StateLocal不需要支付这样的代价，它只传递状态的引用，并在除了非常高的链路速率之外的所有情况下表现最好，这是由于状态检索/更新操作的开销</li></ul></li><li>总结：对于具有大量函数的DAG，只有在函数调用和响应中携带引用时，状态传播才有效，即StateLocal更有效</li></ul><h2 id="7-%E7%BB%93%E8%AE%BA" tabindex="-1">7 结论</h2><ul><li>在本文中，我们探讨了在分布在边缘节点上的无服务器平台上支持有状态应用程序的问题。</li><li>我们重点关注在链式和DAG工作流中沿函数调用传递状态的问题，并提出了三种不同特性的替代方案。</li><li>我们开发了一个原型实现来验证我们的方法的可行性，并使用真实的协议开销来衡量性能。</li><li>结果表明，在函数调用链中传播状态可以显著减少通信开销。这可以降低端到端的应用程序延迟，尤其是在连接有限的情况下。</li><li>然而，对于大型DAG工作流，再嵌入状态以进行传播就不再有效了：在这些情况下，必须在边缘节点上本地存储状态并传递它们的引用。</li></ul><h2 id="%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD" tabindex="-1">专业术语</h2><h3 id="faas-%26-serverless" tabindex="-1">FaaS &amp; Serverless</h3><p>FaaS是一种云计算模型，其中开发者可以编写和部署独立的函数（代码块），并通过云服务提供商的平台执行这些函数。FaaS允许开发者根据需要执行函数，而无需管理底层的服务器和基础设施。每个函数都是独立的、无状态的，以事件驱动的方式触发执行。开发者只需关注函数的实现，而不用担心服务器的管理和扩展性。</p><p>Serverless是一种更广泛的概念，它是构建在FaaS模型之上的。Serverless强调开发者无需关心服务器和基础设施，只需专注于编写代码和业务逻辑。在Serverless架构中，云服务提供商负责自动扩展和管理底层的资源。开发者只需支付根据函数执行时间和资源消耗计算的费用，而无需事先预留或管理服务器。</p><p>FaaS和Serverless提供了更灵活、可扩展的开发和部署方式，使开发者能够更专注于核心业务逻辑而不必担心基础设施的细节。它们在构建微服务、事件驱动应用和处理短暂任务等场景中得到广泛应用，为开发者提供了高度可伸缩、成本效益高的解决方案。</p><h3 id="%E6%97%A0%E7%8A%B6%E6%80%81faas" tabindex="-1">无状态FaaS</h3><ul><li>无状态FaaS指的是函数即服务（FaaS）模型中的一种特性，即函数本身不存储任何状态信息。在无状态FaaS中，每个函数都是独立的、无状态的，它们被设计成接收输入参数并生成输出结果，而不会在函数之间保留任何状态信息。</li><li>这种设计有助于实现函数的高度可伸缩性和灵活性。由于函数本身不存储状态，它们可以独立地扩展和部署，而无需关心底层的服务器和基础设施。此外，无状态函数对于并行执行和容错性也更具优势，因为它们之间没有任何依赖或共享状态。</li><li>然而，无状态FaaS也意味着对于那些需要在函数之间共享和保持状态的应用程序来说，需要依赖外部服务（例如存储或数据库）来管理和存储状态信息。因此，无状态FaaS适用于那些可以通过函数的输入和输出进行完全描述的简单任务或短期计算，而对于复杂的应用程序或需要持久状态的任务，则可能需要其他机制来处理状态管理和共享。</li></ul><h3 id="k8s" tabindex="-1">K8s</h3><ul><li>Kubernetes（通常简称为K8s）是一个开源的容器编排平台，用于自动化部署、扩展和管理容器化应用程序。它提供了一组强大的功能和工具，帮助用户简化容器化应用程序的部署、扩展和运维工作。</li><li>以下是Kubernetes的一些主要特性和概念：<ul><li>容器编排：Kubernetes可以管理和编排容器化的应用程序，使其能够高效地运行在集群中的多个节点上。它可以自动在集群中的节点之间调度容器，并确保应用程序的高可用性和负载均衡。</li><li>自动伸缩：Kubernetes允许根据应用程序的负载情况自动扩展或缩减应用程序的副本数量。这样可以根据实际需求来调整资源的使用，以保证应用程序的性能和可用性。</li><li>服务发现和负载均衡：Kubernetes提供了内建的服务发现机制，可以为应用程序提供稳定的网络地址。同时，它还可以通过负载均衡来分发流量，确保应用程序能够平均地处理请求。</li><li>配置和存储管理：Kubernetes提供了灵活的配置管理机制，可以将应用程序的配置信息与容器分离，使得配置的修改和更新更加方便。此外，Kubernetes还支持多种存储选项，包括持久化存储和临时存储。</li><li>自愈和自修复：Kubernetes具备自愈和自修复的能力，当应用程序出现故障或节点失效时，它可以自动重新启动容器、替换故障节点，并确保应用程序的正常运行。</li><li>扩展性和可插拔性：Kubernetes的设计具有良好的扩展性和可插拔性，可以根据需要添加新的功能和组件。它提供了丰富的API和扩展点，允许开发人员根据自己的需求进行定制和扩展。</li></ul></li><li>总的来说，Kubernetes为容器化应用程序的部署、管理和运维提供了一套完整的解决方案。它可以帮助用户简化复杂的容器编排任务，并提供高可用性、弹性伸缩和自动化管理等功能，使得应用程序能够更加高效和可靠地运行在分布式环境中。</li></ul><h3 id="mininet" tabindex="-1">Mininet</h3><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://arxiv.org/pdf/2111.06595.pdf&quot; alt=&quot;论文连接&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;0-%E6%91%98%E8%A6%81&quot; tabindex=&quot;-1&quot;&gt;0 摘要&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在这篇论文中</summary>
      
    
    
    
    <category term="论文" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="边缘计算" scheme="http://example.com/tags/%E8%BE%B9%E7%BC%98%E8%AE%A1%E7%AE%97/"/>
    
    <category term="Faas" scheme="http://example.com/tags/Faas/"/>
    
    <category term="ServerLess" scheme="http://example.com/tags/ServerLess/"/>
    
  </entry>
  
  <entry>
    <title>How to Share:Balancing Layer and Chain Sharing in Industrial Microservice Deployment</title>
    <link href="http://example.com/2023/08/16/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Balancing%20Layer%20and%20Chain%20Sharing%20in%20Industrial%20Microservice%20Deployment/"/>
    <id>http://example.com/2023/08/16/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/Balancing%20Layer%20and%20Chain%20Sharing%20in%20Industrial%20Microservice%20Deployment/</id>
    <published>2023-08-16T13:48:11.673Z</published>
    <updated>2023-06-18T14:37:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-%E6%91%98%E8%A6%81" tabindex="-1">0 摘要</h2><ul><li>随着智能制造的快速发展，面向边缘计算的微服务平台正在成为生产控制的重要组成部分。</li><li>在微服务的容器化部署中：<ul><li>层共享可以减少由于镜像拉取而导致的巨大带宽消耗</li><li>而链共享可以减少微服务之间通信引起的通信开销</li></ul></li><li>这两种共享方法利用每个微服务的特性在部署过程中共享资源。然而，由于边缘服务器资源有限，很难同时满足这两种方法的优化目标。因此，通过平衡这两种共享方法来实现提高服务响应效率至关重要。</li><li>本文研究了一种能够平衡微服务的层共享和链共享的最佳微服务部署策略。我们通过模型重构，将最小化微服务镜像拉取延迟和通信开销的问题转化为线性约束整数二次规划问题。通过连续凸近似（SCA）方法得到一个部署策略。</li><li>实验结果表明，所提出的部署策略可以平衡这两种资源共享方法。当两种共享方法被平等考虑时，平均镜像拉取延迟可以降低到基准值的65％，平均通信开销可以降低到基准值的30％。</li></ul><h2 id="1-%E4%BB%8B%E7%BB%8D" tabindex="-1">1 介绍</h2><ul><li><p>传统的工业软件采用单体服务架构。服务内部的高耦合和占用率会增加整个系统的复杂性。其可扩展性、稳定性和容错性很难满足智能制造的要求。</p></li><li><p>通过微服务架构，一个完整的服务可以拆分为多个松耦合的微服务。不同的微服务在逻辑上是独立的，具有很高的灵活性、可扩展性和容错性，可以很好地适应智能制造的需求。</p></li><li><p>根据不同的服务请求和部署策略，将打包成Docker镜像的每个微服务可以通过容器编排工具k8s部署到边缘服务器上。</p></li><li><p>在微服务的容器化部署中，服务效率是评估部署解决方案质量的重要指标。服务效率主要受两个方面的影响。</p><ul><li>一方面是微服务的启动时间。它主要取决于Docker镜像的拉动延迟，这些镜像通过不同的镜像层存储在云端</li><li>另一方面是微服务之间的通信开销。它取决于微服务之间的数据交换量。<ul><li>一个工业应用可以由部署在一个或多个边缘服务器上的多个微服务完成。这些微服务可以被称为微服务链，同一微服务链中的微服务之间将频繁进行数据交换。</li></ul></li></ul></li><li><p>基于上述两个方面，通过资源共享来提高服务效率非常重要。为提高服务效率，有两种资源共享策略。</p><ul><li>一种资源共享策略是层共享：Docker原生支持层的共享。如果部署在同一边缘服务器上的微服务使用相同的镜像层，拉取镜像时将不会重复拉取该层。这个层可以被服务器上的所有微服务共享。层共享可以有效减少镜像拉取延迟，从而提高微服务的启动速度和服务响应效率。</li><li>另一种资源共享策略是链共享：它可以定义为部署在同一服务器上的微服务之间的数据共享。在微服务链中，相邻的两个微服务之间会频繁进行数据传输。如果两个微服务部署在同一服务器上，下一个微服务可以通过链共享直接访问数据，而无需进行多跳数据传输。链共享可以减少数据传输引起的延迟和数据丢失。</li></ul></li><li><p>由于边缘服务器的资源有限，不可能将所有的微服务都部署在同一台边缘服务器上。因此，有必要找到一种在层共享和链共享之间进行权衡的最优微服务部署策略。</p></li><li><p>由于边缘服务器的资源有限，微服务部署策略无法同时充分利用不同的资源，因此，还需要一种方法来合理地分配资源给部署在服务器上的不同微服务，并最大化资源的利用。</p></li><li><p>本文贡献：</p><ul><li><ol><li>我们通过同一模型描述了微服务的分层结构和链式结构。建立了一个整数规划问题，以最小化镜像拉取延迟和通信开销。</li></ol></li><li><ol start="2"><li>通过模型重构，证明了整数规划问题可以转化为带有线性约束的整数二次规划问题。通过使用连续凸逼近（SCA）方法获得最优解。该方法可以有效平衡镜像拉取延迟和通信开销。</li></ol></li><li><ol start="3"><li>提出了一种用于边缘服务器的资源重新分配算法，以充分利用闲置的计算资源。</li></ol></li><li><ol start="4"><li>通过实验，在镜像拉取延迟和服务间通信开销等多个维度上评估了结果。实验证明了所提方法的有效性。</li></ol></li></ul></li></ul><p>第2节简要回顾了相关文献。<br>第3节对系统的分层结构和链式结构进行建模，并给出了问题的形式化描述。<br>第4节解决了提出的问题。<br>第5节提出了一种用于边缘服务器的资源重新分配算法。<br>第6节评估了所提方法的结果。<br>第7节讨论了限制和未来工作。<br>第8节对论文进行了总结。</p><h2 id="2-%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C" tabindex="-1">2 相关工作</h2><h2 id="3-%E7%B3%BB%E7%BB%9F%E5%BB%BA%E6%A8%A1%E5%92%8C%E9%97%AE%E9%A2%98%E8%A1%A8%E8%BF%B0" tabindex="-1">3 系统建模和问题表述</h2><h3 id="3.1-%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E4%BE%8B%E5%AD%90" tabindex="-1">3.1 一个简单例子</h3><p><img src="/images/%E8%AE%BA%E6%96%87/Balancing%20Layer%20and%20Chain%20Sharing%20in%20IIndustrial%20Microservice%20Deployment/3_1.png" alt><br><img src="/images/%E8%AE%BA%E6%96%87/Balancing%20Layer%20and%20Chain%20Sharing%20in%20IIndustrial%20Microservice%20Deployment/3_2.png" alt></p><ul><li><p>如图示，考虑一个有两个微服务和一个有三个微服务的应用程序，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><msub><mi>s</mi><mrow><mi>k</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">ms_{ki}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ki</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>表示第k个软件的第i个微服务</p></li><li><p>每个微服务镜像有不同数量的镜像层组成。三个服务器与云服务器之间的带宽为120 MB/s，并且两个相邻服务器之间可以通过单跳到达。</p></li><li><p>a为层共享策略，此时将有相同镜像层的微服务部署在一起，可以实现镜像层的共享，但同一软件间需要传输数据。</p></li><li><p>b为链共享策略，同一软件的微服务在一个服务器上部署，传输数据大小为0，但要拉取所有镜像</p></li><li><p>c为同时考虑链共享和层共享，三种策略的具体时间比较见表。</p></li></ul><h3 id="3.2-%E7%B3%BB%E7%BB%9F%E6%A8%A1%E5%9E%8B" tabindex="-1">3.2 系统模型</h3><h3 id="3.3-%E9%97%AE%E9%A2%98%E5%BD%A2%E5%BC%8F%E5%8C%96%E6%8F%8F%E8%BF%B0" tabindex="-1">3.3 问题形式化描述</h3><h2 id="4-%E5%9F%BA%E4%BA%8Esca%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88" tabindex="-1">4 基于SCA的微服务部署方案</h2><h3 id="4.1-%E9%97%AE%E9%A2%98%E8%BD%AC%E5%8C%96" tabindex="-1">4.1 问题转化</h3><h3 id="4.2-%E5%9F%BA%E4%BA%8Esca%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">4.2 基于SCA的方法</h3><h3 id="4.3-%E6%94%B6%E6%95%9B%E5%88%86%E6%9E%90" tabindex="-1">4.3 收敛分析</h3><h2 id="5-%E8%B5%84%E6%BA%90%E5%88%86%E9%85%8D%E6%96%B9%E6%B3%95" tabindex="-1">5 资源分配方法</h2><h3 id="5.1-%E9%97%AE%E9%A2%98%E6%8F%8F%E8%BF%B0" tabindex="-1">5.1 问题描述</h3><h3 id="5.2-%E5%9F%BA%E4%BA%8E%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E4%B9%98%E6%95%B0%E6%B3%95%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88" tabindex="-1">5.2 基于拉格朗日乘数法的解决方案</h3><h2 id="6-%E8%A1%A8%E7%8E%B0%E8%AF%84%E4%BC%B0" tabindex="-1">6 表现评估</h2><h3 id="6.1-%E6%A8%A1%E6%8B%9F%E5%AE%9E%E9%AA%8C" tabindex="-1">6.1 模拟实验</h3><h3 id="6.2-%E7%94%A8%E7%9C%9F%E5%AE%9E%E7%9A%84%E8%BE%B9%E7%BC%98%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E5%AE%9E%E9%AA%8C" tabindex="-1">6.2 用真实的边缘服务器进行实验</h3><h3 id="6.3-%E5%A4%A7%E8%A7%84%E6%A8%A1%E7%9A%84%E6%A1%88%E4%BE%8B" tabindex="-1">6.3 大规模的案例</h3><h2 id="7-%E8%AE%A8%E8%AE%BA" tabindex="-1">7 讨论</h2><ul><li><p>高时间和空间复杂性：所提出的方法在大规模场景中具有高时间和空间复杂性。虽然可以在可接受的时间内获得最优解，但需要进一步优化以提高可扩展性。未来的研究应着重开发高效的算法或优化技术，以降低计算复杂度。</p></li><li><p>考虑请求频率：通信开销不仅取决于通信数据量，还取决于请求频率。即使每次传输的数据量较小，高请求频率也会显著增加通信开销。在计算通信开销时，考虑通信数据量和请求频率的乘积是非常重要的。未来的工作可以探索将请求频率作为输入参数，以准确估计通信开销。</p></li><li><p>动态微服务部署：微服务不是静态的，部署过程涉及关闭、迁移和添加新的微服务。在面对动态场景时，需要相应的部署算法以适应变化。未来的研究可以探索使用人工智能或其他方法，在初始部署结果之后进行训练，以动态调整微服务的部署。</p></li></ul><h2 id="8-%E7%BB%93%E8%AE%BA" tabindex="-1">8 结论</h2><ul><li>本文研究了微服务的层共享和链共享，并探索了一种可以平衡这两种资源共享方式的微服务部署方案。<ul><li>我们建立了一个旨在最小化图像拉取延迟和通信开销的问题。通过模型重构，将问题转化为一个具有线性约束的整数二次规划问题，并通过连续凸逼近（SCA）方法获得部署策略。</li><li>我们还提出了一种资源重新分配算法，以充分利用服务器的空闲资源。</li></ul></li></ul><h2 id="%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A" tabindex="-1">名词解释</h2><h3 id="docker%E7%9A%84%E5%B1%82%E7%BA%A7" tabindex="-1">Docker的层级</h3><ul><li><p>Docker 镜像是构建容器的基础，它包含了一个完整的文件系统，包括操作系统、应用程序和依赖项。镜像是只读的，意味着一旦创建就不可更改。</p></li><li><p>Docker 镜像采用了分层的文件系统结构，这是 Docker 的一个重要特性。每个镜像由多个文件系统层构成，每个层都是只读的，并且可以被其他镜像共享和重用。这种分层结构使得镜像的构建和管理变得非常高效。</p></li><li><p>下面是 Docker 镜像层的一些重要概念：</p><ul><li>基础镜像层（Base Image Layer）：这是 Docker 镜像的第一个层，它通常包含操作系统的基本文件系统。基础镜像层是只读的，所有其他层都依赖于它。</li><li>中间镜像层（Intermediate Image Layers）：在构建 Docker 镜像时，可以在基础镜像层之上添加多个中间镜像层。每个中间镜像层都是基于前一个层进行的修改或添加，例如安装软件包、配置环境等。每个中间镜像层都会生成一个唯一的标识符，用于表示该层的内容。</li><li>最终镜像层（Final Image Layer）：最后一个中间镜像层被称为最终镜像层。它是由之前的中间镜像层构建而成，代表了完整的容器镜像。最终镜像层是可读写的，并且可以在容器中运行和修改。</li></ul></li><li><p>使用分层结构的好处是，当多个镜像共享相同的层时，这些层只需要在磁盘上存储一次，可以被多个镜像同时使用，节省了存储空间。此外，当基础镜像或中间镜像层发生变化时，只需重新构建受影响的层，而不必重新构建整个镜像，提高了构建速度和效率。</p></li><li><p>总结一下，Docker 镜像层是构成 Docker 镜像的一组只读文件系统层，通过分层结构实现了高效的镜像构建和共享。每个镜像层都包含了特定的文件系统更改或添加，最终构成一个完整的容器镜像。</p></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0-%E6%91%98%E8%A6%81&quot; tabindex=&quot;-1&quot;&gt;0 摘要&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;随着智能制造的快速发展，面向边缘计算的微服务平台正在成为生产控制的重要组成部分。&lt;/li&gt;
&lt;li&gt;在微服务的容器化部署中：
&lt;ul&gt;
&lt;li&gt;层共享可以</summary>
      
    
    
    
    <category term="论文" scheme="http://example.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
    <category term="微服务" scheme="http://example.com/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>面试记录</title>
    <link href="http://example.com/2023/08/16/%E6%9D%82%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C/"/>
    <id>http://example.com/2023/08/16/%E6%9D%82%E8%AE%B0/%E9%9D%A2%E8%AF%95%E7%BB%8F%E9%AA%8C/</id>
    <published>2023-08-16T13:48:11.669Z</published>
    <updated>2023-07-26T14:53:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="%E9%98%BF%E9%87%8C" tabindex="-1">阿里</h2><h3 id="2023%E5%AE%9E%E4%B9%A0%E9%98%BF%E9%87%8Cc%2B%2B%E5%AE%A2%E6%88%B7%E7%AB%AF" tabindex="-1">2023实习阿里C++客户端</h3><h4 id="%E7%AC%94%E8%AF%95" tabindex="-1">笔试</h4><p>408+ACM算法</p><h4 id="%E4%B8%80%E9%9D%A2" tabindex="-1">一面</h4><ul><li><p>自我介绍</p></li><li><p>手写栈，队列，优先队列，延迟队列。</p></li><li><p>tcp和udp关系</p></li><li><p>三次握手时，最后发送方没收到ack有哪些原因</p></li><li><p>c++和Java区别关系。</p></li><li><p>c11特性新特性</p></li><li><p>面向对象几个特性最重要的是哪个，为什么</p></li><li><p>进程和线程。</p></li><li><p>线程并发控制。</p></li><li><p>进程通讯。</p></li><li><p>github看过的项目那个最有趣，修的课那个最有趣</p></li><li><p>算法：给2n个数，分成两组，每组n个数，使得和最接近</p></li><li><p>总结：第一次面试，八股文就没准备，全靠平时基础，而且很紧张，但不知道为什么还能二面，但是最近也比较忙，八股文还是没时间背，急急急，看二面能运气过不</p></li></ul><h4 id="%E4%BA%8C%E9%9D%A2" tabindex="-1">二面</h4><ul><li>自我介绍</li><li>项目介绍</li><li>谈学习方法</li><li>C++和JAVA</li><li>聊天</li></ul><p>这次感觉还行，没问八股啥的，总体来说不是很紧张，可惜第二天反手就挂了，乐，简历又回归人才库继续转了</p><h2 id="%E8%85%BE%E8%AE%AF" tabindex="-1">腾讯</h2><h3 id="2023-wxg-%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%AE%9E%E4%B9%A0" tabindex="-1">2023 WXG 后端开发实习</h3><p>简历过了后就直接到面试了</p><h4 id="%E4%B8%80%E9%9D%A2-1" tabindex="-1">一面</h4><p>自我介绍</p><p>在线写题：</p><ol><li>给定一个字符串A和一个字符串集合B，找到B中字符串在A中的索引出现位置并标记出来（直接暴力）</li><li>实现一个单例模式，要求线程安全，懒汉模式</li><li>寻找二叉搜索树中的第三大值</li><li>反转链表</li></ol><p>八股：OS系统调用，计网MTU，C++多态实现</p><p>一面完直接挂了，真不戳，当时面的时候面试官找题找了10min+，还在跟别人聊天，看来对我确实是不上心了，虽然我也很菜</p><h2 id="%E5%8D%8E%E4%B8%BA" tabindex="-1">华为</h2><h3 id="2023-bg%E7%BB%88%E7%AB%AF%E7%A1%AC%E4%BB%B6-%E5%AE%9E%E4%B9%A0" tabindex="-1">2023 BG终端硬件 实习</h3><p>当时忘改第一志愿部门了，之后发现改不了了，硬着头皮面了，蚌，确实是硬件，贴近底层</p><p>自我介绍；<br>关于自我介绍聊了会天；<br>询问项目；</p><p>共享屏幕写题：一个超大文件，无法完全放入内存，请使用C++总计该文件bit流中的1的个数</p><p>chatgpt解答：在处理一个超大文件时，无法将整个文件加载到内存中。为了计算该文件中的1的个数，你可以使用逐位读取的方式来统计。以下是一个使用C++编写的示例代码：</p><pre><code class="language-C++">#include &lt;iostream&gt;#include &lt;fstream&gt;// 计算一个整数中的1的个数int countOnes(unsigned int num) &#123;    int count = 0;    while (num) &#123;        count += num &amp; 1;        num &gt;&gt;= 1;    &#125;    return count;&#125;int main() &#123;    std::ifstream file(&quot;path/to/your/file.bin&quot;, std::ios::binary);    if (!file) &#123;        std::cout &lt;&lt; &quot;Failed to open the file.&quot; &lt;&lt; std::endl;        return 1;    &#125;    unsigned char byte;    unsigned long long totalCount = 0;    // 逐字节读取文件内容    while (file.read(reinterpret_cast&lt;char*&gt;(&amp;byte), sizeof(byte))) &#123;        // 计算每个字节中1的个数并累加        totalCount += countOnes(byte);    &#125;    file.close();    std::cout &lt;&lt; &quot;Total count of 1s: &quot; &lt;&lt; totalCount &lt;&lt; std::endl;    return 0;&#125;</code></pre><p>这种文件读入确实不会，算是硬件岗吧，果然直接挂了，期望其它志愿可以面到</p><h2 id="%E5%B0%8F%E7%B1%B3" tabindex="-1">小米</h2><h3 id="2023-java%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91-%E5%AE%9E%E4%B9%A0" tabindex="-1">2023 Java程序开发 实习</h3><p>简历过了直接面试。<br>聊了项目，问了java Hashtable那一系列，多线程等，我确实基础不太行，最后面试官说明希望是一个基础牢固的，过来可以直接开发的实习生，所以潜意思应该是我不太行了，最后也是很快就挂了，不过处于流程还是要写代码的。</p><p>代码题：问有n个数，范围为[0-n]，每个数各不相同，问如何直到哪个数没有<br>解法：将所有数求和用n*(n+1)/2减去即是答案</p><h2 id="%E5%AD%97%E8%8A%82" tabindex="-1">字节</h2><h3 id="2023-%E9%A3%9E%E4%B9%A6%E5%90%8E%E7%AB%AF%E6%97%A5%E5%B8%B8%E5%AE%9E%E4%B9%A0" tabindex="-1">2023 飞书后端日常实习</h3><h4 id="%E4%B8%80%E9%9D%A2-2" tabindex="-1">一面</h4><ul><li><p>自我介绍</p></li><li><p>算法题：</p><ul><li>题目：将一个字符串的大小写字母转换，输出所有可能转换的字符串</li><li>做法：直接dfs回溯即可</li></ul></li><li><p>聊项目</p></li><li><p>八股</p><ul><li>计网<ul><li>HTTPS，SSL加密过程</li><li>HTTP请求的全过程（DNS服务器）</li><li>TCP/IP协议 传输信息的过程</li><li>TCP/IP协议 中帧的各请求头的信息</li><li>网络攻击手段：DDOS，反射</li></ul></li><li>操作系统<ul><li>如何让CPU满载</li><li>CPU利用率</li></ul></li><li>数据库<ul><li>索引的数据结构</li><li>隔离等级</li></ul></li></ul></li><li><p>哎，八股太差了，看过的记不住</p></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;%E9%98%BF%E9%87%8C&quot; tabindex=&quot;-1&quot;&gt;阿里&lt;/h2&gt;
&lt;h3 id=&quot;2023%E5%AE%9E%E4%B9%A0%E9%98%BF%E9%87%8Cc%2B%2B%E5%AE%A2%E6%88%B7%E7%AB%AF&quot; tabind</summary>
      
    
    
    
    <category term="文章" scheme="http://example.com/categories/%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="面试" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>软件工程期末突击</title>
    <link href="http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/"/>
    <id>http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/</id>
    <published>2023-08-16T13:48:11.663Z</published>
    <updated>2023-05-28T08:17:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="%E7%AC%AC%E4%B8%80%E7%AB%A0-%E4%BB%8E%E7%A8%8B%E5%BA%8F%E5%88%B0%E8%BD%AF%E4%BB%B6" tabindex="-1">第一章 从程序到软件</h2><h3 id="1-%E4%BD%95%E4%B8%BA%E7%A8%8B%E5%BA%8F%E5%8F%8A%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%B4%A8%E9%87%8F%E8%A6%81%E6%B1%82" tabindex="-1">1 何为程序及程序的质量要求</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BD%95%E4%B8%BA%E7%A8%8B%E5%BA%8F" tabindex="-1">（1）何为程序</h4><ul><li>程序（Program）是由程序设计语言所描述的、能为计算机所理解和处理的一组语句序列</li><li>程序严格遵循程序设计语言的各项语法和语义规定</li><li>程序代码可表现为二种形式<ul><li>源代码（Source Code）：用程序设计语言所描述的代码</li><li>可执行代码（Executable Code）：可执行的二进制或中间码</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89-%E7%A8%8B%E5%BA%8F%E7%BB%84%E6%88%90" tabindex="-1">（2） 程序组成</h4><ul><li>语句：声明、定义、控制、计算等；实现特定的功能；</li><li>模块：包，类，方法；每个模块实现特定功能</li></ul><h4 id="%EF%BC%883%EF%BC%89%E7%A8%8B%E5%BA%8F%E7%9A%84%E4%BA%8C%E7%B1%BB%E5%88%A9%E7%9B%8A%E7%9B%B8%E5%85%B3%E8%80%85" tabindex="-1">（3）程序的二类利益相关者</h4><ul><li>用户：<ul><li>程序的运行展示 <strong>功能和性能</strong></li><li>满足和实现用户的<strong>需求</strong></li></ul></li><li>程序员<ul><li>编写，阅读维护程序</li><li>发现和修改程序中的缺陷</li></ul></li><li>用户和程序员对程序有这不同的质量需求</li></ul><h4 id="%EF%BC%884%EF%BC%89%E7%A8%8B%E5%BA%8F%E8%B4%A8%E9%87%8F%E7%9A%84%E5%86%85%E5%9C%A8%E5%92%8C%E5%A4%96%E5%9C%A8%E4%BD%93%E7%8E%B0" tabindex="-1">（4）程序质量的内在和外在体现</h4><ul><li>外在(External)质量<ul><li>用户视点</li><li>对外可展示，用户可直接感触到、所关心的</li><li>使用流畅性、响应速度、界面美观、操作简易性、运行可靠性等</li></ul></li><li>内在(Internal)质量<ul><li>程序员视点</li><li>体现在程序的内在方面，程序员可以感触到的、所关心的</li><li>易于理解、结构清晰、易于修改、可重用好等</li></ul></li></ul><h3 id="2-%E7%A8%8B%E5%BA%8F%E8%B4%A8%E9%87%8F%E4%BF%9D%E8%AF%81%E6%96%B9%E6%B3%95" tabindex="-1">2 程序质量保证方法</h3><ul><li>程序质量保证方法<ul><li>遵循编码风格</li><li>采用程序设计方法</li><li>开展代码重用</li><li>进行结对编程</li><li></li></ul></li></ul><h4 id="%EF%BC%881%EF%BC%89%E7%A8%8B%E5%BA%8F%E8%B4%A8%E9%87%8F%E7%9A%84%E8%AF%AD%E6%B3%95%E5%92%8C%E8%AF%AD%E4%B9%89%E4%BD%93%E7%8E%B0" tabindex="-1">（1）程序质量的语法和语义体现</h4><ul><li>代码风格规范-语法<ul><li>语法和结构层次</li><li>明确如何来规范程序的书写</li><li>表现为是否易于阅读和理解</li></ul></li><li>代码设计规范-语义<ul><li>语义和内涵层次，外在的</li><li>明确如何来组织和封装程序语句</li><li>表现为良好的结构和易于重用</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E9%81%B5%E5%BE%AA%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC" tabindex="-1">（2）遵循编码风格</h4><ul><li>良好的编程行为：对代码符号进行良好的组织、合理的命名、提供必要的注释，那么将可增强代码的可读性和可理解性，进而提高代码的可维护性和可重用性，提升代码的内部质量</li><li>编码风格：程序员在编码时要遵循特定的样式及要求，以规范程序员的编程行为以及所产生程序代码的样式</li><li>编写代码的基本原则<ul><li>易懂，一看就懂</li><li>简明，降低复杂度</li><li>易改，便于维护</li><li>无二义，不产生歧义</li></ul></li><li>代码风格举例：<ul><li>代码布局：缩进，大括号换行</li><li>代码组织：按字母顺序说明对象，单入口单出口</li><li>命名规范：一看就懂，望文生义；小驼峰，大驼峰</li><li>代码注释：有效、必要、简洁的注释；注解位置</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E9%87%87%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95" tabindex="-1">（3）采用程序设计方法</h4><ul><li>语句设计<ul><li>单入口单出口，少用goto语句</li><li>加强对异常处理<ul><li>将更多的时间和精力放在处理异常代码上</li></ul></li></ul></li><li>模块化设计<ul><li>模块是逻辑上相对独立、具有良定义接口的编程单位</li><li>模块可表现为函数、过程、方法、类、程序包等</li></ul></li><li>高内聚低耦合原则<ul><li>高内聚：模块内各要素紧密相关，仅实现单一功能，否则再进行拆分</li><li>低耦合：模块间的关系应设计的非常松散</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E4%BB%A3%E7%A0%81%E9%87%8D%E7%94%A8" tabindex="-1">（4）代码重用</h4><p>定义：在编写代码过程中，充分利用已有和现成的代码，并将其集成到程序之中，从而来实现程序功能<br>好处：由于被重用的代码经过多次反复的使用，代码质量得到充分检验，因而代码重用不仅可极大提高编程效率，而且还可有效提高程序质量</p><ul><li>重用代码片段</li><li>重用函数、类和软构件</li><li>重用开源代码</li></ul><h4 id="%EF%BC%885%EF%BC%89%E7%BB%93%E5%AF%B9%E7%BC%96%E7%A8%8B" tabindex="-1">（5）结对编程</h4><h3 id="3-%E7%A8%8B%E5%BA%8F%E8%B4%A8%E9%87%8F%E7%9A%84%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95" tabindex="-1">3 程序质量的分析方法</h3><ul><li>人工审查方法</li><li>自动化分析方法</li><li>程序测试方法</li></ul><h4 id="%EF%BC%881%EF%BC%89%E7%A8%8B%E5%BA%8F%E4%BB%A3%E7%A0%81%E4%B8%AD%E6%BD%9C%E5%9C%A8%E7%9A%84%E8%B4%A8%E9%87%8F%E9%97%AE%E9%A2%98" tabindex="-1">（1）程序代码中潜在的质量问题</h4><ul><li>质量问题<ul><li>编写不合理 – 没有遵循编码规范</li><li>设计不合理 – 没有遵循设计规范</li><li>代码有错误 – 代码编写的不正确</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BA%BA%E5%B7%A5%E5%AE%A1%E6%9F%A5%E4%BB%A3%E7%A0%81%EF%BC%88code-review%EF%BC%89" tabindex="-1">（2）人工审查代码（Code Review）</h4><ul><li>方法描述:阅读和理解代码；发现缺陷和问题；提出改进的建议</li><li>方法特点：人工审查效率低；难以发现一些深层次问题；难以全面地进行系统分析</li><li>审查方面：<ul><li>代码是否符合编程规范</li><li>代码中是否存在缺陷</li><li>从质量的角度哪些代码需要改进</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7%E5%AE%A1%E6%9F%A5-%E4%BB%A3%E7%A0%81%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90" tabindex="-1">（3）自动化工具审查-代码静态分析</h4><ul><li><p>由计算机软件来自动完成代码审查</p><ul><li>无需运行被测代码，仅通过分析或检查程序的语法、结构、过程、接口等来检查程序</li><li>30% - 70% 的代码缺陷可通过静态分析发现</li></ul></li><li><p>分析什么</p><ul><li>找出代码隐藏的错误和缺陷，如参数不匹配，有歧义的嵌套语句，错误的递归，非法计算，可能出现的空指针引用等等</li><li>程序遵循编码规范的程度</li></ul></li><li><p>特点：快速定位、有效发现隐藏的错误和缺陷</p></li><li><p>自动化代码分析工具：SonarQube</p><ul><li>基于Web、用于管理程序代码质量的代码分析工具</li><li><a href="http://www.sonarqube.org">www.sonarqube.org</a></li><li>能以插件的形式集成到众多的软件开发环境（如Eclipse）</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%8A%80%E6%9C%AF" tabindex="-1">（4）软件测试技术</h4><ul><li>程序本质上是对数据的处理</li><li>设计数据(测试用例) -&gt; 运行测试用例(程序来处理数据) -&gt; 判断运行结果(是否符合预期结果)</li></ul><h3 id="4-%E4%BD%95%E4%B8%BA%E8%BD%AF%E4%BB%B6%E5%8F%8A%E8%BD%AF%E4%BB%B6%E7%9A%84%E7%89%B9%E7%82%B9" tabindex="-1">4 何为软件及软件的特点</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BD%95%E4%B8%BA%E8%BD%AF%E4%BB%B6" tabindex="-1">（1）何为软件</h4><ul><li>软件是指在计算机系统的支持下，能够完成特定功能与性能的<strong>程序、数据和文档</strong><ul><li>文档：记录软件开发活动和阶段性成果、软件配置及变更的阐述性资料<ul><li>定义和理解软件</li><li>记录软件开发成果</li><li>辅助不同人员间的交流</li></ul></li><li>数据：程序的加工处理对象和结果<ul><li>数据形式：用户，订单，交易，日志</li><li>数据处理：表示，获取，存储，检索，分析</li></ul></li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E6%A6%82%E5%BF%B5%E7%BB%99%E6%88%91%E4%BB%AC%E7%9A%84%E5%90%AF%E7%A4%BA" tabindex="-1">（2）软件概念给我们的启示</h4><ul><li>软件<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≠</mo><mrow></mrow></mrow><annotation encoding="application/x-tex">\not ={}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0em;"></span><span class="mord"></span></span></span></span></eq>程序<ul><li>软件涉及更多制品</li><li>这些制品间有关联、相互依赖</li></ul></li><li>开发软件   <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≠</mo><mrow></mrow></mrow><annotation encoding="application/x-tex">\not ={}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0em;"></span><span class="mord"></span></span></span></span></eq>      编写程序<ul><li>软件开发需要做更多事情</li><li>对软件提出更高的要求</li></ul></li><li>软件的规模和复杂性意味着要采用行之有效的方法—工程方法</li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F" tabindex="-1">（3）软件生命周期</h4><ul><li>a 需求分析</li><li>b 软件设计</li><li>c 编码实现</li><li>d 软件测试</li><li>e 部署运行</li><li>f 使用维护</li><li>转a</li></ul><h4 id="%EF%BC%884%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%89%B9%E7%82%B9" tabindex="-1">（4）软件特点</h4><ul><li>逻辑性：逻辑产品，逻辑思维（非物理活动）的结果、不会磨损和老化</li><li>设计开发：是设计开发而成的，不是生产制造而成的，而是一系列以设计为核心的软件开发活动</li><li>易变性：需求经常变、难以把控，影响软件的制品即开发过程；产品难以成熟</li><li>复杂性：规模大；运行复杂；环境复杂；</li><li>缺陷的隐蔽性：缺陷隐藏在逻辑代码中，不像硬件系统那样直观显现，很难被人们所发现和排除</li></ul><h3 id="5-%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%86%E7%B1%BB" tabindex="-1">5 软件的分类</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%86%E7%B1%BB" tabindex="-1">（1）软件的分类</h4><ul><li><p>应用软件</p><ul><li>面向特定应用领域的专用软件。它们针对相关行业和领域的特定问题，为其提供基于计算的新颖解决方案。</li><li>示例：淘宝、12306、携程、微信、QQ等软件</li></ul></li><li><p>系统软件</p><ul><li>对计算机资源进行管理，为应用软件的运行提供基础设施和服务的一类软件。从计算服务的视角，系统软件介于计算机硬件和应用软件之间。</li><li>示例：操作系统、数据库管理系统、编译软件、软件中间件等</li></ul></li><li><p>支撑软件</p><ul><li>辅助软件开发和运维，帮助开发人员完成软件开发和维护工作的一类软件</li><li>示例：SonarQube、Visual Studio、Eclipse等</li></ul></li><li><p>通用软件产品</p><ul><li>由软件开发组织开发的，在市场上公开销售，可以独立使用的软件.</li><li>关于产品应该做什么的规格说明由开发者确定，相关的变更决策也由开发者做出.</li></ul></li><li><p>定制化软件产品</p><ul><li>受特定客户委托，由软件开发商针对特定客户需求专门设计和实现的软件.</li><li>关于产品应该做什么的规格说明由客户给出，相关的变更需求也由客户提出.</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E9%97%AD%E6%BA%90%E8%BD%AF%E4%BB%B6" tabindex="-1">（2）闭源软件</h4><ul><li>何为闭源软件<ul><li>软件代码不对用户开放的一类软件，购买软件时只提供可运行软件或服务，没有提供源代码</li><li>以许可证（License）的方式授权用户使用软件</li></ul></li><li>闭源软件带来的问题<ul><li>无法掌握软件内部实现情况（如是否存在安全漏洞和恶意代码），也无法对软件进行修改和完善，极大影响了开发者的创新自由</li></ul></li><li>示例<ul><li>微软的Windows、Office软件，</li><li>典型企业：微软、IBM、Oracle等</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6" tabindex="-1">（3）开源软件</h4><ul><li>何为开源软件<ul><li>一种源代码可以自由获取和传播的计算机软件，其拥有者通过开源许可证赋予被许可人对软件进行使用、修改和传播</li></ul></li><li>开源软件的好处<ul><li>源代码可自由传播</li><li>激发创作者的热情</li><li>免费使用降低成本</li></ul></li><li>示例：开源软件<ul><li>Linux, Ubuntu</li><li>Apache, Jboss, Tomcat</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E6%89%98%E7%AE%A1%E5%B9%B3%E5%8F%B0" tabindex="-1">（4）开源软件托管平台</h4><ul><li>Github：全球最有影响力的开源软件托管平台</li><li>SourceForge：一个有影响力的开源软件开发平台和仓库，为开源软件提供存储、协作和发布的支持</li><li>Gitee：中国的开源软件托管平台</li><li>Stack Overflow：全球最大的软件开发知识分享平台，它支持开发者交流和讨论软件开发问题、分享软件开发经验和知识，进而促进相关开发问题的解决，推动开源软件的开发</li></ul><h4 id="%EF%BC%885%EF%BC%89%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%9A%84%E4%BC%98%E5%8A%BF" tabindex="-1">（5）开源软件的优势</h4><ul><li><p>采购和开发的成本更低</p><ul><li>开源软件通常是免费的，即使要付费，其费用也非常低廉</li></ul></li><li><p>软件质量更高、更安全</p><ul><li>核心代码都在公众的视野之中，代码问题（如缺陷、安全漏洞等）很容易被人发现</li></ul></li><li><p>软件研制和交付的更快</p><ul><li>基于开源软件的项目开发可以更为快速地给用户交付软件产品</li></ul></li><li><p>软件功能更为强大</p><ul><li>大量的软件开发者不仅参与软件开发，贡献他们的代码，而且还参与软件的创新，提出和构思软件需求，不断完善软件功能</li></ul></li><li><p>开源软件许可证</p><ul><li>何为开源许可证<ul><li>声明获得开源代码后拥有的权利，界定对别人的开源作品进行何种操作、何种操作是被禁止的，规范开源软件的使用要求和约束</li><li>开发者虽然可自由地获取开源软件的源代码，但在如何使用开源软件方面还需要遵循相关的开源软件协议</li></ul></li><li>二类许可证<ul><li>宽松式开源许可证：三方面特点：代码使用没有任何限制；用户自担代码质量的风险；用户使用开源软件时须披露原始作者</li><li>Copyleft式开源许可证：更多限制，带有许多条件和要求，比如分发二进制代码时须提供源代码，修改后的开源软件须与之前保持一致的许可证等</li></ul></li></ul></li></ul><h4 id="%EF%BC%886%EF%BC%89%E5%BC%80%E6%BA%90%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%88%A9%E7%94%A8" tabindex="-1">（6）开源软件的利用</h4><ul><li>学习开源软件<ul><li>不仅反映了核心开发者的软件技术和功能创意，而且还蕴含了高水平的软件开发技能，如架构设计、编码风格、模块封装等</li></ul></li><li>重用开源代码<ul><li>开源软件构成了支撑软件开发的可重用软件资源库，可实现更大粒度的软件重用</li></ul></li><li>参与开源建设，掌握开源技术，理解开源文化<ul><li>包括反馈软件缺陷、提出软件需求、讨论问题的解决、贡献程序代码等等</li></ul></li><li>重用和集成开源软件来快速搭建高质量的系统</li></ul><h3 id="6-%E8%BD%AF%E4%BB%B6%E8%B4%A8%E9%87%8F" tabindex="-1">6 软件质量</h3><ul><li>软件质量是指软件满足给定需求的程度，它是产品生命线</li><li>正确性（Correctness）：软件满足规格说明和用户要求的程度，即在预定环境下能正确地完成预期功能和非功能需求的程度。</li><li>可靠性（Reliability）：在规定条件下、限定时间范围内，软件系统完成预期功能、不引起系统故障的能力。</li><li>健壮性（Robustness）：在计算环境发生故障、输入无效数据或操作错误等意外情况下，软件仍能做出适当响应的程度。</li><li>有效性（Efficiency）：软件利用计算资源和存储资源以实现其功能的能力</li><li>安全性：包括系统安全（Safety）和信息安全（Security），系统安全是指软件能及时有效地避免给人员、设施、环境、经济等造成损害，信息安全是指软件能有效防控各类的非法获取、传播和使用</li><li>可维护性（Maintainability）：是否易于对其进行修改以更正错误、增强功能、适应新运行环境</li><li>可移植性（Portability）：把软件从一种运行环境转移到另一种运行环境下运行的难易程度</li><li>可重用性（Reusability）：软件模块、构件、设计方案等在其他软件开发中被再次使用程度</li><li>可理解性（Comprehensibility）：软件开发者或用户理解该软件系统的容易程度</li><li>可信性（Dependability）：采取有效措施确认软件满足人们的要求和期望</li><li>持续性（Sustainability）：面对各种突发异常事件，仍能提供令人满意的服务的能力</li><li>可用性（Usability）：使用和操作软件系统难以程度</li><li>互操作性（Interoperability）：软件系统与其他的系统进行交换信息、协同工作的能力</li></ul><h2 id="%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%BF%B0" tabindex="-1">第二章 软件工程概述</h2><h3 id="1-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%BA%A7%E7%94%9F%E8%83%8C%E6%99%AF" tabindex="-1">1 软件工程产生背景</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA%E7%9A%84%E5%87%BA%E7%8E%B0" tabindex="-1">（1）软件危机的出现</h4><ul><li>进度经常延迟</li><li>质量无法保证</li><li>成本超出预算</li><li>软件维护困难</li><li>失败风险很大</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%A6%82%E4%BD%95%E6%9D%A5%E8%A7%A3%E5%86%B3%E8%BD%AF%E4%BB%B6%E5%8D%B1%E6%9C%BA%3F" tabindex="-1">（2）如何来解决软件危机?</h4><ul><li>软件危机根源<ul><li>对软件这样一类复杂和特殊系统的认识不清：软件是新生事物，对其特点、规律性和复杂性认识不够</li><li>没有找到支持软件系统开发的有效方法：基础理论、关键技术、开发过程、支撑工具等</li><li>缺乏成功软件开发实践以及相应的开发经验：系统总结、认真分析、充分借鉴、吸取教训</li></ul></li><li>软件开发迫切需要理论和方法指导，软件工程应运而生</li></ul><h3 id="2-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%9F%BA%E6%9C%AC%E5%86%85%E6%B6%B5" tabindex="-1">2 软件工程基本内涵</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BD%95%E4%B8%BA%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B" tabindex="-1">（1）何为软件工程</h4><ul><li><p>将系统的、规范的、可量化的方法应用于软件的开发、运行和维护的过程；以及上述方法的研究</p><ul><li>系统化：提供完整和全面的解决方法，包括目标、原则、过程模型、开发活动、开发方法和技术等</li><li>规范化：支持各类软件系统的开发，包括语言标准、质量标准、编程标准、方法标准、能力极其改进标准等</li><li>可量化：工作量、成本、进度、质量等要素可以量化，基于定量的数据支持开发和管理，确保科学性和可行性</li></ul></li><li><p>软件工程对软件开发的新认识</p><ul><li>软件是产品(Product)：面向用户，存在质量、成本、利润等特征</li><li>软件开发是一项工程(Project)：存在约束，需要质量保证，进行组织管理，…</li><li>要按工程化方法来组织软件生产<ul><li>分阶段分步骤来实施</li><li>按计划开展开发活动</li><li>进行各种形式质量保证</li><li>采用行之有效的方法</li><li>借助各种工具的支持…</li></ul></li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%89%E8%A6%81%E7%B4%A0" tabindex="-1">（2）软件工程三要素</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/2_3_0.jpg" alt></p><ul><li>过程<ul><li>从管理的视角，回答软件开发、运行和维护需要开展哪些工作、按照什么样的步骤和次序来开展工作</li><li>对软件开发过程所涉及的人、制品、质量、成本、计划等进行有效和可量化的管理</li><li>典型成果<ul><li>过程模型，如瀑布模型、增量模型、原型模型、迭代模型、螺旋模型等等</li><li>方法，如敏捷开发方法、群体化开发方法、DevOps方法</li><li>管理，如配置管理、质量管理、团队组织等</li></ul></li></ul></li><li>方法学(Methodology)<ul><li>从技术的视角，回答软件开发、运行和维护如何做的问题</li><li>为软件开发过程中的各项开发和维护活动提供系统性、规范性的技术支持<ul><li>如何理解和认识软件模型是什么</li><li>如何用不同抽象层次的模型来描述软件制品</li><li>采用什么样的建模语言来描述软件模型等等</li></ul></li><li>典型成果<ul><li>结构化软件开发方法学</li><li>面向对象软件开发方法学</li><li>基于构件的软件开发方法学</li></ul></li></ul></li><li>工具<ul><li>从工具辅助的视角，主要回答如何借助工具来辅助软件开发、运行和维护的问题</li><li>帮助软件开发人员更为高效地运用软件开发方法学来完成软件开发过程中的各项工作，提高软件开发效率和质量，加快软件交付进度。<ul><li>如需求分析、软件设计、编码实现、软件测试、部署运行、软件维护、项目管理、质量保证等，简化软件开发任务，</li></ul></li><li>典型成果：SonarQube、Eclipse等</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%BE%85%E5%8A%A9%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B" tabindex="-1">（3）计算机辅助软件工程</h4><ul><li>什么是计算机辅助软件工程(Computer-Aided Software Engineering, CASE)<ul><li>在软件工程活动中，开发人员按照软件工程的方法和原则，借助于计算机及其软件的帮助来开发、维护和管理软件产品的过程</li></ul></li><li>CASE工具：支持CASE的软件工具，如编辑器、编译器等</li><li>CASE环境：<ul><li>将CASE工具按统一标准和接口组装起来，使工具间、人员间、各个过程间能方便交互的集成环境</li><li>如Visual Studio将编辑、编译、调试、界面设计、安装程序生成等等集成在一起</li></ul></li><li>代码编写，项目管理，软件建模，软件测试，软件运维</li></ul><h4 id="%EF%BC%884%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E7%9A%84%E6%9C%AC%E8%B4%A8" tabindex="-1">（4）软件开发的本质</h4><ul><li>软件开发 = 软件创作 + 软件生产</li><li>软件创作：基于软件开发者的经验和技能，借助于智慧，进行自由创新，如软件设计、编码实现等</li><li>软件生产：基于工程化的手段，遵循约束和规范，开展软件生产，如遵循过程、按照标准、质量保证等</li></ul><h4 id="%EF%BC%885%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%9A%84%E7%9B%AE%E6%A0%87" tabindex="-1">（5）软件工程的目标</h4><p>在成本、进度等约束下，指导软件开发和运维，开发出满足用户要求的足够好软件</p><h4 id="%EF%BC%886%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%8E%9F%E5%88%99" tabindex="-1">（6）软件工程原则</h4><ul><li>抽象与建模<ul><li>抽象：将与相关开发活动所关注的要素提取出来，不关心的要素扔掉，形成与该开发活动相关的软件要素</li><li>建模：基于特定的抽象，借助于建模语言（如数据流图、UML等），建立起基于这些抽象的软件模型，进而促进对软件系统的准确理解</li></ul></li><li>模块化<ul><li>将软件系统的功能分解和实现为若干个模块，每个模块具有独立的功能，模块之间通过接口进行调用和访问。</li></ul></li><li>软件重用<ul><li>在软件开发过程中尽可能利用已有的软件资源和资产（如函数库、类库、构件库、开源软件、代码片段等）来实现软件系统</li><li>努力开发出可被再次重用的软件资源（如函数、类、构件等）</li><li>有助于提高软件开发效率，降低软件开发成本，满足开发工程约束，得到高质量的软件产品</li></ul></li><li>信息隐藏<ul><li>模块内部信息（如内部的语句、变量等）对外不可见或不可访问，模块间仅仅交换那些为完成系统功能所必需交换的信息（如接口）</li><li>模块设计时只对外提供可见的接口，不提供内部实现细节。信息隐藏原则可提升模块的独立性，减少错误向外传播，支持模块的并行开发</li></ul></li><li>关注点分离</li><li>分而治之</li><li>双向追踪原则<ul><li>当某个软件制品发生变化时，一方面要追踪这种变化会对那些软件制品产生影响，进而指导相关的开发和维护工作，此为正向追踪；另一方面要追踪产生这种变化的来源，或者说是什么因素导致了该软件制品的变化，明确软件制品发生变化的原因及其合理性，此为反向追踪。</li></ul></li><li>工具辅助</li></ul><h2 id="%E7%AC%AC%E4%B8%89%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%92%8C%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95" tabindex="-1">第三章 软件工程和开发方法</h2><h3 id="1-%E4%BD%95%E4%B8%BA%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1">1 何为软件过程模型</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B" tabindex="-1">（1）软件过程</h4><ul><li>过程(Process)<ul><li>活动：明确要做哪些事情，包括具体的活动</li><li>关系：活动间存在逻辑关系，如依赖和先后次序</li></ul></li><li>软件过程：<ul><li>按照项目进度、成本和质量要求，遵循用户需求，开发和维护软件、管理软件项目的一系列有序软件开发活动</li><li>软件开发活动：技术活动和管理活动</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1">（2）软件过程模型</h4><ul><li>定义了软件开发的具体活动以及活动间的逻辑关系</li><li>描述包括：<ul><li>过程中的活动以及这些活动的顺序</li><li>产品交付物：软件过程活动的产出物;</li><li>角色：反映了参与过程的人在其中的职责;</li><li>前置条件和后置条件：在一个过程活动执行之前和之后，或者产品生产之前和之后必须满足的条件。</li><li>工具</li><li>资源</li></ul></li></ul><h3 id="2-%E6%9C%89%E5%93%AA%E4%BA%9B%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1">2 有哪些软件过程模型</h3><ul><li>瀑布模型</li><li>增量模型</li><li>迭代模型</li><li>原型模型</li><li>螺旋模型</li><li>基于构件的过程模型</li><li>UP模型</li></ul><h4 id="%EF%BC%881%EF%BC%89%E7%80%91%E5%B8%83%E6%A8%A1%E5%9E%8B" tabindex="-1">（1）瀑布模型</h4><ul><li>步骤<ol><li><strong>需求分析</strong></li></ol><ul><li>活动<ul><li>任务：定义软件需求，包括功能、非功能需求</li><li>层次和视角：用户角度，仅描述问题和需求</li></ul></li><li>方法<ul><li>依据：用户的期望和要求</li><li>不断与用户进行交流和商讨，抽象、问题分解、多视点等技术</li></ul></li><li>产出：软件需求模型；软件需求文档；软件确认测试计划；</li></ul><ol start="2"><li><strong>概要设计</strong></li></ol><ul><li>活动<ul><li>任务：建立软件总体架构、制定集成测试计划</li><li>层次和视角：宏观、全局、整体、战略性</li></ul></li><li>方法<ul><li>依据：软件需求文档</li><li>自顶向下, 逐步求精,  抽象, 模块化, 局部化，信息隐藏</li></ul></li><li>产出：软件概要设计模型、软件概要设计文档、软件集成测试计划</li></ul><ol start="3"><li><strong>详细设计</strong></li></ol><ul><li>活动<ul><li>任务：设计模块内部细节(算法、数据结构)，制订单元测试计划</li><li>层次和视角：微观、局部、细节性</li></ul></li><li>方法<ul><li>依据：概要设计文档、软件需求文档</li><li>高质量的软件设计原则，如单入口单出口</li></ul></li><li>产出：软件详细设计模型、软件详细设计文档、单元测试计划</li></ul><ol start="4"><li><strong>编码实现</strong></li></ol><ul><li>活动<ul><li>任务：编写程序代码并进行单元测试和调试</li><li>层次和视角：最终的实现代码</li></ul></li><li>方法<ul><li>依据：软件概要和详细设计文档、单元测试计划</li><li>采用某种程序设计语言(如C、C++、Java)</li></ul></li><li>产出：经过单元测试的源程序代码</li></ul><ol start="5"><li><strong>集成测试</strong></li></ol><ul><li>活动<ul><li>任务：组装软件模块并进行测试以发现问题</li><li>层次和视角：系统结构、接口</li></ul></li><li>方法<ul><li>依据：软件概要设计文档、软件集成测试计划</li><li>软件集成测试工具</li></ul></li><li>产出：经过集成测试、修复缺陷的源程序代码，集成测试报告</li></ul><ol start="6"><li><strong>确认测试</strong></li></ol><ul><li>活动<ul><li>任务：测试软件是否满足用户需求</li><li>层次和视角：从用户角度，聚焦需求是否得以正确实现</li></ul></li><li>方法<ul><li>依据：软件确认测试计划、软件需求文档</li><li>软件测试支撑工具</li></ul></li><li>产出：经过确认测试、修复缺陷后的代码，软件确认测试报告</li></ul></li><li>特点：<ul><li>与软件生命周期相互一致</li><li>每个活动结束后需要评审</li><li>相邻活动间存在因果关系</li></ul></li><li>优点：简单，一目了然，易理解、掌握、应用和管理</li><li>缺点：违背现实</li><li>适用于需求易于定义、不易变动的软件系统</li><li>改进的瀑布模型：带反馈和回溯</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%A2%9E%E9%87%8F%E6%A8%A1%E5%9E%8B" tabindex="-1">（2）增量模型</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_4.jpg" alt></p><ul><li>优点：渐进快速交付，并行开发，提高效率</li><li>不足：<ul><li>要求一开始完整确定需求，建立系统架构的要求更高</li><li>管理复杂，增量开发，要保持多个版本的制品一致性</li><li>产品是慢慢成熟的，跟办事规程不匹配</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BF%AD%E4%BB%A3%E6%A8%A1%E5%9E%8B(iterative-model)" tabindex="-1">（3）迭代模型(Iterative Model)</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_5.jpg" alt></p><ul><li>优点：<ul><li>每次迭代是一完整过程</li><li>体现了小步快跑的开发理念，降低风险</li><li>适合需求难导出、不甚明确且持续变动的软件</li></ul></li><li>不足<ul><li>迭代多少次不确定</li><li>管理较为复杂</li><li>高素质管理者和团队</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%9E%8B(prototype-model)" tabindex="-1">（4）原型模型(Prototype Model)</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_6.jpg" alt></p><ul><li>软件原型:用户界面+执行流程</li><li>特点<ul><li>软件原型作为交流载体和媒介</li><li>支持用户参与到软件开发中</li><li>持续、渐进地导出用户要求</li></ul></li><li>适合于需求难导出、模糊且不易确定的软件</li></ul><h4 id="%EF%BC%885%EF%BC%89%E8%9E%BA%E6%97%8B%E6%A8%A1%E5%9E%8B(spiral-model)" tabindex="-1">（5）螺旋模型(Spiral Model)</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_7.jpg" alt></p><ul><li>优点：<ul><li>集成迭代模型和原型模型</li><li>引入风险分析，风险驱动</li><li>适合于需求不明确、开发风险高、开发过程中需求变更大的内部软件项目</li></ul></li><li>不足：风险驱动、管理复杂</li></ul><h4 id="%EF%BC%886%EF%BC%89%E4%B8%8D%E5%90%8C%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%89%B9%E7%82%B9" tabindex="-1">（6）不同软件过程模型的特点</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_2_8.jpg" alt></p><h3 id="3-%E5%A6%82%E4%BD%95%E6%9D%A5%E9%80%89%E6%8B%A9%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B" tabindex="-1">3 如何来选择软件过程模型</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E9%80%89%E6%8B%A9" tabindex="-1">（1）软件过程模型的选择</h4><ul><li><p>考虑软件项目的特点</p></li><li><p>软件开发团队的水平</p></li><li><p>分析软件过程模型特点</p></li><li><p>互联网应用软件的开发过程模型</p><ul><li>特点：软件需求不确定且快速变化</li><li>如：12306 APP软件，微信软件，淘宝软件</li><li>选用瀑布模型不合适，迭代模型较为合适</li></ul></li><li><p>装备软件的开发过程模型</p><ul><li>特点：软件需求确定且较为稳定</li><li>如：飞行控制软件</li><li>可考虑选用瀑布模型，用迭代模型不是很合适</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BC%A0%E7%BB%9F%E8%BD%AF%E4%BB%B6%E8%BF%87%E7%A8%8B%E6%A8%A1%E5%9E%8B%E7%9A%84%E7%89%B9%E7%82%B9%E5%92%8C%E4%B8%8D%E8%B6%B3" tabindex="-1">（2）传统软件过程模型的特点和不足</h4><ul><li>软件开发和运维的大量工作用于撰写软件文档，而非去编写程序代码</li><li>软件开发过程中会花费大量时间和精力用于软件文档的评审，以确保软件质量</li><li>一旦软件需求发生变化，开发人员需要修改软件需求文档，并据此来调整其他的一系列文档，最后再修改程序代码</li><li>等较长时间才能得到可运行软件系统</li><li><strong>以文档为中心的重型软件开发方法，非常笨重</strong></li></ul><h3 id="4-%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95%E6%A6%82%E8%BF%B0" tabindex="-1">4 软件开发方法概述</h3><ul><li>Parnas方法</li><li>结构化方法</li><li>面向对象方法</li><li>给予构件的开发方法</li><li>敏捷开发方法</li><li>群体化开发方法</li></ul><h4 id="%EF%BC%881%EF%BC%89parnas%E6%96%B9%E6%B3%95" tabindex="-1">（1）Parnas方法</h4><ul><li>出发点：可靠性，可维护性</li><li>策略<ul><li>信息隐蔽：在设计时仅列出将来可能发生变化的因素，并在模块划分时将这些因素局部化</li><li>意外故障处理：软件的非连续性，小错误会引发严重的事故，所以必须加强防范</li></ul></li><li>特点：Parnas对软件开发提出了深刻的见解，但没有明确的流程，不能独立使用</li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%BB%93%E6%9E%84%E5%8C%96%E6%96%B9%E6%B3%95" tabindex="-1">（2）结构化方法</h4><ul><li>出发点：清晰的程序结构，可理解性。</li><li>求解复杂问题的一般办法：分而治之（模块化）</li><li>策略：模块化，自顶向下、逐步求精；SA+SD+SP（系统分析（System Analysis），系统设计（System Design），软件编程（Software Programming））</li><li>程序=数据+算法，分为：<ul><li>面向数据流的结构化方法</li><li>面向数据结构的结构化方法</li></ul></li><li>特点：<ul><li>数据和行为分开——鸿沟</li><li>难开发、难理解、不安全、可维护性低</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">（3）面向对象的方法</h4><ul><li>出发点：对问题领域的实体特征直接自然模拟，更易于理解和开发，结构更稳定。<ul><li>程序=对象+消息</li></ul></li><li>策略：<ul><li>通过一组对象的交互来完成系统的功能，对象是领域实体的软件抽象</li><li>OOA+OOD+OOP 面向对象分析（Object-Oriented Analysis）、面向对象设计（Object-Oriented Design）和面向对象编程（Object-Oriented Programming）</li><li>自顶向下和自底向上相结合</li></ul></li><li>特点：<ul><li>对象把数据和操作封装在一起</li><li>更稳定、更安全、提高了可维护性和可重用性</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%9E%84%E4%BB%B6%E7%9A%84%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95" tabindex="-1">（4）基于构件的开发方法</h4><ul><li>出发点：提高软件开发效率和质量的基本途径是复用，用大块编程取代，程序=构件+连接件</li><li>策略：<ul><li>有目的地开发可复用的构件（develop for reuse）</li><li>管理已有的构件 （management for reuse）</li><li>复用已有的构件开发新软件（development by reuse）</li></ul></li><li>特点：<ul><li>降低开发和维护成本</li><li>提升开发效率和质量</li></ul></li></ul><h4 id="%EF%BC%885%EF%BC%89%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95" tabindex="-1">（5）敏捷开发方法</h4><ul><li><p>定义：一种轻量级软件开发方法（相对于重量级的软件开发方法而言）</p></li><li><p>主张软件开发要以代码为中心，快速、轻巧和主动应对需求变化，持续、及时交付可运行的软件系统</p></li><li><p>敏捷开发方法的基本观点</p><ul><li>较之于过程和工具，应更加重视人和交互的价值</li><li>较之于面面俱到文档，应更加重视可运行软件系统的价值</li><li>较之于合同谈判，应更加重视客户合作的价值</li><li>较之于遵循计划，应更加重视响应用户需求变化的价值</li></ul></li><li><p>敏捷方法体现的思想</p><ul><li>强化可运行的软件，弱化文档：以可运行软件为中心来开展软件开发</li><li>以适应变化为目的来推进开发：针对变化不断进行优化和调整任务、产品和计划等</li><li>以人为本：敏捷软件开发是面向人的而不是面向过程的，让方法、技术、工具、过程等来适应人，而不是让人来适应它们</li></ul></li><li><p><strong>敏捷开发方法是一大类方法的统称，它们遵循敏捷思想</strong></p></li><li><p>支持敏捷软件开发的技术</p><ul><li>极限编程</li><li>测试驱动开发<ul><li>在开发程序代码之前，先确定和编写测试</li><li>程序员首先要思考如何对某个功能进行测试，设计好相应的测试用例，编写好相关的测试代码，然后编写相应的程序代码以通过软件测试</li></ul></li><li>Scrum方法：旨在通过增量或迭代的方式加强软件项目的管理<ul><li>首先，产品拥有者需创建软件产品订单库即“Backblog”<ul><li>描述软件产品需提供的功能需求以及它们的优先级排序</li></ul></li><li>其次，筛选出最应该实现的软件需求，<ul><li>Scrum主人基于“Backblog”中各项软件需求及其优先级，形成待实现的软件产品冲刺订单库，即“SprintLog”</li></ul></li><li>然后，软件开发将进入冲刺“Sprint”周期<ul><li>以实现选定软件订单，每个冲刺就是一次增量开发，一般持续1到4周</li></ul></li><li>最后，共同开展Scrum评审<ul><li>一次冲刺完成后，每个团队成员演示自己的开发成果，大家共同审查成果是否高质量地实现了既定功能，并就其中的问题进行反思，以指导和改进下一次冲刺</li></ul></li></ul></li></ul></li></ul><h4 id="%EF%BC%886%EF%BC%89%E7%BE%A4%E4%BD%93%E5%8C%96%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E6%96%B9%E6%B3%95" tabindex="-1">（6）群体化软件开发方法</h4><ul><li><p>依托互联网平台来吸引、汇聚、组织和管理互联网上的大规模软件开发人员，通过竞争、合作、协商等多种自主协同方式，让他们参与软件开发、分享软件开发知识和成果、贡献智慧和力量的一种新颖软件开发方法</p></li><li><p>群体化软件开发是一种基于社区的软件开发模式<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/3_4_1.jpg" alt></p></li><li><p>群体化软件开发方法的支撑关键技术</p><ul><li>基于社区的群体化组织<ul><li>开源软件社区将核心开发人员与外围开发人员有机地结合在一起，依托软件仓库进行分布式协同开发</li></ul></li><li>基于Issue的任务管理<ul><li>开发任务的二类形式：修复软件缺陷、功能实现需求</li><li>创建Issue，提出软件开发任务</li><li>讨论Issue，分析开发任务的意义和价值</li><li>指派Issue，安排人员来完成Issue</li><li>掌控Issue，掌握Issue解决的进展状况</li></ul></li><li>基于Git的分布式版本管理</li><li>基于Pull/Request的分布式协同开发<ul><li>每个开发人员在本地完成编程工作后，不是直接向中心仓库推送代码，而是通过发送一个P/R合并请求，将原始代码库的克隆库推荐合并到中心仓库之中</li><li>接收到合并请求后，软件项目管理团队和开发人员群体需要对P/R进行审查</li></ul></li><li>基于群智的知识分享</li></ul></li></ul><h2 id="%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E8%AE%A1%E5%88%92%E7%AE%A1%E7%90%86" tabindex="-1">第四章 软件计划管理</h2><h3 id="1-%E8%BD%AF%E4%BB%B6%E8%AE%A1%E5%88%92" tabindex="-1">1 软件计划</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AE%A1%E5%88%92%E6%A6%82%E8%BF%B0" tabindex="-1">（1）软件计划概述</h4><ul><li>软件计划是对软件实施所涉及的目标、任务、活动、资源、进度等进行规划</li><li>合同和策划阶段<ul><li>制定初步软件开发计划</li><li>软件项目计划分发到各个开发成员</li><li>每个成员准确了解各自任务和工作以及实施进度要求</li></ul></li><li>项目实施过程<ul><li>根据软件开发的具体计划有序实施项目</li><li>发现项目实施中存在的问题：如进度滞后</li><li>出现偏差后调整软件项目计划</li></ul></li><li>项目完成之后<ul><li>总结项目计划实施情况</li><li>分析原因，指导后续其他项目的计划制定</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%BF%9B%E5%BA%A6%E5%AE%89%E6%8E%92" tabindex="-1">（2）软件进度安排</h4><ul><li><p>两种途径</p><ul><li>项目、资源 → 制定计划、交付日期</li><li>从后往前安排 ← 最后期限</li></ul></li><li><p>进度管理中要妥善处理的2个问题</p><ul><li>识别任务之间的并行、依赖关系</li><li>资源的分配和优化</li></ul></li><li><p>甘特图</p><ul><li>优点：简单，醒目，能动态地反映开发进展</li><li>缺点：不表示活动之间的依赖关系</li></ul></li><li><p>计划网络图</p><ul><li>反映任务间的顺序、并行依赖关系</li></ul></li><li><p>软件进度计划的任务</p><ul><li>确定每个活动的最早（最迟）开始时间和完成时间。</li><li>在开发方已有的资源投入下求解该软件项目的交付日期（工期），或给定工期（投资方要求）条件下来安排各活动的开始时间和结束时间。</li><li>确定关键活动、重点监管关键线路。所谓<strong>关键活动</strong>是指由于这些活动完成的耽误或更改，将直接影响项目工期目标完成。全部由关键活动组成的线路或者线路长度最长的线路称为关键线路。</li><li>根据给定的工期目标和已有项目各活动时长的条件下，对进度进行调整和优化</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%AE%A1%E5%88%92%E7%9A%84%E4%BC%98%E5%8C%96" tabindex="-1">（3）计划的优化</h4><ul><li>工期优化<ul><li>若网络计划图的计算工期大于要求的工期时，必须根据要求计划的进度，缩短工程项目的完工工期。主要从两个方面考虑：<ul><li>优化活动间的逻辑关系，串行到并行</li><li>采取技术措施，提高开发效率，缩短关键工序的持续时间。</li><li>采取组织措施，充分利用非关键工序的机动时间，合理调配人力、物力和资金等，增加对关键工序的投入，以便缩短关键工序的持续时间</li></ul></li></ul></li><li>资源优化<ul><li>在项目工期不变的条件下，合理地利用资源。具体包括：<ul><li>优先安排关键工序所需的资源</li><li>利用非关键工序的机动时间，错开各工序的开始时间，避开在同一时区内集中使用同一资源以免出现高峰</li><li>在确实受到资源制约，或在考虑综合经济效益的条件下，在许可时也可适当推迟工期，实现错开高峰的目的。</li></ul></li></ul></li></ul><h3 id="2-%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86" tabindex="-1">2 软件管理</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86%E7%9A%84%E7%89%B9%E7%82%B9" tabindex="-1">（1）软件管理的特点</h4><ul><li>目标性: 获得预期的结果</li><li>进度性: 在限定期间完成</li><li>约束性: 具有有限的资源（如人员、经费、工具等）</li><li>多方性: 涉及多个不同人与组织</li><li>独立性: 无重复性</li><li>不确定性: 项目的实施及其结果不确定性</li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86%E5%86%85%E5%AE%B9" tabindex="-1">（2）软件管理内容</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/4_2_2.jpg" alt></p><ul><li><p>何为软件项目管理?</p><ul><li>对软件项目所涉及的过程、人员、产品、成本和进度等要素进行度量、分析、规划、组织和控制的过程，以确保软件项目按照预定的成本、进度、质量要求顺利完成</li><li>人员：团队建设和管理纪律和激励机制</li><li>过程：过程定义，软件度量，项目计划，项目跟踪</li><li>产品：软件产品质量管理，软件产品配置管理，软件产品需求管理</li></ul></li><li><p>过程管理</p><ul><li><ol><li>过程定义：定义、文档化软件开发过程、明确软件开发活动，得到一个良定义、全面、灵活、简洁和可供剪裁的软件开发过程</li></ol></li><li><ol start="2"><li>软件度量：对软件项目的过程、产品、资源的属性的定量描述，如软件项目的规模、成本、工作量、质量等</li></ol></li><li><ol start="3"><li>项目计划</li></ol></li><li><ol start="4"><li>项目跟踪：随时掌握软件项目的实际开发情况，提供项目实施情况的可视性，保证计划的适时调整</li></ol></li><li><ol start="5"><li>风险管理：对软件开发过程中各种风险进行识别、分析、预测、评估、监控的过程</li></ol></li></ul></li><li><p>产品管理</p><ul><li>软件质量保证：为软件产品的质量提供某种可视性，知道哪些地方有质量问题，便于改进方法和措施，提高软件产品的质量</li><li>软件配置管理：对软件基线产品进行标识、存储、更动和发放，记录和报告其状态，确保软件产品的正确性和一致性，并对上述工作的审计的过程</li><li>软件需求管理：获取、文档化和评审用户需求，对用户需求变更进行控制和管理</li></ul></li><li><p>人员管理</p><ul><li>软件项目团队：确定开发团体的结构、明确人员的角色和任务、加强人员间的交流与合作，结构合理、任务明确、团结协作、交流顺畅</li><li>纪律激励机制：制定和实施纪律约束团体，通过激励机制激发人员的激情，严格的纪律，饱满的激情</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%AE%A1%E7%90%86%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">（3）软件管理的方法</h4><ul><li>人员组织方式<ul><li>民主制程序员组</li><li>主程序员组</li><li>现代程序员组：实际的“主程序员”应该由两个人共同担任：  一个技术负责人，负责小组的技术活动；一个行政负责人，负责所有非技术性事务的管理决策。</li></ul></li></ul><h2 id="%E7%AC%AC%E4%BA%94%E7%AB%A0-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90" tabindex="-1">第五章 需求分析</h2><h3 id="1-%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E5%9F%BA%E7%A1%80" tabindex="-1">1 需求分析基础</h3><ul><li>需求的概念：分类、特点、质量要求、重要性</li><li>需求工程<ul><li>需求工程的一般过程</li><li>需求工程的常用方法<ul><li>结构化需求分析方法</li><li>面向对象需求分析方法</li></ul></li></ul></li><li>需求工程的输出、评审和管理</li></ul><h4 id="%EF%BC%881%EF%BC%89%E9%9C%80%E6%B1%82%E7%9A%84%E6%A6%82%E5%BF%B5" tabindex="-1">（1）需求的概念</h4><ul><li><p>软件开发的本质<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/5_1_1.jpg" alt></p></li><li><p>何为利益相关方(stakeholder)</p><ul><li>从软件系统中受益或与软件系统相关的人、组织或者系统</li><li>受益：使用、获益、盈利</li><li>相关：发生操作和交互、存在关联性</li></ul></li><li><p>软件利益相关方的表现形式</p><ul><li>用户：最终使用软件的人</li><li>客户：从中获取利益的组织</li><li>系统：与待开发系统进行交互的系统</li><li>开发者：负责开发软件系统的人</li><li>示例：空巢老人看护软件利益相关方<ul><li>用户：老人，家属，医生</li><li>客户：投资方</li><li>系统：机器人</li></ul></li></ul></li><li><p>何为软件需求(Software Requirement)?</p><ul><li>从软件本身的角度，软件需求是指软件用于解决现实世界问题时所表现出的功能和性能等方面的要求</li><li>从软件利益相关方的角度，软件需求是指软件系统的利益相关方对软件系统的功能和质量，以及软件运行环境、交付进度等方面提出的期望和要求</li></ul></li><li><p>软件需求的类别</p><ul><li>软件功能性需求(Functional)<ul><li>能够完成的功能及在某些场景下可展现的外部可见行为或效果</li></ul></li><li>软件质量方面的需求(Quality)<ul><li>外部质量属性，外部可展现的，用户、客户等会非常关心，如运行性能、可靠性、易用性等</li><li>内部质量属性，隐藏在内部的，软件开发工程师会非常关心，如可扩展性、可维护性、可理解性</li></ul></li><li>软件开发约束性需求(Constraint)<ul><li>开发成本、交付进度、技术选型、遵循标准等方面提出的要求</li></ul></li><li>软件需求示例：空巢老人看护软件<ul><li>功能性需求：自主跟随老人、获取老人图像和视频信息、检测老人是否摔倒等</li><li>质量方面的需求：始终保持在2米的安全距离，对机器人的控制在2秒内响应等</li><li>约束性需求：成本不能超出50万元，要求半年内交付使用等等</li></ul></li></ul></li><li><p>软件需求的重要性</p><ul><li>软件的价值所在</li><li>软件开发的基础和前提</li><li>软件验收的标准和依据</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E9%9C%80%E6%B1%82%E5%B7%A5%E7%A8%8B" tabindex="-1">（2）需求工程</h4><ul><li><p>旨在用工程的理念和方法来指导软件需求实践，它提供了一系列的过程、策略、方法学和工具，帮助需求工程师加强对业务或领域问题及其环境的理解、获取和分析软件需求，指导软件需求的文档化和评审，以尽可能获得准确、一致和完整的软件需求，产生软件需求的相关软件制品<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/5_1_2.jpg" alt></p></li><li><p>需求工程的方法学</p><ul><li>抽象<ul><li>20世纪70年代结构化数据和数据流抽象</li><li>20世纪90年代面向对象抽象</li></ul></li><li>建模<ul><li>采用自然语言或结构化自然语言</li><li>图形化的需求建模语言</li></ul></li><li>分析<ul><li>循序渐进地获得软件需求细节，进而逐步得到详细的软件需求</li></ul></li></ul></li><li><p>需求工程方法（详见复习重点）</p><ul><li>结构化需求分析方法</li><li>面向对象需求分析方法</li></ul></li><li><p>需求工程的输出</p><ul><li>软件需求模型</li><li>软件需求文档</li><li>软件原型</li><li>修正的软件开发计划</li><li>验收测试计划</li></ul></li></ul><h3 id="2-%E9%9C%80%E6%B1%82%E8%8E%B7%E5%8F%96" tabindex="-1">2 需求获取</h3><ul><li><p>获取软件需求是指得到或产生软件需求</p></li><li><p>明确问题和基于软件的解决方案</p></li><li><p>导出和构思初步软件需求</p></li><li><p>描述初步软件需求</p><ul><li>自然语言描述</li><li>软件原型模式</li><li><strong>用例图描述</strong>（详见复习重点）</li></ul></li><li><p>用例的进一步详细描述</p><ul><li>用例名：用户登录</li><li>用例标识： UC-UserLogin</li><li>主要执行者：家属、医生</li><li>目标：通过合法身份登录系统以获得操作权限</li><li>范围：空巢老人看护软件</li><li>前置条件：使用App软件之时</li><li>交互动作：<ul><li>用户输入账号和密码</li><li>系统验证用户账号和密码的正确性和合法性</li><li>验证正确和合法则意味着登录成功</li></ul></li></ul></li></ul><h3 id="3-%E5%88%86%E6%9E%90%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82" tabindex="-1">3 分析软件需求</h3><h4 id="%EF%BC%881%EF%BC%89%E5%88%86%E6%9E%90%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E6%A6%82%E8%BF%B0" tabindex="-1">（1）分析软件需求概述</h4><ul><li><p>基于初步软件需求，进一步精化和分析软件需求，确定软件需求优先级，建立软件需求模型，发现和解决软件需求缺陷，形成高质量的软件需求模型和软件需求规格说明书</p></li><li><p>用例视角</p><ul><li>具有哪些功能、功能间有何关系、功能与利益相关方有何关系</li><li>UML提供了用例图来分析和描述用例视角的软件需求模型</li></ul></li><li><p>行为视角</p><ul><li>用例是如何通过业务领域中一组对象以及它们间的交互来达成的</li><li>UML提供了交互图、状态图来描述行为视角的软件需求模型</li></ul></li><li><p>结构视角</p><ul><li>业务领域有哪些重要的领域概念以及它们之间具有什么样的关系</li><li>UML提供了类图来描述和分析业务领域的概念模型</li></ul></li><li><p><strong>UML交互图</strong> 详见重点</p></li><li><p><strong>类图</strong> 详见重点</p></li><li><p><strong>对象图</strong></p><ul><li>类图在系统的运行过程中某个时刻点上或某一时间段内的实例化样本<ul><li>类图中的一个类在对象图中可表现为多个活跃的对象实例</li><li>对象图的链接边是类图中关联边的实例化</li><li>类图中的其他边，如继承、依赖等在对象图中则无从表现</li></ul></li><li>示例：<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E5%AF%B9%E8%B1%A1%E5%9B%BE%E7%A4%BA%E4%BE%8B.jpg" alt></li><li>不常用</li></ul></li><li><p><strong>状态图</strong></p><ul><li>功效<ul><li>描述实体（对象、系统）在事件刺激下的反应式动态行为及其导致的状态变化</li><li>刻画了实体的可能状态、每个状态下可响应事件、响应动作、状态迁移</li></ul></li><li>图的构成<ul><li>节点：状态</li><li>边：迁移，即状态间因事件刺激而触发的状态变化</li></ul></li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%88%86%E6%9E%90%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E8%BF%87%E7%A8%8B" tabindex="-1">（2）分析软件需求过程</h4><ol><li>分析和确定软件需求优先级<ul><li>分析软件需求重要性</li><li>分析软件需求优先级</li><li>确定用例分析和实现的次序</li></ul></li><li>分析和确定软件需求模型<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E5%BB%BA%E7%AB%8B%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E6%A8%A1%E5%9E%8B%E5%85%B7%E4%BD%93%E6%AD%A5%E9%AA%A4.jpg" alt><br><strong>分析和建立用例的交互模型</strong>见重点<ul><li>分析和建立分析类模型<ul><li>确定分析类</li><li>确定分析类的职责</li><li>确定分析类的属性</li><li>确定分析类之间的关系</li><li>绘制分析类图</li></ul></li><li>分析和建立软件需求的状态模型<ul><li>用UML的状态图来描述这些对象的状态模型，以刻画对象拥有哪些状态、对象的状态如何受事件的影响而发生变化</li></ul></li></ul></li></ol><h4 id="%EF%BC%883%EF%BC%89%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3%E5%8F%8A%E8%AF%84%E5%AE%A1" tabindex="-1">（3）软件需求文档及评审</h4><h2 id="%E7%AC%AC%E5%85%AD%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1" tabindex="-1">第六章 软件设计</h2><h3 id="1-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%A6%82%E8%BF%B0" tabindex="-1">1 软件设计概述</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80" tabindex="-1">（1）软件设计基础</h4><ul><li><p>软件设计：针对软件需求，综合考虑各种制约因素，探究软件实现的解决方案</p></li><li><p>设计前提：软件需求</p><ul><li>定义了要做什么样的软件</li></ul></li><li><p>设计考虑：制约因素</p><ul><li>资源：时间、人力、财力、开发辅助工具</li><li>技术：技术平台，如DBMS还是文件系统<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B.jpg" alt></li></ul></li><li><p>软件设计过程</p><ul><li>软件结构设计<ul><li>从全局和宏观视角、站在最高抽象层次来设计软件系统</li></ul></li><li>用户界面设计<ul><li>设计软件对外展示以及与用户进行交互的界面，关注软件如何与用户进行交互</li></ul></li><li>软件详细设计<ul><li>对体系结构设计和人机交互设计成果进行细化和精化，获得高质量的、充分细化的软件设计模型</li><li>数据设计；接口设计；类设计；算法设计；</li></ul></li></ul></li><li><p>软件设计元素</p><ul><li>设计类：类既是最基本的设计单元，也是最基本的模块单元<br>软构件</li><li>软构件<ul><li>可分离、可单独重用、可独立部署和执行的一类设计元素</li><li>如动态链接库（.DLL）、可运行的Java JAR包、微服务镜像等就属于软构件</li></ul></li><li>子系统<ul><li>完成特定功能、逻辑上相互关联的一组模块集合</li><li>有助于管理软件系统的复杂度，简化软件设计和实现</li></ul></li></ul></li><li><p>软件设计基本原则</p><ul><li>抽象原则</li><li>模块化、高内聚度和低耦合度原则</li><li>信息隐藏原则</li><li>关注点分离原则</li><li>软件重用原则</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%B3%95" tabindex="-1">（2）软件设计方法</h4><ul><li>结构化方法<ul><li><ol><li>复审并精化数据流图</li></ol></li><li><ol start="2"><li>确定输入流和输出流的边界</li></ol></li><li><ol start="3"><li>第一级分解方法</li></ol></li><li><ol start="4"><li>第二级分解方法</li></ol></li><li><ol start="5"><li>软件结构求精</li></ol></li></ul></li><li>面向对象方法<ul><li><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B.jpg" alt></li><li>用包图表示的软件系统的结构设计</li><li>用交互图来表示用户界面设计</li></ul></li></ul><h3 id="2-%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1" tabindex="-1">2 软件体系结构设计</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E5%9F%BA%E7%A1%80" tabindex="-1">（1）软件体系结构基础</h4><ul><li><p>软件体系结构设计元素</p><ul><li>构件/组件(Component)：构成体系结构的基本功能部件<ul><li>软件系统中的物理模块，具有特定的功能和精确定义的对外接口，外界可通过接口来访问它</li><li>例：.dll,.jar文件</li></ul></li><li>连接件：组件之间的连接和交互关系<ul><li>每个软构件并非孤立，它们之间通过连接进行交互</li><li>交互的目的是为了交换数据、获得服务</li><li>例：接口，端口</li></ul></li><li>约束</li></ul></li><li><p>软件体系结构设计视图</p><ul><li>逻辑视图</li><li>开发视图</li><li>部署视图</li><li>运行视图</li></ul></li><li><p>软件体系结构建模</p><ul><li>包图</li><li>构件图</li><li>部署图<br>软件体系结构风格<br>分层风格、管道过滤器风格、黑板风格、MVC风格、SOA风格、消息总线风格</li></ul></li><li><p>软件设计模式：以设计重用为目的，采用一种良定义的、正规的、一致的方式记录的软件设计经验</p></li><li><p>常用软件体系结构风格</p><ul><li>分层风格<ul><li>层次间的关系<ul><li>每层为其紧邻上层提供服务，使用紧邻下层所提供的服务</li><li>上层向下层发出服务请求，下层为上层反馈服务结果</li><li>下层向上层提供事件信息，上层对下层通知做出处理</li></ul></li><li>特点：松耦合，可替换，可复用，标准化</li></ul></li><li>管道与过滤器风格<ul><li>构件<ul><li>将软件功能实现为一系列处理步骤，每个步骤封装在一个过滤器构件中</li></ul></li><li>连接子<ul><li>相邻过滤器间以管道连接，一个过滤器的输出数据借助管道流向后续过滤器，作为其输入数据</li></ul></li><li>编译器采用的就是一个典型的管道/过滤器风格</li></ul></li><li>黑板风格：将软件系统划分为黑板、知识源和控制器三类构件<ul><li>黑板：负责保存问题求解过程中的状态数据，并提供这些数据的读写服务</li><li>知识源：负责根据黑板中存储的问题求解状态评价其自身的可应用性，进行部分问题求解工作，并将此工作的结果数据写入黑板</li><li>控制器：负责监视黑板中不断更新的状态数据，安排（多个）知识源的活动</li></ul></li><li>MVC风格<ul><li>模型构件：负责存储业务数据并提供业务逻辑处理功能</li><li>视图构件：负责向用户呈现模型中的数据</li><li>控制器：在接获模型的业务逻辑处理结果后，负责选择适当的视图作为软件系统对用户的界面动作的响应</li><li>步骤：<ul><li>创建视图，视图对象从模型中获取数据并呈现用户界面</li><li>控制器将用户界面事件转换为业务逻辑处理功能的调用</li><li>模型进行业务逻辑处理，将处理结果回送给控制器，必要时还需将业务数据变化事件通知给所有视图</li></ul></li></ul></li><li>SOA风格<ul><li>将软件系统的软构件抽象为一个个的服务（Service），每个服务封装了特定的功能并提供了对外可访问的接口</li><li>任何一个服务既可以充当服务的提供方，接受其他服务的访问请求；也可充当服务的请求方，请求其他服务为其提供功能</li><li>任何服务需要向服务注册中心进行注册登记，描述其可提供的服务以及访问方式，才可对外提供服务</li></ul></li><li>总线风格：包含了一组软构件和一条称为“消息总线”的连接件来连接各个软构件</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B" tabindex="-1">（2）软件体系结构设计过程</h4><ul><li><p>软件体系结构设计的原则</p><ul><li>高层抽象和组织</li><li>模块化</li><li>信息隐藏</li><li>软件重用</li><li>多视点分离<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B.jpg" alt></li></ul></li><li><p>设计初步的软件体系结构</p><ul><li>任务：基于功能性和非功能性软件需求，参考业界已有的软件体系结构设计风格，设计出目标软件系统的初始体系结构，明确每个构件的职责以及构件间的通信和协作关系</li><li>输出：初步的软件体系结构<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E4%B8%8D%E5%90%8C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E9%A3%8E%E6%A0%BC%E9%80%82%E5%90%88%E7%9A%84%E5%BA%94%E7%94%A8.jpg" alt></li></ul></li><li><p>重用开源软件及已有软件资产</p><ul><li>可直接使用的软件资产<ul><li>清晰地定义它们与当前软件系统间的交互接口</li><li>包括数据交换的格式、互操作协议等</li></ul></li><li>不可直接使用但具复用潜力的设计资产<ul><li>采用接口重构、适配器等方法将其引入到当前体系结构中</li><li>接口重构是指，调整当前体系结构中面向可复用设计资产的调用接口，使之与其提供的服务接口相匹配</li></ul></li></ul></li><li><p>精化软件体系结构</p><ul><li>选择软件体系结构所依赖的公共基础设施：如操作系统、软件中间件、数据库管理系统、软件开发框架、安全服务等</li><li>确定软件体系结构中的设计元素：包括子系统、软构件和关键设计类等，明确其职责和接口，从而为开展详细设计奠定基础</li></ul></li><li><p>设计部署模型：刻画软件系统的各个子系统、软构件如何部署到计算节点上运行的，描述它们的部署和运行环境</p></li></ul><h3 id="3-%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1" tabindex="-1">3 用户界面设计</h3><h4 id="%EF%BC%881%EF%BC%89%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E5%9F%BA%E7%A1%80" tabindex="-1">（1）用户界面基础</h4><ul><li><p>人机交互的关键</p><ul><li>用户的满意度</li><li>方便输入</li><li>直观输出</li></ul></li><li><p>用户界面元素及实现方式</p><ul><li>静态元素</li><li>动态元素</li><li>用户输入元素</li><li>用户命令元素</li></ul></li><li><p>用UML类图表示用户界面元素</p><ul><li>窗口或对话框 -&gt; 对象类</li><li>静态和动态元素 -&gt; 类属性</li><li>输入元素 -&gt; 类属性</li><li>命令元素 -&gt; 类方法</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B" tabindex="-1">（2）用户界面设计过程</h4><ul><li><p>用户界面设计的任务</p><ul><li>根据软件需求及其操作流程，为其设计出与用户进行交互的界面，支持用户对软件的操作和使用</li></ul></li><li><p>用户界面设计的原则</p><ul><li>直观性</li><li>易操作性</li><li>反应性</li><li>一致性</li><li>容错性</li><li>人性化</li></ul></li><li><p>用户界面设计的过程<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%94%A8%E6%88%B7%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1%E8%BF%87%E7%A8%8B.jpg" alt></p></li><li><p>用户界面初步设计</p><ul><li>根据需求确定用户界面</li><li>确定用户界面的设计元素（属性和操作）</li></ul></li><li><p>建立用户界面间的跳转关系</p><ul><li>用UML图来表示用户界面的跳转关系<ul><li>交互图：表示特定场景下的跳转及跳转发生时的消息传递</li><li>类图：表示界面间所有可能发生的跳转及跳转的原因</li></ul></li></ul></li></ul><h3 id="4-%E8%BD%AF%E4%BB%B6%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1" tabindex="-1">4 软件详细设计</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80" tabindex="-1">（1）软件详细设计基础</h4><ul><li>详细设计的任务<ul><li>输入：软件体系结构设计、用户界面设计、软件需求</li><li>任务：对体系结构设计和用户界面设计成果进行细化和精化，获得高质量、面向实现的设计模型</li></ul></li><li>软件详细设计UML模型（活动图）</li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1%E6%B4%BB%E5%8A%A8" tabindex="-1">（2）软件详细设计活动</h4><ul><li>用例设计<ul><li>任务：为需求模型中每个用例设计软件实现方案</li><li>原则：整体性、正确性、优化性等</li><li>输出：用例实现方案的交互图、设计类图</li></ul></li><li>类设计<ul><li>任务<ul><li>对界面类、关键设计类、设计类等进行设计优化和精化，</li><li>明确设计类的内部实现细节</li><li>精化到可以提交软件实现的程度</li></ul></li><li>结果<ul><li>类图、状态图、活动图等</li></ul></li></ul></li><li>数据设计<ul><li>任务<ul><li>设计需要持久保存的数据以及这些数据之间的关系</li><li>数据组织方式（例如关系数据库中的表、关键字、外键等）之间进行映射</li><li>为提高数据存储、操作性能而设计持久存储机制优化设施</li></ul></li><li>设计与建模<ul><li>设计数据的结构、存储、组织和访问</li><li>对数据设计的结果进行建模</li></ul></li></ul></li><li>子系统<ul><li>任务<ul><li>确定子系统内部结构，设置包含于其中的更小粒度子系统、构件和设计类，明确它们之间的协作关系</li><li>确保它们能够协同实现子系统接口规定的所有功能和行为</li></ul></li></ul></li><li>构件设计<ul><li>任务<ul><li>定义构件内部的设计元素及其协作方法</li><li>内部设计元素可以是子构件，也可以是粒度更细的类</li></ul></li></ul></li></ul><h3 id="5-%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E6%95%B4%E5%90%88%E3%80%81%E9%AA%8C%E8%AF%81%E5%8F%8A%E8%AF%84%E5%AE%A1" tabindex="-1">5 软件设计整合、验证及评审</h3><ul><li>设计整合<ul><li>汇总迄今获得的所有设计模型<ul><li>包括体系结构模型、界面设计模型、用例设计模型、子系统/构件/类设计模型、数据模型等</li></ul></li><li>形成系统、完整的软件设计方案</li></ul></li><li>设计验证<ul><li>验证整个设计的正确性、优化性和充分性等</li><li>验证设计模型之间的不一致性、冗余性等</li><li>发现设计方案中的问题并进行整改</li></ul></li></ul><h2 id="%E7%AC%AC%E4%B8%83%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%92%8C%E6%B5%8B%E8%AF%95" tabindex="-1">第七章 软件实现和测试</h2><h3 id="1-%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0" tabindex="-1">1 软件实现</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E6%A6%82%E8%BF%B0" tabindex="-1">（1）软件实现概述</h4><ul><li><p>软件实现的任务</p><ul><li>根据软件设计模型（包括体系结构设计模型、用户界面设计模型和详细设计模型），采用编程语言编写出目标软件系统的程序代码，并对代码进行必要的测试，以发现和纠正代码存在中的缺陷，并将可运行的目标代码部署到目标计算机上运行<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B.jpg" alt></li></ul></li><li><p>这三项工作均由程序员负责完成</p><ul><li>编码：基于软件设计模型和文档，采用选定的程序设计语言，编写出目标软件系统的程序代码</li><li>单元测试：对自己编写的各个基本模块进行单元测试，以发现模块单元中存在的缺陷和问题</li><li>调试：发现产生缺陷原因，定位缺陷位置，进而对代码缺陷进行修复</li></ul></li><li><p>软件测试由软件测试工程师完成</p></li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E7%9A%84%E7%B1%BB%E5%9E%8B%E5%92%8C%E9%80%89%E6%8B%A9" tabindex="-1">（2）编程语言的类型和选择</h4><ul><li>选择<ul><li>软件的应用领域<ul><li>不同应用领域的软件通常会选择不同的程序设计语言来加以实现</li><li>科学和工程计算领域选用Fortran、C等程序设计语言，数据库应用软件开发会选用Delphi、Visual Basic、SQL等程序设计语言，机器人等嵌入式应用选用C、C++、Python等程序设计语言，互联网应用开发选用Java、ASP等程序设计语言</li></ul></li><li>与遗留软件系统的交互</li><li>软件的特殊功能及需求<ul><li>是否需要与底层的硬件系统进行交互，如果需要，可以考虑采用诸如C、汇编语言</li><li>是否需要丰富的软件库来支持功能的实现，如果需要，可以考虑具有丰富软件库的编程语言，如Python、Java等</li><li>是否需要对相关的知识进行表示和推理，如果需要，可以考虑选用描述性的程序设计语言，如Prolog、Lisp等</li></ul></li><li>软件的目标平台<ul><li>如果目标软件系统需要部署在J2EE架构之上，那么就需要选择Java编程语言；如果需要借助于ROS来开发机器人软件，那么建议选择C、C++和Python等编程语言</li></ul></li><li>程序员的编程经验</li></ul></li></ul><h3 id="2-%E7%BC%96%E7%A0%81" tabindex="-1">2 编码</h3><h4 id="%EF%BC%881%EF%BC%89%E7%BC%96%E7%A0%81%E6%A6%82%E8%BF%B0" tabindex="-1">（1）编码概述</h4><ul><li>编码的原则<ul><li>易读，一看就懂</li><li>易改，便于维护</li><li>降低代码的复杂度</li><li>尽可能地开展软件重用和编写可重用的程序代码</li><li>要有处理异常和提高代码的容错性</li><li>代码要与模型和文档相一致</li></ul></li><li>遵循编码风格</li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%BC%96%E7%A0%81%E8%BF%87%E7%A8%8B" tabindex="-1">（2）编码过程</h4><ul><li>编写类代码<ul><li>编写实现类的代码</li><li>编写实现类方法的代码</li><li>编写实现类间关联的代码</li><li>编写实现设计类间聚合和组合关系的代码</li><li>编写实现接口关系的代码</li><li>编写实现继承关系的程序代码</li><li>编写实现包的代码</li></ul></li><li>编写用户界面代码</li><li>代码片段的重用</li></ul><h4 id="%EF%BC%883%EF%BC%89%E7%BC%BA%E9%99%B7" tabindex="-1">（3）缺陷</h4><ul><li>软件缺陷是指软件制品中存在不正确的软件描述和实现</li></ul><h3 id="3-%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95" tabindex="-1">3 软件测试</h3><h4 id="%EF%BC%881%EF%BC%89%E6%B5%8B%E8%AF%95%E6%A6%82%E8%BF%B0" tabindex="-1">（1）测试概述</h4><ul><li>软件缺陷不可避免</li><li>如何应对缺陷？<ul><li>预防缺陷</li><li>容忍缺陷</li><li>发现缺陷</li><li>修复缺陷</li></ul></li><li>何为软件测试<ul><li>运行软件或模拟软件的执行，发现软件缺陷的过程——缺陷测试</li><li>向开发人员和客户展示软件的有效性——确认测试</li></ul></li><li>软件测试的原理<ul><li>程序本质上是对数据的处理<ul><li>设计数据(测试用例) -&gt; 运行测试用例(程序来处理数据) -&gt; 判断运行结果(是否符合预期结果)</li></ul></li></ul></li><li>测试执行的步骤<ul><li><ol><li>明确待测试对象</li></ol></li><li><ol start="2"><li>设计测试用例</li></ol></li><li><ol start="3"><li>运行代码和测试用例</li></ol></li><li><ol start="4"><li>分析运行结果</li></ol></li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B%E8%AE%BE%E8%AE%A1" tabindex="-1">（2）测试用例设计</h4><ul><li><p>测试用例是一个四元偶</p><ul><li>输入数据：交由待测试程序代码进行处理的数据</li><li>前置条件：程序处理输入数据的运行上下文，即要满足前置条件</li><li>测试步骤：程序代码对输入数据的处理可能涉及到一系列的步骤，其中的某些步骤需要用户的进一步输入</li><li>预期输出：程序代码的预期输出结果</li></ul></li><li><p>白盒测试技术：基于程序内部的执行流程来设计测试用例</p><ul><li>特点：必须了解程序的内部工作流程才能设计测试用例</li><li>基本路径测试<ul><li><ol><li>根据程序逻辑画出流程图</li></ol></li><li><ol start="2"><li>将流程图转换为流图</li></ol></li><li><ol start="3"><li>确定基本路径集合</li></ol></li><li><ol start="4"><li>针对测试路径设计测试用例</li></ol></li></ul></li></ul></li><li><p>黑盒测试技术：基于程序的外在功能和接口来设计测试用例</p><ul><li>特点：<ul><li>知道程序功能和性能，不必了解程序内部结构和处理细节</li><li>黑盒测试与软件如何实现无关，如果软件实现发生变化，测试用例仍然可以使用</li><li>黑盒测试用例的开发可以与软件开发并行进行，能够缩短软件开发周期</li></ul></li><li>方法：<ul><li>等价分类法<ul><li>思想<ul><li>把程序的输入数据集合按输入条件划分为若干个等价类</li><li>每一个等价类对于输入条件而言是等价的</li><li>为每一个等价类设计一个测试用例，包括有效或无效的输入</li></ul></li><li>优点<ul><li>可以滤掉同类数据，减少测试次数，不丢失发现错误的机会</li></ul></li></ul></li><li>边界值分析法</li></ul></li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%9A%84%E8%BF%87%E7%A8%8B%E5%92%8C%E7%AD%96%E7%95%A5" tabindex="-1">（3）软件测试的过程和策略</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%92%8C%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%85%B3%E7%B3%BB.jpg" alt></p><ul><li><p>单元测试</p><ul><li>测试对象<ul><li>对软件基本模块单元进行测试</li><li>过程、函数、方法、类</li></ul></li><li>测试方法：大多采用白盒测试技术</li></ul></li><li><p>集成测试</p><ul><li>测试对象<ul><li>对软件模块之间的接口进行测试</li><li>过程调用、函数调用、消息传递、远程过程调用</li></ul></li><li>测试技术：采用黑盒测试技术</li></ul></li><li><p>确认测试</p><ul><li>测试对象<ul><li>对软件的功能和性能进行测试</li><li>判断目标软件系统是否满足用户需求</li></ul></li><li>依据和标准<ul><li>软件需求规格说明书</li></ul></li><li>测试技术：采用黑盒测试技术</li></ul></li><li><p>α测试</p><ul><li>软件开发公司组织内部人员模拟各类用户行为对即将面市的软件产品（称为α版本、内部测试版）进行测试，发现错误并修正</li><li>尽可能逼真地模拟实际运行环境和用户对软件产品的操作，并尽最大努力涵盖所有可能的用户操作方式</li><li>经α测试并进行修改后的软件产品称为β版本（也称外部测试版）</li></ul></li><li><p>β测试</p><ul><li>软件开发公司组织各方面的典型用户在日常工作中实际使用β版本，或为对外进行宣传而将β版本免费赠送给典型用户（很多情况下，β版本可以通过Internet免费下载，也可以向软件公司索取），并要求用户报告异常情况、提出批评意见</li><li>β测试是在与开发者无法控制的环境下进行的软件现场应用</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95" tabindex="-1">（4）面向对象软件测试</h4><ul><li>OO软件的构成基础与传统结构化程序设计不同</li><li>需要开发测试驱动程序</li><li>采用白盒测试方法</li></ul><h4 id="%EF%BC%885%EF%BC%89%E9%9D%9E%E5%8A%9F%E8%83%BD%E6%80%A7%E6%B5%8B%E8%AF%95" tabindex="-1">（5）非功能性测试</h4><ul><li>性能测试</li><li>强度测试</li><li>配置和兼容性测试</li><li>安全性测试</li><li>可靠性测试</li><li>用户界面测试</li><li>本地化测试</li><li>Web测试</li><li>安装测试</li></ul><h3 id="4-%E8%BD%AF%E4%BB%B6%E8%B0%83%E8%AF%95" tabindex="-1">4 软件调试</h3><ul><li>软件调试就是要基于程序代码，确定软件缺陷的原因、定位缺陷的位置，从而知道那里错了、如何修复缺陷</li><li>目的<ul><li>测试发现缺陷</li><li>调试定位缺陷</li><li>排错纠正错误</li></ul></li><li>独立性不同<ul><li>测试由独立的测试小组进行</li><li>调试和排错由开发人员完成<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%B0%83%E8%AF%95%E7%9A%84%E6%AD%A5%E9%AA%A4.jpg" alt></li></ul></li></ul><h2 id="%E7%AC%AC%E5%85%AB%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E5%92%8C%E6%BC%94%E5%8C%96" tabindex="-1">第八章 软件维护和演化</h2><h3 id="1.-%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E4%B8%8E%E6%BC%94%E5%8C%96" tabindex="-1">1. 软件维护与演化</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4" tabindex="-1">（1）软件维护</h4><ul><li><p>软件变更和修改是不可避免的</p><ul><li>待修复的错误</li><li>需求的变更/新的需求</li><li>技术和商务环境变化</li><li>系统的性能或可靠性等需要改进</li><li>系统中增加了新的计算机和设备</li></ul></li><li><p>软件需要进行维护</p><ul><li>出故障，不可正常工作</li><li>服务变化，需要升级</li><li>运行环境变化，需要适应</li></ul></li><li><p>软件维护：软件在交付使用后，由于应用需求和环境变化以及自身问题，对软件系统进行改造和调整的过程</p></li><li><p>维护形式：</p><ul><li>纠正性维护：纠正软件中的缺陷和错误</li><li>完善性维护：对软件进行改造以增加新的功能、修改已有的功能</li><li>适应性维护：对软件进行改造以便适应新的运行环境和平台</li><li>预防性维护：对软件结构进行改造以便提高软件的可靠性和可维护性等</li></ul></li><li><p>软件维护工程师</p></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E6%BC%94%E5%8C%96" tabindex="-1">（2）软件演化</h4><ul><li>特点：软件演化与开发是一个集成的、完整的、增量式的过程，可以用螺旋模型表示。主要针对软件的大规模功能增强和结构调整，以实现变化的软件需求，或者提高软件系统的质量。</li></ul><table><thead><tr><th>概念</th><th>功能增强粒度</th><th>应对变化方式</th><th>持续性或间隔性</th><th>版本变化</th></tr></thead><tbody><tr><td>软件演化</td><td>粗粒度</td><td>主动</td><td>持续性</td><td>是</td></tr><tr><td>软件维护</td><td>细粒度</td><td>被动</td><td>间隔性</td><td>不一定</td></tr></tbody></table><ul><li>软件演化法则<ul><li>持续变化法则</li><li>增加复杂性法则</li><li>自我调节法则</li><li>组织稳定性守恒法则</li><li>熟悉度守恒法则</li><li>功能持续增长法则</li><li>质量衰减法则</li><li>反馈系统法则</li></ul></li></ul><h3 id="2.-%E8%BD%AF%E4%BB%B6%E9%80%BB%E8%BE%91%E8%80%81%E5%8C%96" tabindex="-1">2. 软件逻辑老化</h3><h4 id="%EF%BC%881%EF%BC%89%E9%80%BB%E8%BE%91%E8%80%81%E5%8C%96%E7%9A%84%E7%89%B9%E7%82%B9" tabindex="-1">（1）逻辑老化的特点</h4><ul><li>何为逻辑老化<ul><li>软件在维护和演化的过程中出现的用户满意度降低、质量逐渐下降、变更成本不断上升这样一种现象</li></ul></li><li>软件逻辑老化的现象<ul><li>质量下降</li><li>变更成本增加</li><li>用户满意度降低</li></ul></li><li>软件逻辑老化的原因<ul><li>缺乏变更</li><li>负面变更</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%A7%A3%E5%86%B3%E9%80%BB%E8%BE%91%E8%80%81%E5%8C%96%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">（2）解决逻辑老化的方法</h4><p>逻辑老化软件的维护和升级将会收到预算、期限等多种因素的约束，因此维护团队需要对逻辑老化软件基于其质量（失效率和可维护性等）及其业务价值（系统的使用情况、支持的业务流程、系统的可靠性、输出的价值）进行评估，再做出适当决策。</p><h3 id="3.-%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%8E%E6%8A%80%E6%9C%AF" tabindex="-1">3. 软件维护的过程与技术</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E6%8A%80%E6%9C%AF" tabindex="-1">（1）软件维护技术</h4><ul><li>代码重组：在不改变软件功能的前提下，对程序代码进行重新组织，使得重组后的代码具有更好的可维护性，能够有效支持对代码的变更</li><li>逆向工程：基于低抽象层次软件制品，通过对其进行理解和分析，产生高抽象层次的软件制品</li><li>设计重构</li><li>再工程</li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E8%BF%87%E7%A8%8B" tabindex="-1">（2）软件维护过程</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E4%BB%B6%E7%BB%B4%E6%8A%A4%E8%BF%87%E7%A8%8B.jpg" alt></p><ul><li>软件维护需要解决的问题<ul><li>人员的问题</li><li>软件制品的问题</li><li>维护副作用的问题</li><li>维护成本不断增加的问题</li></ul></li></ul><h2 id="%E5%A4%8D%E4%B9%A0%E9%87%8D%E7%82%B9" tabindex="-1">复习重点</h2><h3 id="%E7%BB%93%E6%9E%84%E5%8C%96%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95" tabindex="-1">结构化需求分析方法</h3><ul><li>基本思想：数据主义认为，整个宇宙都是由数据流构成的，各个数据处理系统构成人类的社会</li><li>数据流图<ul><li>Data Flow Diagram(简称DFD)：描述输入数据流到输出数据流的变换(即加工)过程，用于对系统的功能建模</li><li>基本元素<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/5_1_2_1_1.jpg" alt></li></ul></li><li>画分层数据流图的步骤<ul><li><ol><li>画系统的输入和输出</li></ol></li><li><ol start="2"><li>画系统内部</li></ol></li><li><ol start="3"><li>画加工内部</li></ol></li><li><ol start="4"><li>根据自顶向下逐层分解的思想，重复第3步，继续分解加工，直至每个尚未分解的加工都足够简单(即不必再分解)</li></ol></li></ul></li><li>分层数据流图示例——空巢老人看护系统<ul><li>确定源或宿：老人、家属、医生、机器人和时钟<ul><li>除了时钟外，都既是源又是宿</li></ul></li><li>顶层图唯一的加工：软件系统(空巢老人看护系统)</li><li>确定数据流：系统的输入/输出信息<ul><li>输入数据流：老人的呼叫、家属和医生的控制命令、老人的图像和视频、定时器</li><li>输出数据流：家属和医生的语音和视频、异常状态和警告信息、机器人执行指令</li></ul></li><li>顶层图通常没有文件<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E5%B7%A5%E9%A1%B6%E5%B1%82%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE.jpg" alt><br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E8%BD%AF%E5%B7%A5%E6%80%BB%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE.jpg" alt></li></ul></li></ul><h3 id="%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95" tabindex="-1">面向对象需求分析方法</h3><ul><li><p>基本思想:现实世界（应用问题）还是计算机世界（软件系统），它们都是由多样化的对象所构成的，每个对象都有其状态并可提供功能和服务，不同对象之间通过交互来开展协作来实现功能和提供服务</p></li><li><p>面向对象软件工程提供对象、类、属性、操作、消息、继承等概念来抽象表示现实世界的应用，分析其软件需求特征，建立起软件需求模型，描述软件需求</p></li><li><p>面向对象建模语言</p><ul><li>概念:基于面向对象的概念和抽象，提供图形化的图符，用来表示软件系统的一种语言</li><li>示例：<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E9%A1%BA%E5%BA%8F%E5%9B%BE.jpg" alt></li></ul></li><li><p>UML: Unified Modeling Language</p><ul><li>Unified(统一)<ul><li>提取不同方法中最好建模技术，如OMT(James Rumbaugh)，Booch method(Grady Booch )和OOSE(Ivar Jacobson)</li><li>采用统一、标准化的表示方式</li></ul></li><li>Modeling(建模)<ul><li>对现实系统和软件系统进行可视化建模</li><li>建立系统模型</li></ul></li><li>Language(语言)<ul><li>图形化语言：语法、语义和语用<ul><li>包括规则，约束 扩展机制</li></ul></li></ul></li><li>UML用途：用来可视化(visualize) 、描述(specify)、构造(construct)和文档化(document)软件密集型系统的各种产品</li></ul></li><li><p>多视点建模</p><ul><li>结构视点（Structural View）<ul><li>用于描述系统的构成</li><li>UML提供了包图（Package Diagram）、类图（Class Diagram）、对象图（Object Diagram）和构件图（Component Diagram），从不同的抽象层次来表示系统的静态组织及结构</li></ul></li><li>行为视点（Behavioral View）<ul><li>刻画系统的行为</li><li>UML提供了交互图（Interaction Diagram）、状态图（Statechart Diagram）与活动图（Activity Diagram），以从不同侧面刻画系统的动态行为。</li></ul></li><li>部署视点（Deployment View）<ul><li>刻画目标软件系统的软件制品及其运行环境</li><li>UML提供了部署图（Deployment Diagram）来描述软件系统的部署模型</li></ul></li><li>用例视点（Use Case View）<ul><li>刻画系统的功能</li><li>UML提供了用例图（Use Case Diagram）以描述系统的用例及其与外部执行者之间的关系。<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%BB%BA%E6%A8%A1%E8%AF%95%E7%82%B9%E5%9B%BE.jpg" alt></li></ul></li></ul></li><li><p>面向对象需求分析步骤</p><ul><li>明确问题边界，获取软件需求，建立用例模型</li><li>开展用例分析，精化软件需求，建立分析模型</li><li>汇总需求模型，撰写需求文档，评审软件需求</li></ul></li></ul><h3 id="%E7%94%A8%E4%BE%8B%E5%9B%BE%E6%8F%8F%E8%BF%B0" tabindex="-1">用例图描述</h3><ul><li><p>用例图用来描述初步软件需求</p></li><li><p>图的构成</p><ul><li>执行者<ul><li>系统之外的实体，他们使用软件系统功能、与软件系统交换信息</li><li>可以是一类用户，也可以是其他软件系统或物理设备</li></ul></li><li>用例<ul><li>表示执行者为达成一项相对独立、完整的业务目标而要求软件系统完成的功能</li></ul></li><li>边：执行者与用例间、用例之间、执行者之间的关系<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E6%89%A7%E8%A1%8C%E8%80%85%E4%B8%8E%E7%94%A8%E4%BE%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.jpg" alt></li></ul></li><li><p>用例间的关系</p><ul><li>用例间的关系-包含关系<ul><li>如果用例B是用例A的某项子功能，则称用例A包含用例B</li></ul></li><li>用例间的关系-扩展关系<ul><li>如果用例A与B相似，但A的功能较B多，A的动作序列是在B的动作序列中的某些执行点上插入附加动作序列而构成的，则称用例A扩展用例B</li></ul></li><li>用例间的关系-继承<ul><li>如果A与B相似，但A的动作序列是通过改写B的部分动作或者扩展B的动作而获得的，则称用例A继承用例B<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%94%A8%E4%BE%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.jpg" alt></li></ul></li><li>边界框<ul><li>表示整个软件系统或子系统的边界<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%A9%BA%E5%B7%A2%E8%80%81%E4%BA%BA%E7%9C%8B%E6%8A%A4%E8%BD%AF%E4%BB%B6%E7%94%A8%E4%BE%8B%E5%9B%BE.jpg" alt></li></ul></li></ul></li></ul><h3 id="uml%E4%BA%A4%E4%BA%92%E5%9B%BE" tabindex="-1">UML交互图</h3><ul><li><p>作用：刻画对象间的消息传递，分析如何通过交互协作完成功能</p><ul><li>用例的功能实现方式</li><li>软件系统在某种使用场景下对象间的交互协作流程</li><li>软件系统的某个复杂操作的逻辑实现模型</li></ul></li><li><p>二类交互图</p><ul><li>顺序图(Sequence Diagram)：强调消息传递的时间序</li><li>通信图(Communication Diagram)：突出对象间的合作</li><li>顺序图和通信图语义上等价，没必要针对同一建模目标同时创建这二个图</li></ul></li><li><p>顺序图：描述对象间的消息交互序列</p><ul><li>纵向：时间轴，对象及其生命线(虚线)，活跃期(长条矩形)</li><li>横向：对象间的消息传递<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E4%BA%A4%E4%BA%92%E5%9B%BE%E4%B9%8B%E9%A1%BA%E5%BA%8F%E5%9B%BE.jpg" alt></li></ul></li></ul><h3 id="%E7%B1%BB%E5%9B%BE" tabindex="-1">类图</h3><ul><li>功效：描述系统的类构成，刻画系统的静态组成结构</li><li>图的构成<ul><li>结点：表示系统中的类（或接口）及其属性和操作</li><li>边：类之间的关系</li></ul></li><li>类的表示<img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%B1%BB%E7%9A%84%E8%A1%A8%E7%A4%BA.jpg" alt></li><li>属性的表示：<ul><li>[可见性] 名称 [: 类型] [多重性] [= 初值]  [{约束特性}]</li><li>可见性<ul><li>公开(+): 所有对象均可访问</li><li>保护(#): 所在类及子类对象均可访问</li><li>私有(-): 仅所在类的对象才可访问</li></ul></li><li>多重性：属性取值数量, 如1，0…1，0…* ，1…<em>，</em></li><li>约束特性<ul><li changeable>可更改性：{readOnly}表示只读，缺省为</li><li unordered>顺序性： {ordered}表示属性取值是有序的，缺省为</li><li>唯一性： {bag}表示属性取值元素允许出现重复元素（缺省）</li><li>静态性：{static}表示静态属性，属性值由类所有实例对象共享</li></ul></li></ul></li><li>方法的表示<ul><li>[可见性]  名称[(参数表)] [: 返回类型] [{约束特性}]</li><li>操作的约束特性<ul><li>查询操作： {isQuery = true}表示查询操作，{ isQuery = false}表示修改操作，缺省为修改操作。</li><li>多态性：{isPolymorphic = true}表示本操作允许多态，即可被子类中相同定义形式的操作所覆盖</li><li>并发性：{concurrency = sequential} 任一时刻只有一个对象调用可执行。{concurrency = guarded} 并行线程可同时调用多个对象的本操作，但同一时刻只允许一个调用执行。{concurrency = concurrent} 并行线程可以同时调用多个对象的本操作且这些调用可并发执行</li><li>异常：操作在执行过程中可能引发异常</li></ul></li></ul></li><li>接口<ul><li>一种不包含操作实现部分的特殊类</li><li>接口的形式<ul><li>供给接口: 对外提供的接口</li><li>需求接口: 需要使用的接口</li></ul></li></ul></li><li>类间的关系<ul><li>关联</li><li>依赖</li><li>集成</li><li>实现</li><li>聚合</li><li>组成</li></ul></li><li>类图注意事项<ul><li>用单数名词来描述类名，少用缩写</li><li>按照方向表示类间关系<ul><li>垂直方向表示继承关系</li><li>水平方向表示关联、聚合、组合、依赖、实现关系</li></ul></li><li>注意画图位置<ul><li>关联名应位于关联边的居中位置</li><li>多重性、角色名、约束特性等应靠近关联端</li></ul></li></ul></li></ul><h3 id="%E5%88%86%E6%9E%90%E5%92%8C%E5%BB%BA%E7%AB%8B%E7%94%A8%E4%BE%8B%E7%9A%84%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%9E%8B" tabindex="-1">分析和建立用例的交互模型</h3><ul><li><p>任务:分析和描述用例是如何通过一组对象之间的交互来完成的</p></li><li><p>步骤</p><ul><li>分析和确定用例所涉及的对象及其类</li><li>分析和确定对象之间的消息传递</li><li>绘制用例的交互图</li></ul></li><li><p>软件需求用例的处理通常涉及三种不同类对象:边界类，控制类，实体类</p></li><li></li><li><p>边界类</p><ul><li>定义：由于这些类对象处于系统的边界，需与系统外的执行者进行交互，因而将这些对象所对应的类称之为边界类</li><li>作用<ul><li>交互控制，处理外部执行者的输入数据，或者向外部执行者输出数据</li><li>外部接口，如果外部执行者表现为其他的系统或者设备，那么边界类对象需要与系统之外的其他系统或设备进行信息交互</li></ul></li></ul></li><li><p>控制类</p><ul><li>控制类对象作为完成用例任务的主要协调者</li><li>一般而言，控制类并不负责处理具体的任务细节，而是负责分解任务，并通过消息传递将任务分派给其他对象类来完成，协调这些对象之间的信息交互</li></ul></li><li><p>实体类</p><ul><li>用例所对应业务流程中的所有具体功能最终要交由具体的类对象来完成，这些类称之为实体类<br><img src="/images/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%9C%9F%E6%9C%AB%E7%AA%81%E5%87%BB/%E7%94%A8%E4%BE%8B%E7%9A%84%E4%BA%A4%E4%BA%92%E6%A8%A1%E5%9E%8B.jpg" alt></li></ul></li><li><p>分析和确定对象之间的消息</p><ul><li>确定消息的名称<ul><li>直接反映了对象间交互的意图，也体现了接收方对象所对应的类需承担的职责和任务</li><li>意图：请求、通知</li><li>一般地，消息名称用动名词来表示</li></ul></li><li>确定消息传递的信息<ul><li>信息：通知和请求的内容</li><li>这些信息通常以消息参数的形式出现，也即一个对象在向另一个对象发送消息的过程中，需要提供必要的参数，以向目标对象提供相应的信息</li></ul></li></ul></li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;%E7%AC%AC%E4%B8%80%E7%AB%A0-%E4%BB%8E%E7%A8%8B%E5%BA%8F%E5%88%B0%E8%BD%AF%E4%BB%B6&quot; tabindex=&quot;-1&quot;&gt;第一章 从程序到软件&lt;/h2&gt;
&lt;h3 i</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="软件工程" scheme="http://example.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>软件分析（未完）</title>
    <link href="http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/</id>
    <published>2023-08-16T13:48:11.661Z</published>
    <updated>2023-03-09T04:20:00.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/meitu/6.jpg"><p>本笔记参考<a href="https://www.bilibili.com/video/BV1b7411K7P4/?spm_id_from=333.337.search-card.all.click&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">视频</a></p><h2 id="01%E4%BB%8B%E7%BB%8D" tabindex="-1">01介绍</h2><ol><li>PL and Static Analysis</li><li>Why We Learn Static Analysis?</li><li>What is Static Analysis?</li><li>Static Analysis Features and Examples</li><li>Teaching Plan</li><li>Evaluation Criteria</li></ol><h3 id="1-pl-and-static-analysis" tabindex="-1">1 PL and Static Analysis</h3><p>PL：Programming Languages程序语言</p><h3 id="2-why-we-learn-static-analysis%3F" tabindex="-1">2 Why We Learn Static Analysis?</h3><h3 id="3-what-is-static-analysis%3F" tabindex="-1">3 What is Static Analysis?</h3><h3 id="4-static-analysis-features-and-examples" tabindex="-1">4 Static Analysis Features and Examples</h3><h3 id="5-teaching-plan" tabindex="-1">5 Teaching Plan</h3><h3 id="6-evaluation-criteria" tabindex="-1">6 Evaluation Criteria</h3><h2 id="02" tabindex="-1">02</h2><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/images/meitu/6.jpg&quot;&gt;
&lt;p&gt;本笔记参考&lt;a href=&quot;https://www.bilibili.com/video/BV1b7411K7P4/?spm_id_from=333.337.search-card.all.click&amp;amp;</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="软件工程" scheme="http://example.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>编译原理</title>
    <link href="http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86_%E8%AF%BE%E7%A8%8B/"/>
    <id>http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86_%E8%AF%BE%E7%A8%8B/</id>
    <published>2023-08-16T13:48:11.659Z</published>
    <updated>2023-06-05T09:36:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h2 id="2%E6%96%87%E6%B3%95%E5%92%8C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%AE%9A%E4%B9%89" tabindex="-1">2文法和语言的形式定义</h2><h3 id="1-%E6%96%87%E6%B3%95%E5%8F%8A%E5%85%B6%E5%88%86%E7%B1%BB" tabindex="-1">1 文法及其分类</h3><ul><li><p>文法是产生式的又穷非空的集合</p></li><li><p>文法<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>是一个四元组，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">[</mo><mi>S</mi><mo stretchy="false">]</mo><mo>=</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>V</mi><mi>T</mi></msub><mo separator="true">,</mo><mi>P</mi><mo separator="true">,</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G[S]=(V_N,V_T,P,S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq></p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>N</mi></msub><mo>:</mo></mrow><annotation encoding="application/x-tex">V_N:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>非终结符号集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>T</mi></msub><mo>:</mo></mrow><annotation encoding="application/x-tex">V_T:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>终结符号集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">P:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>表示产生式的有穷非空集合</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">S:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>开始符号（识别符号），至少在一条产生式中作为左部</li></ul></li><li><p>文法分类：</p><ul><li>乔姆斯基(Chomsky)把文法分成四种类型：0型、1型、2型和3型</li><li>0型文法 短语结构文法 Phrase Structure Gramma</li><li>1型文法 上下文有关文法 Context-Sensitive Gramma</li><li>2型文法 上下文无关文法 Context Free Gram</li><li>3型文法 正规(正则)文法 Regular Gramma<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%96%87%E6%B3%95%E7%9A%84%E5%88%86%E7%B1%BB.jpg" alt="文法的分类"></li></ul></li></ul><h3 id="2-%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%AE%9A%E4%B9%89" tabindex="-1">2 语言的形式定义</h3><h2 id="3%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">3词法分析</h2><h3 id="1-dfa" tabindex="-1">1 DFA</h3><ul><li><p>确定的有穷自动机的形式定义<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>F</mi><mi>A</mi><mtext>，</mtext><mi>D</mi><mi>F</mi><mi>A</mi><mo>=</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mo>∑</mo><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">DFA， DFA=(Q,\sum,t,q_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></eq></p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">Q:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>有穷非空的状态集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">\sum:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>有穷的输入字母表</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">t:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>映射<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>×</mo><mo>∑</mo><mo>→</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q\times \sum \rightarrow Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>q</mi><mn>0</mn></msub><mo>:</mo><mo>∈</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">q_0:\in Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq>，是开始状态集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>:</mo><mo>⊆</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">F:\subseteq Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq>，非空终止状态集合</li></ul></li><li><p>FA的表示</p><ul><li><ol><li>状态转换表</li></ol></li><li><ol start="2"><li>状态转换图<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/DFA%E7%9A%84%E8%A1%A8%E7%A4%BA.jpg" alt="DFA的表示"></li></ol></li></ul></li><li><p>被<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">DFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span></span></span></span></eq> <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>识别的字符转集合记为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq></p></li><li><p>确定的有穷自动机中确定的含义：</p><ul><li><ol><li>只有唯一的一个开始状态</li></ol></li><li><ol start="2"><li>下一个输入字母唯一地确定了下一个状态</li></ol></li></ul></li></ul><h3 id="2-nfa" tabindex="-1">2 NFA</h3><ul><li>非确定的有穷自动机地形式定义<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">NFA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord mathnormal">A</span></span></span></span></eq> <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mi>F</mi><mi>A</mi><mo>=</mo><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mo>∑</mo><mo separator="true">,</mo><mi>t</mi><mo separator="true">,</mo><msub><mi>Q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">NFA=(Q,\sum,t,Q_0,F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">NF</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span></eq><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">Q:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>有穷非空的状态集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">\sum:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>有穷的输入字母表</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">t:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>映射<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Q</mi><mo>×</mo><mo>∑</mo><mo>→</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q\times \sum \rightarrow Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Q</mi><mn>0</mn></msub><mo>:</mo><mo>∈</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q_0:\in Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq>，是开始状态集</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>:</mo><mo>⊆</mo><mi>Q</mi></mrow><annotation encoding="application/x-tex">F:\subseteq Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span></span></span></span></eq>，非空终止状态集合</li></ul></li></ul><p>如果两个有穷自动机<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">A_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><msub><mi>A</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(A_1)=L(A_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq>，则称有穷状态自动机<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">A_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是等价的</p><h3 id="3-nfa%E5%88%B0dfa%E7%9A%84%E8%BD%AC%E6%8D%A2" tabindex="-1">3 NFA到DFA的转换</h3><h4 id="nfa%E7%9A%84%E7%A1%AE%E5%AE%9A%E5%8C%96" tabindex="-1">NFA的确定化</h4><ul><li>基本思想：将状态间的转换关系映射成状态子集间的转换关系</li><li>方法：子集法，造表法</li><li>NFA存在的问题<ul><li><ol><li>开始状态的不确定</li></ol></li><li><ol start="2"><li>状态转换的不确定</li></ol></li><li><ol start="3"><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>的存在的不确定性</li></ol></li></ul></li></ul><ol><li>状态子集<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>闭包:从一个结点出发，经过任意<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>边所能到达集合</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">I_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>子集：由<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span></span></span></span></eq>的状态出发，经过一条<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>弧，(跳过<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>弧前的任意<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>弧)可到达的状态的集合称为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi></mrow><annotation encoding="application/x-tex">J</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>a</mi></msub><mo>=</mo><mi>ϵ</mi><mo>−</mo><mi>C</mi><mi>L</mi><mi>O</mi><mi>S</mi><mi>U</mi><mi>R</mi><mi>E</mi><mo stretchy="false">(</mo><mi>J</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">I_a=\epsilon-CLOSURE(J)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">OS</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.05764em;">RE</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mclose">)</span></span></span></span></eq></li><li>利用子集法构造确定地有穷自动机DFA</li></ol><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%AD%90%E9%9B%86%E6%B3%95.jpg" alt="子集法"><br>举例：<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%AD%90%E9%9B%86%E6%B3%95%E4%BE%8B%E5%AD%901.jpg" alt><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%AD%90%E9%9B%86%E6%B3%95%E4%BE%8B%E5%AD%902.jpg" alt></p><h4 id="dfa%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8C%96" tabindex="-1">DFA的最小化</h4><ul><li><p>寻找一个状态数不比<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>更多的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>F</mi><mi>A</mi><mi>M</mi><mtext>ˊ</mtext></mrow><annotation encoding="application/x-tex">DFA Mˊ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">ˊ</span></span></span></span></eq>，使得<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mtext>ˊ</mtext></mrow><annotation encoding="application/x-tex">Mˊ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">ˊ</span></span></span></span></eq>所识别的符号串相同，即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo><mo>=</mo><mi>L</mi><mo stretchy="false">(</mo><mi>M</mi><mtext>ˊ</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(M)=L(Mˊ)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord">ˊ</span><span class="mclose">)</span></span></span></span></eq>。</p><ul><li><ol><li>构造状态集的划分</li></ol></li><li><ol start="2"><li>取每一组中的一个状态作代表</li></ol></li><li><ol start="3"><li>删去多余死状态</li></ol></li></ul></li><li><p>DFA最小化的关键在于把它的状态集分成一些两两互不相交的子集，使得任何两个不同的子集中的状态都是可区别的，而同一子集中的任何两个状态都是等价的。</p></li><li><p>基本思想：如果从状态 p 出发能识别某一符号串 α 而停止于终态，那么从q 出发也能识别 α 而停止于终态；反之亦然。则称状态p 和 q 是等价的。如果 p 和 q 不等价，则说 p 和 q 是可区分的。</p></li><li><p>具体方法：</p><ul><li>对已有划分的每个子集进行如下分解，直到不再有新子集产生<ul><li>分解后的两个状态 p 和 q 属于同一个子集，当且仅当<eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 20: …all a \in \sum $̲，" style="color:#cc0000">\forall a \in \sum $，</span></eq>t( p, a )<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>和</mtext></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">和</span></span></span></span></eq>t( q, a )$都到达当前划分的同一子集中</li></ul></li><li><ol><li>构造状态集的划分(初次划分为终点节点和其它节点)</li></ol></li><li><ol start="2"><li>取每一组中的一个状态作代表</li></ol></li><li><ol start="3"><li>删去多余死状态</li></ol></li></ul></li></ul><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/DFA%E5%8C%96%E7%AE%80%E4%BE%8B%E5%AD%90.jpg" alt="DFA化简例子"></p><h3 id="4-%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E4%B8%8Efa" tabindex="-1">4 正规文法与FA</h3><ul><li>右线性正规文法构造等价<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">FA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span></span></span></span></eq><ul><li>令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的终结符号集为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的字母表；</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的非终结符号作为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的状态，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的开始符号为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的开始状态；</li><li>增加一个终止状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>Z</mi><mo mathvariant="normal">∉</mo><msub><mi>V</mi><mi>N</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Z(Z\notin V_N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.0556em;"></span></span></span><span class="fix"></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li><li>形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><mi>a</mi><mi>W</mi></mrow><annotation encoding="application/x-tex">U→aW</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">aW</span></span></span></span></eq>的规则，引一条从状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>弧。</li><li>形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">U→a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>的规则，引一条从状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>到终止状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq>的标记为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>的弧；</li><li>例子：<img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%8F%B3%E7%BA%BF%E6%80%A7%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E5%88%B0FA.jpg" alt="右线性正规文法到FA"></li></ul></li><li>左线性正规文法构造等价<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">FA</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal">A</span></span></span></span></eq><ul><li>令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的终结符号集为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的字母表；</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的非终结符号作为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的状态，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span></eq>的开始符号为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的终止状态；</li><li>增加一个开始状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo mathvariant="normal">∉</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">S\notin V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.0556em;"></span></span></span><span class="fix"></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><mi>W</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">U→Wa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">Wa</span></span></span></span></eq>的规则，引一条从状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span></eq>到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>弧。</li><li>形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">U→a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>的规则，引一条从开始状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>到状态<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>的标记为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>的弧；</li><li>例子：<img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%B7%A6%E7%BA%BF%E6%80%A7%E6%AD%A3%E8%A7%84%E6%96%87%E6%B3%95%E5%88%B0FA.jpg" alt="左线性正规文法到FA"></li></ul></li></ul><h3 id="5-%E6%AD%A3%E8%A7%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%B8%8Efa" tabindex="-1">5 正规表达式与FA</h3><ul><li>正规表达式到FA：<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%AD%A3%E8%A7%84%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%88%B0FA.jpg" alt="正规表达式到FA"></li><li>FA到正规表达式<ul><li><ol><li>创建一个起始节点S连向起始点，将所有的终点连接一个节点Z</li></ol></li><li><ol start="2"><li>随后依次去掉中间节点</li></ol></li><li><ol start="3"><li>直到最后只剩开始节点和结束节点</li></ol></li><li>例子<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE1.jpg" alt="FA到RE1"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE2.jpg" alt="FA到RE2"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE3.jpg" alt="FA到RE3"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE4.jpg" alt="FA到RE4"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE5.jpg" alt="FA到RE5"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE6.jpg" alt="FA到RE6"><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FA%E5%88%B0RE7.jpg" alt="FA到RE7"></li></ul></li></ul><h2 id="4(1)%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">4(1)语法分析</h2><h3 id="1-%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">1 自上而下语法分析</h3><h4 id="%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">自上而下语法分析的基本思想</h4><ul><li>推导——从开始/识别符号出发不断建立直接推导，试图构造一个最左推导序列，最终由它推导出与输入符号串相同的符号串</li><li>程序翻译——从语言文法的开始符号——&lt;程序&gt;出发，试图推导出文法的句子——源程序/与其等价的单词串</li><li>语法树——以开始/识别符号为根结点，试图向下构造一棵语法树，其末端结点符号串与输入符号串相同</li></ul><h4 id="%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%AD%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95" tabindex="-1">自上而下语法分析中问题的解决方法</h4><ul><li>无限循环：消除左递归</li><li>回溯：避免回溯</li></ul><h3 id="2-%E5%B7%A6%E9%80%92%E5%BD%92%E7%9A%84%E6%B6%88%E9%99%A4" tabindex="-1">2 左递归的消除</h3><h4 id="%E7%9B%B4%E6%8E%A5%E5%B7%A6%E9%80%92%E5%BD%92%E7%9A%84%E6%B6%88%E9%99%A4" tabindex="-1">直接左递归的消除</h4><p>设有产生式 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>A</mi><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><mi>A</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><mi>A</mi><msub><mi>α</mi><mi>m</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A \rightarrow Aα_1|Aα_2|…|Aα_m|β_1|β_2|…|β_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mtext>，</mtext><mn>2</mn><mtext>，</mtext><mo>…</mo><mtext>，</mtext><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y_i(i=1，2，…，n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord">2</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></eq>均不以符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>为首，增加新非终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>U</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">U^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></eq>，将上述产生式变换为:<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>β</mi><mn>1</mn></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>2</mn></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mi>n</mi></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup></mrow><annotation encoding="application/x-tex">A→β_1A^{&#x27;}|β_2A^{&#x27;}|…|β_nA^{&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1925em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>m</mi></msub><msup><mi>A</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mi mathvariant="normal">∣</mi><mi>ε</mi></mrow><annotation encoding="application/x-tex">A^{&#x27;}→α_1A^{&#x27;}|α_2A^{&#x27;}|…|α_mA^{&#x27;}|ε</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1925em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">ε</span></span></span></span></eq></p><h4 id="%E9%97%B4%E6%8E%A5%E5%B7%A6%E9%80%92%E5%BD%92%E7%9A%84%E6%B6%88%E9%99%A4" tabindex="-1">间接左递归的消除</h4><ol><li>以某种顺序将文法非终结符排列<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>U</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mtext>，</mtext><msub><mi>U</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">U_1 ，U_2 ，…，U_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>改写文法;</li><li>化简由2得到的文法。</li></ol><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%B6%88%E9%99%A4%E9%97%B4%E6%8E%A5%E5%B7%A6%E9%80%92%E5%BD%92.jpg" alt="消除间接左递归"></p><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%B6%88%E9%99%A4%E5%B7%A6%E9%80%92%E5%BD%92%E4%BE%8B%E5%AD%90.jpg" alt="消除左递归例子"></p><h3 id="3-%E5%9B%9E%E6%BA%AF%E7%9A%84%E9%81%BF%E5%85%8D" tabindex="-1">3 回溯的避免</h3><h4 id="%E9%81%BF%E5%85%8D%E5%9B%9E%E6%BA%AF%E7%9A%84%E6%9D%A1%E4%BB%B6" tabindex="-1">避免回溯的条件</h4><ul><li>产生原因：<ul><li>文法中存在如下形式的产生式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">U→α_1|α_2|…|α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,且候选式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>α</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mtext>，</mtext><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">α_1，α_2，…，α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中有相同的终结首符号</li></ul></li><li>避免的前提条件：<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">α_1, α_2, …, α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>等各符号串的终结首符号集合总是两两互不相交的</li><li>但当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">a_j \rightarrow^{*}\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9748em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>时，仅有上述条件不够，需要达成LL(1)文法条件</li></ul></li></ul><h4 id="ll(1)%E6%96%87%E6%B3%95" tabindex="-1">LL(1)文法</h4><ul><li><p>定义：</p><ul><li>文法中任一形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi><mo>→</mo><msub><mi>α</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mn>2</mn></msub><mi mathvariant="normal">∣</mi><mo>…</mo><mi mathvariant="normal">∣</mi><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">U→α_1|α_2|…|α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的产生式满足：<ul><li><ol><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>α</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>α</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">α_1, α_2, …, α_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的终结首符号集两两互不相交，即<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>ϕ</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">!</mo><mo>=</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(α_i)\bigcap FIRST(α_j)=\phi(i!=j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋂</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">!</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="2"><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><msup><mo>→</mo><mo>∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">a_j\rightarrow^*\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9748em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>文法还用是满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>⋂</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>=</mo><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">FIRST(α_i)\bigcap FOLLOW(U)=\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋂</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ϕ</span></span></span></span></eq></li></ol></li></ul></li></ul></li><li><p>计算FIRST集合</p><ul><li>若 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mi>X</mi><mo>∈</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mi>U</mi></msub><mo>⋃</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha=X\in (V_U \bigcup V_T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋃</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq>构造为<ul><li><ol><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">X\in V_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>X</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FIRST(X)=\{X\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">}</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">X\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,相应产生式为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>a</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub></mrow><annotation encoding="application/x-tex">X\rightarrow a...,a\in V_T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">a</span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a\in FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq>,若有相应产生式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">X\rightarrow \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>，则 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="3"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">X\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,相应产生式为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><mi>Y</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>Y</mi><mo>∈</mo><msub><mi>V</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">X \rightarrow Y..,Y\in V_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">..</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>⊂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(Y)-\{\epsilon\}\subset FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq><br>如果有产生式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>→</mo><msub><mi>Y</mi><mn>1</mn></msub><msub><mi>Y</mi><mn>2</mn></msub><mo>…</mo><msub><mi>Y</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">X\rightarrow Y_1Y_2…Y_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>（其中，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mn>1</mn></msub><mtext>，</mtext><msub><mi>Y</mi><mn>2</mn></msub><mtext>，</mtext><mo>…</mo><mtext>，</mtext><msub><mi>Y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">Y_1，Y_2，…，Y_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></eq>都是非终结符，且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mn>1</mn></msub><msub><mi>Y</mi><mn>2</mn></msub><mo>…</mo><msub><mi>Y</mi><mrow><mi>i</mi><mtext>–</mtext><mn>1</mn></mrow></msub><msup><mo>→</mo><mo>∗</mo></msup><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Y_1Y_2…Y_{i–1}\rightarrow^*\{\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8387em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">–1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span></span></span></span></eq>则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>⊂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo separator="true">;</mo></mrow><annotation encoding="application/x-tex">FIRST(Y_i)-\{\epsilon\}\subset FIRST(X);</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mpunct">;</span></span></span></span></eq>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mn>1</mn></msub><msub><mi>Y</mi><mn>2</mn></msub><mo>…</mo><msub><mi>Y</mi><mi>k</mi></msub><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">Y_1Y_2…Y_k\rightarrow^{*}\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8387em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>，则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></eq>。</li></ol></li></ul></li><li>若 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>V</mi><mi>U</mi></msub><mo>⋃</mo><msub><mi>V</mi><mi>T</mi></msub><msup><mo stretchy="false">)</mo><mo>∗</mo></msup><mo separator="true">,</mo><mi>α</mi><mo>=</mo><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><msub><mi>X</mi><mn>3</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\alpha=(V_U \bigcup V_T)^*,\alpha = X_1X_2X_3..X_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">⋃</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>构造为<ul><li><ol><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>=</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha=\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,显然<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)=\{\epsilon\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>≠</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha\not=\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>则</mtext><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>⊂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo><mtext>；</mtext></mrow><annotation encoding="application/x-tex">则FIRST(X_1)-\{\epsilon\}\subset FIRST(\alpha)；</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord cjk_fallback">则</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span><span class="mord cjk_fallback">；</span></span></span></span></eq></li></ol></li><li><ol start="3"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>≠</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha\not=\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">X_1X_2..X_n\rightarrow^{*}\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8387em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">{</mo><mi>ϵ</mi><mo stretchy="false">}</mo><mo>⊂</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(X_i)-\{\epsilon\}\subset FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ϵ</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="4"><li>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>≠</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\alpha\not =\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>,且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mn>1</mn></msub><msub><mi>X</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>X</mi><mi>n</mi></msub><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">X_1X_2..X_n\rightarrow^{*}\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8387em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></eq>，则<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FIRST%E9%9B%86%E5%90%88%E7%9A%84%E6%B1%82%E6%B3%95.jpg" alt="FIRST集合的求法"></li></ol></li></ul></li></ul></li><li><p>计算FOLLOW集合</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span></eq>的求法，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>S</mi><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mo>…</mo><mi>U</mi><mi>a</mi><mo>…</mo><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FOLLOW(U)=\{a|S\rightarrow^{*}\dots Ua\dots,a\in V_T\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></eq>,该定义中，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>必须从S推得才能有<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mtext>集合</mtext></mrow><annotation encoding="application/x-tex">FOLLOW集合</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">集合</span></span></span></span></eq></li><li><ol><li>对于文法的开始/识别符号S，令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">$</mi><mo>∈</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\$\in FOLLOW(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">$</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>$ A \rightarrow \alpha B \beta <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>则，</mtext></mrow><annotation encoding="application/x-tex">则，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">则，</span></span></span></span></eq>FIRST(\beta)<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>中的非</mtext></mrow><annotation encoding="application/x-tex">中的非</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">中的非</span></span></span></span></eq>\epsilon<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>元素属于</mtext></mrow><annotation encoding="application/x-tex">元素属于</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">元素属于</span></span></span></span></eq>FOLLOW(B)$</li></ol></li><li><ol start="3"><li>$ A \rightarrow \alpha B <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 4: ，或 $̲A\rightarrow \a…" style="color:#cc0000"><span class="cjk_fallback">，或 $A\rightarrow \alpha B \beta</span></span></eq>，而 $ FIRST(\beta) <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 4: 含有 $̲ \epsilon $ ，则" style="color:#cc0000"><span class="cjk_fallback">含有 $ \epsilon $ ，则</span></span></eq> FOLLOW(A) $ 的元素属于$ FOLLOW(B) $<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/FOLLOW%E9%9B%86%E5%90%88%E7%9A%84%E6%B1%82%E6%B3%95.jpg" alt="FOLLOW集合的求法"></li></ol></li></ul></li></ul><h3 id="4-%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90%E5%99%A8%E7%9A%84%E6%9E%84%E9%80%A0" tabindex="-1">4 预测分析器的构造</h3><h4 id="%E9%80%92%E5%BD%92%E5%AD%90%E7%A8%8B%E5%BA%8F%E6%B3%95" tabindex="-1">递归子程序法</h4><ul><li>基本思想：对真实推导过程的直接模拟</li><li>约定：每进入一个分析子程序前，已读到该子程序相应的非终结符号推导出的第一个终结符号/终结首符号。<ul><li>例如，当读到IF语句的第一个单词IF时，便知道将要进行IF语句的识别，于是调用对应于&lt;IF条件语句&gt;的分析子程序进行分析</li></ul></li><li>例子：<img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E5%88%86%E6%9E%90%E5%AD%90%E7%A8%8B%E5%BA%8F%E6%B3%95%E4%BE%8B%E5%AD%90.jpg" alt="分析子程序法例子"></li></ul><h4 id="%E7%A1%AE%E5%AE%9A%E7%9A%84ll(1)%E5%88%86%E6%9E%90%E5%99%A8" tabindex="-1">确定的LL(1)分析器</h4><ul><li><p>LL(1)文法：</p><ul><li>从左到右扫描输入符号串，从开始符号出发生成句子的最左推导。对于形如 U→α1|α2|…|αn 的产生式，只要向输入符号串中查看一个输入符号，便能惟一确定当前应选择的产生式，由此而得名LL(1)分析法。</li><li>当需要向输入串中查看K个输入符号，才能惟一确定当前应选择的产生式时，称为LL(K)分析法</li></ul></li><li><p>分析器程序结构：一张分析表M和一个符号栈S</p><ul><li>分析表的元素<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>U</mi><mtext>，</mtext><mi>a</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">M[U，a]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">a</span><span class="mclose">]</span></span></span></span></eq>为一条关于该非终结符号U的产生式，指出当该非终结符号U面临输入符号a时应选择的产生式，分析表的元素也可能是一个出错标志，指出非终结符号U不能面临终结符号a。</li><li>符号栈S用于存放文法的符号，当文法和待分析的符号串确定后，符号栈的内容随分析过程而不断变化。开始时，栈底放“$”，假定输入符号串以“$”结束。</li></ul></li><li><p>分析过程：<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/LL(1)%E5%88%86%E6%9E%90%E5%99%A8%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B%E4%B8%BE%E4%BE%8B1.jpg" alt><br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/LL(1)%E5%88%86%E6%9E%90%E5%99%A8%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B%E4%B8%BE%E4%BE%8B2.jpg" alt></p></li><li><p>分析表的构造</p><ul><li><ol><li>对<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>中的每一个终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>,置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,a]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>,则对于属于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq>的每一个终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">$</mi></mrow><annotation encoding="application/x-tex">\$</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">$</span></span></span></span></eq>,分别置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,b]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi mathvariant="normal">$</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,\$]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">$</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq></li></ol></li><li><ol start="3"><li>如有不能按规则1与2构造的元素置出错标志<br><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/%E6%9E%84%E9%80%A0%E5%88%86%E6%9E%90%E8%A1%A8%E4%BE%8B%E5%AD%90.jpg" alt="构造分析表例子"></li></ol></li></ul></li><li><p>二义性文法的分析表中存在冲突项，即通过一个符号由多个产生式</p></li></ul><h2 id="4(2)%E8%87%AA%E4%B8%8B%E8%80%8C%E4%B8%8A%E7%9A%84%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">4(2)自下而上的语法分析</h2><h3 id="%E8%87%AA%E4%B8%8B%E8%80%8C%E4%B8%8A%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90%E7%AE%80%E4%BB%8B" tabindex="-1">自下而上语法分析简介</h3><ul><li><p>基本思想</p><ul><li>推导——从输入的符号串开始逐步向上归约，试图归约到文法的开始/识别符号。</li><li>语法树——以输入符号串作为末端结点符号串，向根结点方向构造语法树，使识别符号正好是语法树的根结点。</li><li>程序的编译——从该高级语言文法的源程序或与其等价的单词串出发，试图归约到该文法的开始符号——&lt;程序&gt;</li></ul></li><li><p>基本实现技术——移进-归约法</p><ul><li>引进一个后进先出的栈来存放符号，按照扫描顺序把当前输入符号下推入栈中(移进)，然后查看栈顶的符号串是否可以被归约。</li></ul></li><li><p>短语： <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo><mover><mo><mo>⇒</mo></mo><mo lspace="0em" rspace="0em">∗</mo></mover></mo><mi>α</mi><mi>A</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">S\stackrel{*}{ \Rightarrow } \alpha A c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9926em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9926em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⇒</span></span></span><span style="top:-3.5669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span></span></span></span></eq>,且 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo><mover><mo><mo>⇒</mo></mo><mo lspace="0em" rspace="0em">+</mo></mover></mo><mi>β</mi></mrow><annotation encoding="application/x-tex">A\stackrel{+}{ \Rightarrow } \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0752em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0752em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">⇒</span></span></span><span style="top:-3.5669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq>,则称<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq>是句型<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mi>A</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">\alpha A c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span></span></span></span></eq>相对于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的短语</p><ul><li>若有<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>⇒</mo><mi>β</mi></mrow><annotation encoding="application/x-tex">A \Rightarrow \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq>,则称<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq>是句型<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mi>A</mi><mi>c</mi></mrow><annotation encoding="application/x-tex">\alpha A c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord mathnormal">A</span><span class="mord mathnormal">c</span></span></span></span></eq>相对于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>的直接短语</li></ul></li><li><p>句型的最左直接短语称为句柄</p></li><li><p>在一个句型对应的语法树中</p><ul><li>以某非终结符为根的两代以上的字数的所有末端节点从左到右排列就是对于该非终结符的一个短语</li><li>如果子树只有两代，则短语为直接短语</li><li>最左的两代子树末端就是句柄</li></ul></li><li><p>LR文法采用句柄进行规约</p></li></ul><h3 id="lr(0)%E9%A1%B9%E7%9B%AE" tabindex="-1">LR(0)项目</h3><p>在每个产生式右部添加一个圆点，表示我们在分析过程中已经看到了产生式的哪些部分，以及我们希望下一个字符是什么</p><ul><li><p>如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\rightarrow XYZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq>有四个项目</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mo separator="true">⋅</mo><mi>X</mi><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\rightarrow ·XYZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi><mo separator="true">⋅</mo><mi>Y</mi><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\rightarrow X·YZ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi><mi>Y</mi><mo separator="true">⋅</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">A\rightarrow XY·Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>X</mi><mi>Y</mi><mi>Z</mi><mo separator="true">⋅</mo></mrow><annotation encoding="application/x-tex">A\rightarrow XYZ·</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mpunct">⋅</span></span></span></span></eq></li></ul></li><li><p>称<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo separator="true">⋅</mo></mrow><annotation encoding="application/x-tex">A\rightarrow \alpha ·</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">⋅</span></span></span></span></eq>为“规约项目”</p><ul><li>规约项目<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>→</mo><mi>α</mi><mo separator="true">⋅</mo></mrow><annotation encoding="application/x-tex">S^{&#x27;}\rightarrow \alpha ·</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4445em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">⋅</span></span></span></span></eq>，称为“接受项目”</li></ul></li><li><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi><mo separator="true">⋅</mo><mi>a</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow \alpha · a \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq> ,称为“移进项目”</p></li><li><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>B</mi><mo separator="true">⋅</mo><mi>a</mi><mi>β</mi></mrow><annotation encoding="application/x-tex">A\rightarrow B · a \beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></eq> ,称为“待约项目”</p></li><li><p>内核项：包括初始项<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>→</mo><mo separator="true">⋅</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S^{&#x27;}\rightarrow·S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>以及点不再最左端的所有项</p></li><li><p>非内核项：除<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>S</mi><msup><mrow></mrow><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msup><mo>→</mo><mo separator="true">⋅</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">S^{&#x27;}\rightarrow·S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9425em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9425em;"><span style="top:-2.9425em;margin-right:0.05em;"><span class="pstrut" style="height:2.5795em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>以外的点在最左端的所有项</p></li></ul><p>以LR(0)项目集为基础，构造LR(0)自动机，做出语法分析器</p><h4 id="lr(0)%E8%87%AA%E5%8A%A8%E6%9C%BA%E7%9A%84%E6%9E%84%E9%80%A0" tabindex="-1">LR(0)自动机的构造</h4><ul><li>构造分析表中的状态<br>假设I为文法的任一项目集(开始时仅包含S’→.S，S '为拓广文法的识别符号)，重复下述步骤求CLOSURE(I)：<ol><li>I的任何项目均属于CLOSURE(I)</li><li>如果A→α.Bβ属于CLOSURE(I)，则所有B→.γ也属于CLOSURE(I)。<br>上述工作重复到CLOSURE(I)不再扩大为止，此CLOSURE(I)即为所求的一个项目子集。</li></ol></li></ul><h4 id="%E6%B4%BB%E5%89%8D%E7%BC%80" tabindex="-1">活前缀</h4><ul><li><p>句柄的识别需要借助实际句型中的信息。在得到一个规范句型的完整句柄之前所识别的符号串称为规范句型的活前缀。</p></li><li><p>LR(0)自动机本质是DFA，那么就可以识别串，能被该自动机识别的串称为活前缀</p></li></ul><h4 id="lr(0)%E5%88%86%E6%9E%90%E8%A1%A8" tabindex="-1">LR(0)分析表</h4><p><img src="/images/%E6%9C%AC%E7%A7%91/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E8%AF%BE%E7%A8%8B/LR(0)%E5%88%86%E6%9E%90%E8%A1%A8%E7%9A%84%E6%9E%84%E9%80%A0.jpg" alt></p><ul><li>移进规约冲突<ul><li>左结合选移进</li><li>右结合选归约</li></ul></li></ul><h2 id="5%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%BF%BB%E8%AF%91" tabindex="-1">5语法制导翻译</h2><h3 id="%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%BF%BB%E8%AF%91%E7%AE%80%E4%BB%8B" tabindex="-1">语法制导翻译简介</h3><ul><li>属性文法：对某个上下文无关文法，为每个文法符号指定一组属性，且为文法中的每个产生式附加一段属性计算方法——语义规则/语义动作/语义子程序，则称该文法为属性文法。<br>原文法称为基础文法<ul><li>属性值的计算，由语法分析过程中产生的语法分析树相应节点的环境推导出来 — 属性的联编/绑定<ul><li>静态属性：执行前联编，如数的有效位数</li><li>动态属性：在执行期间联编，如表达式的值</li></ul></li></ul></li><li>语法制导定义SDD<ul><li>定义与文法符号相关联的属性集</li><li>定义与产生式相关联的一组语义规则</li></ul></li><li>(语法制导的)翻译方案<ul><li>基本思想：在语法分析的过程中，依随分析的过程，根据每个产生式添加的语义动作进行翻译。一旦某个产生式被选用于推导或归约，就执行其相应的语义动作，完成预定的翻译工作</li></ul></li></ul><h3 id="%E5%B1%9E%E6%80%A7%E5%88%86%E7%B1%BB" tabindex="-1">属性分类</h3><ul><li><p>综合属性（自下而上得传递消息）</p><ul><li>语法规则上：根据产生式右部的符号属性计算左部被定义的符号的综合属性</li><li>语法树上：根据子节点的属性和父节点自身的属性计算父节点的综合属性</li></ul></li><li><p>继承属性（自上而下传递消息）</p><ul><li>语法规则上：根据右部候选式中的符号的属性和左部被定义的符号的属性计算右部候选式中符号的继承属性</li><li>语法树上：根据父节点和兄弟节点的属性计算子节点的继承属性</li></ul></li><li><p>终结符只有综合属性，并且这些综合属性由词法分析器提供</p></li><li><p>非终结符既有综合属性也可有继承属性，文法的开始符号没有继承属性，除非另加说明</p></li><li><p>文法符号的综合属性集合和继承属性集合的交集应该为空</p></li><li><p>对出现在产生式右边的继承属性和出现在产生式右边的综合属性都必须提供一个计算规则。属性计算规则中只能使用相应产生式中的文法符号的属性</p></li><li><p>出现在产生式左边的继承属性和出现在产生式右边的综合属性不由所给的产生式的属性计算规则计算，而是由其它产生式的属性规则计算或者由属性计算器的参数提供</p></li></ul><h3 id="sdd%E6%B1%82%E5%80%BC%E9%A1%BA%E5%BA%8F%EF%BC%8C%E5%B1%9E%E6%80%A7%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95" tabindex="-1">SDD求值顺序，属性计算方法</h3><ul><li>依赖图<br>用一个有向图描述了某个语法分析树中的属性实例之间的依赖关系，若属性x.a的值依赖于属性y.b的值，则加入一条同y.b到x.a的有向边</li></ul><h3 id="sdd-%E5%88%86%E7%B1%BB" tabindex="-1">SDD 分类</h3><ul><li>S-属性定义：仅使用综合属性的SDD<ul><li>可以按照语法分析树节点的任何自底向上的顺序来计算各个属性值</li></ul></li><li>L-属性定义<ul><li>一个SDD是L-属性，当且仅当它的每个属性要么都是综合属性(这里包含了S-属性)，要么是满足以下条件的继承属性<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A\rightarrow x_1x_2...x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,右部符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的继承属性仅依赖于：<ol><li>A的继承属性</li><li>产生式中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>左边<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>x</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">x_1,x_2,...x_{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6389em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></eq>的属性</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>本身的属性</li></ol></li></ul></li></ul><h3 id="sdt-%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%BF%BB%E8%AF%91%E6%96%B9%E6%A1%88" tabindex="-1">SDT 语法制导翻译方案</h3><p>SDD：只给出了语义规则(属性计算的定义)，并没有给出计算的次序，所以要通过依赖图寻求计算顺序</p><p>SDT：既有关于属性计算的定义，又有计算的次序<br>SDT将语义动作用花括号括起来，作为一种程序片段，插入到产生式右部的合适位置</p><ul><li><p>设计翻译模式的原则：必须保证某个语义动作引用一个属性时，该属性已经被定义了</p><ol><li>当语义规则只引用综合属性是，将动作放到产生式末尾</li><li>当语义规则中有继承属性，也有继承属性时<ol><li>产生式右部的符号的继承属性必须在符号之前计算出来</li><li>一个动作不能引用这个动作右边的符号的属性</li><li>产生式左部的综合属性只有在它所引用的所有属性都计算出来后才能计算，一般动作放在最右部</li></ol></li></ol></li><li><p>SDT实现了语法分析和语义分析同时进行，基于自下而上的语法分析方式</p></li><li><p>语法分析能得到语法树</p><ul><li>仅指明各个文法符号之间的传递关系</li><li>不能决定文法符号间应该有什么样的运算，这是由语义分析决定的</li></ul></li></ul><h2 id="%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0" tabindex="-1">期末复习</h2><p><a href="https://www.bilibili.com/video/BV1SB4y1S7Sc/?p=4&amp;spm_id_from=pageDriver&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">跌的视频</a><br>共7道</p><h3 id="%E7%AC%AC%E4%B8%80%E9%81%93-%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">第一道 词法分析</h3><ol><li>求NFA接受字符串的过程</li><li>NFA转DFA，并画出状态转换图</li><li>DFA的最小化</li><li>自然语言描述NFA的语言</li><li>NFA/DFA转正规表达式</li></ol><h3 id="%E7%AC%AC%E4%BA%8C%E9%81%93-%E8%87%AA%E4%B8%8A%E8%80%8C%E4%B8%8B%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">第二道 自上而下语法分析</h3><ol><li><p>最左推导</p><ol><li>总是选择每个句型最左边的非终结字符进行替换</li></ol></li><li><p>消除左递归</p><ol><li>先消除间接左递归</li><li>再消除直接左递归</li></ol></li><li><p>求FIRST，FOLLOW集合</p><ul><li>计算FOLLOW集合<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span></eq>的求法，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi mathvariant="normal">∣</mi><mi>S</mi><msup><mo>→</mo><mo lspace="0em" rspace="0em">∗</mo></msup><mo>…</mo><mi>U</mi><mi>a</mi><mo>…</mo><mo separator="true">,</mo><mi>a</mi><mo>∈</mo><msub><mi>V</mi><mi>T</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">FOLLOW(U)=\{a|S\rightarrow^{*}\dots Ua\dots,a\in V_T\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">→</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></eq>,该定义中，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span></eq>必须从S推得才能有<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mtext>集合</mtext></mrow><annotation encoding="application/x-tex">FOLLOW集合</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord cjk_fallback">集合</span></span></span></span></eq></li><li><ol><li>对于文法的开始/识别符号S，令<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">$</mi><mo>∈</mo><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\$\in FOLLOW(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">$</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>$ A \rightarrow \alpha B \beta <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>则，</mtext></mrow><annotation encoding="application/x-tex">则，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">则，</span></span></span></span></eq>FIRST(\beta)<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>中的非</mtext></mrow><annotation encoding="application/x-tex">中的非</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">中的非</span></span></span></span></eq>\epsilon<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>元素属于</mtext></mrow><annotation encoding="application/x-tex">元素属于</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">元素属于</span></span></span></span></eq>FOLLOW(B)$</li></ol></li><li><ol start="3"><li>$ A \rightarrow \alpha B <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 4: ，或 $̲A\rightarrow \a…" style="color:#cc0000"><span class="cjk_fallback">，或 $A\rightarrow \alpha B \beta</span></span></eq>，而 $ FIRST(\beta) <eq><span class="katex-error" title="ParseError: KaTeX parse error: Can&#x27;t use function &#x27;$1#x27; in math mode at position 4: 含有 $̲ \epsilon $ ，则" style="color:#cc0000"><span class="cjk_fallback">含有 $ \epsilon $ ，则</span></span></eq> FOLLOW(A) $ 的元素属于$ FOLLOW(B) $</li></ol></li></ul></li></ul></li><li><p>构造LL(1)分析表</p></li></ol><ul><li>分析表的构造<br>对于产生式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>→</mo><mi>α</mi></mrow><annotation encoding="application/x-tex">A\rightarrow \alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></eq><ul><li><ol><li>对<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>中的每一个终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span></eq>,置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>a</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,a]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq></li></ol></li><li><ol start="2"><li>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mo>∈</mo><mi>F</mi><mi>I</mi><mi>R</mi><mi>S</mi><mi>T</mi><mo stretchy="false">(</mo><mi>α</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\epsilon \in FIRST(\alpha)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">ϵ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">RST</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mclose">)</span></span></span></span></eq>,则对于属于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>O</mi><mi>L</mi><mi>L</mi><mi>O</mi><mi>W</mi><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FOLLOW(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">FO</span><span class="mord mathnormal">LL</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq>的每一个终结符号<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">$</mi></mrow><annotation encoding="application/x-tex">\$</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">$</span></span></span></span></eq>,分别置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,b]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq>和<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">[</mo><mi>A</mi><mo separator="true">,</mo><mi mathvariant="normal">$</mi><mo stretchy="false">]</mo><mo>=</mo><mi mathvariant="normal">&quot;</mi><mi>A</mi><mo>→</mo><mi>α</mi><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">M[A,\$]=&quot;A\rightarrow\alpha&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">[</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">$</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">&quot;</span></span></span></span></eq></li></ol></li></ul></li></ul><ol start="5"><li>给出分析过程</li></ol><ul><li><p>使用分析表的分析过程</p><table><thead><tr><th>符号栈</th><th>输入串</th><th>分析和动作</th></tr></thead><tbody><tr><td>E$</td><td>id + id * id$</td><td></td></tr><tr><td>…</td><td>…</td><td>…</td></tr></tbody></table></li></ul><h3 id="%E7%AC%AC%E4%B8%89%E9%81%93-%E6%B6%88%E9%99%A4%E6%96%87%E6%B3%95%E4%BA%8C%E4%B9%89%E6%80%A7" tabindex="-1">第三道 消除文法二义性</h3><ol><li>说明二义文法</li></ol><ul><li>文法对同一语句产生不同的语法树，则文法是二义的</li><li>二义性产生原因<ul><li>左右结合性<ul><li>问题：<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>E</mi><mo>∗</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E +E | E*E|id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id+id+id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>，会产生两个语法树<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>（</mtext><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi><mtext>）</mtext><mo>+</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">（id+id）+id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">）</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq> 和 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi><mo>+</mo><mtext>（</mtext><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi><mtext>）</mtext></mrow><annotation encoding="application/x-tex">id+（id+id）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">）</span></span></span></span></eq>，这里两个树不同的是扩展方向</li><li>解决:<ul><li>左结合：将可以递归的非终结符放在终结符的左侧，使运算具有左结合性</li><li>右结合同</li></ul></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E+E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>改为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>F</mi><mi mathvariant="normal">∣</mi><mi>F</mi><mo separator="true">,</mo><mi>F</mi><mo>→</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E+F|F,F\rightarrow id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>,这样就是左结合</li></ul></li><li>优先级：某个算符所在语法树层数越高，越先被运算，这种算符的优先级越高<ul><li>问题： <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>E</mi><mo>∗</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E +E | E*E|id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mi>d</mi><mo>+</mo><mi>i</mi><mi>d</mi><mo>∗</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">id+id*id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>中会产生两个语法树，这里没有体现*的优先级</li><li>解决：引入新非终结符，增加一个新的子结构</li><li>低优先级的结构靠近开始符号</li><li>高优先级的结构靠近终结符号</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>E</mi><mo>∗</mo><mi>E</mi><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">E\rightarrow E +E | E*E|id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq>改写为<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>→</mo><mi>E</mi><mo>+</mo><mi>T</mi><mi mathvariant="normal">∣</mi><mi>T</mi></mrow><annotation encoding="application/x-tex">E \rightarrow E+T|T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>→</mo><mi>T</mi><mo>∗</mo><mi>F</mi><mi mathvariant="normal">∣</mi><mi>F</mi></mrow><annotation encoding="application/x-tex">T \rightarrow T*F|F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>→</mo><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">F \rightarrow id</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></eq><br>这样可以通过设定优先级去除二义性</li></ul></li></ul></li></ul><h3 id="%E7%AC%AC%E5%9B%9B%E9%81%93-%E8%87%AA%E4%B8%8B%E8%80%8C%E4%B8%8A%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90" tabindex="-1">第四道 自下而上语法分析</h3><h4 id="1.2-%E6%B1%82lr(0)%E9%A1%B9%E7%9B%AE%E9%9B%86%EF%BC%8C%E8%AF%86%E5%88%AB%E6%B4%BB%E5%89%8D%E7%BC%80" tabindex="-1">1.2 求LR(0)项目集，识别活前缀</h4><ul><li>求LR(0)项目集<ul><li>如果只求某状态的，仅考虑入边即可</li></ul></li><li>构造LR(0)自动机</li><li>活前缀：跑自动机看能否识别</li></ul><h4 id="3%2C4-%E6%9E%84%E9%80%A0lr%E5%88%86%E6%9E%90%E8%A1%A8%EF%BC%8C%E7%BB%99%E5%87%BAlr%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B" tabindex="-1">3,4 构造LR分析表，给出LR分析过程</h4><h3 id="%E7%AC%AC%E4%BA%94%E9%81%93" tabindex="-1">第五道</h3><ul><li><p>语法知道定义SDD：是一个上下文无关文法的属性及规则的定义</p><ul><li>文法符号具有某些属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">.</mi><mi>a</mi><mo separator="true">,</mo><mi>X</mi><mi mathvariant="normal">.</mi><mi>b</mi><mtext>等</mtext><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X.a, X.b 等)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">.</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">.</span><span class="mord mathnormal">b</span><span class="mord cjk_fallback">等</span><span class="mclose">)</span></span></span></span></eq></li><li>文法的产生式具有某些语义规则(语义规则用于解释这些值得传递和计算)</li></ul></li><li><p>属性分类</p><ul><li>综合属性（自下而上得传递消息）<ul><li>语法规则上：根据产生式右部的符号属性计算左部被定义的符号的综合属性</li><li>语法树上：根据子节点的属性和父节点自身的属性计算父节点的综合属性</li></ul></li><li>继承属性（自上而下传递消息）<ul><li>语法规则上：根据右部候选式中的符号的属性和左部被定义的符号的属性计算右部候选式中符号的继承属性</li><li>语法树上：根据父节点和兄弟节点的属性计算子节点的继承属性</li></ul></li></ul></li><li><p>带注释的语法树：在语法树的基础上加上属性</p></li></ul><h3 id="%E7%AC%AC%E5%85%AD%E9%81%93" tabindex="-1">第六道</h3><p>跟汇编很像，不难</p><h3 id="%E7%AC%AC%E4%B8%83%E9%81%93" tabindex="-1">第七道</h3><p>给出错误的C语言程序，指出错误</p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h2 id=&quot;2%E6%96%87%E6%B3%95%E5%92%8C%E8%AF%AD%E8%A8%80%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%AE%9A%E4%B9%89&quot; tabindex=&quot;-1&quot;&gt;2文法和语言的形式定义&lt;</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="编译原理" scheme="http://example.com/tags/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>数据库系统复习</title>
    <link href="http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/"/>
    <id>http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%A4%8D%E4%B9%A0/</id>
    <published>2023-08-16T13:48:11.654Z</published>
    <updated>2023-04-12T07:16:28.000Z</updated>
    
    <content type="html"><![CDATA[<img src="/images/meitu/2.jpg"><p>主要观看 <a href="https://www.bilibili.com/video/BV1VE411h7hq?p=176&amp;vd_source=240b8edf72530a8ec2d9f48cc6514072">数据库系统实现网课</a>1700后的内容所成笔记。</p><p>与 数据库系统实现（机械工业出版社）所讲内容基本吻合，但在具体部分所讲的顺序有略有不同，但考虑到啃书（尤其是机翻工业出版社的书）有些困难，所以先过一边网课再啃书。<br>网课中得顺序有些与书中不同，这里需要注意。<br>[toc]</p><h2 id="%E7%AC%AC%E4%BA%8C%E7%AB%A0-%E8%BE%85%E5%8A%A9%E5%AD%98%E5%82%A8%E7%AE%A1%E7%90%86" tabindex="-1">第二章 辅助存储管理</h2><h3 id="01-%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB%E5%9B%9E%E9%A1%BE" tabindex="-1">01 存储体系回顾</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E7%BB%84%E7%BB%87%E7%9A%84%E5%9F%BA%E7%A1%80%E2%80%93%E5%AD%98%E5%82%A8%E4%BD%93%E7%B3%BB" tabindex="-1">（1）数据组织的基础–存储体系</h4><li>将不同性价比的存储器组织在一起，满足高速度，大容量，低价格需求</li><li>CPU与内存直接交换信息，按存储单元（字）进行访问</li><li>外存按存储块进行访问，其信息先装入内存，才能被CPU处理。<h4 id="%EF%BC%882%EF%BC%89%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%B9%E6%95%B0%E6%8D%AE%E7%9A%84%E7%BB%84%E7%BB%87" tabindex="-1">（2）操作系统对数据的组织</h4><p>FAT-目录-磁盘块/簇</p><p>FAT（文件分配表 File Allocation Table）</p><h4 id="%EF%BC%883%EF%BC%89%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86" tabindex="-1">（3）内存管理</h4></li><li>一条记录的地址=存储单元的地址=内存地址=页面：页面偏移量</li><li>页面 = 块</li><li>内存页面的分配</li><li>内存页面的置换<h3 id="02-%E7%A3%81%E7%9B%98%E7%9A%84%E7%BB%93%E6%9E%84%E4%B8%8E%E7%89%B9%E6%80%A7" tabindex="-1">02 磁盘的结构与特性</h3><h4 id="%EF%BC%881%EF%BC%89%E7%A3%81%E7%9B%98%E5%8F%8A%E7%A3%81%E7%9B%98%E5%AE%B9%E9%87%8F" tabindex="-1">（1）磁盘及磁盘容量</h4><p>此处应为磁盘结构图</p><p>磁盘位置表述：盘面：磁道：扇区</p><p>磁盘读写单位：扇区(sector)-&gt;簇cluster/块(block)</p><h4 id="%EF%BC%882%EF%BC%89%E7%A3%81%E7%9B%98%E7%9A%84%E8%AE%BF%E9%97%AE" tabindex="-1">（2）磁盘的访问</h4><p>寻道时间(1-20ms)<br>旋转时间(0-10ms)<br>传输时间(每4KB页&lt;1ms)</p><p>三个时间的和称为延迟</p><p>物理存取算法考虑的关键：降低I/O次数</p><p>降低排队等候时间&lt;==&gt;降低寻道/旋转延迟时间</p></li><li>同一磁道连续存储</li><li>同一柱面不同磁道并行块存储</li><li>多个磁盘并行块存储<h4 id="%EF%BC%883%EF%BC%89%E6%8F%90%E9%AB%98%E7%A3%81%E7%9B%98%E6%95%B0%E6%8D%AE%E8%AF%BB%E5%86%99%E6%97%B6%E9%97%B4%E4%B8%8E%E5%AD%98%E5%82%A8%E5%8F%AF%E9%9D%A0%E6%80%A7%E7%9A%84%E6%96%B9%E6%B3%95" tabindex="-1">（3）提高磁盘数据读写时间与存储可靠性的方法</h4><p>RAID技术：Redundant Array of Independent Disk(独立磁盘冗余磁盘阵列)</p><p>主要思想：</p></li><li>并行处理：并行读取多个磁盘<ul><li>    比特级拆分：一个字节被拆分成八个比特位，不同比特位存储于不同磁盘</li><li>    块级拆分：一个文件由多个块组成，不同块存储于不同磁盘</li></ul></li><li>可靠性<ul><li>    扇区/块读写校验：对一个扇区/块读写做校验</li><li>    多个磁盘间共同构成的信息读写做校验。</li></ul></li><p>实现结果：</p><ol><li>RAID0 块级拆分但无冗余</li><li>RAID2 镜像处理：每个磁盘有个一镜像磁盘</li><li>RAID3 位交叉纠错处理：4个磁盘存储4位+3个校验盘P存储3校验位</li><li>RAID4 位交叉检验：4个磁盘存储4位+1个校验盘存储1校验位，位拆分存储(借助于扇区读写校验判断出出错磁盘再根据校验盘进行纠错)</li><li>RAID5 块交叉检验：块拆分存储，其它同上</li><li>RAID6 快交叉分布式校验：块拆分存储，互为校验盘</li><li>更多复杂冗余</li></ol><h3 id="03-%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">03 查询实现的基本思想</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E7%9A%84%E6%98%A0%E5%B0%84%E5%85%B3%E7%B3%BB%E7%A4%BA%E6%84%8F" tabindex="-1">（1）数据存储的映射关系示意</h4><p>查询操作算法  --&gt;<br>文件管理/索引管理：数据逻辑结构 --&gt;<br>内存-缓冲区管理 --&gt;<br>磁盘-磁盘管理：读/写 块 --&gt;</p><h4 id="%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6%E7%A4%BA%E6%84%8F" tabindex="-1">（2）数据存储与查询实现的基本框架示意</h4><img src="/images/本科/数据存储与查询实现的基本框架示意.jpg"><h3 id="04-%E8%AE%B0%E5%BD%95%E4%B8%8E%E8%A1%A8%E5%9C%A8%E7%A3%81%E7%9B%98%E4%B8%8A%E7%9A%84%E5%AD%98%E5%82%A8" tabindex="-1">04 记录与表在磁盘上的存储</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5%E4%B8%8E%E7%A3%81%E7%9B%98%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E7%9A%84%E6%98%A0%E5%B0%84%E7%A4%BA%E6%84%8F" tabindex="-1">（1）数据库概念与磁盘相关概念的映射示意</h4><img src="/images/本科/数据库概念与磁盘相关概念的映射示意.jpg"><h4 id="%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E8%AE%B0%E5%BD%95%E7%9A%84%E5%8C%BA%E5%88%86%E5%8F%8A%E8%AE%B0%E5%BD%95%E5%B1%9E%E6%80%A7%E5%80%BC%E7%9A%84%E5%8C%BA%E5%88%86" tabindex="-1">（2）数据库中记录的区分及记录属性值的区分</h4><p>定长记录：按长度分记录<br>边长记录：按指针或标志区分记录</p><p>块头如何设计？</p><h4 id="%EF%BC%883%EF%BC%89-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E8%AE%B0%E5%BD%95-vs.%E7%A3%81%E7%9B%98%E5%9D%97" tabindex="-1">（3） 数据库中的记录 vs.磁盘块</h4><p>记录在磁盘中的存储：</p><p>非跨块存储：</p><li>浪费一些存储空间</li><li>磁盘块之间无关联可并行<p>跨块存储：靠指针连接</p></li><li>节省一些存储空间</li><li>磁盘间有关联需要串行<h4 id="%EF%BC%884%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E7%9A%84%E8%A1%A8-vs.%E7%A3%81%E7%9B%98%E5%9D%97" tabindex="-1">（4）数据库中的表 vs.磁盘块</h4><p>表所占磁盘块的分配方法：</p></li><li>连续分配：数据块被分配到连续的数据块上(会存在扩展困难问题)</li><li>链接分配：数据块中包含指向下一数据块的指针(访问速度问题)</li><li>按簇分配：簇是若干连续的磁盘块，簇之间靠指针链接</li><li>索引分配：索引块中存放指向实际数据块的指针<h3 id="05-%E5%9B%9B%E7%A7%8D%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87%E6%96%B9%E6%B3%95" tabindex="-1">05 四种文件组织方法</h3><ol><li>无序文件组织</li><li>有序文件组织</li><li>散列文件组织</li><li>聚簇文件组织</li></ol><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E7%BB%84%E7%BB%87%E4%B8%8E%E5%AD%98%E5%8F%96%E6%96%B9%E6%B3%95" tabindex="-1">（1）数据组织与存取方法</h4></li><li>数据组织要考虑更新(增删改)和检索需求<ol><li>更新将涉及数据存储空间的扩展和回收问题</li><li>检索将涉及扫描整个数据库的问题，大批量处理数据问题</li><li>不同的需求要求不同的数据组织方法和存取方法</li></ol></li><li> 文件组织：指的是数据组织成记录，块和访问结构的方式，包括把记录和块存储在磁盘上的方式，以及记录块之间相互联系的方法。(可以理解为是一种数据结构)</li><li>存取方法：指的是对文件所采取的存取操作方法。（可以理解为在数据结构上使用的算法）</li><li>一种文件组织可以采用多种存取方法进行访问<h4 id="%EF%BC%882%EF%BC%89%E6%97%A0%E5%BA%8F%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87" tabindex="-1">（2）无序文件组织</h4></li><li>特点：记录可存储于任意空间的位置，磁盘上存储的记录是无序的。更新效率高，但检索效率可能 低。</li><li>如何建立？<p>方法1：新记录插入到文件尾部；删除记录时，可以直接删除该记录所在位置的内容，也可以在该记录前标记“删除标记”<br>方法2：在前者基础上，新增记录可以利用那些标记为“删除标记”的记录空间</p></li><li>频繁删增记录时会造成空间浪费，所以需要周期性重新组织数据库。<p>数据库重组 是通过移走被删除的记录使有效记录连续存放，从而回收那些由删除记录而产生的未利用空间。</p><h4 id="%EF%BC%883%EF%BC%89%E6%9C%89%E5%BA%8F%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87" tabindex="-1">（3）有序文件组织</h4></li><li>特点：记录按某属性或属性组值得顺序插入，磁盘上存储的记录是有序的。检索效率较高。</li><li>用户存储排序的属性通常称为 排序字段 ，通常，排序字段使用关系中的主码，所以又称排序码</li><li>当按排序字段进行检索时，速度得到很大提升</li><p>问题：</p><li>有序记录文件的更新效率可能很低</li><li>因为：在更新时要移动其它记录，为插入记录流出空间<p>改进：</p></li><li>改进措施是为将来可能插入的元组预留空间，或者再使用一个临时的无序文件（被称为溢出文件）保留新增的记录。</li><li>当采取溢出文件措施时，检索操作既要操作主文件，也要操作溢出文件</li><li>因此需要周期性地重组数据库</li><li>数据库重组是将溢出文件合并到主文件中，并恢复主文件中的记录顺序。<h4 id="%EF%BC%884%EF%BC%89%E6%95%A3%E5%88%97%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87" tabindex="-1">（4）散列文件组织</h4></li><li>特点：可以把记录按照某属性或属性组地值，依据一个散列函数来计算其应放位置：桶号（Bucket，块号或簇号等）。检索效率和更新效率都有一定程度的提升。</li><li>用于进行散列函数计算的属性通常称为散列字段，散列字段通常也采用关系中的主码，所以又称散列码。</li><li>不同记录可能被hash成同一桶号，此时需在顺序检索出某一记录。<p>优化：</p></li><li>链接法处理溢出</li><li>动态散列技术等<h4 id="%EF%BC%885%EF%BC%89%E8%81%9A%E7%B0%87%E6%96%87%E4%BB%B6%E7%BB%84%E7%BB%87" tabindex="-1">（5）聚簇文件组织</h4></li><li>聚簇：将具有相同或相似属性值的记录存放在连续的磁盘簇块中</li><li>多表聚簇：将若干个相互关联的Table存储于一个文件中---这可以提高多表情况下的查询速度。<h3 id="06-oracle%E6%95%B0%E6%8D%AE%E5%BA%93%E7%89%A9%E7%90%86%E5%AD%98%E5%82%A8%E7%AE%80%E4%BB%8B" tabindex="-1">06 Oracle数据库物理存储简介</h3><p>这个书上好像没有，先跳了</p><h3 id="07-%E7%AC%AC%E4%BA%8C%E7%AB%A0%E6%80%BB%E7%BB%93" tabindex="-1">07 第二章总结</h3><img src="/images/本科/数据库物理存储.jpg"><h2 id="%E7%AC%AC%E4%B8%89%E7%AB%A0-%E7%B4%A2%E5%BC%95%E7%BB%93%E6%9E%84" tabindex="-1">第三章 索引结构</h2><h3 id="01-%E7%B4%A2%E5%BC%95%E7%9A%84%E6%A6%82%E5%BF%B5%E5%92%8C%E4%BD%9C%E7%94%A8" tabindex="-1">01 索引的概念和作用</h3><h4 id="%EF%BC%881%EF%BC%89%E7%B4%A2%E5%BC%95%E7%9A%84%E6%A6%82%E5%BF%B5" tabindex="-1">（1）索引的概念</h4><p><code>索引</code>是定义在存储表基础上，有助于无需检查所有记录而快速定位所需记录的一种<code>辅助存储结构</code>，由一系列存储在磁盘上的<code>索引项</code>组成，每一项索引由两部分组成：</p><ol><li>索引字段，由Table中某些列中的值串接而成。索引中通常存储了索引字段的每一个值，索引字段类似于词典中的词条。</li><li>行指针：指向Table中包含索引字段值的记录 在磁盘上的存储位置，行指针类似于词条在数据，词典中出现的页码</li></ol></li><li>存储索引项的文件为索引文件，相对应，存储表又称主文件</li><h4 id="%EF%BC%882%EF%BC%89%E7%B4%A2%E5%BC%95%E7%9A%84%E4%B8%80%E8%88%AC%E6%80%A7%E7%89%B9%E7%82%B9" tabindex="-1">（2）索引的一般性特点</h4><li>索引文件是一种辅助存储结构，其存在不改变存储表的物理存储结构，但可以明显提高存储表的访问速度</li><li>索引文件组织方式有两种：<ol><li>排序索引文件：按索引字段值的某一种顺序组织存储</li><li>散列索引文件：依据索引字段值使用散列函数分配散列桶的方式存储</li></ol></li><li>主文件组织有 堆文件，排序文件，散列文件，聚簇文件等多种方式</li><li>在一个表上可以针对不同的属性值或属性组和建立不同的索引文件，可建立多个索引文件。索引字段的值可以是table中的任何一个属性的值或任何多个属性值的组合值</li><li>索引文件比主文件小很多，通过检索一个小的索引文件（可以全部装载进内存），快速定位后，再有针对性的读取非常大的主文件中的有关记录</li><li>有索引时，更新操作必须同步更新索引文件和主文件<h4 id="%EF%BC%883%EF%BC%89%E5%85%B3%E4%BA%8E%E7%B4%A2%E5%BC%95%E5%BA%94%E7%94%A8%E7%9A%84%E8%AF%84%E4%BB%B7%E9%97%AE%E9%A2%98" tabindex="-1">（3）关于索引应用的评价问题</h4></li><li>索引技术应用是检索效率大幅度提高，但同时也增加了存储空间，使维护负担加重</li><li>衡量索引性能好坏： 1 访问时间 2 插入时间 3 删除时间 4 空间负载 5 支持存取的有效比<h4 id="%EF%BC%884%EF%BC%89%E7%B4%A2%E5%BC%95%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5%E7%9A%84%E5%8C%BA%E5%88%86" tabindex="-1">（4）索引相关概念的区分</h4></li><li>字段，排序字段，索引字段</li><li>码（Key），主码，又称表键---具有唯一性</li><li>排序码：对主文件进行排序存储的那些属性或属性组</li><li>索引码：即索引字段，不一定具有唯一性</li><li>搜索码：在主文件中查找记录的属性或属性集<h3 id="02-sql%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E7%B4%A2%E5%BC%95%E5%88%9B%E5%BB%BA%E4%B8%8E%E7%BB%B4%E6%8A%A4" tabindex="-1">02 SQL语言中的索引创建与维护</h3><p>书上没有，先跳了</p><h3 id="03-%E7%A8%A0%E5%AF%86%E7%B4%A2%E5%BC%95%E5%92%8C%E7%A8%80%E7%96%8F%E7%B4%A2%E5%BC%95" tabindex="-1">03 稠密索引和稀疏索引</h3><h4 id="%EF%BC%881%EF%BC%89%E7%A8%A0%E5%AF%86%E7%B4%A2%E5%BC%95%E5%92%8C%E7%A8%80%E7%96%8F%E7%B4%A2%E5%BC%95%E6%A6%82%E5%BF%B5" tabindex="-1">（1）稠密索引和稀疏索引概念</h4></li><li>对于一个主文件中的每一个记录（形成的每一个索引字段值），都有一个索引项和它对应，指明该记录所在位置。这样的索引称为稠密索引</li><li>对于主文件中的部分记录(形成的索引字段值)，有索引项和它对应，这样的索引称为 非稠密索引或稀疏索引<h4 id="%EF%BC%882%EF%BC%89%E7%A8%80%E7%96%8F%E7%B4%A2%E5%BC%95%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8D%E8%AE%B0%E5%BD%95" tabindex="-1">（2）稀疏索引如何定位记录</h4></li><li>索引文件中不存在搜索码的值，不代表主文件没有对应搜索码的记录</li><li>定位索引字段值为K的记录，需要<ol><li>首先找相邻的小于K的最大索引字段值对应的索引项</li><li>从该索引项对应的记录考试顺序进行table的检索</li></ol></li><li>稀疏索引的使用要求--主文件必须是按对应检索字段属性排序存储</li><li>相比稠密搜索：空间占用更少，维护任务更轻，但速度较慢</li><li>平衡：索引项不指向记录指针，而是指向记录所在存储块的指针，即每一个存储块有一个索引项，而不是每条记录有一个索引项<h4 id="%EF%BC%883%EF%BC%89-%E7%A8%A0%E5%AF%86%E7%B4%A2%E5%BC%95%E5%A6%82%E4%BD%95%E5%AE%9A%E4%BD%8D%E8%AE%B0%E5%BD%95" tabindex="-1">（3） 稠密索引如何定位记录</h4><p>候选键属性的稠密索引：先查索引，然后再根据索引读主文件。</p><p>非候选键属性的稠密索引：</p><p>第一种情况：索引文件中索引字段值是不重复的；主文件按检索字段排序且索引字段不是候选键。</p><p>第二种情况：索引文件中索引字段值有重复；主文件 未按索引字段排序且索引字段不是候选键。</p><p>第三种情况：引入指针桶处理非候选键索引的多记录情况；主文件未按检索字段排序且检索字段不是候选键。</p><h3 id="04-%E4%B8%BB%E7%B4%A2%E5%BC%95%E4%B8%8E%E8%BE%85%E5%8A%A9%E7%B4%A2%E5%BC%95" tabindex="-1">04 主索引与辅助索引</h3><h4 id="%EF%BC%881%EF%BC%89%E4%B8%BB%E7%B4%A2%E5%BC%95" tabindex="-1">（1）主索引</h4><p>主索引通常是每一存储块有一个索引项，索引项的总数和存储表所占的存储块数目相同，存储表的每一存储块的第一条记录，又称为锚记录，或者称为块锚。</p></li><li>主索引的索引字段值为块锚的索引字段值，而指针指向其所在的存储块</li><li>主索引是是按索引字段值进行排序的一个有序文件，通常建立在有序主文件的基于主码的排序字段上，即主索引的索引字段与主文件的主码有对应关系</li><li>主索引是稀疏索引<h4 id="%EF%BC%882%EF%BC%89-%E8%BE%85%E5%8A%A9%E7%B4%A2%E5%BC%95" tabindex="-1">（2） 辅助索引</h4><p>辅助索引是定义在主文件的任意或者多个非排序字段上的辅助存储结构。</p></li><li>辅助索引通常是对某一非排序字段上的每一个不同值有一个索引项；索引字段既是该字段的不同值，而指针则指向包含该纪录的块或该记录本身</li><li>当非排序字段为索引字段时，如果该字段值不唯一，则要采用一个类似链表的结构来保存包含该字段值的所有记录的位置</li><li>辅助索引是稠密索引，检索效率有时相当高<h4 id="%EF%BC%883%EF%BC%89%E5%B7%AE%E5%88%AB" tabindex="-1">（3）差别</h4></li><li>一个主文件只有一个主索引，但可以有多个辅助索引</li><li>主索引通常建立在主码/排序码上；辅助索引建立在其他属性上</li><li>可以利用主索引重新组织主文件数据，但辅助索引不能改变主文件数据</li><li>主索引是稀疏索引，辅助索引是稠密索引<h3 id="05-%E5%85%B6%E4%BB%96%E7%B4%A2%E5%BC%95" tabindex="-1">05 其他索引</h3><h4 id="%EF%BC%881%EF%BC%89%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95%E4%B8%8E%E9%9D%9E%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95" tabindex="-1">（1）聚簇索引与非聚簇索引</h4><p>聚簇索引：是指索引中邻近的记录在著文件中也是临近存储的<br>非聚簇索引：是指索引中邻近的记录在主文件中不一定是临近存储的</p><h4 id="%EF%BC%882%EF%BC%89%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95" tabindex="-1">（2）倒排索引</h4><p>正排：一个文档包含了哪些词汇<br>倒排：一个词汇包含在哪些文档中</p><h4 id="%EF%BC%883%EF%BC%89%E5%85%B6%E5%AE%83%E7%B4%A2%E5%BC%95" tabindex="-1">（3）其它索引</h4></li><li>多级索引：当索引想比较多时，可以对索引再建立索引，形成多级索引。 常见多级索引有B树/B+树，以树形数据结构来组织索引项。</li><li>多属性索引：索引字段由table的多个属性值组合在一起形成的索引</li><li>散列索引：使用散列技术组织的索引</li><li>网格索引：使用多索引字段进行交叉联合定位与检索<h3 id="06-b%2B%E6%A0%91%E7%B4%A2%E5%BC%95%EF%BC%88%E4%B9%A6%E4%B8%8A%E6%98%AFb%E6%A0%91%EF%BC%89" tabindex="-1">06 B+树索引（书上是B树）</h3><h4 id="%EF%BC%881%EF%BC%89%E5%A4%9A%E7%BA%A7%E7%B4%A2%E5%BC%95" tabindex="-1">（1）多级索引</h4><p>当索引较多时，可以对索引再建立索引</p><h4 id="%EF%BC%882%EF%BC%89b%2B%E6%A0%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" tabindex="-1">（2）B+树的基本概念</h4><p>B+树索引：一种以树形数据结构来组织索引项的多级索引</p><p>一块中索引项的组织：<br>Ki:索引字段值<br>Pj：指针，只想索引块或数据块或数据块中记录的指针</p><p>索引文件的叶子节点的指针指向主文件的数据块</p><p>B+树能自动保持与主文件大小相适应的树的层次，每个索引块指针的利用率都大于50%</p><h4 id="%EF%BC%883%EF%BC%89b%2B%E6%A0%91%E7%9A%84%E5%AD%98%E5%82%A8%E7%BA%A6%E5%AE%9A" tabindex="-1">（3）B+树的存储约定</h4><p>B+树有一个参数n，决定了树的所有存储块的状态</p></li><li>一块中有 n-1 个索引项（<索引字段值Ki，指针Pi>） + 1个指针（Pn）<p>示例： 存储块=4096B，整数型索引字段值=4B，指针=8B<br>则n应该满足 4（n-1) + 8n &lt; 4096,n取341为最大值</p><p>指针情况：</p><ul><li>索引字段值x在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_{i-1}&lt;x&lt;k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的由<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>指向；而<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub><mo>&lt;</mo><mi>x</mi><mo>&lt;</mo><msub><mi>k</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">k_i&lt;x&lt;k_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9028em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0315em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></eq>的由<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">P_{i+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span></eq>指向 非叶节点指针指向索引块，叶子节点指向主文件的数据块或数据记录</li><li>叶子节点的最后一个指针始终指向其下一个数据块</li><li>一个索引块实际使用的索引指针个数d满足(n/2&lt;d&lt;n)</li><li>根节点至少两个指针被使用</li><li>索引字段值重复出现于叶节点和非叶子节点</li><li>指向主文件的指针仅出现在叶子节点</li><li>所有叶子节点即可覆盖所有键值的索引</li><li>索引字段值在叶子节点中是按顺序排列的</li></ul><p>B+树级数相同–平衡，如何保证？</p><ul><li>插入删除记录时，伴随着节点的分裂和合并</li><li>分裂和合并将调整部分节点块中的索引项，需要算法支持</li></ul><h4 id="(4)-%E5%88%A9%E7%94%A8b%2B%E6%A0%91%E5%BB%BA%E7%AB%8B%E4%B8%8D%E5%90%8C%E7%9A%84%E7%B4%A2%E5%BC%95" tabindex="-1">(4) 利用B+树建立不同的索引</h4><p>1： 利用B+树建立键属性稠密索引<br>索引字段是主文件的主键，索引是稠密的。主文件可以按逐渐排序，也可以不按逐渐排序。指针指向的是记录<br>2： 利用B+树建立键属性稀疏索引<br>索引字段是主文件的逐渐，索引是稀疏的。主文件必须按逐渐排序。指针指向的是数据块。</p><h4 id="%EF%BC%885%EF%BC%89-b%E6%A0%91" tabindex="-1">（5） B树</h4><p>不同：</p><ul><li>索引字段值仅出现一次</li><li>主文件的指针也可出现在非叶子节点</li><li>所有节点才能覆盖所有的键值索引</li><li>分裂新增节点原理相似，细节不一样</li></ul><h4 id="%EF%BC%886%EF%BC%89-b%2B%E6%A0%91%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95" tabindex="-1">（6） B+树相关算法</h4><p>检索算法，增加记录的算法，删除记录的算法</p><h3 id="07-b%2B%E6%A0%91%E4%B9%8B%E9%94%AE%E5%80%BC%E6%8F%92%E5%85%A5%E4%B8%8E%E8%8A%82%E7%82%B9%E5%88%86%E8%A3%82%E7%A4%BA%E6%84%8F" tabindex="-1">07 B+树之键值插入与节点分裂示意</h3><h4 id="%EF%BC%881%EF%BC%89-%E6%8F%92%E5%85%A5" tabindex="-1">（1） 插入</h4><p>关键：</p><ol><li>分裂（当插入节点全满时）</li><li>由叶子节点向根节点逐层处理<br>能够自动保持与主文件大小相适应的书的层次<br>每个索引块的指针利用率可以在50%以上</li><li>指针调整</li></ol><h4 id="%EF%BC%882%EF%BC%89-%E5%88%A0%E9%99%A4" tabindex="-1">（2） 删除</h4><ol><li>先定位待删除键值的叶子节点，从根节点向下</li><li>删除键值及其主文件记录</li><li>如指针数目不小于规定数目，则可以结束；否则，需要合并。<ol><li>从相邻节点能否转移一些键值到该节点，如果可以，则转移，并更新父节点的相应键值</li><li>否则考虑节点合并，合并后调整父节点的键值及次序，调整叶子节点的指针链接</li><li>如果父节点在删除索引项及指针后，指针数目小于规定，则继续步骤2，直至根节点；如果不小于规定则结束</li></ol></li><li>如果删除位置是第一个，还需更新父节点键值</li></ol><h3 id="08-%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95" tabindex="-1">08 散列索引</h3><h4 id="%EF%BC%881%EF%BC%89-%E6%95%A3%E5%88%97%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" tabindex="-1">（1） 散列的基本概念</h4><p>由m个桶，每个桶是具有相同容量的存储地，称为主桶，溢出后可设置溢出桶<br>散列函数h（k），可以将键值k映射到{0,1,…m-1}中的某一个值<br>将具有键值k的记录Record（k）存储到对应的h（k）编号的桶中（此处映射应尽可能均匀）</p><h4 id="%EF%BC%882%EF%BC%89%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95" tabindex="-1">（2）散列索引</h4><ul><li>内存数据可采用散列确定存储页，主文件可采用散列确定存储块，索引亦可用散列确定散列项的存储块</li><li>m个桶，一个桶可以是一个存储块，也可以是连续存储块</li></ul><h4 id="%EF%BC%883%EF%BC%89-%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95%E7%9A%84%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4" tabindex="-1">（3） 散列索引的插入和删除</h4><p>插入键值d的索引项：</p><ol><li>计算h（d）=2</li><li>如2号桶有空间，则将索引项d插入2号桶</li><li>如没空间，则申请一溢出桶，插入d</li></ol><p>删除键值f的索引项：</p><ol><li>计算h（f）=2</li><li>删除2号桶中的键值f</li><li>将溢出桶中的值放入主桶，删除溢出桶</li></ol><h4 id="%EF%BC%884%EF%BC%89%E6%95%A3%E5%88%97%E7%9A%84%E9%97%AE%E9%A2%98" tabindex="-1">（4）散列的问题</h4><p>散列索引的目标：最好是没有溢出桶，每一个散列值仅有一个桶。读写每一个键值都只写一个存储块。</p><ul><li>均匀分布如何做到？</li><li>桶的数目m如何确定？</li></ul><p>如果桶数m固定----静态散列索引<br>   如果m过大，则浪费，过小则产生更多溢出桶，增加索引检索时间<br>桶的数目随键值增多动态增加—动态散列索引<br>   </p><h3 id="09-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95%E4%B8%8E%E7%BA%BF%E6%80%A7%E6%95%A3%E5%88%97%E7%B4%A2%E5%BC%95" tabindex="-1">09 可扩展散列索引与线性散列索引</h3><p>先略过，书上有，开卷考现场学来得及</p><p>以下第三章书上有，视频里没有</p><h3 id="10-%E5%A4%9A%E7%BB%B4%E7%B4%A2%E5%BC%95%EF%BC%883.4%EF%BC%89" tabindex="-1">10 多维索引（3.4）</h3><p>多维索引的应用：对地理数据的处理。</p><p>利用传统索引执行范围查询，效果甚微，如果数据小点还可以。</p><p>大多数支持多维数据查询的数据结构归于以下两类</p><ol><li>类散列表方式</li><li>类树方式</li></ol><h3 id="11-%E5%A4%9A%E7%BB%B4%E6%95%B0%E6%8D%AE%E7%9A%84%E6%95%A3%E5%88%97%E7%BB%93%E6%9E%84" tabindex="-1">11 多维数据的散列结构</h3><h4 id="%EF%BC%881%EF%BC%89%E7%BD%91%E6%A0%BC%E6%96%87%E4%BB%B6" tabindex="-1">（1）网格文件</h4><p>一种比单维索引性能好的最简单的数据结构。在每一维上用网格线将空间分成条状，被分成的每个区域可以看成是散列表的一个桶，以此来进行插入和删除.</p><h4 id="%EF%BC%882%EF%BC%89%E5%88%86%E6%AE%B5%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0" tabindex="-1">（2）分段散列函数</h4><p>散列函数可以接受属性值的一个列表作为参数，以此可以将高维转换到一维。</p><p>这种方法其实在最近邻查询和范围查询中没什么用，点之间的物理距离没有通过桶号反应，否则就是网格文件了。</p><h3 id="12-%E5%A4%9A%E7%BB%B4%E6%95%B0%E6%8D%AE%E7%9A%84%E6%A0%91%E7%BB%93%E6%9E%84" tabindex="-1">12 多维数据的树结构</h3><h4 id="%EF%BC%881%EF%BC%89%E5%A4%9A%E9%94%AE%E7%B4%A2%E5%BC%95" tabindex="-1">（1）多键索引</h4><p>一种简单的树模式，它的每一层的节点是一个属性的索引。</p><p>性能：<br>部分匹配查询：如果属性可以按树的从浅到深的属性索引给出，效率很高，否则很低。<br>范围查询：单个索引在他们本身支持范围查询，效果很好<br>最近邻查询：即为若干个范围查询</p><h4 id="%EF%BC%882%EF%BC%89kd-%E6%A0%91" tabindex="-1">（2）kd-树</h4><h5 id="kd%E6%A0%91%E6%A6%82%E5%BF%B5" tabindex="-1">kd树概念</h5><p>kd树（k维搜索树）是把二叉搜索树推广到多维数据的一种主存数据结构。</p><p>kd树是一个二叉树，它的内部节点有一个相关联的属性a和一个值V，它将数据点集分为两个部分：左子树是a值小于V的部分，右子树是a值大于等于V的部分。<br>并增加以下定义：</p><ol><li>内部节点只有一个属性，该属性具有一个划分值和指向左右子树的指针</li><li>叶子节点是块，快空间存放着尽可能多的记录</li></ol><h5 id="kd%E6%A0%91%E6%93%8D%E4%BD%9C" tabindex="-1">kd树操作</h5><p>查找：同二叉树</p><p>插入：先做一个查找，找到对应的叶子节点，如果叶子节点中的块还有空间，就将新的数据放在那里；否则将块分裂成两个，并根据所在层属性再次划分。最后，我们创建了一个新的内部节点：它的子节点分别为我们分裂得到的两个新块，并且给该内部节点一个相应的划分值。</p><h5 id="kd%E6%A0%91%E4%BC%98%E5%8C%96" tabindex="-1">kd树优化</h5><ol><li>内部节点多分支。kd树内部节点可以有多个键-指针对，让其更像B树节点。</li><li>聚集内部节点到块。可以把多个内部节点压缩到一个块中，减少遍历路径访问的块的数量。</li></ol><h4 id="%EF%BC%883%EF%BC%89%E5%9B%9B%E5%8F%89%E6%A0%91" tabindex="-1">（3）四叉树</h4><p>在四叉树中，每个内部节点对应于二维空间中的一个正方形区域，或是k维空间的k维立方体。在二维的情况，一个节点的子节点即为它二维平面的四个象限。</p><h4 id="%EF%BC%884%EF%BC%89r-%E6%A0%91" tabindex="-1">（4）R-树</h4><p>R树是一种利用B-树的某些本质特征来处理多维数据的数据结构。</p><p>R树表示由二维或更高维区域组成的数据，我们把它称为数据区，R树的一个内部节点对应于某个内部区域，运行子区域有重叠，但应尽量小。</p><h3 id="13-%E4%BD%8D%E5%9B%BE%E7%B4%A2%E5%BC%95" tabindex="-1">13 位图索引</h3><p>略，看书，考场现编</p><h2 id="%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C" tabindex="-1">第四章 查询执行</h2><h3 id="1901-%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0" tabindex="-1">1901 查询实现算法概述</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">（1）数据库查询的基本思想</h4><p>基本动作：</p><ul><li>关系模型的基本运算<ul><li>并，差，积，选择，投影</li></ul></li></ul><p>用户语言实现关系模型基本元素的基本组合，随后数据库管理系统（程序执行机构）解释这种组合，并按次序调用基本动作予以执行</p><h4 id="%EF%BC%882%EF%BC%89%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0-vs.-%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">（2）查询实现 vs. 查询优化</h4><p>SQL语句 经过编译 得到关系代式；<br>关系代式先经过逻辑优化；<br>在经过物理优化（为每一个关系代数才做选择优化的执行例行程序，形成物理查询计划）；<br>最后经过执行引擎运行（依物理查询计划调用的例行程序进行处理，并返回结果）</p><h4 id="%EF%BC%883%EF%BC%89-%E6%9F%A5%E8%AF%A2%E7%AE%97%E6%B3%95%E6%80%BB%E8%A7%88" tabindex="-1">（3） 查询算法总览</h4><ul><li>数据库的三大类操作<ul><li>以此单一元组的一元操作<ul><li>选择，投影</li></ul></li><li>整个关系的一元操作<ul><li>去重，group by，排序</li></ul></li><li>整个关系的二元操作<ul><li>集合的并交差</li><li>包的并交差</li><li>积，连接</li></ul></li></ul></li></ul><h3 id="1902-%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">1902 连接操作的实现算法</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（1）连接操作的逻辑实现算法</h4><p>两个for循环即可</p><h4 id="%EF%BC%882%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E7%89%A9%E7%90%86%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（2）连接操作的物理实现算法</h4><p>关系是存储在磁盘上的，磁盘是以磁盘块为操作单位的，首先要装载进内存(I/O操作)，然后在进行元组的处理</p><ul><li>一些参数<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">T_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>：关系R的元组数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">B_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>：关系R的磁盘数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>：主存缓冲区的页数（主存每页容量等于一个磁盘的容量）</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">I_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>：关系R的每个元组的字节数</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></eq>：每个磁盘的字节数</li></ul></li></ul><p>需要错做的Byte数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>R</mi><mo>×</mo><mi>S</mi></mrow></msub><mo>=</mo><msub><mi>T</mi><mi>R</mi></msub><msub><mi>T</mi><mi>S</mi></msub><mo stretchy="false">(</mo><msub><mi>I</mi><mi>R</mi></msub><mo>+</mo><msub><mi>I</mi><mi>S</mi></msub><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">B_{R\times S}=T_RT_S(I_R+I_S)/b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal">b</span></span></span></span></eq></p><h4 id="%EF%BC%883%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（3）连接操作的基本实现算法</h4><p>对于关系R，S的连接，一次分别将R和S的一个块从磁盘中移到内存中进行连接<br>复杂度 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub><mo>+</mo><msub><mi>B</mi><mi>R</mi></msub><mo>∗</mo><msub><mi>B</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">B_R+B_R*B_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,但只需要内存三个块</p><h4 id="%EF%BC%884%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%85%A8%E4%B8%BB%E5%AD%98%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（4）连接操作的全主存实现算法</h4><p>将两个关系都撞入内存中进行连接，此时内存页数需要大于两个关系的内存块数。<br>复杂度<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub><mo>+</mo><msub><mi>B</mi><mi>S</mi></msub></mrow><annotation encoding="application/x-tex">B_R+B_S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></p><h4 id="%EF%BC%885%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%8D%8A%E4%B8%BB%E5%AD%98%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（5）连接操作的半主存实现算法</h4><p>内存只能装入一个关系的所有块的条件下</p><p>先将一个装入内存，再将另一个关系的所有快一个个的放入内存进行连接</p><h4 id="%EF%BC%886%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%A4%A7%E5%85%B3%E7%B3%BB%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（6）连接操作的大关系实现算法</h4><p>此时内存不能装入任一关系的所有快。</p><p>此时先将内存装一个关系得所有快，每次装得只剩两个块得位置，装入多次，剩下两个一个用作输出，一个依次输入另一个关系得所有快，依次来进行连接操作</p><h4 id="%EF%BC%887%EF%BC%89%E8%BF%9E%E6%8E%A5%E6%93%8D%E4%BD%9C%E7%9A%84%E5%85%B6%E4%BB%96%E6%96%B9%E6%B3%95" tabindex="-1">（7）连接操作的其他方法</h4><ul><li>归并排序</li><li>散列排序</li><li>索引连接算法</li></ul><h3 id="1903-%E5%88%A9%E7%94%A8%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%9E%84%E9%80%A0%E6%9F%A5%E8%AF%A2%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">1903 利用迭代器构造查询实现算法</h3><h4 id="%EF%BC%881%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%AE%97%E6%B3%95%E7%9A%84%E6%8F%90%E5%87%BA" tabindex="-1">（1）迭代器算法的提出</h4><ul><li>查询实现的两种策略<ul><li>物化计算策略：每一步将所有中间值得出再进行下一步</li><li>流水线计算策略，每得到的元组依次经过查询条件得到结果</li></ul></li><li>区别<ul><li>是一个关系操作还是一组关系操作</li><li>中间的结果是否完整的存储</li></ul></li></ul><p>迭代器算法在流水线计算策略中实现</p><h4 id="%EF%BC%882%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80" tabindex="-1">（2）迭代器算法基础</h4><p>迭代器：迭代的读取一个集合中的每一个元素，而封装其读取细节</p><p>有一个抽象类：</p><pre><code class="language-C++">class iterator&#123;  void Open();  tuple GetNext();  void Close();  iterator &amp;inputs[];&#125; </code></pre><p>所有的关系操作可继承此迭代器进行构造。<br>不同操作，可以构造不同的Open(),GetNext(),Close()函数</p><h4 id="%EF%BC%883%EF%BC%89%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%9A%84%E6%9E%84%E9%80%A0" tabindex="-1">（3）迭代器的构造</h4><p>迭代器示例：表空间扫描发–读取关系</p><pre><code class="language-C++">Open()&#123;  b:=R的第一块  t:=b的第一个元组&#125;GetNext()&#123;  IF(t已经超过块b的最后一个元组)&#123;    将b前进到下一块    IF(没有下一块)      return NotFound;    ELSE/*b是一个新块*/      t:=b的第一个元组  &#125;  oldt:=t  将t前进到b的下一元组  RETURN oldt;&#125;Close()&#123;&#125;</code></pre><p>迭代器示例：R并S算法</p><pre><code class="language-C++">Open()&#123;  R.Open();  CurRel:=R;&#125;GetNext()&#123;  IF(CurRel==R)&#123;    t:=R.GetNext();    IF(t&lt;&gt;NotFound)      RETURN t;    ELSE&#123;      s.Open();      curRel:=S;    &#125;  &#125;  RETURN S.GetNext();&#125;Close()&#123;R.close();S.close();&#125;</code></pre><h3 id="1904-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E7%9A%84%E4%B8%80%E8%B6%9F%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95" tabindex="-1">1904 数据库查询的一趟扫描算法</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%80%E8%B6%9F%E7%AE%97%E6%B3%95" tabindex="-1">（1）什么是一趟算法</h4><p>内存能放下关系的所有块，即只需要调用一次数据库的算法。</p><h4 id="%EF%BC%882%EF%BC%89%E5%85%B3%E7%B3%BB%2F%E8%A1%A8%E6%95%B0%E6%8D%AE%E7%9A%84%E8%AF%BB%E5%8F%96" tabindex="-1">（2）关系/表数据的读取</h4><h5 id="%E8%81%9A%E7%B0%87%E5%85%B3%E7%B3%BB" tabindex="-1">聚簇关系</h5><p>下文中B（R）是R的存储块的数目，T（R）是R的元组数目，M是内存能放下的块的数目</p><ul><li>关系的元组集中存放（一个块中仅是一个关系的元组）<ul><li>TableScan® 表空间扫描算法<br>扫描结构未排序：B（R）</li><li>SortTableScan®<br>扫描结构排序：3B（R）</li><li>IndexScan® 索引扫描算法<br>扫描结果未排序：B（R）</li><li>SortIndexScan®<br>扫描结果排序 B® or 3 B®</li></ul></li></ul><h5 id="%E9%9D%9E%E8%81%9A%E7%B0%87%E5%85%B3%E7%B3%BB" tabindex="-1">非聚簇关系</h5><ul><li><p>关系的元组不一定集中存放</p></li><li><p>扫描结果未排序：T®</p></li><li><p>扫描结果排序：T®+2B®</p></li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%95%B4%E4%B8%AA%E5%85%B3%E7%B3%BB%E7%9A%84%E4%B8%80%E5%85%83%E6%93%8D%E4%BD%9C%E7%AE%97%E6%B3%95" tabindex="-1">（3）整个关系的一元操作算法</h4><ul><li><p>需要在内存中保存已经处理过的元组</p></li><li><p>当新元组到达时，需要和之前处理过的元组进行比较</p></li><li><p>建立不同的内存数据结构，来保存之前处理过的数据，以便快速处理整个关系上的操作</p></li><li><p>算法复杂性：B（R）</p></li><li><p>应用条件：B(&amp;R)&lt;=M</p></li><li><p>去重复 &amp;®，分组聚集<br>可以在内存中采取散列的数据结构，达到快速插入，快速定位的效果</p></li></ul><h4 id="%EF%BC%884%EF%BC%89%E6%95%B4%E4%B8%AA%E5%85%B3%E7%B3%BB%E7%9A%84%E4%BA%8C%E5%85%83%E6%93%8D%E4%BD%9C%E5%AE%9E%E7%8E%B0%E7%AE%97%E6%B3%95" tabindex="-1">（4）整个关系的二元操作实现算法</h4><ul><li>扫描一个关系，再扫描另一个关系</li><li>集合的操作需要去重；包的操作需要做计数</li><li>算法复杂度：B®+B(S)</li><li>应用条件:min(B®,B(S))&lt;=M</li></ul><h3 id="1905-%E5%9F%BA%E4%BA%8E%E7%B4%A2%E5%BC%95%E7%9A%84%E7%AE%97%E6%B3%95" tabindex="-1">1905 基于索引的算法</h3><h4 id="%EF%BC%881%EF%BC%89%E5%9F%BA%E4%BA%8E%E7%B4%A2%E5%BC%95%E7%9A%84%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95" tabindex="-1">（1）基于索引的选择算法</h4><ul><li>选择条件中有涉及到索引属性时，可以使用索引，辅助快速索引</li><li>聚簇和非聚簇索引，使用时效率不一样</li><li>可能在多个属性上都存在索引</li></ul><p>索引应用分析示例：<br>假设B®=1000，T®=20000，即有20 000 个元组放到1000个块中。a是R的一个属性，在a上有一个索引，考虑 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>a</mi><mo>=</mo><mn>0</mn></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{a=0}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></eq>操作</p><ul><li>如果R是聚簇的，且不使用索引，查询代价1000I/O</li><li>如果R不是聚簇的，且不使用索引，查询代价20000</li><li>如果V(R,a)=100（表示a只有100个不同的大小）,且索引是聚簇的，查询代价 即a=0d的元组所在的总共的块数，平均1000/100=10。</li><li>如果V(R,a)=100且索引是非聚簇的，查询代价平均20000/100=200</li><li>如果V(R,a)=20000，即a是关键字，查询代价为1</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%9C%89%E5%BA%8F%E7%B4%A2%E5%BC%95%E7%9A%84%E8%BF%9E%E6%8E%A5%E7%AE%97%E6%B3%95%EF%BC%88zig-zag%E8%BF%9E%E6%8E%A5%E7%AE%97%E6%B3%95%EF%BC%89" tabindex="-1">（2）基于有序索引的连接算法（Zig-Zag连接算法）</h4><p>略难，跳，对应书P122</p><h3 id="1906-%E5%9B%9E%E9%A1%BE" tabindex="-1">1906 回顾</h3><ul><li><p>查询实现算法的基本思维</p></li><li><p>连接的逻辑实现算法</p></li><li><p>连接的物理实现算法</p><ul><li>如何降低磁盘I/O</li><li>充分利用内存，减少循环量</li><li>如何降低内存的查找量</li><li>建立合适的数据结构</li></ul></li><li><p>一趟算法：只要有一个关系能够全部装入内存即可实施<br>需要用一些算法</p><ul><li>迭代器算法</li><li>基于散列的算法</li><li>基于排序的算法</li><li>基于索引的算法</li></ul></li></ul><h3 id="2001-%E4%B8%A4%E8%B6%9F%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">2001 两趟扫描算法的基本思想</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B4%E4%B8%AA%E5%85%B3%E7%B3%BB%E6%93%8D%E4%BD%9C%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98" tabindex="-1">（1）整个关系操作存在的问题</h4><ul><li>对于一个关系，可能不能将整个关系都放入内存中，一趟算法已经不能实施</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%B8%A4%E8%B6%9F%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF" tabindex="-1">（2）两趟算法的基本思路</h4><ul><li>第一趟：划分子集，使得子集具有某种特性，如有序或相同散列值</li><li>第二趟：处理全局性内容的操作，形成结果关系。如多子集间的归并排序，相同的散列值子集的操作等</li></ul><p>可实现原因：大数据集上的操作可以等价于子集上操作的并集</p><h3 id="2002-%E4%B8%A4%E9%98%B6%E6%AE%B5%E5%A4%9A%E8%B7%AF%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F" tabindex="-1">2002 两阶段多路归并排序</h3><h4 id="%EF%BC%881%EF%BC%89-%E5%86%85%E6%8E%92%E5%BA%8F%E5%92%8C%E5%A4%96%E6%8E%92%E5%BA%8F" tabindex="-1">（1） 内排序和外排序</h4><ul><li>内排序问题：待排序的数据可以一次性地装入内存中，即排序者可以完整地看到和操纵所有数据。内存中的排序算法：插入排序，冒牌排序</li><li>外排序问题：待排序的数据不能一次性地装入内存，即排序者不能一次完整地看到和操纵所有地数据，需要将数据分批次装入内存分批处理地排序问题。</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%B8%A4%E9%98%B6%E6%AE%B5%E5%A4%9A%E8%B7%AF%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F" tabindex="-1">（2）两阶段多路归并排序</h4><p>全称TPMMS， Two-Phase Multi-way Merge Sort based join<br>两阶段多路归并排序是一种外排序。<br>现在假设内存大小x块，待排序数据要y块，y&gt;x。</p><ol><li>首先将要排序的数据划分为n份，x*n&gt;y</li><li>依次将分好的子集放入内存中进行内排序</li><li>随后将排序好的子集，对于所有的子集每次取一块放入内存中，将最小值或最大值取出后放入内存，原来的数据删除</li><li>内存中存在个子集中最小的元素，此时进行内排序，排序后的结果输入到新的外部存储中</li><li>重复4，5直至数据全部排序完</li></ol><p>算法效率：</p><ul><li><p>子集和排序阶段读一遍写一遍</p></li><li><p>归并阶段读一遍写一遍</p></li><li><p>总I/O次数4B®</p></li><li><p>算法应用条件：</p><ul><li>子集合数&lt;<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{mermory}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ory</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>子集和块数&lt;<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{mermory}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ory</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>大数据集块数&lt;<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>B</mi><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">B_{mermory}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1972em;vertical-align:-0.3831em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.453em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ory</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3831em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%9B%B4%E5%A4%A7%E8%A7%84%E6%A8%A1%E7%9A%84%E5%A4%9A%E9%98%B6%E6%AE%B5%E5%BD%92%E5%B9%B6%E7%AE%97%E6%B3%95" tabindex="-1">（3）更大规模的多阶段归并算法</h4><ul><li>设内存大小 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>m</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow></msub><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">B_{mermory}=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">ory</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">3</span></span></span></span></eq></li><li>待排序数据 <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>p</mi><mi>r</mi><mi>o</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{problem}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">ro</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>=30$</li></ul><p>基本策略</p><ul><li>30块数据集-&gt;10个子集和，每个子集合3块，排序并存储</li><li>10个已经排序的子集合再分为5组进行二路归并排序，得到5个排序好的子集合</li><li>5个集合再分为3组，进行归并排序；最后得到3个排好序的子集和</li><li>再归并即可得到最终的排序</li></ul><h3 id="2003-%E5%9F%BA%E4%BA%8E%E6%8E%92%E5%BA%8F%E7%9A%84%E4%B8%A4%E8%B6%9F%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95" tabindex="-1">2003 基于排序的两趟扫描算法</h3><h4 id="%EF%BC%881%EF%BC%89%E6%93%8D%E4%BD%9C" tabindex="-1">（1）操作</h4><p>去重复，聚集 复杂度等同TPMMS</p><ul><li>并<ul><li>包上直接合并即可，无需两趟</li><li>集合上需要两趟，需要去重<ul><li>效果同TPMMS</li></ul></li></ul></li><li>交，差<ul><li>包上和集合上都要两趟，需要处理出现次数或者去重复，效果同TPMMS</li></ul></li><li>连接运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><msub><mo>⋈</mo><mrow><mi>R</mi><mi mathvariant="normal">.</mi><mi>Y</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>Y</mi></mrow></msub><mi>S</mi></mrow><annotation encoding="application/x-tex">R\Join_{R.Y=S.Y} S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq><ul><li>第一趟：划分R和S的子表并进行子表排序，排序均基于Y属性排序</li><li>第二趟，归并时注意是R的输入还是S的输入。R和S的两路输入之间进行连接检查后连接后输出</li><li>又称“排序-连接”算法</li></ul></li></ul><h3 id="2004-%E5%9F%BA%E4%BA%8E%E6%95%A3%E5%88%97%E7%9A%84%E4%B8%A4%E8%B6%9F%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95" tabindex="-1">2004 基于散列的两趟扫描算法</h3><h4 id="%EF%BC%881%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%80%9D%E6%83%B3" tabindex="-1">（1）基本思想</h4><ul><li>第一趟：散列子表，用散列函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">h_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>将原始关系划分为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">M-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></eq>个子表并存储（剩一个用来输出）</li><li>第二趟：处理每个子表，用另一散列函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">h_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>将子表读入内存并建立内存结构，进行不同操作的处理</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%AE%9E%E4%BE%8B" tabindex="-1">（2）实例</h4><ul><li>去重复操作<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">H_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>计算元组部分属性的值<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">modM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>,将可能重复的元组散列到同一子表中</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">H_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>计算整个元组的值<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">modM</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></eq>，将可能重复的元组散列到同一内存中</li><li>元组在子表上不重复，则在大关系中不重复</li><li>算法复杂度：4B®</li></ul></li><li>分组操作<ul><li>第一趟：将原始关系通过<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">h_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>散列成m-1个子表，并进行存储</li><li>第二趟：处理每个子表。将每个子表读入内存，并用另一函数<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">h_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>形成散列数据结构，进行分组聚集操作。</li><li>应选择不同的<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>p</mi></msub><mo separator="true">,</mo><msub><mi>h</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">h_p,h_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ul></li><li>并操作<ul><li>包的并无需两次，直接合并即可</li><li>集合的并需要两趟，需要去重复。</li><li>第一趟：以相同的散列函数将R和S形成M-2个子表<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i,S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li>第二趟：将<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>再整体散列读入内存中，再依次处理<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的每一块，如判断<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">R_i,S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>都出现元组t，则仅输出t的一个副本，否则输出<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>R</mi><mi>i</mi></mrow><annotation encoding="application/x-tex">S_i,Ri</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal">i</span></span></span></span></eq></li></ul></li><li>交叉操作类似并操作</li><li>连接操作<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><msub><mo>⋈</mo><mrow><mi>R</mi><mi mathvariant="normal">.</mi><mi>y</mi><mo>=</mo><mi>S</mi><mi mathvariant="normal">.</mi><mi>y</mi></mrow></msub><mi>S</mi></mrow><annotation encoding="application/x-tex">R\Join_{R.y=S.y} S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq></li><li>以连接属性Y作为散列关键字，设计散列函数</li><li>第一趟：使用相同的散列函数散列两个操作对象R和S，形成R1…Rm,S1…Sm</li><li>第二趟：将Si再整体散列读入到内存中，再依次处理Ri的每一块，进行连接</li></ul></li></ul><h2 id="%E7%AC%AC%E4%BA%94%E7%AB%A0-%E6%9F%A5%E8%AF%A2%E7%BC%96%E8%AF%91%E5%99%A8" tabindex="-1">第五章 查询编译器</h2><h3 id="2101-%E4%BB%80%E4%B9%88%E6%98%AF%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">2101 什么是查询优化</h3><h4 id="%EF%BC%881%EF%BC%89%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">（1）为什么需要查询优化</h4><ul><li>关系数据库的执行效率问题</li><li>关系代数操作执行次序对效率的影响</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">（2）什么是查询优化</h4><ul><li>如何使数据库查询时间最短</li><li>三个层面进行优化<ul><li>语义优化：利用模型的语义及完整性规则，优化查询</li><li>语法优化—逻辑层优化：利用语法结构，优化操作执行顺序</li><li>执行优化—物理层优化：存取路径和执行算法的选择与执行次序优化</li></ul></li></ul><h3 id="2102-%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%9A%84%E6%80%BB%E4%BD%93%E6%80%9D%E8%B7%AF" tabindex="-1">2102 查询优化的总体思路</h3><h4 id="%EF%BC%881%EF%BC%89%E8%AF%AD%E4%B9%89%E4%BC%98%E5%8C%96%E2%80%93%E5%86%85%E5%AE%B9%E7%AD%89%E4%BB%B7%E6%80%A7" tabindex="-1">（1）语义优化–内容等价性</h4><p>sql层优化，不在这里进行讨论，此处需要用户取想办法，相关研究再进行了</p><h4 id="%EF%BC%882%EF%BC%89%E8%AF%AD%E6%B3%95%E4%BC%98%E5%8C%96%EF%BC%88%E9%80%BB%E8%BE%91%E5%B1%82%E4%BC%98%E5%8C%96%EF%BC%89%E2%80%93%E5%86%85%E5%AE%B9%E7%AD%89%E4%BB%B7%E6%80%A7" tabindex="-1">（2）语法优化（逻辑层优化）–内容等价性</h4><ul><li>基本思想：改变关系代数的操作次序：尽可能地早做选择和投影运算</li><li>关系代数地五种基本操作中哪些能够交换次序</li><li>次序变化前后两个表达式地等价性问题</li><li>关系代数表达式的等价变换定理及证明（略）</li><li>关系代数表达式的优化算法？逻辑查询计划形成</li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%89%A7%E8%A1%8C%E4%BC%98%E5%8C%96%EF%BC%88%E7%89%A9%E7%90%86%E5%B1%82%E4%BC%98%E5%8C%96%EF%BC%89" tabindex="-1">（3）执行优化（物理层优化）</h4><ul><li>获取数据库的相关信息（定期统计）</li><li>实现同一关系操作的不同例行程序</li><li>选择相应的例行程序</li><li>依据相关信息进行代价估算，选择代价最少的例行程序及确定相应的参数</li><li>形成查询计划：以基本的例行程序为基本，确定这些例行程序的执行顺序</li></ul><h4 id="%EF%BC%884%EF%BC%89%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%9A%84%E6%80%BB%E8%BF%87%E7%A8%8B" tabindex="-1">（4）查询优化的总过程</h4><ul><li>用户书写sql语言</li><li>转化为关系代数</li><li>逻辑查询计划–逻辑层优化<ul><li>关系代数操作顺序的优化</li></ul></li><li>物理查询计划–物理层优化<ul><li>代价估算</li><li>算法选择与装配次序</li></ul></li><li>由执行引擎解释并调用算法（程序）予以执行</li></ul><h3 id="2103-%E9%80%BB%E8%BE%91%E5%B1%82%E4%BC%98%E5%8C%96%E7%AD%96%E7%95%A5" tabindex="-1">2103 逻辑层优化策略</h3><h4 id="%EF%BC%881%EF%BC%89%E4%B8%80%E4%B8%AA%E5%BE%85%E4%BC%98%E5%8C%96%E7%9A%84%E5%AE%9E%E4%BE%8B%E8%83%8C%E6%99%AF" tabindex="-1">（1）一个待优化的实例背景</h4><p>考虑一个图书馆的关系数据库<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>O</mi><mi>O</mi><mi>K</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mi>U</mi><mi>T</mi><mi>L</mi><mi>E</mi><mo separator="true">,</mo><mi>A</mi><mi>U</mi><mi>T</mi><mi>H</mi><mi>O</mi><mi>R</mi><mo separator="true">,</mo><mi>P</mi><mi>N</mi><mi>A</mi><mi>M</mi><mi>E</mi><mo separator="true">,</mo><mi>L</mi><mi>C</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">BOOKS(TUTLE,AUTHOR,PNAME,LC\_NO)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">BOO</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.00773em;">OR</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">PN</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">ME</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span><span class="mclose">)</span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>N</mi><mi>A</mi><mi>M</mi><mi>E</mi></mrow><annotation encoding="application/x-tex">PNAME</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">PN</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">ME</span></span></span></span></eq>为出版社名，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>C</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi></mrow><annotation encoding="application/x-tex">LC\_NO</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span></span></span></span></eq>为图书馆图书编号<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>U</mi><mi>B</mi><mi>L</mi><mi>I</mi><mi>S</mi><mi>H</mi><mi>E</mi><mi>R</mi><mi>S</mi><mo stretchy="false">(</mo><mi>P</mi><mi>N</mi><mi>A</mi><mi>M</mi><mi>E</mi><mo separator="true">,</mo><mi>P</mi><mi>A</mi><mi>D</mi><mi>D</mi><mi>R</mi><mo separator="true">,</mo><mi>P</mi><mi>C</mi><mi>I</mi><mi>T</mi><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">PUBLISHERS(PNAME,PADDR,PCITY)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mord mathnormal" style="margin-right:0.05764em;">ERS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">PN</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">ME</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02778em;">DD</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">PC</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span></eq><br>出版社名字，出版社地址，出版社城市<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mi>O</mi><mi>R</mi><mi>R</mi><mi>O</mi><mi>W</mi><mi>E</mi><mi>R</mi><mi>S</mi><mo stretchy="false">(</mo><mi>N</mi><mi>A</mi><mi>M</mi><mi>E</mi><mo separator="true">,</mo><mi>A</mi><mi>D</mi><mi>D</mi><mi>R</mi><mo separator="true">,</mo><mi>C</mi><mi>I</mi><mi>T</mi><mi>Y</mi><mo separator="true">,</mo><mi>C</mi><mi>A</mi><mi>R</mi><mi>D</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">BORROWERS(NAME,ADDR,CITY,CARD\_NO)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">BORRO</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">ERS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">ME</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02778em;">DD</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span><span class="mclose">)</span></span></span></span></eq><br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mi>A</mi><mi>R</mi><mi>D</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi></mrow><annotation encoding="application/x-tex">CARD\_NO</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9933em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span></span></span></span></eq>为图书证号<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mi>O</mi><mi>A</mi><mi>D</mi><mi>S</mi><mo stretchy="false">(</mo><mi>C</mi><mi>A</mi><mi>R</mi><mi>D</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi><mo separator="true">,</mo><mi>L</mi><mi>C</mi><mi mathvariant="normal">_</mi><mi>N</mi><mi>O</mi><mo separator="true">,</mo><mi>D</mi><mi>A</mi><mi>T</mi><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">LOADS(CARD\_NO,LC\_NO,DATE)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">NO</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">TE</span><span class="mclose">)</span></span></span></span></eq></p><h4 id="%EF%BC%882%EF%BC%89%E7%94%A8%E8%AF%AD%E6%B3%95%E6%A0%91%E8%A1%A8%E8%BE%BE%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F" tabindex="-1">（2）用语法树表达关系代数表达式</h4><ul><li>由树叶向树根反映了操作的先后次序</li></ul><h4 id="%EF%BC%883%EF%BC%89%E9%80%BB%E8%BE%91%E4%BC%98%E5%8C%96%E7%9A%84%E7%AD%96%E7%95%A5" tabindex="-1">（3）逻辑优化的策略</h4><ul><li>尽可能地早做选择和投影<ul><li>可以使得中间结果变小，减小几个数量级的执行时间</li></ul></li><li>把选择和投影串接起来：<ul><li>一元运算序列可以一起执行，只需对整个关系扫描一遍</li></ul></li><li>把投影与其前后的二元运算结合起来<ul><li>在第一次用关系时去掉一些无关属性，可以避免多次扫描整个关系</li></ul></li><li>把某些选择与其前的笛卡尔积合并成一个连接<ul><li>当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>×</mo><mi>S</mi></mrow><annotation encoding="application/x-tex">R\times S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></eq>前有选择运算且期中有条件是R，S属性间的比较运算时，可将其转化为连接运算可节省时间</li></ul></li><li>执行连接运算前对关系适当预处理<ul><li>文件排序，建立临时索引等，可以使得俩关系公共值高效连接</li></ul></li><li>找出表达式里的公共子表达式<ul><li>若公共子表达式结果不大，可以预先计算，以后可读入此结果，节省时间较多，在试图情况下尤其有用</li></ul></li></ul><h3 id="2104-%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E6%93%8D%E4%BD%9C%E6%AC%A1%E5%BA%8F%E4%BA%A4%E6%8D%A2%E7%9A%84%E7%AD%89%E4%BB%B7%E6%80%A7" tabindex="-1">2104 关系代数操作次序交换的等价性</h3><h4 id="%EF%BC%881%EF%BC%89%E7%AD%89%E4%BB%B7%E6%80%A7" tabindex="-1">（1）等价性</h4><p>定义：</p><ul><li>设<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是两个关系操作表达式，若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>表示相同的映射，记当<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的同名变量带入相同的关系后产生相同的结果(影响几何)，则说<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是等价的，记为<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1\equiv E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%93%AA%E4%BA%9B%E5%85%B3%E7%B3%BB%E6%93%8D%E4%BD%9C%E6%AC%A1%E5%BA%8F%E5%8F%AF%E4%BB%A5%E4%BA%A4%E6%8D%A2" tabindex="-1">（2）哪些关系操作次序可以交换</h4><h5 id="%E5%AE%9A%E7%90%86l1%EF%BC%9A%E8%BF%9E%E6%8E%A5%E4%B8%8E%E8%BF%9E%E6%8E%A5%EF%BC%8C%E7%A7%AF%E4%B8%8E%E7%A7%AF%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L1：连接与连接，积与积的交换律</h5><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><msub><mo>⋈</mo><mi>F</mi></msub><msub><mi>E</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>2</mn></msub><msub><mo>⋈</mo><mi>F</mi></msub><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1 \Join_F E_2\equiv E_2 \Join_F E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>⋈</mo><msub><mi>E</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>2</mn></msub><mo>⋈</mo><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1 \Join E_2\equiv E_2 \Join E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>2</mn></msub><mo>×</mo><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1 \times E_2\equiv E_2\times E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq></li></ul><p>并，交运算也有交换律</p><h5 id="%E5%AE%9A%E7%90%86l2%EF%BC%9A%E5%AE%9A%E7%90%86l1%EF%BC%9A%E8%BF%9E%E6%8E%A5%E4%B8%8E%E8%BF%9E%E6%8E%A5%EF%BC%8C%E7%A7%AF%E4%B8%8E%E7%A7%AF%E7%9A%84%E7%BB%93%E5%90%88%E5%BE%8B" tabindex="-1">定理L2：定理L1：连接与连接，积与积的结合律</h5><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><msub><mo>⋈</mo><mrow><mi>F</mi><mn>1</mn></mrow></msub><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><msub><mo>⋈</mo><msub><mi>F</mi><mn>2</mn></msub></msub><msub><mi>E</mi><mn>3</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>1</mn></msub><msub><mo>⋈</mo><mrow><mi>F</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><msub><mo>⋈</mo><msub><mi>F</mi><mn>2</mn></msub></msub><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(E_1\Join_{F1}E_2)\Join_{F_2}E_3\equiv E_1\Join_{F1}(E_2\Join_{F_2}E_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">⋈</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>⋈</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>⋈</mo><msub><mi>E</mi><mn>3</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>1</mn></msub><mo>⋈</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo>⋈</mo><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(E_1\Join E_2)\Join E_3\equiv E_1\Join (E_2\Join E_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>E</mi><mn>3</mn></msub><mo>≡</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo>×</mo><msub><mi>E</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(E_1\times E_2)\times E_3\equiv E_1\times (E_2\times E_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></eq></li></ul><p>并，交运算也有结合律</p><h5 id="%E5%AE%9A%E7%90%86l3%EF%BC%9A%E6%8A%95%E5%BD%B1%E4%B8%B2%E6%8E%A5%E7%8E%87" tabindex="-1">定理L3：投影串接率</h5><p a_1,..a_n>设属性集合<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><mo>⊆</mo><mrow><msub><mi>B</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow></mrow><annotation encoding="application/x-tex">{A_1,..A_n}\subseteq {B_1..B_m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>是表达式，则有：<br><section><eqn><span class="katex-error" title="ParseError: KaTeX parse error: Expected group after &#x27;_&#x27; at position 46: …}(E))\equiv \pi_̲" style="color:#cc0000">\pi_{A_1,..A_n}(\pi_{B_1,..B_m}(E))\equiv \pi_</span></eqn></section></p><ul><li>此定理可以双向使用<ul><li>正向可以将两遍扫描变为一边扫描</li><li>逆向可以将属性扩展便于投影操作的移动</li></ul></li></ul><h5 id="%E5%AE%9A%E7%90%86l4%EF%BC%9A%E9%80%89%E6%8B%A9%E7%9A%84%E4%B8%B2%E6%8E%A5%E7%8E%87" tabindex="-1">定理L4：选择的串接率</h5><p>若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>是关系代数表达式，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_1,F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是条件，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mrow><mi>F</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>F</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>F</mi><mn>2</mn></msub></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{F1}(\sigma_{F2}(E))\equiv \sigma_{F_1\wedge F_2}(E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span></span></eqn></section></p><ul><li>此定理可以双向使用<ul><li>正向可以将两遍扫描变为一边扫描</li><li>逆向可以将属性扩展便于选择操作的移动</li></ul></li></ul><h5 id="%E5%AE%9A%E7%90%86l5%EF%BC%9A%E9%80%89%E6%8B%A9%E5%92%8C%E6%8A%95%E5%BD%B1%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L5：选择和投影的交换律</h5><p>设条件F只涉及属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{A_1...A_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>是关系表达式，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{A_1..A_n}(\sigma_{F}(E))\equiv\sigma_F(\pi_{A_1..A_n}(E))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span></span></span></span></span></eqn></section><br>更一般地，若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq>还涉及不属于<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">{A1,..A_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></eq>的属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">{B_1,..B_m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></eq>,则<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{A_1,...A_n}(\sigma_F(E))\equiv\pi_{A_1,..A_n}(\sigma_F(\pi_{A_1,..A_n,B_1,..B_m}(E)))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">...</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)))</span></span></span></span></span></eqn></section></p><p>尽可能地早做选择</p><h5 id="%E5%AE%9A%E7%90%86l6%EF%BC%9A%E9%80%89%E6%8B%A9%E5%90%88%E7%A7%AF%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L6：选择合积的交换律</h5><p>设<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是关系代数表达式</p><ul><li>(1):若条件F只涉及<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中的属性：则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_F(E_1\times E_2)\equiv \sigma_{F}(E_1)\times(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></li><li>(2):若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>=</mo><msub><mi>F</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F=F_1\wedge F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,分别只涉及<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中属性，则有：<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>2</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_F(E_1\times E_2)\equiv \sigma_{F_1}(E_1)\times \sigma_{F_2}(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></li><li>(3):若<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo>=</mo><msub><mi>F</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F=F_1\wedge F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∧</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>,<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">F_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>只涉及<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中属性，而<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">F_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>涉及<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中属性，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><mi>E</mi><mn>1</mn><mo>×</mo><mi>E</mi><mn>2</mn><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>2</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><msub><mi>F</mi><mn>1</mn></msub></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_F(E1\times E2)\equiv \sigma_{F_2}(\sigma_{F_1}(E_1)\times E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></li></ul><h5 id="%E5%AE%9A%E7%90%86l7%3A%E6%8A%95%E5%BD%B1%E5%92%8C%E7%A7%AF%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L7:投影和积的交换律</h5><p>设<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_1,E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>为俩关系的代数表达式，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">A_1,...A_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是出现在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中的一些属性，其中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">B_1,..B_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>出现在中<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">E_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>，剩余的属性<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_1,..C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">..</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>出现在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>中，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>×</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>π</mi><mrow><msub><mi>B</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>B</mi><mi>m</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>×</mo><msub><mi>π</mi><mrow><msub><mi>C</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>c</mi><mi>k</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{A_1..A_n}(E_1\times E_2)\equiv \pi_{B_1,..B_m}(E_1)\times \pi_{C_1,..c_k}(E_2))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0502em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0715em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></eqn></section></p><h5 id="%E5%AE%9A%E7%90%86l8%3A%E9%80%89%E6%8B%A9%E5%92%8C%E5%B9%B6%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L8:选择和并的交换律</h5><p>设关系代数表达式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E=E_1\cup E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq>是条件，则有：<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>∪</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{F}(E_1\cup E_2)\equiv \sigma_F(E_1) \cup \sigma_F(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></p><h5 id="%E5%AE%9A%E7%90%86l9%3A%E9%80%89%E6%8B%A9%E5%92%8C%E5%B7%AE%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L9:选择和差的交换律</h5><p>设关系代数表达式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mo>−</mo><msub><mi>E</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">E=E_1-E_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>，<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></eq>是条件，则有：<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>−</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>σ</mi><mi>F</mi></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{F}(E_1 - E_2)\equiv \sigma_F(E_1) - \sigma_F(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></p><h5 id="%E5%AE%9A%E7%90%86l10%3A%E6%8A%95%E5%BD%B1%E5%92%8C%E5%B9%B6%E7%9A%84%E4%BA%A4%E6%8D%A2%E5%BE%8B" tabindex="-1">定理L10:投影和并的交换律</h5><p>设关系代数表达式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi><mo>=</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>E</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">E=E_1\cup E_2,A_1...A_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">...</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></eq>中的一些属性，则有<section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo>∪</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo>∪</mo><msub><mi>π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\pi_{A_1..A_n}(E_1\cup E_2)\equiv \pi_{A_1..A_n}\cup \pi_{A_1..A_n}(E_2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8057em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0001em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight">..</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></eqn></section></p><h3 id="2105-%E5%9F%BA%E4%BA%8E%E5%85%B3%E7%B3%BB%E4%BB%A3%E6%95%B0%E7%9A%84%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95%E5%8F%8A%E7%A4%BA%E4%BE%8B" tabindex="-1">2105 基于关系代数的查询优化算法及示例</h3><ul><li>算法：关系代数表达式的优化算法</li><li>input：一个关系代数表达式的语法树</li><li>output：计算该表达式的程序</li><li>method：<ul><li>依据定理L4,把形如<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><msub><mi>F</mi><mn>1</mn></msub><mo>∧</mo><msub><mi>F</mi><mn>2</mn></msub><mo>∧</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>∧</mo><msub><mi>F</mi><mi>n</mi></msub></mrow></msub></mrow><annotation encoding="application/x-tex">\sigma_{F_1\wedge F_2\wedge ...\wedge F_n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6807em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">∧</span><span class="mord mtight">...</span><span class="mbin mtight">∧</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.1389em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span></eq>的选择表达式变成串接形式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mrow><mi>F</mi><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>F</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>F</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sigma_{F1}(\sigma_{F2}(...(\sigma_{Fn}(E))))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">...</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">))))</span></span></span></span></eq></li><li>对每个选择，依据定理L4-L9，尽可能把它移动到树的底部</li><li>对每个投影，依据定理L3,7,10,5,尽可能的移到书的底部。如果一个投影是对表达式的所有属性进行的，则可以删去</li><li>依据定理L4，5把串接的选择和投影组合为单个选择，单个投影，或者一个选择后跟一个投影</li><li>对修改后的语法树，将其内节点按以下方式分组：<ul><li>每个二元运算节点和其所有的一元运算的直接祖先放在一组；对于所有的后代节点，若后代节点是一串一元运算且树叶为终点，则将这些一元运算节点放在改组中；如该二元运算节点是笛卡尔积，则其后代节点不能和它组合成连接，则不能将后代节点归入改组</li></ul></li><li>产生一个程序：它以每组节点为一步，但后代组先执行</li></ul></li></ul><h3 id="2106-%E7%89%A9%E7%90%86%E5%B1%82%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96" tabindex="-1">2106 物理层查询优化</h3><h4 id="%EF%BC%881%EF%BC%89%E7%89%A9%E7%90%86%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96%E2%80%93%E6%80%BB%E4%BD%93%E6%80%9D%E8%B7%AF" tabindex="-1">（1）物理查询优化–总体思路</h4><ul><li><p>获取数据库的相关信息（定期统计）</p></li><li><p>实现同一关系操作的不同例行程序</p></li><li><p>选择相应的例行程序</p></li><li><p>依据相关信息进行代价估算，选择代价最少的例行程序及确定相应的参数</p></li><li><p>形成查询计划：以基本的例行程序为基本，确定这些例行程序的执行顺序</p></li><li><p>物理查询运算符</p><ul><li>获取关系元组的操作<ul><li>表空间扫描法</li><li>表空间扫描排序法</li><li>索引扫描法</li><li>索引扫描排序法</li></ul></li><li>关系操作的各种实现算法<ul><li>一趟算法，两趟算法</li><li>基于索引算法，基于散列算法，基于排序算法</li></ul></li><li>迭代器构造–流水化，物化</li></ul></li></ul><p>物理查询运算符通常是关系代数操作符的一个特定实现</p><h4 id="%EF%BC%882%EF%BC%89%E8%A1%A1%E9%87%8F%E4%B8%80%E4%B8%AA%E7%89%A9%E7%90%86%E6%9F%A5%E8%AF%A2%E8%AE%A1%E5%88%92" tabindex="-1">（2）衡量一个物理查询计划</h4><p>依据数据库中的一些统计信息–存放在数据字典或系统目录中的</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">T_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">T(R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>关系R的元组数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">B_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">B(R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>关系R的磁盘块数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>I</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">I_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">I(R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>关系R的每个元组的字节数</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>R</mi></msub></mrow><annotation encoding="application/x-tex">f_R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>或<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">f(R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>R的块因子，即一个块中能够储存的R的元组数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">V(A,R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>R中属性A出现不同值的数目</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>C</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>R</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">SC(A,R):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">SC</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>R中属性A的选择基数，满足A上等值条件的平均记录数</li><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">b:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>每个磁盘块的字节数</li><li>…</li></ul><p>DBMS依据上述统计信息对DB操作的各种物理查询计划进行评估，以确定最优的计划予以执行。</p><h4 id="%EF%BC%883%EF%BC%89%E5%A6%82%E4%BD%95%E6%94%B6%E9%9B%86%E8%BF%99%E4%BA%9B%E4%BF%A1%E6%81%AF" tabindex="-1">（3）如何收集这些信息</h4><ul><li>当一个表装入内存和创建索引的时候，统计信息不是被自动收集的，必须有DBA使用特定的命令来完成信息统计，这些命令就是收集统计信息并把其存入系统目录中的实用程序</li><li>随着表的更新操作。统计信息可能会过时，过时的统计信息会使DBMS确定方案时决策错误，因此要求DBA定期的对有频繁更新操作的Table进行统计</li><li>DBA要熟悉统计信息收集命令的使用，并定期执行</li></ul><h3 id="2107-%E4%BB%A3%E4%BB%B7%E4%BC%B0%E7%AE%97" tabindex="-1">2107 代价估算</h3><h4 id="%EF%BC%881%EF%BC%89%E6%8A%95%E5%BD%B1%E8%BF%90%E7%AE%97%E7%9A%84%E4%BB%A3%E4%BB%B7%E4%BC%B0%E7%AE%97" tabindex="-1">（1）投影运算的代价估算</h4><ul><li>投影运算并未减少行数，但可能有效地减少了存储结果关系地块数</li></ul><h4 id="%EF%BC%882%EF%BC%89%E9%80%89%E6%8B%A9%E8%BF%90%E7%AE%97%E5%9C%B0%E4%BB%A3%E4%BB%B7%E4%BC%B0%E7%AE%97" tabindex="-1">（2）选择运算地代价估算</h4><p>估算选择运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>A</mi><mo>=</mo><mi>c</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=\sigma_{A=c}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></eq>的大小</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></eq>介于0 到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo>−</mo><mi>V</mi><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">T(R)-V(R,A)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></eq>之间<ul><li>最多：A属性不同值的元组都只存在一个，剩余的都是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">A=c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span></eq>的分组</li></ul></li><li>估计：<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>V</mi><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(S)=T(R)/V(R,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq><ul><li>A属性的不同值的元组假设是平均分布的</li></ul></li><li>当不知道<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V(R,A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></eq>时，估计：<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>10</mn></mrow><annotation encoding="application/x-tex">T(S)=T(R)/10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mord">/10</span></span></span></span></eq></li></ul><p>估算选择运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>A</mi><mo>&lt;</mo><mi>c</mi></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=\sigma_{A&lt;c}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1774em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></eq>的大小</p><ul><li>一般取<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mn>3</mn></mrow><annotation encoding="application/x-tex">T(S)=T(R)/3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span><span class="mord">/3</span></span></span></span></eq></li></ul><p>估算选择运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><msub><mi>σ</mi><mrow><mi>C</mi><mn>1</mn><mi>o</mi><mi>r</mi><mi>C</mi><mn>2</mn></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=\sigma_{C1 or C2}(R)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mtight">1</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">or</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">)</span></span></span></span></eq></p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mn>1</mn></mrow><mi>n</mi></mfrac><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi>m</mi><mn>2</mn></mrow><mi>n</mi></mfrac><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(S)=n(1 - (1-\frac{m1}{n})(1-\frac{m2}{n}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1901em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">))</span></span></span></span></eq>,m1为满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">C1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">1</span></span></span></span></eq>的个数，m2为满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mn>2</mn></mrow><annotation encoding="application/x-tex">C2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">2</span></span></span></span></eq>的个数，R有n个元组</li></ul><h4 id="%EF%BC%883%EF%BC%89%E8%BF%9E%E6%8E%A5%E8%BF%90%E7%AE%97%E7%9A%84%E4%BB%A3%E4%BB%B7%E4%BC%B0%E7%AE%97" tabindex="-1">（3）连接运算的代价估算</h4><p>估计连接运算<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mi>N</mi><mi>a</mi><mi>t</mi><mi>u</mi><mi>r</mi><mi>a</mi><mi>l</mi><mi>J</mi><mi>o</mi><mi>i</mi><mi>n</mi><mi>S</mi><mo stretchy="false">(</mo><mi>Y</mi><mo separator="true">,</mo><mi>Z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">S=R(X,Y) Natural Join S(Y,Z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">a</span><span class="mord mathnormal">t</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">o</span><span class="mord mathnormal">in</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">)</span></span></span></span></eq>的大小</p><ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>T</mi><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mi>T</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><mi>V</mi><mo stretchy="false">(</mo><mi>R</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>V</mi><mo stretchy="false">(</mo><mi>S</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">T(S)=\frac{T(R)T(S)}{max(V(R,Y),V(S,Y))}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mclose mtight">)</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">V</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="mclose mtight">))</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span><span class="mclose mtight">)</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></eq></li></ul><h3 id="2108-%E5%9B%9E%E9%A1%BE" tabindex="-1">2108 回顾</h3><p>以往关系型数据库被认为是不可能的，因为连接会产生巨大的中间数据，但在查询优化后，中间数据变得可以接受，使得关系型数据库成为了现实。</p><ul><li>查询优化<ul><li>逻辑层优化<ul><li>关系代数操作次序优化</li></ul></li><li>物理层优化<ul><li>代价估算</li><li>算法选择和装配次序</li></ul></li></ul></li></ul><h2 id="%E7%AC%AC%E4%B8%83%E7%AB%A0-%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6-%E5%8F%8A-%E7%AC%AC%E5%85%AB%E7%AB%A0-%E5%86%8D%E8%AE%BA%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86" tabindex="-1">第七章 并发控制 及 第八章 再论事务管理</h2><h3 id="2201-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6" tabindex="-1">2201 为什么要进行并发控制</h3><h4 id="%EF%BC%881%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8%E4%B8%8D%E4%B8%80%E8%87%B4" tabindex="-1">（1）数据库可能存在不一致</h4><ul><li>三种典型不一致<ul><li>丢失修改</li><li>不能重复读</li><li>脏读</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E7%9A%84%E7%BC%98%E7%94%B1" tabindex="-1">（2）并发控制的缘由</h4><pre><code class="language-mermaid">graph LRA(DB共享)--&gt;B(多应用程序使用);B--&gt;C(可能同时使用);C--&gt;D(数据的不一致性);D--&gt;E(不一致性的类型);E--&gt;F(并发控制);F--&gt;G(并发控制方法);</code></pre><h4 id="%EF%BC%883%EF%BC%89%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E5%8F%8A%E7%9B%B8%E5%BA%94%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E6%8A%80%E6%9C%AF%E6%98%AFdbms%E7%9A%84%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF" tabindex="-1">（3）并发控制及相应的事务处理技术是DBMS的核心技术</h4><p>核心概念：事务，并发控制，封锁</p><h3 id="2202-%E6%B7%B1%E5%85%A5%E8%AE%A4%E8%AF%86%E4%BA%8B%E5%8A%A1" tabindex="-1">2202 深入认识事务</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%A6%82%E5%BF%B5" tabindex="-1">（1）事务的概念</h4><ul><li>事务（Transaction）<br>事务是数据库管理系统提供的控制数据操作的一种手段，通过这一手段，应用程序员将一系列的数据库操作组合在一起作为一个整体进行操作和控制，以便数据库管理系统能够提供一致性状态转换的保证。</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%8F%E8%A7%82%E6%80%A7%E5%92%8C%E5%BE%AE%E8%A7%82%E6%80%A7" tabindex="-1">（2）事务的宏观性和微观性</h4><h5 id="%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%AE%8F%E8%A7%82%E6%80%A7%EF%BC%88%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9C%8B%E5%88%B0%E7%9A%84%E4%BA%8B%E5%8A%A1%EF%BC%89" tabindex="-1">事务的宏观性（应用程序员看到的事务）</h5><ul><li>一个存取或改变数据库内容的一次执行，或者说一条或多条SQL语句的一次执行被看作一个事务</li><li>事务一般是由应用程序员提出，因此有开始和结束，结束前需要提交或撤销</li><li>一个事务可以处理一个数据或一条记录</li><li>复杂的事务可以处理一批数据或一批记录</li><li>一段程序语言，可能会循环执行，执行中，由SQL语句引出事务，直到事务结束，每次循环都将产生一个事务</li></ul><h5 id="%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%BE%AE%E8%A7%82%E6%80%A7%EF%BC%88dbms%E7%9C%8B%E5%88%B0%E7%9A%84%E4%BA%8B%E5%8A%A1%EF%BC%89" tabindex="-1">事务的微观性（DBMS看到的事务）</h5><ul><li>对数据库的一系列基本操作（读，写）的一个整体性执行</li><li>事物的并发执行：多个事务在宏观上看是并发执行，但其在微观上的基本操作则可以是交叉执行的</li></ul><h4 id="%EF%BC%883%EF%BC%89%E4%BA%8B%E5%8A%A1%E7%9A%84%E7%89%B9%E6%80%A7" tabindex="-1">（3）事务的特性</h4><ul><li><p>宏观独立性</p></li><li><p>微观交错执行</p></li><li><p>并发控制就是通过事务微观交错执行次序的正确安排，保证事务宏观的独立性，完整性和正确性</p></li><li><p>事务的特性 ACID</p><ul><li>原子性（Atomicity）:DBMS能够保证事务的一组更新操作是原子不可分的，即对DB而言，要么全做，要么不做</li><li>一致性（Consistency）:DBMS保证事务的操作状态是正确的，符合一致性的操作规则，不能出现三种典型的不一致性。它是进一步由隔离性来保证的。</li><li>隔离性（Isolation）:DBMS保证并发执行的多个事务之间互相不受影响。例如两个事务T1，T2，既是并发执行，也相当于依次执行</li><li>持久性（Durablity）:DBMS保证已提交的事务影响是持久的，被撤销事务的影响是可以恢复的</li></ul></li><li><p>具有ACID特性的若干数据库基本操作的组合体称为事务</p></li></ul><h4 id="%EF%BC%884%EF%BC%89dbms%E5%AF%B9%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A7%E5%88%B6" tabindex="-1">（4）DBMS对事务的控制</h4><img src="/images/本科/DBMS对事务的控制.jpg"><h3 id="2203-%E4%BA%8B%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%9A%84%E5%8F%AF%E4%B8%B2%E8%A1%8C%E6%80%A7" tabindex="-1">2203 事务调度的可串行性</h3><h4 id="%EF%BC%881%EF%BC%89%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5" tabindex="-1">（1）基本概念</h4><ul><li>事务调度：一组事务的基本步（读，写，其它控制操作比如加锁，解锁等）的一种执行顺序称为对这组事务的一个调度。<br>并发调度：多个事务从宏观上看是并发执行的，但是其微观上的基本操作(读写)则是交叉执行的。</li><li>并发调度的正确性：当且仅当在这个并发调度下所得到的新数据库结果与分别串行地运行这些事务所得到地新数据库完全一直，则说调度是正确的。</li><li>可串行性：如果不管数据库初始状态如何，一个调度对数据库状态的影响都和某个串行调度相同，则我们说这个调度是可串行化的或者说可序列化的。</li><li>可串行化调度一定是正确地并行调度，但正确的并行调度，却未必第一事故可串行化的调度</li><li>并行调度的正确性是指内容上的结果正确性，而可串行性是指形式上结果正确性</li><li>可串行化的等效串行序列不一定唯一</li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%B8%80%E7%A7%8D%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%8B%E5%8A%A1%E8%B0%83%E5%BA%A6%E7%9A%84%E6%A0%87%E8%AE%B0%E6%A8%A1%E5%9E%8B" tabindex="-1">（2）一种简单的事务调度的标记模型</h4><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">r_T(A):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>事务T读A. <eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">w_T(A):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>事务T写A</p><h4 id="%EF%BC%883%EF%BC%89%E5%86%B2%E7%AA%81%E7%9A%84%E4%B8%B2%E8%A1%8C%E6%80%A7" tabindex="-1">（3）冲突的串行性</h4><ul><li>冲突：调度中的一对连续的动作，他们满足：如果它们的顺序交换，那么涉及的事务中至少有一个事务的行为会改变</li><li>有冲突的两个操作是不能交换次序的，没有冲突的两个事务是可交换的</li><li>几种冲突情况<ul><li>同一事务的任何两个操作都是冲突的</li><li>不同事务对同一元素的两个写操作是冲突的</li><li>不同事务对同意元素的一读一写操作是冲突的</li></ul></li><li>冲突可串行性：一个调度，如果通过交换两个相邻的无冲突的操作能够转换到某一个串行的调度，则称此调度为冲突可串行化的调度。</li><li>冲突可串行化是比 可串行化更严格的概念</li><li>满足冲突可串行化，一定满足可串行性</li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%86%B2%E7%AA%81%E5%8F%AF%E4%B8%B2%E8%A1%8C%E6%80%A7%E5%88%A4%E5%88%AB%E7%AE%97%E6%B3%95" tabindex="-1">（4）冲突可串行性判别算法</h4><h5 id="%EF%BC%881%EF%BC%89%E9%97%AE%E9%A2%98" tabindex="-1">（1）问题</h5><ul><li><p>并发调度的正确性：当且仅当在这个并发调度下所得到的新数据库结果与分别串行地运行这些事务所得到的新数据库完全一致，则说调度是正确的</p></li><li><p>问题1：怎样判断一个并发调度是正确的</p><ul><li>解决：通过判断是否为冲突可串行性</li></ul></li><li><p>问题2：怎样产生一个正确的并发调度</p></li></ul><h5 id="%EF%BC%882%EF%BC%89%E7%AE%97%E6%B3%95%E8%A1%A8%E8%BE%BE" tabindex="-1">（2）算法表达</h5><ul><li>构造一个前驱图（有向图）</li><li>节点是每一个事务<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>，如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>的一个操作与<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>的一个操作发生冲突，且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>在<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>前执行，则绘制一条边，由<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>指向<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>，表示<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>要在前<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">T_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></eq>执行</li><li>测试检查：如果该有向图没有环，则是冲突可串行化的</li></ul><h3 id="2204-%E5%9F%BA%E4%BA%8E%E5%B0%81%E9%94%81%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E6%96%B9%E6%B3%95" tabindex="-1">2204 基于封锁的并发控制方法</h3><h4 id="%EF%BC%881%EF%BC%89-%E9%97%AE%E9%A2%98" tabindex="-1">（1） 问题</h4><ul><li>怎样产生一个冲突可串行化的调度<ul><li>基于封锁的并发控制</li><li>基于时间戳的并发控制</li><li>基于有效性确认的并发控制</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E2%80%9C%E9%94%81%E2%80%9D" tabindex="-1">（2）什么是“锁”</h4><ul><li>“锁”是控制并发的一种手段<ul><li>每一数据元素都有一个唯一的锁</li><li>每一事务读写数据元素前，要获取锁</li><li>如果被其他食物持有该元素的锁，则要等待</li><li>事务处理完成后要释放锁</li></ul></li></ul><p><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">L_i(A):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>事务<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>对数据元素<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>加锁<br><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>:</mo></mrow><annotation encoding="application/x-tex">U_i(A):</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span></span></span></span></eq>事务<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">T_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></eq>对数据元素<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span></eq>解锁</p><ul><li>事务调度器   拥有锁表，来管理锁<ul><li>利用锁来保证冲突的可串行性</li><li>对所有事务的操作产生一个读写操作序列</li><li>保证事务的一致性</li></ul></li><li>锁本身并不能保证冲突可串行性</li><li>锁为调度提供了控制的手段，但如何用锁，仍需说明，并采用不同的协议</li></ul><h4 id="%EF%BC%883%EF%BC%89%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE%E9%9C%80%E8%A6%81%E8%80%83%E8%99%91%E4%BB%80%E4%B9%88" tabindex="-1">（3）封锁协议需要考虑什么</h4><ul><li>封锁协议之锁的类型<ul><li>排他锁（又称X锁）<ul><li>只有一个事务能读，写，其它任何事物不能读写</li></ul></li><li>贡献锁<ul><li>所有事务都可以读，但任何事务都不能写</li></ul></li><li>更新锁<ul><li>初始读，以后可升级为写</li></ul></li><li>增量锁<ul><li>增量更新</li><li>区分增量更新和其他类型的更新</li></ul></li></ul></li><li>封锁协议之相容性矩阵<ul><li>当某事务对一数据对象持有一种锁时，另一事务再申请对该对象加某一类型锁时，时允许还是不允许</li></ul></li><li>封锁协议之解锁和加锁的时机<ul><li>SQL之隔离性级别</li><li>读未提交</li><li>读已提交</li><li>可重复读</li><li>可串行化</li></ul></li><li>封锁协议之封锁力度<ul><li>封锁力度指封锁数据对象的大小</li><li>粒度单位：属性值-元组-元组集合-整个关系-整个DB某索引项-某个索引</li><li>从前往后：并发度变小，封锁开销小，从后往前相反</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E4%B8%A4%E7%AB%AF%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE" tabindex="-1">（4）两端封锁协议</h4><h5 id="%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%A4%E6%AE%B5%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE" tabindex="-1">什么是两段封锁协议</h5><ul><li><p>读写数据之前要获得锁。每个事务中所有封锁请求先于任何一个解锁请求</p></li><li><p>两阶段：加锁段，解锁段。加锁段中不能有解锁操作，解锁段中不能有加锁操作。</p></li><li><p>两段封锁协议可以保证冲突可串行化<br>归纳法证明P215</p></li><li><p>两端封锁协议可能产生死锁</p></li></ul><h3 id="2205-%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6" tabindex="-1">2205 基于时间戳的并发控制</h3><h4 id="%EF%BC%881%EF%BC%89%E4%BB%80%E4%B9%88%E6%98%AF%E6%97%B6%E9%97%B4%E6%88%B3" tabindex="-1">（1）什么是时间戳</h4><ul><li><p>一种基于时间的标志</p></li><li><p>时间戳具有唯一性和递增性</p></li><li><p>事务T启动时，系统将该时刻赋予T，为T的时间戳</p></li><li><p>时间戳可以表征一系列事务执行的先后顺序：时间戳小的事务先执行，大的后执行</p></li><li><p>利用时间戳，可以不用锁来进行并发控制</p></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E6%88%B3%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF" tabindex="-1">（2）基于时间戳并发控制的基本思路</h4><ul><li>借助时间戳，强制使一组并发事务的交叉执行，等价于一个特定顺序（时间戳从小到大）的串行执行</li><li>如何强制：执行判断冲突<ul><li>如无冲突，予以执行</li><li>如有冲突，则撤销事务，并重启该事务<br>此时该事务获得了一个更大的时间戳，表明是后执行的事务</li></ul></li><li>有哪些冲突<ul><li>读读无冲突</li><li>读写或写读冲突</li><li>写写冲突</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E7%AE%80%E5%8D%95%E8%B0%83%E5%BA%A6" tabindex="-1">（3）基于时间戳的简单调度</h4><p>对DB中的每个元素x，系统保留其上最大的时间戳</p><ul><li><p>RT（X）即R-timestamp（x）</p><ul><li>读过该数据事务中最大的时间戳，即最后读x的事务的时间戳</li></ul></li><li><p>WT（X）即W-timestamp（x）</p><ul><li>写过该数据事务中最大的时间戳，即最后写x的事务的时间戳</li></ul></li><li><p>事务的时间戳</p><ul><li>TS（T）：即TimeStamp</li></ul></li><li><p>读写并发：</p><ul><li>若T事务读x，则将T的时间戳TS与WT（x）比较：<ul><li>若TS大（T 后进行），则允许T操作，并且更改RT（x）为max(RT(x),TS)</li><li>否则，有冲突，撤回T，重启T</li></ul></li><li>若T事务写x，则将T的时间戳TS与RT（x）比较<ul><li>若TS大（T后进行），则允许T操作，并且更改WT（x）为max(WT(x),TS)</li></ul></li></ul></li><li><p>写写并发</p><ul><li>若T事务写x，则将T的时间戳TS与WT（x）比较<ul><li>若TS大，则允许T写，并且更改WT（x）为T的时间戳</li><li>否则有冲突，T撤回重做</li></ul></li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%EF%BC%883%EF%BC%89%E7%9A%84%E6%94%B9%E8%BF%9B" tabindex="-1">（4）（3）的改进</h4><p>新增标志：</p><ul><li>C（x）：x的提交位<ul><li>该位为真，当且仅当最近写x的事务已经提交</li><li>C（x）的目的是避免出现事务读另一事务U所写数据然后U还未写完终止这样的情况</li></ul></li><li>对来自事务T的读写请求，调度器可以<ul><li>同意请求</li><li>撤销或终止T，并重启具有新时间戳的T(终止+重启，称为回滚)</li><li>推迟T，并在以后决定是终止T还是同意请求(如果请求是读，且此读可能是脏的)</li></ul></li></ul><h5 id="%E8%B0%83%E5%BA%A6%E8%A7%84%E5%88%99" tabindex="-1">调度规则</h5><ul><li>假设调度器收到请求<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_T(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq><ul><li>(1)如果TS(T)&gt;=WT(x)，此读是事实上可实现的<ul><li>如果C(x)为真，同意请求。如果TS(T)&gt;RT(x),置RT(x):=TS(T);否则不改变RT(x)</li><li>如果C(x)为假，推迟T直到C(x)为真或写x的事务终止</li></ul></li><li>(2)如果TS(T)&lt;=WT(x),此读是事实上不可实现的<ul><li>回滚T（过晚的读）</li></ul></li></ul></li><li>假设调度器收到请求<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>T</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">w_T(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq><ul><li>(1)如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&gt;=RT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，且<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mi>W</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&gt;=WT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，此写是事实上可实现的<ul><li>为x写入新值，置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mi>a</mi><mi>l</mi><mi>s</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">WT(x):=TS(T),C(x)=false</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">se</span></span></span></span></eq></li></ul></li><li>(2)如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mo>=</mo><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&gt;=RT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，但是<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>W</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&lt;WT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，此写是事实上可实现的，但x已经有一个更晚的值<ul><li>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>为真，那么前一个x的写已提交，则忽略T的写</li><li>如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>为假，则我们推迟T，直到<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>为真或x的事务终止</li></ul></li><li>(3)如果<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>&lt;</mo><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">TS(T)&lt;RT(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">TS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></eq>，此写事实上是不可实现的<ul><li>T必须回滚</li></ul></li></ul></li><li>假设调度器收到提交T的请求<ul><li>它必须找到T所写的所有数据库元素x，并置<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><mi>t</mi><mi>r</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">C(x):=true</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">u</span><span class="mord mathnormal">e</span></span></span></span></eq></li><li>如果有任何等待x被提交的事务，这些事务就被允许继续进行</li></ul></li><li>假设调度器收到终止T的请求<ul><li>向前面步骤一样回滚T。</li><li>那么任何等待T所写元素x的事务必须重新读或写，看这一动作现在的T的写被终止后是否合法</li></ul></li></ul><h3 id="2206-%E5%9F%BA%E4%BA%8E%E6%9C%89%E6%95%88%E6%80%A7%E7%A1%AE%E8%AE%A4%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6%E6%96%B9%E6%B3%95" tabindex="-1">2206 基于有效性确认的并发控制方法</h3><h4 id="%EF%BC%881%EF%BC%89%E6%80%9D%E6%83%B3" tabindex="-1">（1）思想</h4><ul><li>事务在启动时刻被赋予唯一的时间戳，以示其启动顺序</li><li>为每一个活跃的事务保存其读写数据集合，RS(T):事务T读数据的集合，WS(T):事务T写数据的集合</li><li>通过对多个事务的读写集合，判断是否有冲突，即有效性确认，来完成事务的提交与回滚，强制事务以可串行化的方式执行</li></ul><h4 id="%EF%BC%882%EF%BC%89%E8%B0%83%E5%BA%A6%E5%99%A8%E7%9A%84%E8%BF%90%E8%A1%8C" tabindex="-1">（2）调度器的运行</h4><p>事务分三个阶段进行</p><ul><li>读阶段：事务从数据库中读取读集合中的所有元素，事务还在其局部地址空间计算它将要写的值</li><li>有效性确认阶段：调度器通过比较该事务与其它事务的读写集合来确认该事务的有效性</li><li>写阶段：事务往数据库中写入其写集合元素中的值</li><li>每个成功确认的事务是在其有效性确认的瞬间执行的</li><li>并发事务串行的顺序即事务有效性确认的顺序</li></ul><p>调度器维护三个集合：</p><ul><li>start集合：已经开始但尚未完成有效性确认的事务集合，对此集合中的事务，调度器维护start(T)，即事务T开始的时间</li><li>val集合，已经确认有效性但尚未完成第三阶段写的事务，对此集合中的事务，调度器维护start(T),val(T)，即T确认的时间</li><li>FIN集合，已经完成三阶段的事务，对于这样的事务T，调度器记录start(T),val(T),fin(T),即T的完成时间</li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%9C%89%E6%95%88%E6%80%A7%E7%A1%AE%E8%AE%A4%E7%9A%84%E8%A7%84%E5%88%99" tabindex="-1">（3）有效性确认的规则</h4><ul><li>（1）对于所有已经经过有效性确认，且在T开始前没有完成的U，即对于满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>N</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>S</mi><mi>T</mi><mi>A</mi><mi>R</mi><mi>T</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIN(U)&gt;START(T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">ST</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">RT</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></eq>的U，检测<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>W</mi><mi>S</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RS(T)\cap WS(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RS</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span></eq>是否为空</li><li>若为空，则确认，否则不予确认</li></ul></li><li>（2）对于所有已经经过有效性确认，且在T有效性确认前没有完成的U，即对于满足<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mi>I</mi><mi>N</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo><mo>&gt;</mo><mi>V</mi><mi>A</mi><mi>L</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">FIN(U)&gt;VAL(T)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal">A</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span></span></span></span></eq>的U，检测<ul><li><eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mi>S</mi><mo stretchy="false">(</mo><mi>T</mi><mo stretchy="false">)</mo><mo>∩</mo><mi>W</mi><mi>S</mi><mo stretchy="false">(</mo><mi>U</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">WS(T)\cap WS(U)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mclose">)</span></span></span></span></eq>是否为空</li><li>若为空，则确认，否则不予确认</li></ul></li></ul><h2 id="%E7%AC%AC%E5%85%AD%E7%AB%A0-%E7%B3%BB%E7%BB%9F%E6%95%85%E9%9A%9C%E5%AF%B9%E7%AD%96" tabindex="-1">第六章 系统故障对策</h2><h3 id="2301-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%85%E9%9A%9C%E5%8F%8A%E5%85%B6%E5%BD%B1%E5%93%8D" tabindex="-1">2301 数据库的故障及其影响</h3><h4 id="%EF%BC%881%EF%BC%89%E5%9F%BA%E7%A1%80%E9%9C%80%E8%A6%81%E9%9C%80%E8%A6%81%E7%9F%A5%E9%81%93%E7%9A%84" tabindex="-1">（1）基础需要需要知道的</h4><ul><li>DBMS运行方式<ul><li>DBMS利用内存和外存这样的存储体系来进行数据库管理</li><li>在内存中，又分为程序数据和系统数据</li></ul></li><li>事务<ul><li>上一章已经提及</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%95%85%E9%9A%9C%E7%B1%BB%E5%9E%8B" tabindex="-1">（2）数据库的故障类型</h4><ul><li>事务故障<ul><li>某一个程序自身运行错误所引起的故障</li><li>影响该程序本身</li></ul></li><li>系统故障<ul><li>由于掉电，非正常关机等所引起的故障</li><li>影响正在运行的事务以及数据库缓冲区，数据库缓冲区将涉及正在运行和已经运行的事务</li></ul></li><li>介质故障<ul><li>由于介质损坏等引起的故障</li><li>影响是全面的，既影响内存中的数据，也影响介质中的数据</li></ul></li></ul><h3 id="2302-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9B%9E%E5%A4%8D%E7%9A%84%E5%AE%8F%E8%A7%82%E6%80%9D%E8%B7%AF" tabindex="-1">2302 数据库回复的宏观思路</h3><ul><li>数据库故障回复</li><li>把DB由当前不正确状态恢复到已知为正确的某一状态</li><li>需要保证事务的<ul><li>原子性：事务的所有操作，要么全部执行，要不全都不执行</li><li>持久性：已经提交的事务对数据库产生的影响是持久的，未提交的事务对数据库不应该有影响</li></ul></li></ul><h4 id="%EF%BC%881%EF%BC%89%E4%BA%8B%E5%8A%A1%E6%95%85%E9%9A%9C%E7%9A%84%E5%9B%9E%E5%A4%8D" tabindex="-1">（1）事务故障的回复</h4><ul><li>事务故障可以通过重做事务(Redo)和撤销事务(Undo)来恢复。重做事务可保证已经提交事务的持久性，而撤销事务则消除未提交事务的影响。</li></ul><h4 id="%EF%BC%882%EF%BC%89%E7%B3%BB%E7%BB%9F%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">（2）系统故障恢复</h4><p>运行日志：</p><ul><li><p>运行日志是DBMS维护的一个文件，该文件以流水的形式记录乐每一个事务对数据库的每一次操作及操作顺序</p></li><li><p>运行日志直接写入介质存储上，会保持正确性</p></li><li><p>当事务对数据库进行操作时：先写运行日志，写成功后，再与数据库缓冲区进行信息交换</p></li><li><p>系统故障可以通过运行日志来恢复</p><ul><li>按照运行日志记录的事务操作来重做事务（当事务在发生故障时已经正确结束）或撤销事务（当事务在故障发生时未结束）</li></ul></li><li><p>但故障恢复是需要时间的</p><ul><li>运行日志保留了若干天的记录，故障发生时应从哪个点开始恢复呢？</li></ul></li><li><p>DBMS在运行日志中定期的设置和更新检查点</p><ul><li>检查点是这样的时刻：在该时刻，DBMS强制使内存DB Buffer中的内容和介质DB中的保持一致，即将DB Buffer更新的所有内容写回DB</li><li>检查点表征了，在检查点之前内存中数据和介质中数据是保持一致的</li></ul></li><li><p>系统故障的恢复</p><ul><li>检查点之间结束的书屋不需要恢复(已经写回DB)</li><li>检查点之后结束或发生的事务需要依据运行日志进行恢复(不能确定是否写回DB)：故障点前结束的重做，故障点时刻未结束的撤销</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E4%BB%8B%E8%B4%A8%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">（3）介质故障恢复</h4><ul><li><p>副本</p><ul><li>在某一时刻，对数据库在其他介质存储上产生的令一份等同记录</li><li>用副本替代被损坏的数据库</li></ul></li><li><p>介质故障的恢复</p><ul><li>用副本替换被破环的数据库</li><li>由于介质故障影响全面，用副本恢复后还需要根据运行日志进行恢复</li></ul></li><li><p>如何确定备份的时刻：转储点</p><ul><li>过频，影响系统工作效率；过疏，会造成运行日志过大，也影响系统性能</li><li>备份转储周期与运行日志的大小密切相关，应注意防止衔接不畅而引起的漏洞</li></ul></li></ul><h4 id="%EF%BC%884%EF%BC%89%E5%B0%8F%E7%BB%93" tabindex="-1">（4）小结</h4><ul><li>三种类型故障：事务故障，系统故障，介质故障</li><li>三种恢复手段：事务的撤销和重做，运行日志，备份</li><li>两个重要时刻：检查点和转储点</li></ul><h3 id="2303-%E8%BF%90%E8%A1%8C%E6%97%A5%E5%BF%97%E7%9A%84%E6%A6%82%E5%BF%B5" tabindex="-1">2303 运行日志的概念</h3><h4 id="%EF%BC%881%EF%BC%89%E6%97%A5%E5%BF%97%E6%89%80%E8%AE%B0%E5%BD%95%E7%9A%84" tabindex="-1">（1）日志所记录的</h4><ul><li><p>每个事务都会读/写某些元素</p><ul><li>READ(X,t):将元素X读到事务的局部变量t中</li><li>WRITE(X,t):将事务局部变量t写回元素X中</li><li>INPUT(X):将元素X从磁盘读入到内存缓冲区中</li><li>OUTPUT(X):将元素X写回到磁盘中</li></ul></li><li><p>每个事务都以提交或者撤销结束</p><ul><li>COMMIT：事务提交</li><li>ABORT：事务撤销</li></ul></li><li><p>DBMS保证事务的：</p><ul><li>持久性：已提交的事务对数据库产生的影响是持久的，未提交的事务对数据库不应用影响<ul><li>已提交的事务—缓冲区内容保证写回磁盘</li><li>未提交的事务—缓冲区的内容不能影响磁盘</li></ul></li><li>原子性：事务的所有操作，要么全都执行，要么全不执行</li></ul></li></ul><h4 id="%EF%BC%882%EF%BC%89%E4%B8%8D%E5%90%8C%E7%9A%84%E7%BC%93%E5%86%B2%E5%8C%BA%E7%AD%96%E7%95%A5%E5%BD%B1%E5%93%8D%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8C%81%E4%B9%85%E6%80%A7" tabindex="-1">（2）不同的缓冲区策略影响事务的持久性</h4><p>缓冲区处理策略</p><ul><li>Force：内存中的数据最晚在commit的时候写入磁盘</li><li>No Steal：不允许事务commit之前把内存中的数据写入磁盘</li><li>No force：内存中的数据可以一直保留，在commit之后过一段时间在写入磁盘(此时在系统崩溃的时候可能还没写入到磁盘，需要redo)—灵活</li><li>Steal：允许事务commit之前把内存中的数据写入磁盘（此时若系统commit之前崩溃时），已经有数据写入到磁盘时，要恢复到崩溃前的状态，需要Undo）—灵活</li></ul><h4 id="%EF%BC%883%EF%BC%89%E4%BA%8B%E5%8A%A1%E6%95%85%E9%9A%9C%E5%BD%B1%E5%93%8D%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%8E%9F%E5%AD%90%E6%80%A7" tabindex="-1">（3）事务故障影响事务的原子性</h4><p>在事务运行时故障，事务会中断，影响原子性</p><h4 id="%EF%BC%884%EF%BC%89%E6%80%8E%E6%A0%B7%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97" tabindex="-1">（4）怎样记录日志</h4><p>日志</p><ul><li>一个包含日志记录的只能追加的顺序文件，不同事务的日志交错存储，按事件发生顺序存储</li><li>发生系统故障时，使用日志进行恢复<ul><li>故障时已提交的事务，重做（Redo）</li><li>故障时未提交的事务，撤销（Undo）</li></ul></li><li>日志记录的信息<ul><li>&lt; Start T  &gt;表明事务T已经开始</li><li>&lt; Commut T &gt;表示事务T已经完成</li><li>&lt; Abort T &gt;事务T未成功，被终止</li><li>&lt; T,x,v1 &gt;或&lt; T,x,v2 &gt;，&lt; T,x,v1,v2 &gt;事务T改变了数据库元素X，X原来的值为v1，新值为v2</li></ul></li><li>三种日志：Undo型日志，Redo型日志，Undo/Redo型日志</li></ul><h4 id="%EF%BC%885%EF%BC%89%E7%BC%93%E5%86%B2%E5%8C%BA%E5%A4%84%E7%90%86%E7%AD%96%E7%95%A5%E5%92%8C%E6%97%A5%E5%BF%97%E6%81%A2%E5%A4%8D%E7%AD%96%E7%95%A5%E7%9A%84%E5%85%B3%E7%B3%BB" tabindex="-1">（5）缓冲区处理策略和日志恢复策略的关系</h4><table><thead><tr><th></th><th>No Steal</th><th>Steal</th></tr></thead><tbody><tr><td>No Force</td><td></td><td>最快</td></tr><tr><td>Force</td><td>最慢</td><td></td></tr></tbody></table><table><thead><tr><th></th><th>No Steal</th><th>Steal</th></tr></thead><tbody><tr><td>No Force</td><td>只需Redo<br>无需Undo</td><td>需要Redo<br>需要Undo</td></tr><tr><td>Force</td><td>无需Redo<br>无需Undo</td><td>无需Redo<br>只需Undo</td></tr></tbody></table><h3 id="2304-undo%E5%9E%8B%E6%97%A5%E5%BF%97%E5%8F%8A%E5%85%B6%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">2304 Undo型日志及其故障恢复</h3><h4 id="%EF%BC%881%EF%BC%89undo%E5%9E%8B%E6%97%A5%E5%BF%97%E7%9A%84%E8%AE%B0%E5%BD%95%E8%A7%84%E5%88%99" tabindex="-1">（1）Undo型日志的记录规则</h4><ul><li>对于任一事务T，按下列顺序像磁盘输出T的日志信息<ul><li>首先&lt;T,x,v&gt;被写入日志中</li><li>其次，OUTPUT(x)</li><li>最后,&lt;COMMIT T&gt; 或&lt;ABORT T&gt;被写入到日志中</li></ul></li><li>注意：undo型日志仅保留旧值。&lt;T,x,v&gt;，v为X原来的值</li><li>Undo型日志：“将事务改变的所有数据写到磁盘前不能提交该事务”</li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%88%A9%E7%94%A8undo%E5%9E%8B%E6%97%A5%E5%BF%97%E8%BF%9B%E8%A1%8C%E6%81%A2%E5%A4%8D" tabindex="-1">（2）利用Undo型日志进行恢复</h4><ul><li>首先，确定每一个事务是否已经完成<ul><li>start T,commit T = yes</li><li>start T,abort T = no（已结束，但未完成）</li><li>start T… = no</li></ul></li><li>然后，从日志的尾部开始按日志记录的反序，处理每一日志记录，撤销未完成事务的所有修改<ul><li>commit T:标记T已完成</li><li>abort T:标记T已经结束但未完成</li><li>T,x,v:如果T未完成，则将X=v写回磁盘，否则跳过</li><li>Start T:跳过</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%A3%80%E6%9F%A5%E7%82%B9%E5%8F%8A%E5%85%B6%E4%BD%BF%E7%94%A8" tabindex="-1">（3）检查点及其使用</h4><p>检查点</p><ul><li>静止检查点：周期性地对日志设置检查点<ul><li>停止接受新的事务，等到所有当前活跃事务提交或终止，并在日志中写入COMMIT或ABORT记录后</li><li>将日志刷新到磁盘，写入日志记录&lt;CKPT&gt;,并再次刷新日志</li></ul></li><li>非静止检查点<ul><li>在设置检查点时不必关闭系统，允许新事务进入</li><li>在写入一条&lt;CKPT(T1,…Tk)&gt;（其中T1，…Tk）是所有活跃的未结束的事务</li><li>继续正常的操作，直到T1…T_k完成时，写入&lt;END CKPT&gt;</li></ul></li></ul><p>恢复时恢复到第一个检查点的位置，即恢复到第一个&lt;END CKPT&gt;或&lt;CKPT&gt;的位置</p><h3 id="2305-redo%E5%9E%8B%E6%97%A5%E5%BF%97%E5%8F%8A%E5%85%B6%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">2305 Redo型日志及其故障恢复</h3><h4 id="%EF%BC%881%EF%BC%89redo%E5%9E%8B%E6%97%A5%E5%BF%97%E7%9A%84%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E8%A7%84%E5%88%99" tabindex="-1">（1）Redo型日志的日志记录规则</h4><ul><li><p>Undo型日志的问题“将事务改变的所有数据写入磁盘前不能提交该事务”<br>Redo型日志记录信息：</p></li><li><p>对于任一事务T，按下列顺序向磁盘输出T的日志信息</p><ul><li>首先 T,x,v被写入到日志中</li><li>其次，COMMIT T被写到日志中</li><li>最后，OUTPUT(X)</li></ul></li><li><p>注意：redo型日志保留新值，T,x,v，v为更新后的值</p></li><li><p>与undo型的差别，往后两步，先写提交记录输出，还是先输出再写提交记录</p></li></ul><h4 id="%EF%BC%882%EF%BC%89%E5%88%A9%E7%94%A8redo%E6%97%A5%E5%BF%97%E8%BF%9B%E8%A1%8C%E6%81%A2%E5%A4%8D" tabindex="-1">（2）利用redo日志进行恢复</h4><ul><li>首先，确定每一个事务是否已经完成<ul><li>start T,commit T = yes</li><li>start T,abort T = no（已结束，但未完成）</li><li>start T… = no</li></ul></li><li>从日志的起始位置开始按日志记录的正序处理每一日志记录，重做已经提交事务的所有修改<ul><li>commit t：标记t已经完成</li><li>abort t：标记t已结束但未完成</li><li>t，x，v：如果t已经完成，则将x=v写回磁盘，否则跳过</li><li>start t：跳过</li></ul></li></ul><h4 id="%EF%BC%883%EF%BC%89%E6%A3%80%E6%9F%A5%E7%82%B9%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8" tabindex="-1">（3）检查点及其应用</h4><ul><li><p>静态检查点（同Undo）</p></li><li><p>非静态检查点</p><ul><li>再进行检查点设置时不必关闭系统，允许新事务进入</li><li>写入一条 start ckpt(t1,…tk)，其中t1,…tk是所有活跃的未结束的事务</li><li>将所有已提交的事务写回磁盘</li><li>继续正常的操作，直到t1,…tk都完成时，写入end ckpt</li></ul></li><li><p>step1：寻找到最后的end ckpt</p></li><li><p>step2：从start ckpt里的事务的最早开始处开始恢复，忽略更早的提交事务</p></li></ul><h3 id="2306-undo%2Fredo%E7%BB%93%E5%90%88%E5%9E%8B%E6%97%A5%E5%BF%97%E5%8F%8A%E5%85%B6%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D" tabindex="-1">2306 Undo/Redo结合型日志及其故障恢复</h3><h4 id="%EF%BC%881%EF%BC%89%E5%8D%95%E7%A7%8D%E6%97%A5%E5%BF%97%E7%9A%84%E9%97%AE%E9%A2%98" tabindex="-1">（1）单种日志的问题</h4><ul><li>Undo型日志<ul><li>OUTPUT必须先做</li><li>如果 COMMIT T 可见，T确定地已经将所有其数据写回磁盘，因此不必重做</li><li>但可能引起性能下降（因为频繁的写磁盘）</li></ul></li><li>Redo型日志<ul><li>OUTPUT必须后做</li><li>如果 COMMIT T不可见，T确定地没有将任何数据写回到磁盘，因此无需撤销</li><li>但灵活性差，数据必须在COMMIT后才可见</li></ul></li><li>更好地—Undo/Redo 型日志</li></ul><h4 id="%EF%BC%882%EF%BC%89undo%2Fredo%E7%BB%93%E5%90%88%E5%9E%8B%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E8%A7%84%E5%88%99" tabindex="-1">（2）Undo/Redo结合型日志记录规则</h4><ul><li>对于任一事务T，按下列顺序向磁盘输出T的日志信息<ul><li>第一步，&lt;T,X,u,v&gt;被写到磁盘中</li><li>第二步，COMMIT T 或 OUTPUT T 都可以</li></ul></li><li>Undo/Redo结合型日志既保留新值v，也有旧值u。</li></ul><h4 id="%EF%BC%883%EF%BC%89undo%2Fredo%E7%BB%93%E5%90%88%E5%9E%8B%E6%97%A5%E5%BF%97%E8%BF%9B%E8%A1%8C%E6%81%A2%E5%A4%8D" tabindex="-1">（3）Undo/Redo结合型日志进行恢复</h4><ul><li>自前向后地，按日志记录的正序，重做所有已经提交的事务；</li><li>自后向前地，按日志记录地反序，撤销所有未完成事务地修改</li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css"></索引字段值Ki，指针Pi></li>]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;/images/meitu/2.jpg&quot;&gt;
&lt;p&gt;主要观看 &lt;a href=&quot;https://www.bilibili.com/video/BV1VE411h7hq?p=176&amp;amp;vd_source=240b8edf72530a8ec2d9f48cc65</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>数据库试验--PostgreSQL源码分析--遗传算法的使用</title>
    <link href="http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E6%95%B0%E6%8D%AE%E5%BA%93PostgreSQL%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E6%95%B0%E6%8D%AE%E5%BA%93PostgreSQL%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2023-08-16T13:48:11.652Z</published>
    <updated>2023-04-12T07:15:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><img src="/images/meitu/5.jpg"><p><a href="https://github.com/postgres/postgres.git">源码地址</a></p><h2 id="1-postgresql%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84" tabindex="-1">1 PostgreSQL的体系结构</h2><p>PostgreSQL数据库由连接管理系统(系统控制器)、编译执行系统、存储管理系统、事务系统、系统表五大部分组成</p><ul><li>连接管理系统接受外部操作对系统的请求，对操作请求进行预处理和分发，起系统逻辑控制作用</li><li>编译执行系统由查询编译器、查询执行器组成，完成操作请求在数据库中的分析处理和转化工作，最终实现物理存储介质中数据的操作</li><li>存储管理系统由索引管理器、内存管理器、外存管理器组成，负责存储和管理物理数据，提供对编译查询系统的支持;</li><li>事务系统囱事务管理器、日志管理器、并发控制、锁管理器组成，日志管理器和事务管理器完成对操作请求处理的事务一致性支持，锁管理器和并发控制提供对并发访问数据的一致性支持</li><li>系统表是 PostgreSQL 数据库的元信息管理中心，包括数据库对象信息和数据库管理控制信息,系统表管理元数据信息，将 PostgreSQL 数据库的各个模块有机地连接在一起，形成个高效的数据管理系统。</li></ul><h2 id="2-postgresql%E7%9A%84%E6%9F%A5%E8%AF%A2%E7%BC%96%E8%AF%91%E9%98%B6%E6%AE%B5%E4%B8%AD%E7%9A%84%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95" tabindex="-1">2 PostgreSQL的查询编译阶段中的遗传算法</h2><p>查询处理器是数据库管理系统中的一个部件集合，它允许用户使用 SQL 语言在较高层次上表达查询，其主要职责是将用户的各种命令转化成数据库上的操作序列并执行。查询处理分查询编译和查询执行两个阶段。</p><p>当PostgreSQL 的后台服务进程接收到查询语句后，首先将其传递到查询分析模块，进行词法、语法和语义分析 若是简单的命令(例如建表、创建用户、备份等)则将其分配到功能性命令处理模块;</p><p>对于复杂的命令( SELECT/INSERT/DELETEl UPDA四)则要为其构建查询树( Query 结构体) .然后交给查询重写模块。查询重写模块接收到查询树后，按照该查询所涉及的规则和视图对查询树进行重写，生成新的查询树。</p><p>生成路径模块依据重写过的查询树，考虑关系的访问方式、连接方式和连接顺序等问题，采用动态规划算法或遗传算法，生成最优的表连接路径 最后，由最优路径生成可执行的计划，并将其传递到查询执行模块执行。</p><p>因此PG中的遗传算法的使用主要在生成最优的表链接路径上</p><h2 id="3-%E6%9F%A5%E8%AF%A2%E8%A7%84%E5%88%92%E7%9A%84%E6%80%BB%E4%BD%93%E6%B5%81%E7%A8%8B" tabindex="-1">3 查询规划的总体流程</h2><p>查询规划的最终目的是得到可被执行器执行的最优计划，整个过程可分为预处理、生成路径和生成计划三个阶段。</p><ul><li>预处理实际上是对查询树( Query 结构体)的进一步改造，这种改造可通过 SQL语句体现。在此过程中，最重要的是提升子链接和提升子查询。</li><li>在生成路径阶段，接收到改造后的查询树后，采用动态规划算法或遗传算法，生成最优连接路径和候选的路径链表。</li><li>在生成计划阶段，用得到的最优路径 首先生成基本计划树，然后添加 GROUPBY HAVING ORDER BY 子句所对应的计划节点形成 整计划树</li></ul><h2 id="4-%E8%B7%AF%E5%BE%84%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95" tabindex="-1">4 路径生成算法</h2><p>路径代表了对一个表或者多个表中数据的访问方式。</p><p>由于单个表的访问方式(顺序访问、索引访问)、两个表间的连接方式(嵌套循环连接、归并连接、 Hash 连接)以及多个表间的连接顺序(左连接、右连接和布希连接)都有多种，因此访问 表或多个袤的路径也会有多种，</p><p>每个路径都可能是上述访问方式、连接方式和连接顺序的一种组合。查询执行模块只需要执行效率最高的路径。因此在准备计划时，查询规划器需要考虑所有的路径，并从中挑选出最优的路径来生成执行计划，这个生成并挑选最优路径的工作由路径生成算法完成</p><p>PostgreSQL 中有两种路径生成算法:动态规划算法和遗传算法。</p><p>动态规划算法是生成路径的默认算法，但在某些情况下，检查一个查询所有可能的路径会花去很多的时间和内存空间，特别是所要执行的查询涉及大量的关系的时候。在这种情况下，为了在合理的时间里判断一个合理的执行计划， PostgreSQ 将使用遗传算法生成路径。</p><p>是否启用遗传算法由两个因素决定:</p><ul><li>在系统配置中是否允许使用遗传算法：由全局变量enable_geqo控制，其值来自于配置文件中的 geqo 配置项，默认情况下是允许。</li><li>需要连接的基本关系是否超过使用遗传算法的阈值：由全局变量geqo_threshold 控制，其值来自于配置文件中的geqo_threshold配置选项，<br>默认值是 12 ，即参加连续的基本关系数大于或等于 12 时就会采用遗传算法来生成路径</li></ul><h2 id="5-%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95%E6%A6%82%E8%BF%B0" tabindex="-1">5 遗传算法概述</h2><p>遗传算法 (GA) 是一种种启发式的优化方法 (heuristic optimization method) ，它通过既定的随机搜索进行操作。</p><p>优化问题的可能解的集合被认为是个体(individuals)组成的种群(population).一个个体对它的环境的适应程度由它的适应值(fitness) 。一个个体在搜索空间里的参照物是用染色体(chromosomes)表示的,实际上这是一套字符串。一个基因(gene)是染色体的一个片段，基因是被优化的单个参数的编码。对一个基因的典型的编码 以是二进制 (binary)或整数(integer)。通过仿真进化过程的重组(recombination)、变异(mutation) 和选择(selection )找到新一代的搜索点，它们的平均适应值要比它们的祖先好。</p><p>在PostgreSQL中，遗传算法将路径作为个体，将个体以某种方式编码(个体体现了连接顺序),然后通过重组得到后代，考虑连接代价来计算后代的适应值，再选择合适的后代进行下一次迭代。当到达一定的迭代次数之后，遗传算法终止。选择遗传算法可以减少生成路径的时间，但是遗传算法并不一定能找到&quot;最好&quot;的规划，它只能找到相对较优的路径。</p><h2 id="6-postgresql%E4%B8%AD%E7%9A%84%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95" tabindex="-1">6 PostgreSQL中的遗传算法</h2><p>PostgreSQ 中，遗传算法主要用在连接路径的生成操作中，其流程如下：</p><p><img src="/images/%E6%9C%AC%E7%A7%91/PostgreSQL/GA_process.jpg" alt="GA_process"></p><h3 id="%EF%BC%881%EF%BC%89%E4%B8%AA%E4%BD%93%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F%E5%8F%8A%E7%A7%8D%E7%BE%A4%E5%88%9D%E5%A7%8B%E5%8C%96" tabindex="-1">（1）个体编码方式及种群初始化</h3><p>PG中用遗传算法解决表连接的问题的方式类似于TSP问题。可能的连接路径被当作整数串进行编码。v每个穿代表查询中的一种可能的连接顺序。</p><p>如下图的查询书可以用整数串<code>&quot;4132&quot;</code>编码,即首先连接表&quot;4&quot;和&quot;1&quot; 得到的结果表再和表 “3” 连接，最后再和&quot;2&quot; 连接。</p><p><img src="/images/%E6%9C%AC%E7%A7%91/PostgreSQL/%E6%9F%A5%E8%AF%A2%E6%A0%911.jpg" alt="查询树"></p><p>遗传算法执行第一步为随机初始化种群。假设种群大小为n，首先随机初始化n个排列树，每一个排列数即是一个个体。然后基于n各排列数生成的基本表的连接路径，在此过程中进行代价评估，将最后的代价作为适应值衡量该个体的优劣。</p><p>每一个个体都用Chromosome结构表示，记录了个体的排列和代价</p><pre><code class="language-c">typedef int Gene;typedef struct Chromosome&#123;    Gene *string;//染色体的数据值    Cost worth;//对染色体的代价评估&#125;//Chromosome</code></pre><h3 id="%EF%BC%882%EF%BC%89%E9%80%82%E5%BA%94%E5%80%BC" tabindex="-1">（2）适应值</h3><p>个体的适应值等于该个体中N个表的连接代价。适应值计算由geqo_eval实现，包括以下步骤：</p><ol><li>检查个体的有效性</li><li>确定个体的连接次序以及连接方式</li><li>计算个体的适应值</li></ol><p>计算个体的适应值时.首先要检查个体是否有效。也就是说，对一个给定的个体，能不能把这个个体中的表按照某种次序连接起来，因为有些表之间是不能连接的。如果一个个体按任何次序都不能连接，那么这么个体是无效的。对于有效的个体，还要确定连续次序和连接方式。在连接次序和连接方式确定之后才能计算个体的</p><h3 id="%EF%BC%883%EF%BC%89%E7%88%B6%E4%BD%93%E9%80%89%E6%8B%A9%E7%AD%96%E7%95%A5" tabindex="-1">（3）父体选择策略</h3><p>附体选择策略是基于排名的选择策略，选择概率函数如下公式。<br>其中max是个体总数，bias默认值是2.0，geo_rand是0.0~1.0之间的随机数，f(geo_rand)表示当前个体在种群中的编号（该编号是根据当前个体的适应值在种群中的排名来确定）。<br>该函数表明，排名越前的个体被选择的概率越大。</p><section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>g</mi><mi>e</mi><mi>o</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.16em" columnalign="right center left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>∗</mo><mfrac><mrow><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mi>A</mi></mrow><mrow><mn>2</mn><mo>∗</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>∗</mo><mfrac><mrow><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><msqrt><mi>A</mi></msqrt></mrow><mrow><mn>2</mn><mo>∗</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>其中</mtext><mo separator="true">,</mo><mi>A</mi><mo>=</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>∗</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mn>4</mn><mo>∗</mo><mo stretchy="false">(</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mi>e</mi><mi>o</mi><mi mathvariant="normal">_</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>d</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex"> f(geo\_rand)=\left\{\begin{array}{rcl}max*\frac{bias-A}{2*bias-1}&amp;&amp; {A&lt;0}\\max*\frac{bias-\sqrt{A}}{2*bias-1}&amp;&amp; {A\geq 0}\\其中,A=bias*bias-4*(bias-1)*geo\_rand\end{array} \right. </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">eo</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.9334em;vertical-align:-1.7167em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.5em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.492em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.016em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.016em" style="width:0.8889em" viewbox="0 0 888.89 16" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V16 H384z M384 0 H504 V16 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.016em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.016em" style="width:0.8889em" viewbox="0 0 888.89 16" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V16 H384z M384 0 H504 V16 H384z"/></svg></span></span><span style="top:-4.3em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2167em;"><span style="top:-4.3832em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">bia</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">bia</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.9332em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0466em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">bia</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">bia</span><span class="mord mathnormal mtight">s</span><span class="mbin mtight">−</span><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9323em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mathnormal mtight">A</span></span></span><span style="top:-2.8923em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1077em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.6899em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord cjk_fallback">其中</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">bia</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">bia</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord mathnormal">bia</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">eo</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">an</span><span class="mord mathnormal">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7167em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2167em;"><span style="top:-4.3832em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"></span></span><span style="top:-2.9332em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5167em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2167em;"><span style="top:-4.3832em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span style="top:-2.9332em;"><span class="pstrut" style="height:3.0466em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5167em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></eqn></section><h3 id="%EF%BC%884%EF%BC%89%E6%9D%82%E4%BA%A4%E7%AE%97%E5%AD%90" tabindex="-1">（4）杂交算子</h3><p>PostgreSQL 中的遗传算法提供 边重组杂交、部分匹配杂交、循环杂交、基于位置的杂交和顺序杂交等多种杂交算子，用于从父辈种群中产生新的后代个体，默认使用的是边重组杂交算法</p><h4 id="a-%E8%BE%B9%E9%87%8D%E7%BB%84%E6%9D%82%E4%BA%A4" tabindex="-1">a 边重组杂交</h4><p>边重组杂交算子自函数gimme_edge_table和gimme_tour实现。函数 gimme_edge_table 用来计算边关系;函数 gimme_tour由边关系得到后代。<br>边重组杂交过程如下：</p><ol><li>两个父体中的基因构成循环队列<br><img src="/images/%E6%9C%AC%E7%A7%91/PostgreSQL/GA_ERX.jpg" alt="查询树"></li><li>确定父体间的边关系<br>在步骤1中的循环队列中，任意一个基因和相邻的基因构成“边关系”。如果某“边关系”同时在父体1和父体2中出现，则称为“共享边”。</li><li>由边关系得到后代<br>边重组杂交的基本思想是:随机地选择一个基因作为起始点，顺着它的边关系找到下一<br>个基因(优先考虑共享边) ，再顺着找到的基因的边关系找到第三个基因，直到找到的基因能够构成一个个体为止，最后将找到的基因按找到的顺序组成一个个体即可。</li></ol><h4 id="b-%E9%83%A8%E5%88%86%E5%8C%B9%E9%85%8D%E6%9D%82%E4%BA%A4" tabindex="-1">b 部分匹配杂交</h4><p>由函数pmx实现，该函数流程如下：</p><ol><li>在字串上均匀随机地选择两点，由这两点确定的子串称为映射段，定义两个整型变量left和right(left&lt; right) 表示选取的映射段的起始边界。</li><li>用父体2的映射段替换父体1的映射段产生原始后代。</li><li>确定两映射段之间的映射关系</li><li>根据映射关系将后代合法化</li></ol><h4 id="c-%E5%BE%AA%E7%8E%AF%E6%9D%82%E4%BA%A4" tabindex="-1">c 循环杂交</h4><p>循环杂交算子由函数 cx 实现，该方法从一个双亲中取一些基因，而其他的基因则取自另外一个双亲。</p><p>该方法首先随机确定一个初始位置，作为当前位置，把父体1当前位置下的基因(即编<br>号)赋值给当前位置下的子代，并标记此基因已被使用 然后推进当前位置到父体2当前位置(未修改前的位置)下的基因在父体1中的位置，同样把父体1当前位置下的基因赋值给当前位置下的子代。<br>同理推进当前位置，生成子代的基因片段，直到循环到初始位置下父体1的基因与父体2中的当前位置下的基因一样时循环结束。如果循环结束后仍有部分基因没有被使用，则将父体2中的这些基因按在父体2中存在的位置赋值到子代中同样位置。</p><h4 id="d-%E5%9F%BA%E4%BA%8E%E4%BD%8D%E7%BD%AE%E7%9A%84%E6%9D%82%E4%BA%A4" tabindex="-1">d 基于位置的杂交</h4><p>基于位置的杂交算子由函数 px 实现，该函数的处理流程如下:</p><ol><li>根据基因数目 gene ，首先随机选择一个区间[gene/3 , 2/3 * gene ]中的整数p,从父体1中随机选择p个基因，设为集合A</li><li>对于在A中的基因，从父体1拷贝到后代中对应的位置上。</li><li>不在A中的基因，按它们在父体2中的顺序拷贝到后代剩余的位置上。</li></ol><h4 id="e-%E9%A1%BA%E5%BA%8F%E6%9D%82%E4%BA%A4ox1" tabindex="-1">e 顺序杂交ox1</h4><p>顺序杂交算子有两种：OX1和OX1。OX1算子由函数 ox1 实现，函数 oxl 的处理流程如下:</p><ol><li>从第一个父体中随机选择一个子串。</li><li>将子串复制到一个空串的相应位置，产生一个原始后代。</li><li>删去第二个父体中子串已有的基因，得到原始后代需要的其他基因的顺序。</li><li>按照这个基因顺序，从左到右将这些基因复制到后代的空缺位置上。</li></ol><h4 id="f-%E9%A1%BA%E5%BA%8F%E6%9D%82%E4%BA%A4ox2" tabindex="-1">f 顺序杂交ox2</h4><p>OX2 算子由函数ox2实现，其处理流程如下:</p><ol><li>根据基因的数目 gene ，随机选择一个 [gene/3 , 2/3 * gene] 之间的整数 ，从父体1中随机选择p个基因，设为集合A</li><li>对于父体2中不在A中基因，拷贝到后代对应的位置中。</li><li>对在A中的基因，按它们在父体 中的顺序依次拷贝到后代剩余的位中。</li></ol><h3 id="%EF%BC%885%EF%BC%89%E5%8F%98%E5%BC%82%E7%AE%97%E5%AD%90" tabindex="-1">（5）变异算子</h3><p>变异算子由函数geqo_mutation实现，该函数随机地从父体中产生两个变异位，交换这两个变异位的数值，执行num_gene(基因数目)次这样的操作。</p><h3 id="%EF%BC%886%EF%BC%89%E7%BB%88%E6%AD%A2%E6%9D%A1%E4%BB%B6" tabindex="-1">（6）终止条件</h3><p>遗传算法采用设定演化代数的方法，但演化到一定数量的代数时，就停止演化。默认的演化代数是种群的大小(pool_size ，缓冲池的大小)。演化代数的计算涉及下面两个参数:</p><ol><li>geqo_effort :整型变量，是用于限制种群大小的影响因子。取值范围是 [1 10 ]，默认值为5</li><li>geqo_pool_size :整型变量 ，表示缓冲池(用于存储种群中的个体)大小.缓冲池的大小和种群大小相同， 其值至少为2</li></ol><p>种群大小(缓冲池的大小) pool_size 由函数伊gimme_pool_size 确定，其参数 nr_rel 为查询中表的数量。计算方法如下:</p><ol><li>计算上限值 maxsize和下限值minsize<br><section><eqn><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mn>50</mn><mo>∗</mo><mi>g</mi><mi>e</mi><mi>q</mi><msub><mi>o</mi><mi>e</mi></msub><mi>f</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>t</mi><mspace linebreak="newline"></mspace><mi>m</mi><mi>i</mi><mi>n</mi><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mn>10</mn><mo>∗</mo><mi>g</mi><mi>e</mi><mi>q</mi><msub><mi>o</mi><mi>e</mi></msub><mi>f</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>t</mi></mrow><annotation encoding="application/x-tex"> maxsize=50*geqo_effort\\minsize=10*geqo_effort </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">50</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">t</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">ff</span><span class="mord mathnormal" style="margin-right:0.02778em;">or</span><span class="mord mathnormal">t</span></span></span></span></span></eqn></section></li><li>计算基准大小<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi><mo>=</mo><mi>p</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mn>2.0</mn><mo separator="true">,</mo><mi>n</mi><msub><mi>r</mi><mi>r</mi></msub><mi>e</mi><mi>l</mi><mo>+</mo><mn>1.0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">size=pow(2.0,nr_rel+1.0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ze</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord">2.0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1.0</span><span class="mclose">)</span></span></span></span></eq></li><li>如果基准大小位于上限值和下限值之间，则取基准大小作为种群大小;如果低于下限值，则取下限值;如果高于上限值，则取上限值</li></ol><h3 id="%EF%BC%887%EF%BC%89%E5%9F%BA%E4%BA%8E%E6%8E%92%E5%88%97%E7%94%9F%E6%88%90%E8%B7%AF%E5%BE%84" tabindex="-1">（7）基于排列生成路径</h3><p>在遗传算法中由排列生成连接路径由以下算法实现</p><p><img src="/images/%E6%9C%AC%E7%A7%91/PostgreSQL/GA_creat_path.jpg" alt="GA_creat_path"></p><p>其中变量rels中保存了按照排列数所对应的各个基本关系（即基本表）。<br>变量rels_temp用来保存当前不可连接的关系。（不可连接指只能用笛卡尔积进行连接）</p><p>该算法的处理过程：</p><p>依次取rels中的所有基本表，在rels_temp中依次寻找可以与其连接的表，如果存在可连接的表，则把这两个表进行连接生成新的表，并从头开始继续在rels_temp中寻找可连接的表，并将其与新生成的表连接，一直到找不到可连接的表位置，最后将最终生成的新表插入rels_temp结尾；继续在rels中取下一个表，重复上述过程。</p><h2 id="7-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90" tabindex="-1">7 源码分析</h2><h3 id="%E6%BA%90%E7%A0%81%E7%9B%AE%E5%BD%95%E5%88%86%E6%9E%90" tabindex="-1">源码目录分析</h3><p>access文件夹包含各种存储访问方法、索引的实现。(重要)<br>bootstrap文件夹为数据库初始化时调用方法。<br>catalog文件夹为系统目录。<br>commands文件夹为SQL命令。(重要)<br>executor文件夹为执行器相关代码。(重要)<br>foreign文件夹为FDW相关代码，使得用户可以通过SQL访问没有存储在数据库中的数据。(扩展)<br>jit文件夹为Just-In-Time Compilation，为即时编译的相关代码，用于提高查询语句性能。（扩展）<br>lib文件夹为通用函数。<br>libpq文件夹为c/cpp的库函数，处理与客户端的通信。<br>main文件夹为主程序。<br>nodes文件夹为链表、节点等数据结构，以及相关的方法。(重要)<br>optimizer文件夹为优化器相关代码。(重要)<br>parser文件夹为编译器相关代码。(重要)<br>partitioning文件夹为分片相关代码。(重要)<br>po文件夹为语言文件配置。<br>port文件夹为平台兼容性处理相关代码。<br>postmaster文件夹为postmaster进程，以及相关辅助进程的代码。<br>regex文件夹为正则处理相关代码。(重要)<br>replication文件夹为有关流复制的相关代码。(重要)<br>rewrite文件夹为规则与视图相关的重写处理。<br>snowball文件夹为全文检索相关（语干处理）代码。<br>statisics文件夹为收集统计信息相关代码，与估算相关。<br>storage文件夹为管理各种类型存储系统相关代码。(重要)<br>tcop文件夹为postgres服务进程的主要处理部分，即查询流程调用的相关代码。(重要)<br>tsearch文件夹为全文检索。(扩展)<br>utils文件夹为各种支持函数，如错误报告、各种初始化操作、内存管理等。</p><p>我的分析任务：PG中遗传算法的使用分析</p><p>在文件src/backend/optimizer/geqo中为<code>遗传优化计划器</code></p><h3 id="src%2Fbackend%2Foptimizer%E7%9B%AE%E5%BD%95%E5%88%86%E6%9E%90" tabindex="-1">src/backend/optimizer目录分析</h3><p>该目录下的文件使用解析器返回的查询结构，生成执行器使用的计划。</p><p>/plan目录生成实际的输出计划<br>/path目录生成所有可能的连接表的方法<br>/geqo目录下位单独的“遗传优化”计划器<br>/prep目录处理特殊情况下的预处理步骤<br>/util目录下为公用的模块</p><h3 id="geqo%E4%B8%8B%E7%9A%84%E4%BB%A3%E7%A0%81%E5%85%B7%E4%BD%93%E5%88%86%E6%9E%90" tabindex="-1">geqo下的代码具体分析</h3><h4 id="(1)-geqo_main.c" tabindex="-1">(1) geqo_main.c</h4><p>其中共有三个函数</p><ul><li><p><code>RelOptInfo * geqo(PlannerInfo *root, int number_of_rels, List *initial_rels)</code><br>该函数为遗传算法优化的主函数，通过调用该函数来用遗传算法生成查询计划。<br>该函数有三个参数</p><ul><li><code>root</code>：PlannerInfo 结构体包含有关正在优化的查询的各种信息，包括涉及的表、连接条件以及可能相关的任何约束或索引。遗传算法使用此信息生成潜在查询计划并评估其适合度。</li><li><code>number_of_rels</code>：这个整数表示正在优化的关系数，即查询中涉及的表数。</li><li><code>initial_rels</code>：这是一个 RelOptInfos 的 List，表示正在优化的初始关系。</li></ul></li></ul><p>函数返回一个指向 RelOptInfo 结构体的指针，该结构体表示遗传算法找到的最佳查询计划。</p><p>随后该函数依次完成：</p><p>初始化数据；获得随机数种子；设置GA相关参数；为缓冲池分配空间；随机初始化缓冲池；并按适应值对缓冲池中的个体进行排序；为重组杂交进行空间分配；进行遗传算的迭代，依次进行选择重组变异；选择最优个体；释放空间；返回最优个体。</p><p>该函数为遗传算法的主要部分，main函数。</p><ul><li><code>static int gimme_pool_size(int nr_rel)</code><br>该函数用于确定缓冲池大小（种群大小）</li><li><code>static int gimme_number_generations(int pool_size)</code><br>从该函数得到迭代次数</li></ul><h4 id="(2)-geqo_misc.c" tabindex="-1">(2) geqo_misc.c</h4><p>该文件下函数主要进行调试使用，对算法中间的结果进行输出</p><ol><li><code>static double avg_pool(Pool *pool)</code><br>返回平均代价值</li><li><code>void print_pool(FILE *fp, Pool *pool, int start, int stop)</code><br>输出当前种群中所有个体的染色体和代价</li><li><code>void print_gen(FILE *fp, Pool *pool, int generation)</code><br>输出某一代基因的最好，最坏，中位数和平均代价值</li><li><code>void print_edge_table(FILE *fp, Edge *edge_table, int num_gene)</code><br>输出边重组杂交的边表</li></ol><h4 id="(3)-geqo_mutation.c" tabindex="-1">(3) geqo_mutation.c</h4><p>只有一个函数，对种群中的个体实施变异操作<br><code>void geqo_mutation(PlannerInfo *root, Gene *tour, int num_gene)</code></p><h4 id="(4)-geqo_pool.c" tabindex="-1">(4) geqo_pool.c</h4><p>该文件中包含与缓冲区的相关函数</p><ol><li><code>Pool * alloc_pool(PlannerInfo *root, int pool_size, int string_length)</code><br>为遗传算法缓冲器分配空间</li><li><code>void free_pool(PlannerInfo *root, Pool *pool)</code><br>释放1函数中分配的空间</li><li><code>voidrandom_init_pool(PlannerInfo *root, Pool *pool)</code><br>随机初始化缓冲池</li><li><code>void sort_pool(PlannerInfo *root, Pool *pool)</code><br>从小到大按适应度排序缓冲池中的个体</li><li><code>static int compare(const void *arg1, const void *arg2)</code><br>排序的方法，源码中使用快速排序算法</li><li><code>Chromosome * alloc_chromo(PlannerInfo *root, int string_length)</code><br>为个体分配空间</li><li><code>void free_chromo(PlannerInfo *root, Chromosome *chromo)</code><br>释放为个体分配的空间</li><li><code>void spread_chromo(PlannerInfo *root, Chromosome *chromo, Pool *pool)</code><br>插入一个新的个体到缓冲池中，代替缓冲池中的最差的个体</li></ol><h4 id="(5)-geqo_random.c" tabindex="-1">(5) geqo_random.c</h4><p>该文件用来产生随机数，含有三个函数</p><ol><li><code>void geqo_set_seed(PlannerInfo *root, double seed)</code><br>设置GEQO随机数生成器的种子，以确保每次运行GEQO时使用相同的随机数序列</li><li><code>double geqo_rand(PlannerInfo *root)</code><br>函数使用了简单的线性同余算法来生成伪随机数。该函数返回一个范围在 0 到 1 之间的双精度浮点数</li><li><code>int geqo_randint(PlannerInfo *root, int upper, int lower)</code><br>函数的作用是生成一个介于 upper 和 lower 之间的随机整数。</li></ol><h4 id="(6)-geqo_selection.c" tabindex="-1">(6) geqo_selection.c</h4><p>该文件内进行父体选择</p><ol><li><code>static int linear_rand(PlannerInfo *root, int pool_size, double bias)</code><br>该函数实现线性随机选择算法,使用了类似于概率密度函数的方法，其中偏差参数用于增加某些候选项被选择的概率,用于选择父代来产生后代。</li><li><code>void geqo_selection(PlannerInfo *root, Chromosome *momma, Chromosome *daddy,Pool *pool, double bias)</code><br>该函数使用随机选择过程来选择两个父染色体进行交叉。</li></ol><h4 id="(7)-geqo_copy.c" tabindex="-1">(7) geqo_copy.c</h4><p>该文件内只有一个函数<code>void geqo_copy(PlannerInfo *root, Chromosome *chromo1, Chromosome *chromo2,int string_length)</code>,用来复制个体</p><h4 id="(8)-%E5%87%A0%E4%B8%AA%E6%9D%82%E4%BA%A4%E7%AE%97%E5%AD%90%E6%96%87%E4%BB%B6" tabindex="-1">(8) 几个杂交算子文件</h4><ul><li>geqo_cx.c 循环杂交<br>包含函数<code>int cx(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring,int num_gene, City * city_table)</code></li><li>geqo_erx.c 边重组杂交,包含以下函数<ul><li><code>Edge * alloc_edge_table(PlannerInfo *root, int num_gene)</code>为边表分配空间</li><li><code>void free_edge_table(PlannerInfo *root, Edge *edge_table)</code>释放边表空间</li><li><code>float gimme_edge_table(PlannerInfo *root, Gene *tour1, Gene *tour2, int num_gene, Edge *edge_table)</code>填充记录两个个体间的边的数据结构</li><li><code>static int gimme_edge(PlannerInfo *root, Gene gene1, Gene gene2, Edge *edge_table)</code>从给定基因中构建一条边并将其加入边表</li><li><code>int gimme_tour(PlannerInfo *root, Edge *edge_table, Gene *new_gene, int num_gene)</code>通过边表和基因返回一条可行的路径长度</li><li><code>static void remove_gene(PlannerInfo *root, Gene gene, Edge edge, Edge *edge_table)</code>从边表中移除该基因</li><li><code>static Gene gimme_gene(PlannerInfo *root, Edge edge, Edge *edge_table)</code>从给定的边表中返回一个基因</li><li><code>static Gene edge_failure(PlannerInfo *root, Gene *gene, int index, Edge *edge_table, int num_gene)</code>当遇到失败的边缘时，对基因进行修复</li></ul></li><li>geqo_pmx.c 部分匹配杂交<br>包含函数<code>void pmx(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring, int num_gene)</code></li><li>geqo_ox1.c 顺序杂交1<br><code>void ox1(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring, int num_gene,City * city_table)</code></li><li>geqo_ox1.c 顺序杂交2<br><code>voidox2(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring, int num_gene, City * city_table)</code></li><li>geqo_px.c 基于位置的杂交<br><code>void px(PlannerInfo *root, Gene *tour1, Gene *tour2, Gene *offspring, int num_gene,City * city_table)</code></li></ul><h4 id="(9)-geqo_eval.c" tabindex="-1">(9) geqo_eval.c</h4><p>该文件对查询树进行估价</p><ul><li><code>Cost geqo_eval(PlannerInfo *root, Gene *tour, int num_gene)</code><br>返回一个个体的查询树的代价</li><li><code>RelOptInfo * gimme_tree(PlannerInfo *root, Gene *tour, int num_gene)</code>接收一个查询优化器（PlannerInfo）的指针和一组遗传算法的基因（Gene），然后返回一个查询优化树（RelOptInfo）。</li><li><code>static List * merge_clump(PlannerInfo *root, List *clumps, Clump *new_clump, int num_gene,bool force)</code>作用是合并一个新的数据块（new_clump）到一个包含多个数据块的列表中（clumps），并返回合并后的列表。参数 num_gene 表示数据块中基因的数量，而参数 force 用于控制是否强制进行合并。</li><li><code>static bool desirable_join(PlannerInfo *root,RelOptInfo *outer_rel, RelOptInfo *inner_rel)</code>用于确定是否应该对两个关系进行连接，这两个关系分别由 outer_rel 和 inner_rel 表示，其确定连接是否可行是基于多个因素，如连接的预估成本和选择性等</li></ul><h4 id="(10)-geqo_recombination.c" tabindex="-1">(10) geqo_recombination.c</h4><p>该文件为杂交重组程序，包含以下函数</p><ul><li><code>void init_tour(PlannerInfo *root, Gene *tour, int num_gene)</code>随机生成一条合法的“旅行推销员”路径（即每个点仅访问一次）</li><li><code>City * alloc_city_table(PlannerInfo *root, int num_gene)</code>为城市表分配内存</li><li><code>void free_city_table(PlannerInfo *root, City * city_table)</code>为城市表回收内存</li></ul><h2 id="8-%E6%80%BB%E7%BB%93" tabindex="-1">8 总结</h2><p>本次数据库实验我主要对PostgreSQL源码中的遗传算法部分进行了分析，分析了源码中该部分的具体函数，并了解了遗传算法在PG中的工作流程，如果之后有空，希望能研习全部的PG源码。</p><p>源码中遗传算法用于寻找最优的生成路径，这一点与TSP问题相似。</p><p>当点数过多时，使用动态规划难以求出最优解，这时就可以使用遗传算法较快地求出较优解来生成路径，提升了查询编译地速度。</p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;img src=&quot;/images/meitu/5.jpg&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/postgres/postgres.git&quot;&gt;源码地址&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-postgresql%E7%9A%8</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>操作系统试验--在linux环境下复现操作系统</title>
    <link href="http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AF%95%E9%AA%8C/"/>
    <id>http://example.com/2023/08/16/%E6%9C%AC%E7%A7%91/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%AF%95%E9%AA%8C/</id>
    <published>2023-08-16T13:48:11.649Z</published>
    <updated>2023-05-23T15:58:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><img src="/images/meitu/4.jpg">本次操作系统实验根据`Orange's 一个操作系统的实现`一书进行操作。在此记录试验的过程及心得<h2 id="%E7%AC%AC%E4%B8%80%E7%AB%A0%26%E7%AC%AC%E4%BA%8C%E7%AB%A0-hello%EF%BC%8Cos-world" tabindex="-1">第一章&amp;第二章 Hello，OS world</h2><p>这两章通过在windows使用虚拟机运行Ubuntu操作系统，在Ubuntu上使用bochs虚拟机来完成操作系统。</p><h3 id="1-%E4%BD%BF%E7%94%A8vm%E8%BF%90%E8%A1%8Cubuntu" tabindex="-1">1 使用vm运行Ubuntu</h3><p>我这里虚拟机运行的是Ubuntu20.04，但因为这本书是老书了，64位机运行结果会有问题，因此还是用了Ubuntu16.04的32位虚拟机,安装虚拟机时主要遇到的问题有：</p><ol><li>虚拟机连不上网，但在瞎搞之后能连上了，选择的时NAT连接</li><li>VM Tools 自动安装不上，会报错。VMtools可以实现Windows环境和Linux环境直接的文件交换，还是有必要安装的。解决方法是手动下载VM Tools，尽管之后还会报错，但已经能实现文件互通。</li></ol><h3 id="2-%E5%9C%A8ubuntu%E4%B8%AD%E4%BD%BF%E7%94%A8bochs" tabindex="-1">2 在Ubuntu中使用bochs</h3><p>我这里是在<a href="https://bochs.sourceforge.io/">官网</a>下载的安装包，版本是<a href="https://sourceforge.net/projects/bochs/files/bochs/2.7/bochs-2.7.tar.gz/download">2.7</a><br>之后参考书上和网上的一些博客进行安装，主要参考<a href="https://blog.csdn.net/weixin_49635198/article/details/126831887">博客</a><br>这里建议新建一个文件夹解压压缩包<br>使用命令<code>tar vxzf bochs-2.7.tar.gz</code>解压<br>之后使用命令<code>cd bochs-2.7</code>进入该文件夹<br>之后进行配置<br>输入命令<code>./configure --prefix=$home/你解压的地址 --enable-debugger --enable-disasm --enable-iodebug --enable-x86-debugger --with-x --with-x11</code><br>配置时可能遇到问题</p><ol><li>fatal error: X11/Xlib.h: No such file or directory<br>这里表示x11没有安装完整，输入：<code>sudo apt-get install libghc-x11-dev</code>即可</li><li>Ubuntu 编译提示 configure: error: no acceptable C compiler found in $PATH<br>这是没有安装 C 编译器,通过命令<code>sudo apt-get install -y build-essential</code>下载一些必要环境即可</li></ol><p>随后依次使用命令<code>make</code>和<code>sudo make install</code></p><p>这两个命令执行过程中我没有遇到什么问题，如果有遇到的话还请自己搜搜。</p><p>之后返回上一级目录，可以发现多了两个文件bin和share文件夹。</p><p>之后进入bin文件夹里面可以看到bximage和bochs两个文件，前者用来创建虚拟磁盘，或者用来配置虚拟机。</p><p>接下来让我们配置bochs文件，进入bin文件，输入命令<code>sudo gedit bochsrc</code>创建bochsrc配置文件，向该文件中输入以下代码进行虚拟机配置（直接复制粘贴即可）</p><pre><code class="language-asm">################################################################ Configuration file for Bochs################################################################ how much memory the emulated machine will havemegs: 32# filename of ROM imagesromimage: file=/home/mr-cold/boch/share/bochs/BIOS-bochs-latestvgaromimage: file=/home/mr-cold/boch/share/bochs/VGABIOS-lgpl-latest# what disk images will be used floppya: 1_44=a.img, status=inserted# choose the boot disk.boot: floppy# where do we send log messages?log: bochsout.txt# disable the mousemouse: enabled=0# enable key mapping, using US layout as default.#keyboard_mapping: enabled=1, map=/home/mr-cold/boch/share/bochs/keymaps/x11-pc-us.map</code></pre><p>之后在bin文件夹下输入<code>bochs -f bochsrc</code>即可运行虚拟机，选择6开始模拟，之后输入c即可显示交互命令行界面<br><img src="/images/本科/OS实验/bochs_1.jpg"><br><img src="/images/本科/OS实验/bochs_2.jpg"><br><img src="/images/本科/OS实验/bochs_3.jpg"><br>在上图中，报错是因为我们还没有驱动磁盘，在bochsrc的配置代码中我们可以看到该虚拟机配备软盘floppy为a.img，那么接下来我们就要创建一个软盘去实现一个最小的操作系统</p><h3 id="3-%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" tabindex="-1">3 最简单的操作系统</h3><p>我们首先创建一个虚拟软盘(硬盘应该也可以，书中为软盘，毕竟是09年老书)。命令<code>bximage</code><br>随后依据提示创建一个1.44MB的软盘，同时将bochsrc中<code>floppya: 1_44=a.img, status=inserted</code>中的软盘改为你创建磁盘的名字，这将是虚拟机的磁盘。</p><p>随后实现书中的boot.asm(可以直接从书附带磁盘复制出来，磁盘从学校云图书馆即可下载)：通过<code>basm boot.asm -o boot.bin</code>将asm文件转为bin文件(asm文件即汇编文件，bin文件即二进制文件)</p><pre><code class="language-asm"> org 07c00h   ; 告诉编译器程序加载到7c00处 mov ax, cs mov ds, ax mov es, ax call DispStr   ; 调用显示字符串例程 jmp $   ; 无限循环DispStr: mov ax, BootMessage mov bp, ax   ; ES:BP = 串地址 mov cx, 16   ; CX = 串长度 mov ax, 01301h  ; AH = 13,  AL = 01h mov bx, 000ch  ; 页号为0(BH = 0) 黑底红字(BL = 0Ch,高亮) mov dl, 0 int 10h   ; 10h 号中断 retBootMessage:  db &quot;Hello, OS world!&quot;times  510-($-$$) db 0 ; 填充剩下的空间，使生成的二进制代码恰好为512字节dw  0xaa55    ; 结束标志</code></pre><p>这里的boot文件即是引导扇区，其作用是将loader模块调入内存，且大小固定为512B，默认在磁盘的第一个扇区。</p><p>将生成的bin文件放入bochs虚拟机的文件夹。使用命令<code>dd if=boot.bin of=a.img bs=512 count=1 conv=notrunc</code>将bin文件写入软盘的第一个扇区，这里<code>conv=notrunc</code>不能删去，否则软盘会被截断(变为bin文件的大小)</p><ul><li><code>dd if=boot.bin of=a.img bs=512 count=1 conv=notrunc</code>这句话是一个命令行指令，作用是将文件boot.bin复制到a.img中的第一个扇区（512字节），覆盖原有内容而不追加。其中：<ul><li>dd：一个Linux/Unix系统下的复制工具。</li><li>if：输入文件的路径。</li><li>of：输出文件的路径。</li><li>bs：每次复制的块大小，这里是512字节。</li><li>count：复制的块数，这里是1个块（即512字节）。<br>-conv：转换选项，这里是不做任何转换（notrunc）。</li></ul></li></ul><p>随后即可运行bochs虚拟机，使用指令<code>bochs -f bochsrc</code>。</p><p>结果：视窗第一行显示<code>Hello, OS world!</code><br><img src="/images/本科//OS实验/bochs_4.jpg"></p><h2 id="%E7%AC%AC%E4%B8%89%E7%AB%A0-%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F" tabindex="-1">第三章 保护模式</h2><h3 id="3.1-%E8%AE%A4%E8%AF%86%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F" tabindex="-1">3.1 认识保护模式</h3><h4 id="%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83" tabindex="-1">保护模式的运行环境</h4><ol><li>从<a href="bochs.sourceforge.net/guestos/freedos-img.tar.gz">网站</a>得到FreeDOS压缩包</li><li>解压后将文件夹中的a.img重命名为freedos.img仿佛bochs虚拟机的工作目录中</li><li>使用bximage创建虚拟磁盘pm.img</li><li>修改当前bochsrc的配置文件，增加如下几行<br>floppya: 1_44=“freedos.img”, status=inserted<br>floppyb: 1_44=“pm.img”, status=inserted<br>boot: a （这里即选择bochs虚拟机的驱动磁盘）</li><li>启动bochs虚拟机，随后再终端输入 <code>format b:</code>格式化B盘</li><li>从附书磁盘中获取pmtest1.asm，挂载到软驱pm.img中<br>注意将pmtest1.asm代码第8行中07c00h改为0100h，否则最后结果无法显示<br><code>nasm pmtest1.asm -o pmtest.com</code><br><code>sudo mount -o loop pm.img /mnt/floppy/</code><br><code>sudo cp pmtest1.com /mnt/floppy/</code><br><code>sudo umount /mnt/floppy/</code></li><li>启动bochs虚拟机，即启动freedos，输入<code>dir b:</code>可查看软盘B中的内容</li><li>输入<code>b:pmtest1.com</code>即可运行该文件，可以看到以下效果<br><img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/3_1_1.jpg" alt="3_1_1"></li></ol><h4 id="%E5%AE%9E%E6%A8%A1%E5%BC%8F%E5%92%8C%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F" tabindex="-1">实模式和保护模式</h4><ul><li><p>CPU的实模式和保护模式是两种不同的工作状态，这两种工作状态主要用于控制CPU的访问内存和外设的方式。</p></li><li><p>实模式是CPU最初的工作状态，也是最基本的工作状态。在实模式下，CPU可以<code>直接访问内存和外设</code>，但只能使用16位的地址总线和处理器寄存器，因此内存地址的范围只能是从0到1MB。此外，在实模式下，CPU不提供对内存的保护，程序可以随意访问内存，这可能会导致内存损坏或数据丢失。</p></li><li><p>保护模式是CPU的一种高级工作状态，它提供了更高的性能和更强的内存保护。在保护模式下，CPU可以使用32位的地址总线和处理器寄存器，从而可以访问4GB的内存空间。此外，保护模式可以提供多任务处理、虚拟内存、安全性等高级功能。</p></li><li><p>在保护模式下，CPU将内存划分为许多不同的段，每个段都有自己的段描述符，用于描述该段的访问权限、基地址和长度等信息。这些段描述符是存储在内存中的数据结构，由操作系统来管理和维护。CPU访问内存时，必须遵循这些段描述符的规则，如果访问了不允许的内存区域，CPU会触发异常并终止程序的执行，从而实现了内存的保护。</p></li><li><p>为什么会有实模式？</p><ul><li>实模式最初是设计用于早期的计算机系统，在这种模式下CPU可以直接访问物理内存和外设，这种简单的访问方式可以更容易地与早期的操作系统和应用程序相兼容。但是，实模式存在许多限制，如只能使用16位的地址总线和处理器寄存器，内存保护不足等问题，这些限制已经不能满足现代计算机系统的需求。</li><li>为了满足计算机系统日益增长的复杂性和安全性需求，保护模式应运而生。保护模式提供了更多的功能和特性，如内存保护、多任务处理、虚拟内存等，这些特性使得操作系统和应用程序可以更好地控制和保护计算机系统的资源和数据，同时也提高了系统的性能和安全性。</li></ul></li><li><p>为什么现在还要有实模式到保护模式的转换，实模式不是早期计算机的吗？</p><ul><li>实模式虽然是最早的CPU工作模式之一，但是在一些情况下仍然需要将CPU从实模式切换到保护模式。主要原因有以下几个：<ul><li><ol><li>兼容性：一些操作系统或应用程序仍然需要在实模式下运行。例如，一些老旧的DOS程序和BIOS固件仅支持实模式，无法在保护模式下正常运行（这个应该是主要原因）。</li></ol></li><li><ol start="2"><li>引导程序：操作系统的引导程序（Bootloader）通常运行在实模式下，当引导程序加载完毕后，会切换到保护模式，以便操作系统可以更好地管理系统资源和内存。</li></ol></li><li><ol start="3"><li>性能：一些特殊场景需要CPU在实模式下运行，以获取更好的性能。例如，在一些嵌入式系统或低级别的驱动程序中，可能需要直接访问硬件设备或内存地址，这时可以选择在实模式下运行。</li></ol></li><li><ol start="4"><li>调试：在进行系统调试和开发过程中，将CPU从实模式切换到保护模式可以提供更丰富的调试信息和工具支持，帮助开发人员更好地进行调试和优化。</li></ol></li></ul></li></ul></li></ul><h4 id="gdt(global-descriptor-table)" tabindex="-1">GDT(Global Descriptor Table)</h4><ul><li><p>在IA32下，CPU有两种工作模式：实模式和保护模式。</p></li><li><p>保护模式下，CPU有着强大的寻址能力吗，并为强大的32为操作系统提供了更好的硬件基础。</p></li><li><p>GDT的作用是用来提供段式存储机制，这种机制是通过寄存器和GDT中的描述符共同提供的。</p></li><li><p>在实模式下，由于早期CPU为16位，其有着16位的寄存器，16位的数据总线，但有20位的地址总线，因此物理地址遵循的计算公式<eq><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>物理地址</mtext><mo>=</mo><mtext>段值</mtext><mo>∗</mo><mn>16</mn><mo>+</mo><mtext>偏移</mtext></mrow><annotation encoding="application/x-tex">物理地址 = 段值*16+偏移</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">物理地址</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">段值</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">16</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">偏移</span></span></span></span></eq>，相当于将段值左移4位再加上偏移，且段值和便宜都是16位的。</p></li><li><p>在CPU进入32位时代后，寄存器和地址线均为32位，但段值这一手段并没有被抛弃，此时引入实模式向保护模式的转变，保护模式下依然采用&quot;段：偏移&quot;这样的形式来表示，但保护模式下“段”的概念发生根本性的变化。</p><ul><li>实模式下，段值可以看作地址的一部分，从物理地址的计算公式可以看出</li><li>保护模式下，段值仅变为一个索引，这个索引指向一个数据结构的一个表项，表项中详细定义了段的起始地址，界限，属性等内容。这个数据结构，就是GDT（也可以是LDT）。GDT的表项也叫描述符(Descripter)。GDT即为全局描述符表。</li><li>因此GDT的作用是提供段式存储机制，这种机制是通过段寄存器和GDT中的描述符共同提供的</li></ul></li><li><p>下图为代码段和数据段描述符示例,此外还有系统段描述符和门描述符<br><img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/GDT0.jpg" alt="GDT0.jpg"></p></li><li><p>选择子结构，当TI个PRL都为0时，选择子就变成了对应描述符相当于GDT基址的偏移。<br><img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/%E9%80%89%E6%8B%A9%E5%AD%90.jpg" alt="选择子"></p></li><li><p>在保护模式下，寻址方式如下<img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E5%AF%BB%E5%9D%80.jpg" alt="保护模式下的寻址"></p></li></ul><h4 id="%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E7%9A%84%E4%B8%BB%E8%A6%81%E6%AD%A5%E9%AA%A4" tabindex="-1">进入保护模式的主要步骤</h4><ol><li>准备GDT</li><li>用lgdt加载gdtr</li><li>打开A20</li><li>置cr0的PE位</li><li>跳转，进入保护模式</li></ol><h4 id="%E6%8F%8F%E8%BF%B0%E7%AC%A6%E5%B1%9E%E6%80%A7" tabindex="-1">描述符属性</h4><ul><li>一致代码段，一致：<ul><li>当转移目标是一个特权级更高的一直代码段，当前特权级会被延续下去</li><li>而目标是一个特权级更高的非一致代码段，会引起常规保护错误，除非是用调用门或者任务门</li><li>目标代码的特权级低，都不能通过call或者jmp转移进去</li></ul></li></ul><p>||特权级低-&gt;高|特权级高-&gt;低|相同特权级之间|适用于何种代码<br>|-|-|-|-|<br>|一致代码段|Y|N|Y|不访问受保护的资源和某些类型的异常处理的系统代码<br>|非一致代码段|N|N|Y|避免特权级的程序访问而被保护起来的系统代码<br>|数据段（总是非一致）|N|Y|Y|</p><h3 id="3.2-%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E8%BF%9B%E9%98%B6" tabindex="-1">3.2 保护模式进阶</h3><h4 id="ldt-(local-descriptor-table)" tabindex="-1">LDT (Local Descriptor Table)</h4><ul><li>LDT（Local Descriptor Table）局部描述符表，与GDT差不多，但选择子的TI位必须置为1。在运用它时，需要先使用lldt指令加载ldtr，lldt的操作数是GDT中用来描述LDT的描述符1</li><li>保护模式中“保护”二字的含义<ul><li>在描述符中段基址和段界限定义了一个段的范围，对超越段界限之外的地址访问是被禁止的，这是对段的一种保护</li><li>同时复杂的段属性对一个端的各个方面的定义规定限制了段的行为和性质，这算是一种功能保护</li></ul></li></ul><h4 id="%E7%89%B9%E6%9D%83%E7%BA%A7%E6%A6%82%E8%BF%B0" tabindex="-1">特权级概述</h4><ul><li><p>特权级</p><ul><li>在IA32的分段机制中，特权级共有4个级别，从高到低位0，1，2，3</li><li>处理器通过识别CPL，DPL，RPL这三种特权级进行特权级检验<ul><li>CPL：当前执行的程序或任务的特权级</li><li>DPL：表示段或者门的特权级</li><li>RPL：请求优先级</li></ul></li><li>特权级转移：通过jmp或call进行直接转移</li></ul></li><li><p>门：也是一种描述符，可以分为四种</p><ul><li>调用门：本质上为入口地址，但可以用来实现不同特权级代码之间的转移<ul><li>使用调用门的过程分为两个部分：</li><li><ol><li>一部分是从低特权级到高特权级，通过调用门和call指令实现</li></ol></li><li><ol start="2"><li>另一部分是从高特权级到低特权级，通过ret指令来实现</li></ol></li></ul></li><li>终端门</li><li>陷阱门</li><li>任务门</li></ul></li><li><p>TSS(Task-State Stack)</p><ul><li>TSS是一个数据结构，用于存储任务的状态信息，TSS通常与任务切换和任务管理相关联，它存储了任务的上下文、特权级别和其他与任务执行相关的信息。<ol><li>任务切换：TSS用于在任务间进行切换。当处理器从一个任务切换到另一个任务时，它会保存当前任务的上下文信息到当前任务的TSS中，然后加载新任务的上下文信息从新任务的TSS中。这个过程通常由操作系统的调度器管理。</li><li>上下文信息：TSS中存储了任务的上下文信息，包括通用寄存器、段寄存器、控制寄存器、指令指针等。在任务切换时，处理器会保存当前任务的上下文到TSS中，并在切换到新任务时加载新任务的上下文。</li><li>特权级别：TSS中也包含了任务的特权级别信息，即任务执行时所处的特权级别。这是由特权级别字段（CPL，Current Privilege Level）指示的，它决定了任务对系统资源的访问权限。</li><li>任务管理：TSS也可以用于任务管理，其中每个任务都有一个唯一的TSS。任务管理器可以使用TSS来管理任务的状态、上下文和特权级别。</li></ol></li></ul></li></ul><h3 id="3.3-%E9%A1%B5%E5%BC%8F%E5%AD%98%E5%82%A8" tabindex="-1">3.3 页式存储</h3><ul><li><ol><li>什么叫做页？<br>所谓页，就是一块内存。</li></ol></li><li><ol start="2"><li>逻辑地址，线性地址，物理地址<br>在未打开分页机制前，线性地址等同于物理地址，可以理解为逻辑地址通过分段机制直接转换为物理地址。<br>当分页开启后，分段机制将逻辑地址转换为线性地址，线性地址再通过分页机制转换成物理地址。</li></ol></li><li><ol start="3"><li>为什么分页？<br>其主要目的是实现虚拟存储器，线性地址的任何一个页都可以映射到物理地址中的任何一个页，这使得内存管理变得相当灵活。</li></ol></li><li><p>PDE页目录表，PTE页表</p></li></ul><h3 id="3.4-%E4%B8%AD%E6%96%AD%E5%92%8C%E5%BC%82%E5%B8%B8" tabindex="-1">3.4 中断和异常</h3><ul><li><p>IDT：中断描述符表，描述符可以是以下三种</p><ul><li>中断门描述符</li><li>陷阱门描述符</li><li>任务门描述符</li></ul></li><li><p>IDT作用是将每一个中断向量和一个描述符对应起来，IDT也是一种向量表</p></li><li><p>异常的三种类型</p><ul><li>Fault错误：可被更正的异常，且被更正后，程序可以不失连续性地执行</li><li>Trap陷阱：发生trap地指令执行后立即被报告的异常</li><li>Abort异常：不总是报告异常发生位置的异常，不允许程序或任务继续执行，用来报告严重错误</li></ul></li><li><p>中断产生的原因有两种</p><ul><li>一种是外部中断，即由硬件产生的中断</li><li>另一种是由指令 int n 产生的中断，n即为向量号</li></ul></li></ul><h3 id="3.5-%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84i%2Fo" tabindex="-1">3.5 保护模式下的I/O</h3><p>IOPL和IO许可位图</p><h3 id="3.6-%E5%B0%8F%E7%BB%93" tabindex="-1">3.6 小结</h3><p>保护模式有以下几方面含义：</p><ul><li>在GDT，LDT以及IDT中，每个描述符都有自己的界限和属性等内容，是对描述符所描述对象的一种限定和保护</li><li>分页机制中的PDE和PTE都含有R/W以及U/S位，提供了页级保护</li><li>也是存储的使用使应用程序使用的是线性地址空间而不是物理地址，于是物理内存就被保护起来</li><li>终端不再像实模式下一样使用，也提供特权检验等内容</li><li>I/O指令不再随便使用，于是被端口保护起来</li><li>在程序运行过程中，如果遇到不同特权级间的访问等情况，会对CPL，RPL，DPL，IOPL等内容进行严格的检验，同时可能伴随堆栈的切换，这都对不同层级的程序进行了保护</li></ul><h2 id="%E7%AC%AC%E5%9B%9B%E7%AB%A0-%E8%AE%A9%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%85%A5%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F" tabindex="-1">第四章 让操作系统进入保护模式</h2><h3 id="4.1-%E7%AA%81%E7%A0%B4512%E5%AD%97%E8%8A%82%E9%99%90%E5%88%B6" tabindex="-1">4.1 突破512字节限制</h3><h4 id="fat12" tabindex="-1">FAT12</h4><p>FAT12文件系统的基本组成包括引导扇区（Boot Sector）、文件分配表（File Allocation Table）、根目录区（Root Directory Region）和数据区（Data Region）。</p><ul><li>引导扇区（Boot Sector）是文件系统的第一个扇区，包含了引导代码和文件系统的元数据，例如文件系统的标识、扇区大小等。引导扇区还包含一个特殊的标志，被用来指示磁盘是否可引导。</li><li>文件分配表（File Allocation Table）是一个记录文件分配信息的表格，它跟踪文件在磁盘上的存储位置。FAT12使用12位来表示每个文件的分配状态，例如是否被占用或空闲，以及文件块的链接关系。</li><li>根目录区（Root Directory Region）存储了存储设备的根目录的相关信息，包括文件名、扩展名、属性和起始簇号等。FAT12文件系统中的根目录区是固定大小的。</li><li>数据区（Data Region）是存储实际文件数据的地方。文件系统使用文件分配表中的链接关系来跟踪文件数据在数据区的存储位置。</li></ul><h4 id="loader%E6%A8%A1%E5%9D%97" tabindex="-1">loader模块</h4><p>一个操作系统从开机到运行，大致经历</p><pre><code class="language-mermaid">graph LRA[引导]--&gt;B[加载内核到内存];B--&gt;C[跳入保护模式];C--&gt;D[开始执行内核]</code></pre><p>因此在执行内核前，还需要几步，仅靠一个512B的引导扇区是无法加载内核到内存的，因此我们将这一步工作交给一个称为Loader的模块去实现，该模块没有内存限制。</p><p>一个简单的loader模块为</p><pre><code class="language-asm">org 0100h mov ax, 0B800h mov gs, ax mov ah, 0Fh    ; 0000: 黑底    1111: 白字 mov al, 'L' mov [gs:((80 * 0 + 39) * 2)], ax ; 屏幕第 0 行, 第 39 列。 jmp $    ; 到此停住</code></pre><p>随后通过<code>nasm loader.asm -o loader.bin</code>转为二进制文件，准备放入磁盘。</p><h4 id="%E5%8A%A0%E8%BD%BDloader%E5%85%A5%E5%86%85%E5%AD%98" tabindex="-1">加载Loader入内存</h4><p>这里boot首先要做出改变，首先引导扇区需要BPB头信息才能被识别，其次我们要在boot的代码里实现寻找loader模块，这里代码见书附磁盘。</p><p>随后我们就要将loader模块放入磁盘，让boot程序找到它并执行。</p><p>命令为</p><pre><code class="language-asm">nasm boot.asm -o boot.binnasm loader.asm -o loader.bindd if=boot.bin of=a.img bs=512 count=1 conv=notruncsudo mount -o loop a.img /mnt/floppy/sudo cp loader.bin /mnt/floppy/ -vsudo umount /mnt/floppy/</code></pre><p>该指令将软盘挂载到/mnt/floppy下，在将loader程序复制进去，以达到将loader放入软盘的目的，但是我的<code>mnt</code>目录下没有floppy文件夹，因此首先用指令<code>mkdir /mnt/floppy/</code>创建一个挂载软盘的区域</p><h3 id="4.2-%E4%BF%9D%E6%8A%A4%E6%A8%A1%E5%BC%8F%E4%B8%8B%E7%9A%84%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" tabindex="-1">4.2 保护模式下的操作系统</h3><ul><li>Loader要做的<ul><li>加载内核到内存</li><li>跳入保护模式</li></ul></li></ul><h2 id="%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%86%85%E6%A0%B8%E9%9B%8F%E5%BD%A2" tabindex="-1">第五章 内核雏形</h2><h3 id="1-linux%E4%B8%8Basm%E6%96%87%E4%BB%B6%E7%9A%84%E8%BF%90%E8%A1%8C" tabindex="-1">1 linux下asm文件的运行</h3><p>运行hello.asm文件</p><pre><code class="language-asm">; 编译链接方法; (ld 的‘-s’选项意为“strip all”);; $ nasm -f elf hello.asm -o hello.o; $ ld -s hello.o -o hello; $ ./hello; Hello, world!; $[section .data] ; 数据在此strHello db &quot;Hello, world!&quot;, 0AhSTRLEN  equ $ - strHello[section .text] ; 代码在此global _start ; 我们必须导出 _start 这个入口，以便让链接器识别_start: mov edx, STRLEN mov ecx, strHello mov ebx, 1 mov eax, 4  ; sys_write int 0x80  ; 系统调用 mov ebx, 0 mov eax, 1  ; sys_exit int 0x80  ; 系统调用</code></pre><p>之后首先转换为.o二进制文件<br><code>nasm -f elf hello.asm -o hello.o</code><br>再进行链接得到可执行文件<br><code>ld -s hello.o -o hello</code>，然而这句话会报错，因为书中系统为32位，而目前（2023）年基本为64位机，所以我们应用指令<code>ld -m elf_i386 -s hello.o -o hello</code>生成可执行文件<br>再运行<code>./hello</code>可看到输出Hello，World!</p><h3 id="2-linux%E4%B8%8B%E6%B1%87%E7%BC%96%E5%92%8Cc%E5%90%8C%E6%AD%A5%E4%BD%BF%E7%94%A8" tabindex="-1">2 linux下汇编和C同步使用</h3><p>书中例子</p><pre><code class="language-asm">; 编译链接方法; (ld 的‘-s’选项意为“strip all”);; $ nasm -f elf foo.asm -o foo.o; $ gcc -c bar.c -o bar.o; $ ld -s hello.o bar.o -o foobar; $ ./foobar; the 2nd one; $extern choose ; int choose(int a, int b);[section .data] ; 数据在此num1st  dd 3num2nd  dd 4[section .text] ; 代码在此global _start ; 我们必须导出 _start 这个入口，以便让链接器识别。global myprint ; 导出这个函数为了让 bar.c 使用_start: push dword [num2nd] ; `. push dword [num1st] ;  | call choose  ;  | choose(num1st, num2nd); add esp, 8  ; / mov ebx, 0 mov eax, 1  ; sys_exit int 0x80  ; 系统调用; void myprint(char* msg, int len)myprint: mov edx, [esp + 8] ; len mov ecx, [esp + 4] ; msg mov ebx, 1 mov eax, 4  ; sys_write int 0x80  ; 系统调用 ret</code></pre><pre><code class="language-C">void myprint(char* msg, int len);int choose(int a, int b)&#123; if(a &gt;= b)&#123;  myprint(&quot;the 1st one\n&quot;, 13); &#125; else&#123;  myprint(&quot;the 2nd one\n&quot;, 13); &#125; return 0;&#125;</code></pre><p>使用指令来运行代码<br><code>nasm -f elf -o foo.o foo.asm</code><br><code>gcc - m32 -c -o bar.o bar.c</code>(这里和书上的不一样，这里生成32位可执行文件)<br><code>ld -m -elf_i386 -s -o foobar foo.o bar.o</code>32位链接<br><code>./foobar</code></p><p>运行结果可以根据代码得出</p><h3 id="3-elf(executable-and-linkable-format)" tabindex="-1">3 ELF(Executable and  Linkable Format)</h3><p>ELF（Executable and Linkable Format）是一种常见的可执行文件和可链接文件的标准文件格式。它被广泛用于类Unix系统（如Linux）和其他操作系统上<br>操作系统内核位ELF文件格式,该文件格式由四部分组成（ELF头，程序头表，节，节头表），只有ELF头位置固定，其余部分由ELF头位置决定</p><ul><li>文件头ELF头（File Header）：文件头位于ELF文件的开头，包含了描述整个文件的基本信息，如目标体系结构、入口点地址、段表和节表的位置和大小等。</li><li>程序头表（Program Header Table）：程序头表描述了在可执行文件加载时需要进行的段的布局和操作。每个条目描述了一个段在内存中的位置、大小、访问权限以及其他相关信息。程序头表对于可执行文件和共享库非常重要。</li></ul><h3 id="4-%E4%BB%8Eloader%E5%88%B0%E5%86%85%E6%A0%B8" tabindex="-1">4 从Loader到内核</h3><p>loader要做的两项工作：</p><ol><li>加载内核到内存</li><li>跳入保护模式</li></ol><ul><li>用loader加载ELF文件</li></ul><p>使用附书磁盘中的文件 <code>fat12hdr.inc,boot.asm,loader.asm</code>首先编译连接生成磁盘驱动(boot.asm和loader.asm中已经include过fat12hdr.ihc)，此时磁盘中仍没有内核。</p><p>此时运行驱动磁盘会显示<code>No KERNEL</code></p><p>之后使用附书磁盘的kernel.asm文件，使用命令</p><pre><code class="language-asm">nasm -f elf -o kernel.o kernel.asmld -m elf_i386 -s -o kernel.bin kernel.osudo mount -o loop a.img /mnt/floppy/sudo cp kernel.bin /mnt/floppy/ -vsudo umount /mnt/floppy/</code></pre><p>之后再运行驱动磁盘只会显示<code>Ready.字样</code>，此时已将内核加载至内存</p><ul><li>跳入保护模式</li><li>重新放置内核</li><li>向内核交出控制权</li></ul><p>以上操作按书上做即可</p><h3 id="5-%E6%89%A9%E5%85%85%E5%86%85%E6%A0%B8" tabindex="-1">5 扩充内核</h3><ul><li>切换堆栈和GDT</li><li>整理文件夹与makefile<ul><li>此后可以更快地产生驱动磁盘，made in heaven</li><li>只需<code>make image</code>即可</li></ul></li></ul><pre><code class="language-makefile">########################## Makefile for Orange'S ########################### Entry point of Orange'S# It must have the same value with 'KernelEntryPointPhyAddr' in load.inc!ENTRYPOINT= 0x30400# Offset of entry point in kernel file# It depends on ENTRYPOINTENTRYOFFSET=   0x400# Programs, flags, etc.ASM= nasmDASM= ndisasmCC= gcc -m32 -fno-stack-protectorLD= ld ASMBFLAGS= -I boot/include/ASMKFLAGS= -I include/ -f elfCFLAGS= -I include/ -c -fno-builtinLDFLAGS= -m elf_i386 -s -Ttext $(ENTRYPOINT)DASMFLAGS= -u -o $(ENTRYPOINT) -e $(ENTRYOFFSET)# This ProgramORANGESBOOT= boot/boot.bin boot/loader.binORANGESKERNEL= kernel.binOBJS= kernel/kernel.o kernel/start.o kernel/i8259.o kernel/global.o kernel/protect.o lib/klib.o lib/kliba.o lib/string.oDASMOUTPUT= kernel.bin.asm# All Phony Targets.PHONY : everything final image clean realclean disasm all buildimg# Default starting positioneverything : $(ORANGESBOOT) $(ORANGESKERNEL)all : realclean everythingfinal : all cleanimage : final buildimgclean :rm -f $(OBJS)realclean :rm -f $(OBJS) $(ORANGESBOOT) $(ORANGESKERNEL)disasm :$(DASM) $(DASMFLAGS) $(ORANGESKERNEL) &gt; $(DASMOUTPUT)# We assume that &quot;a.img&quot; exists in current folderbuildimg :dd if=boot/boot.bin of=a.img bs=512 count=1 conv=notruncsudo mount -o loop a.img /mnt/floppy/sudo cp -fv boot/loader.bin /mnt/floppy/sudo cp -fv kernel.bin /mnt/floppysudo umount /mnt/floppyboot/boot.bin : boot/boot.asm boot/include/load.inc boot/include/fat12hdr.inc$(ASM) $(ASMBFLAGS) -o $@ $&lt;boot/loader.bin : boot/loader.asm boot/include/load.inc \boot/include/fat12hdr.inc boot/include/pm.inc$(ASM) $(ASMBFLAGS) -o $@ $&lt;$(ORANGESKERNEL) : $(OBJS)$(LD) $(LDFLAGS) -o $(ORANGESKERNEL) $(OBJS)kernel/kernel.o : kernel/kernel.asm$(ASM) $(ASMKFLAGS) -o $@ $&lt;kernel/start.o: kernel/start.c include/type.h include/const.h include/protect.h \include/proto.h include/string.h$(CC) $(CFLAGS) -o $@ $&lt;kernel/i8259.o : kernel/i8259.c include/type.h include/const.h include/protect.h \include/proto.h$(CC) $(CFLAGS) -o $@ $&lt;kernel/global.o : kernel/global.c$(CC) $(CFLAGS) -o $@ $&lt;kernel/protect.o : kernel/protect.c$(CC) $(CFLAGS) -o $@ $&lt;lib/klib.o : lib/klib.c$(CC) $(CFLAGS) -o $@ $&lt;lib/kliba.o : lib/kliba.asm$(ASM) $(ASMKFLAGS) -o $@ $&lt;lib/string.o : lib/string.asm$(ASM) $(ASMKFLAGS) -o $@ $&lt;</code></pre><ul><li>添加中断处理<ul><li>这里出现了有关<code>__stack_chk_fail_local</code>的报错，上网查阅后找到解决方法</li><li>在gcc编译时加上参数<code>-fno-stack-protector</code>即可，在makefile中更改位置为<code>CC= gcc -m32 -fno-stack-protector</code></li><li>这里不知道为什么会输出乱码，急急急（未解决），但好像使用光盘上的磁盘就没问题，应该是在编译环节出现问题。</li><li>经过比对，发现光盘上的boot.asm文件在虚拟机转化为bin文件后在虚拟磁盘上的二进制数，与光盘上的虚拟磁盘上的二进制数不同，即boot文件已有区别，可能是32位机子和64位机子的问题。。。于此开始使用32位的ubuntu16.04</li></ul></li></ul><h2 id="%E7%AC%AC%E5%85%AD%E7%AB%A0-%E8%BF%9B%E7%A8%8B" tabindex="-1">第六章 进程</h2><h3 id="6.1-6.2-%E8%BF%9F%E5%88%B0%E7%9A%84%E8%BF%9B%E7%A8%8B%E4%B8%8E%E6%A6%82%E8%BF%B0" tabindex="-1">6.1-6.2 迟到的进程与概述</h3><p>进程是一个正在运行的程序的实例。它是操作系统进行资源分配和管理的基本单位。每个进程都有独立的地址空间、代码、数据和打开的文件等资源。它拥有自己的执行环境，并可以通过操作系统调度来与其他进程并发执行。进程之间是相互独立的，每个进程都在自己的地址空间中运行，并通过进程间通信（IPC）机制进行必要的数据交换。</p><p>线程是在进程内部执行的较小单位。一个进程可以包含多个线程，它们共享相同的地址空间和资源。线程在进程内并发执行，共享进程的上下文、数据和文件等资源。多线程可以实现并行处理，提高程序的性能和响应能力。线程之间的切换比进程之间的切换更轻量级，开销更小。</p><ul><li>以下是进程和线程的一些关键区别：<ul><li>资源拥有：进程是独立的执行实体，拥有自己的地址空间和资源，包括打开的文件、网络连接等。线程是进程内的执行单元，共享进程的资源。</li><li>调度和切换：进程是操作系统进行调度和切换的基本单位。线程是在进程内调度和切换的基本单位，切换开销比进程切换小。</li><li>通信和同步：不同进程之间的通信需要使用进程间通信（IPC）机制，如管道、消息队列、共享内存等。线程之间可以通过共享内存和同步原语（如锁、条件变量）进行直接通信和同步。</li><li>容错性：由于每个进程拥有独立的地址空间，一个进程的崩溃不会影响其他进程。但是，线程共享进程的地址空间，一个线程的错误可能会导致整个进程崩溃。</li></ul></li></ul><h3 id="6.3-%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E8%BF%9B%E7%A8%8B" tabindex="-1">6.3 最简单的进程</h3><ul><li>进程切换时的过程<ul><li><ol><li>进程A运行中</li></ol></li><li><ol start="2"><li>时钟中断发生，ring1 -&gt; ring0,时钟中断处理程序启动</li></ol></li><li><ol start="3"><li>进程调度，下一个应运行的进程(假设为B进程)被指定</li></ol></li><li><ol start="4"><li>进程B被恢复，ring0 -&gt; ring1</li></ol></li><li><ol start="5"><li>进程B运行中</li></ol></li></ul></li><li>想要实现这些功能，需要实现以下3项<ul><li>时钟中断处理程序</li><li>进程调度模块</li><li>两个进程</li></ul></li></ul><h4 id="1-%E7%AE%80%E5%8D%95%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%85%B3%E9%94%AE%E6%8A%80%E6%9C%AF" tabindex="-1">1 简单进程的关键技术</h4><ul><li>进程的哪些状态需要保存<ul><li>只有被改变的才有保存的必要，因此寄存器的值需要保存起来</li></ul></li><li>进程的状态何需要以及怎样被保存<ul><li>进程被挂起时即刻保存，中断发生则立即执行</li></ul></li><li>恢复进程B的状态</li><li>进程表的引入<ul><li>进程表：保存进程状态的数据结构，也称进程控制块PCB</li><li>进程表相当于进程的提纲</li></ul></li><li>进程栈和内核栈<ul><li>在进程调度模块中会使用到堆栈，而寄存器被压到进程表之后，esp是指向进程的某个位置的</li><li>为此，在进程调度后将esp指向内核栈，避免错误的发生</li></ul></li><li>特权级变换:ring1-&gt;ring0<ul><li>由外层向内层转移时，需要从TSS中取出内层ss和esp作为目标代码的ss和esp。因此必须事先准备好TSS。由于每个进程相对独立，将涉及到的描述符放在LDT中，为此，需要给每个进程准备LDT</li></ul></li><li>特权级变换:ring0-&gt;ring1<ul><li>跳转到中断处理程序的后半部分，“假装”发生了一次中断来启动进程A，利用iretd来实现ring0到ring1转移</li></ul></li></ul><h4 id="2-%E7%AC%AC%E4%B8%80%E6%AD%A5-%E2%80%93-ring0--%3E-ring1" tabindex="-1">2 第一步 – ring0 -&gt; ring1</h4><ul><li>操作系统启动第一个进程时的入口</li></ul><pre><code>restart:movesp, [p_proc_ready]lldt[esp + P_LDT_SEL]leaeax, [esp + P_STACKTOP]movdword [tss + TSS3_S_SP0], eaxrestart_reenter:decdword [k_reenter]popgspopfspopespopdspopadaddesp, 4iretd</code></pre><p>上述代码中：</p><ol><li>p_proc_ready是一个结构类型指针，指向该进程在进程表中的位置；当要恢复一个进程时，便将esp指向这个结构体的开始处，然后运行一系列pop命令将寄存器弹出；</li><li>esp+P_LDT_SEL时选择子的位置，这个语句即对ldt_sel的初始化</li><li><ol start="4"><li>将进程表结构体的第一个结构体成员regs的末地址赋给TSS中ring0堆栈指针域esp</li></ol></li></ol><p>接下来一次做一些优先级变化需要的准备工作</p><ol><li>时间中断处理程序：这里先不需要完善的，只要能实现优先级跳转即可</li><li>化整为零：进程表，进程体，GDT，TSS，这四个关系可分为三个部分<ol><li>进程表和GDT：进程表内的LDT Selector对应GDT的一个描述符，而这个描述符所指向的内存空间位于进程表</li><li>进程表和进程：进程表是进程的描述，进程在运行过程中如果被打断，各个寄存器的值都会保存在进程表中。此外，程序一定会使用堆栈，因此需要事先指定esp</li><li>GDT和TSS：GDT中有一个描述符对应TSS，需要事先初始化这个描述符</li></ol></li><li>使用restart函数，进行优先级转换</li></ol><p><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_3_2_4.jpg" alt></p><ul><li>回顾<ul><li>第一个进程启动过程：<ul><li><ol><li>进程体TestA()准备就绪</li></ol></li><li><ol start="2"><li>初始化GDT中的TSS和LDT两个描述符，以及初始化TSS(在init_prot()完成)</li></ol></li><li><ol start="3"><li>准备进程表(在kernel_main()中完成)</li></ol></li><li><ol start="4"><li>完成跳转，实现ring0-&gt;ring1（kernel.asm之restart）</li></ol></li></ul></li></ul></li></ul><h4 id="3-%E7%AC%AC%E4%BA%8C%E6%AD%A5-%E2%80%93-%E4%B8%B0%E5%AF%8C%E4%B8%AD%E6%96%AD%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F" tabindex="-1">3 第二步 – 丰富中断处理程序</h4><ol><li>让时间中断开始起作用</li><li>现场的保护和恢复<br>中断例程中使用栈来保护寄存器值</li><li>赋值tss.esp0<br>存储在ring0时栈指针的位置</li><li>内核栈</li></ol><ul><li>内核栈（Kernel Stack）是操作系统内核为每个运行的进程或线程所分配的一块专用内存空间。它用于保存与进程或线程执行相关的上下文信息，包括函数调用栈、局部变量、寄存器状态等。</li><li>每个进程或线程都有自己的内核栈，它在内核模式下使用。当进程或线程发生内核态的切换或触发中断时，当前的执行上下文将被保存到该进程或线程的内核栈中，以便在恢复执行时能够正确地还原上下文。</li><li>内核栈通常位于内核地址空间中，并且具有固定的大小。为了确保安全和隔离，每个进程或线程的内核栈是独立的，不同进程或线程之间不会相互干扰。</li></ul><ol start="5"><li>中断重入</li></ol><ul><li>中断重入是指在一个中断服务程序（ISR）正在执行时，又发生了同样或更高优先级的中断请求，导致中断服务程序被中断。当发生这种情况时，系统会挂起当前的中断服务程序，执行新到来的中断请求，并在处理完该中断后返回到原来的中断服务程序继续执行。</li><li>中断处理程序是被动的，它知道中断发生时忠实的执行那段代码，不理会中断何时发生，因此我们需要设置一个全局变量限制中断处理程序的运行。<ul><li>设置一个全局变量即可，全集变量初值-1，当中断处理程序开始执行时它自加，结束时自加。在处理程序开头处这个变量值需要被检查一下，如果值不是0，说明发生了中断嵌套，直接跳到最后，结束中断程序的执行<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_3_3.jpg" alt></li></ul></li></ul><h3 id="6.4-%E5%A4%9A%E8%BF%9B%E7%A8%8B" tabindex="-1">6.4 多进程</h3><ul><li><ol><li>添加一个进程B</li></ol></li></ul><pre><code class="language-c">void TestB()&#123;  int i=0x1000;  while(1)&#123;    disp_str(&quot;B&quot;);    disp_int(i++);    disp_str(&quot;.&quot;);    delay(1);  &#125;&#125;</code></pre><ul><li><ol start="2"><li>相关的变量和宏</li></ol><ul><li>进程表，进程体，GDT，TSS</li></ul></li><li><ol start="3"><li>进程表初始化代码扩充</li></ol><ul><li>使用Minix中定义的数组tasktab，该数组的每一项定义了一个进程的开始地址，堆栈等，至此可以用for循环来初始化进程表</li></ul></li><li><ol start="4"><li>初始化LDT，3，4均在上一步加上循环对多进程赋值即可</li></ol></li><li><ol start="5"><li>修改中断处理程序</li></ol><ul><li>进程从“睡眠”状态到“运行”状态既是将esp指向进程表项的开始处，因此想要恢复不同的进程，只需要将esp指向不同的进程表即可</li></ul></li></ul><p>双进程图：<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_4_1.jpg" alt></p><ul><li>添加一个进程的步骤总结<ul><li><ol start="0"><li>添加一个进程体</li></ol></li><li><ol><li>在task_table中增加一项(global.c)</li></ol></li><li><ol start="2"><li>让NR_TASKS加1</li></ol></li><li><ol start="3"><li>定义任务堆栈</li></ol></li><li><ol start="4"><li>修改STACK_SIZE_TOTAL(proc.h)</li></ol></li><li><ol start="5"><li>添加新进程执行体的函数声明(proto.h)<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_4_2.jpg" alt></li></ol></li></ul></li></ul><h3 id="%E7%9B%AE%E5%89%8Dorange%E2%80%99s%E8%BF%90%E8%BD%AC%E8%BF%87%E7%A8%8B" tabindex="-1">目前orange’s运转过程</h3><p><img src="/images/%E6%9C%AC%E7%A7%91//OS%E5%AE%9E%E9%AA%8C/%E6%A9%98%E5%AD%90%E8%BF%90%E8%BD%AC%E8%BF%87%E7%A8%8B.jpg" alt></p><h3 id="6.5-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8" tabindex="-1">6.5 系统调用</h3><ul><li>系统调用（System Call）是<strong>操作系统提供给应用程序访问其功能和服务的一种接口</strong>。应用程序可以通过系统调用向操作系统请求执行特权操作，例如文件读写、网络通信、进程管理等。系统调用允许应用程序在用户态（User Mode）与内核态（Kernel Mode）之间进行切换，以便使用操作系统提供的特权功能。</li><li>通过系统调用，应用程序可以利用操作系统的功能来完成一些只有操作系统才能执行的任务，例如访问底层硬件设备、进行进程间通信、分配内存等。系统调用提供了一种安全和受控的方式，使应用程序能够利用操作系统的特权功能，同时保护操作系统免受不当访问和恶意行为的影响。</li><li>不同的操作系统具有不同的系统调用接口和调用约定。通常，应用程序需要使用特定的系统调用指令或函数来触发系统调用，并传递参数和获取返回值。操作系统会在接收到系统调用请求时，验证请求的合法性，并执行相应的操作，然后将结果返回给应用程序。</li><li>系统调用是操作系统的核心组成部分，它提供了应用程序与操作系统之间的交互接口，使应用程序能够利用操作系统的功能和服务来实现各种任务。</li></ul><h4 id="1-%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8" tabindex="-1">1 实现一个简单的系统调用</h4><ul><li>int get_ticks()统计当前总共发生了多少次时钟中断</li><li>更改TestA，使其打印当前ticks<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_5_1.jpg" alt><br>可以看到第一次打印出A0x0,第二次打印出A0x3，而两次打印之间的#共有三个，所以该系统调用函数一切正常</li></ul><h4 id="2-get_ticks()%E7%9A%84%E5%BA%94%E7%94%A8" tabindex="-1">2 get_ticks()的应用</h4><p>通过该函数可以写一个判断时间的函数，用来替代丑陋的delay()函数</p><ol><li>8253/8254 PIT<br>中断是由一个被称作PIT(Programmable Interval Timer)的芯片触发的.</li><li>不太精确的延迟函数，使用该函数替代原先的delay函数，delay函数之前是纯纯for循环</li></ol><pre><code class="language-c">PUBLIC void milli_delay(int milli_sec)&#123;    int t=get_ticks();    while(((get_ticks()-t)*1000/HZ)&lt;milli_sec)&#123;&#125;    //通过时间中断次数写延迟函数，比野蛮循环好，但精度不高&#125; </code></pre><h3 id="6.6-%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6" tabindex="-1">6.6 进程调度</h3><ol><li>避免堆成–进程的节奏性<br>将三个进程的延迟时间不同，而延迟的时间越长，干活时间越少，这与优先级的概念相吻合。<br>因此我们可以通过ticks使用时间片轮转算法，及时间片的不同大小对进程进行优先级的确立和调度<br>即使用6.5中的系统调用函数，通过设置不同的延迟时长，即可改变各进程的时间片大小</li></ol><pre><code class="language-c">void TestA()&#123;  ****  milli_delay(300);  ****&#125;void TestB()&#123;  ****  milli_delay(900);  ****&#125;void TestA()&#123;  ****  milli_delay(1500);  ****&#125;</code></pre><p><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_6_1.jpg" alt><br>可以看出A,B进程运行次数比约为3：1；A，C进程运行次数比约为5：1.</p><ul><li><p>如果将延迟的过程拿到进程调度模块中实现，就可以实现进程的优先级，目前的调度算法可以算是时间片流转算法</p></li><li><p>新的进程调度算法（时间片流转算法）：</p><ul><li>在进程表中添加两个成员：ticks是递减的，从某个初值到0。定义另一个变量priority，其恒定不变，当所有的进程ticks都变成0时，再将各自的ticks赋值为priority，然后继续执行。</li><li>同时，将所有进程的延迟时间全改为相同的值</li><li>限制当一个进程的ticks用完之前，其它进程不能获得机会运行</li><li>本次实验中，设置进程A,B,C的priority分别为150,50,30<br><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/6_6_2.jpg" alt></li><li>可以看出图片中打印字符数目比值接近15:5:3</li></ul></li></ul><ol><li>优先级调度总结<br>minix中，进程分为任务，服务，用户进程三种，为此设置了3个不同的优先队列，这里仅以get_ticks进入进程调度算法领域的大门</li></ol><h2 id="%E7%AC%AC%E4%B8%83%E7%AB%A0-%E8%BE%93%E5%85%A5%2F%E8%BE%93%E5%87%BA%E7%B3%BB%E7%BB%9F" tabindex="-1">第七章 输入/输出系统</h2><h3 id="7.1-%E9%94%AE%E7%9B%98" tabindex="-1">7.1 键盘</h3><h4 id="1-%E9%94%AE%E7%9B%98%E4%B8%AD%E6%96%AD" tabindex="-1">1 键盘中断</h4><ul><li>新建一个文件keyboard.c，添加一个简单的键盘中断程序。<ul><li>结果是每次按一次键，打印一个星号。</li><li>同时为了不受其他进程输出的影响，我们把其它进程的输出注释掉</li><li>然而makefile后，出现一个星号就不再响应，看来事情还较为复杂</li></ul></li></ul><h4 id="2-at%2Cps%2F2%E9%94%AE%E7%9B%98" tabindex="-1">2 AT,PS/2键盘</h4><p>AT键盘（又称为PC/AT键盘）是早期PC机使用的键盘接口标准。它使用5针DIN连接器，并且是较早版本的键盘接口。</p><p>PS/2键盘是后来引入的键盘接口标准，用于连接键盘到计算机。它使用6针Mini-DIN连接器，比AT键盘接口更小巧。</p><p>两种键盘接口在物理连接上有所不同，因此AT键盘不能直接连接到PS/2接口，反之亦然。然而，通过使用适配器，可以将AT键盘连接到PS/2接口，或将PS/2键盘连接到AT接口。</p><p>需要注意的是，随着技术的进步，USB接口逐渐取代了AT和PS/2键盘接口，成为现代计算机键盘的主要标准。</p><h4 id="3-%E9%94%AE%E7%9B%98%E6%95%B2%E5%87%BB%E7%9A%84%E8%BF%87%E7%A8%8B" tabindex="-1">3 键盘敲击的过程</h4><ul><li><p>键盘敲击的过程：键盘敲击有两个方面的含义</p><ul><li>动作：<ul><li>按下</li><li>保持按住的状态</li><li>放开</li></ul></li><li>内容：键盘上不同的键，字母键还是数字键等</li></ul></li><li><p>敲击键盘所产生的编码被称作扫描码(Scan Code),分为Make Code和Break Code</p><ul><li>Make Code ：当一个键被按下或保持住按下时产生</li><li>Break Code：当键弹起时</li><li>除Pause键外，每个按键都对应一个Make Code和Break Code</li><li>扫描码总过有三套，Scan code set 1/2/3</li></ul></li><li><p>过程：</p><ul><li>当8048检测到一个键的动作后，会把相应的扫描码发送给8042，8042会把它转换成相应的Scan code set 1的扫描码，并将其放置在输入缓冲区中，然后8042告诉8259A产生中断，此时如果键盘又有新的键被按下，8042将不再接受，一直到缓冲区被清空，8042才能接受更多的扫描码</li><li>因此只有把扫描码从缓冲区中读出来后，8042才能继续响应新的按键</li></ul></li><li><p>修改程序</p><ul><li>在键盘中断中加入<code>in_byte(0x60)</code>，此时按一下键出现两个星号，每次按键产生一个Make Code和一个Break Code</li><li>进一步修改键盘中断,此时键盘按下“a”，“9”可以看到前4组代码0x1E,0x9E,0xA,0x8A，实际这就是“a”“9”的Make Code和Break Code<br><img src="../../images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/7_1_3.jpg" alt></li></ul></li></ul><pre><code class="language-c">PUBLIC void keyboard_handler(int irq)&#123;  u8 scan_code = in_byte(0x60);  disp_int(scan_code);&#125;</code></pre><h4 id="4-%E7%94%A8%E6%95%B0%E7%BB%84%E8%A1%A8%E7%A4%BA%E6%89%AB%E6%8F%8F%E7%A0%81" tabindex="-1">4 用数组表示扫描码</h4><ul><li><p>用数组表示扫描码</p><ul><li>建立一个数组，以扫描码为下标，对应的元素就是对应字符</li></ul></li><li><p>新的问题及解决</p><ul><li>8042的输入缓冲区大小只有一个字节</li></ul></li></ul><h4 id="5-%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%E7%BC%93%E5%86%B2%E5%8C%BA" tabindex="-1">5 键盘输入缓冲区</h4><ul><li>因此需要实现一个缓冲区，放置中断例程中受到的扫描码</li><li>代码很简单，如果缓冲区已满，则直接将收到的字节丢弃</li></ul><pre><code class="language-c">PUBLIC void keyboard_handler(int irq)&#123;  u8 scan_code = in_byte(KB_DATA);  if (kb_in.count &lt; KB_IN_BYTES)&#123;    *(kb_in.p_head)=scan_code;    kb_in.p_head++;    if(kb_in.p_head==kb_in.buf + KB_IN_BYTES)&#123;      kb_in.p_head=kb_in.buf;    &#125;    kb_in.count++;  &#125;&#125;</code></pre><h4 id="6-%E6%96%B0%E5%8A%A0%E4%BB%BB%E5%8A%A1%E5%A4%84%E7%90%86%E9%94%AE%E7%9B%98%E6%93%8D%E4%BD%9C" tabindex="-1">6 新加任务处理键盘操作</h4><h4 id="7-%E8%A7%A3%E6%9E%90%E6%89%AB%E6%8F%8F%E7%A0%81" tabindex="-1">7 解析扫描码</h4><ul><li><p>解析扫描码的复杂性</p><ul><li>不但分为 Make Code ，Break Code</li><li>且有长有短，功能多样，如Home键对应一种功能而不是ASCII码</li></ul></li><li><p>思路：由简至繁，最终可以显示大部分字母，并对一些功能按键不做反应</p></li></ul><p><img src="/images/%E6%9C%AC%E7%A7%91/OS%E5%AE%9E%E9%AA%8C/7_1_7.jpg" alt></p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;img src=&quot;/images/meitu/4.jpg&quot;&gt;
本次操作系统实验根据`Orange&#39;s 一个操作系统的实现`一书进行操作。在此记录试验的过程及心得
&lt;h2 id=&quot;%E7%AC%AC%E4%B8%80%E7%AB%A0%26%E7%AC%</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="操作系统" scheme="http://example.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>RBAC模型学习</title>
    <link href="http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/RBAC/"/>
    <id>http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/RBAC/</id>
    <published>2023-08-16T13:48:11.646Z</published>
    <updated>2023-06-07T01:51:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-rbac-%E5%92%8C-abac" tabindex="-1">0 RBAC 和 ABAC</h2><ul><li><p>RBAC：Role-Based Access Control 基于角色的访问控制</p></li><li><p>ABAC：Attribute-Based Access Control 基于属性的访问控制</p></li><li><p>美国国家标准与技术研究院为RBAC分了4级，为RBAC0-3</p></li></ul><h2 id="1-rbca%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5" tabindex="-1">1 RBCA基础概念</h2><ul><li><p>RBAC：Role-Based Access Control，基于角色的访问控制。</p></li><li><p>通过引入 角色 这一概念，将用户和权限解耦，来满足权限的批量管理。</p></li><li><p>实现最简单的RBAC系统(也就是RBAC0)一共需要五张表：三张信息表和两张关系表。</p><ul><li>三张信息表：用户信息表、角色信息表和权限信息表</li><li>两张关系表：用户-角色关系表、角色-权限关系表</li></ul></li><li><p>模型操作</p><ul><li>授权：通过给用户分配不同的角色，来改变其拥有的权限。<ul><li>例子：管理员应用增删改查四种权限，访问者只有查的权限，对于新增用户老李，直接授予去管理者或者访问者角色，获得对应的权限</li><li>RBAC中只需在用户-角色关系表中增加一个数据即可</li></ul></li><li>鉴权：验证某个是否拥有某个权限<ul><li>过程：<ul><li><ol><li>传入用户和权限信息</li></ol></li><li><ol start="2"><li>根据用户-角色表获得该用户的所有角色</li></ol></li><li><ol start="3"><li>根据角色-权限表获得该用户拥有的所有权限</li></ol></li><li><ol start="4"><li>对比权限数据</li></ol></li></ul></li></ul></li><li>权限变更：收回或者增加权限<ul><li>操作：收回权限只需在角色-权限表中删除对应的一条数据即可，增加同理</li></ul></li></ul></li><li><p>RBAC0的缺点</p><ul><li><ol><li>在复杂的业务场景中，同一个角色在不同的情况下拥有不同的权限。</li></ol></li><li><ol start="2"><li>对于管理员或者超级管理员这类上层角色，拥有很多权限，每当出现一个权限，都要将权限绑定给他们，当这类管理角色增多时，RBAC0的模型成本会上升，这一问题在RBAC1中得到解决</li></ol></li><li><ol start="3"><li>角色爆炸时，RBAC模型难以维护，这是可以转为ABAC模型</li></ol></li></ul></li></ul><h2 id="2-rbac%E8%BF%9B%E9%98%B6" tabindex="-1">2 RBAC进阶</h2><h3 id="2.1-rbac1" tabindex="-1">2.1 RBAC1</h3><ul><li>动机举例：<ul><li>一个企业有老板，主管，员工等角色，则整体结构如下<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/2_1_1.webp" alt></li><li>该结构中上级有下级的所有权限，不同的角色间有着重叠的权限，此时如果新增一条员工的权限，需要同时绑定给主管和老板，否则会出现员工有权限，老板没权限的情况</li><li>为此，RBAC1中引入了角色继承，在RBAC1中，角色之间有层级关系，上级角色默认拥有下级角色的全部权限，于是新的结构如下<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/2_1_2.webp" alt></li><li>此时就不会出现下级角色拥有上级角色所没有的权限了，由于生活中的各种角色也具有类型的层级关系，因此，RBAC1是最常用的权限模型。</li></ul></li><li>模型结构：<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/2_1_3.webp" alt></li><li>实现<ul><li>三张数据表：用户表、角色表、权限表。</li><li>三张关系表：用户-角色关系表、角色-继承关系表、角色-权限关系表。</li></ul></li><li>实现中的一个细节：角色-权限关系表有两种方案<ul><li><ol><li>仅记录与角色直接关联的权限。</li></ol><ul><li>优点：生效快，角色继承关系一旦生效，那么鉴权就能通过</li><li>缺点：鉴权时，需要先拿到用户的所有角色及其子角色(读扩散)，然后对比全部角色的全部权限点。在角色数量比较多的时候，会影响鉴权接口的响应时间。</li><li>优势场景：角色继承关系频繁变动的场景。</li></ul></li><li><ol start="2"><li>记录与角色直接关联的权限，且记录从子角色继承而来的权限。</li></ol><ul><li>优点：鉴权较快，不存在读扩散的问题。</li><li>缺点：每次角色继承关系变动的时候，都需要对上层角色进行大量的权限绑定与解绑操作(写扩散)。</li><li>优势场景：角色继承关系变化很少的场景。</li></ul></li></ul></li><li>两全其美的方法：我全都要<ul><li>使用两张角色权限关系表，一张仅记录直接关联的权限，一张记录全部权限。</li><li>鉴权时：优先查询全部权限关系表，若鉴权失败，则自动降级查询继承关系的鉴权模式。</li></ul></li></ul><h3 id="rbac2" tabindex="-1">RBAC2</h3><ul><li>静态职责分离（SSD）<ul><li>互斥角色：同一用户只能分配到一组互斥角色集合中至多一个角色，比如用户不能同时拥有会计和审计两个角色</li><li>基数约束：一个用户可拥有的角色数目受限；一个角色可被分配的用户数量受限；一个角色对应的权限数目受限</li><li>先决条件角色：用户想要成为上级角色，必须先成为下一级角色，比如游戏中的转职</li></ul></li><li>动态职责分离（DSD）<ul><li>允许一个用户具有多个角色，但在运行时只能激活其中某些角色，比如BOSS直聘，一个用户既可以是招聘者也可以是应聘者，但同时只能选择一种身份进行操作</li></ul></li></ul><h3 id="rbac3" tabindex="-1">RBAC3</h3><p>RBAC1 + RBAC2，既有角色继承，也有各种限制条件。</p><h2 id="3-rbac%E4%B8%AD%E7%9A%84%E7%94%A8%E6%88%B7%E5%88%92%E5%88%86" tabindex="-1">3 RBAC中的用户划分</h2><h3 id="3.1-%E7%94%A8%E6%88%B7%E7%BB%84" tabindex="-1">3.1 用户组</h3><ul><li>用户组是一群用户的组合，而角色是用户和权限之间的桥梁。<ul><li>用户组把相同属性的用户组合起来，比如同一个项目的开发、产品、测试可以是一个用户组，同一个部门的相同职位的员工可以是一个用户组， 一个用户组可以是一个职级，可以是一个部门，可以是一起做事情的来自不同岗位的人。</li></ul></li><li>用户可以分组，权限也可以分组，权限特别多的情况下，可以把一个模块的权限组合起来成为一个权限组，权限组也是解决权限和角色对应关系复杂的问题。</li></ul><p>此时RBAC模型为<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/3_1_1.png" alt></p><h3 id="3.2-%E7%BB%84%E7%BB%87" tabindex="-1">3.2 组织</h3><ul><li>每个公司都有自己的组织架构，很多时候权限的分配可以根据组织架构来划分。统一组织内的人权限大都一样</li><li>按组织分配角色的优势<ul><li>实现权限分配的自动化： 和组织关系打通之后，按照组织来分配角色，如果有新入职的用户，被划分在某个组织下面之后，会自动获取该组织下所有的权限，无需人工分配。又比如有用户调岗，只需要把组织关系调整就可以了，权限会跟着组织关系自动调整，也无需人工干预。这么做首先需要把权限和组织关系打通。</li><li>控制数据权限： 把角色关联到组织，组织里的成员只能看到本组织下的数据，比如市场推广和大客定制，市场推广针对的是零散的客户，大可定制针对的是有一定体量的客户，相互的数据虽然在一个平台，但是只能看自己组织下的数据。</li></ul></li><li>加入组织后的模型图<img src="/images/%E5%B7%A5%E5%85%B7/RBAC/3_2_1.png" alt></li></ul><h3 id="3.3-%E8%81%8C%E4%BD%8D" tabindex="-1">3.3 职位</h3><p>一个组织下面会有很多职位，比如财务管理会有财务总监、财务主管、会计、出纳员等职位，每个职位需要的权限是不一样的，可以像组织那样根据职位来分配不同的角色，由于一个人的职位是固定的，所以用户跟职位的对应关系时一对一的关系，职位跟角色的对应关系可以是多对多的关系。</p><h2 id="4-%E7%90%86%E6%83%B3%E7%9A%84rbac%E6%A8%A1%E5%9E%8B" tabindex="-1">4 理想的RBAC模型</h2><p>把RBAC、RBAC1、RBAC2、用户组、组织、职位汇总起来的模型如下所示：<br><img src="/images/%E5%B7%A5%E5%85%B7/RBAC/4_1.png" alt></p><h2 id="5-%E6%9D%83%E9%99%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%A1%A8%E8%AE%BE%E8%AE%A1" tabindex="-1">5 权限系统的表设计</h2><h3 id="5.1-%E6%A0%87%E5%87%86rbac%E6%A8%A1%E5%9E%8B%E8%A1%A8%E8%AE%BE%E8%AE%A1" tabindex="-1">5.1 标准RBAC模型表设计</h3><p><img src="/images/%E5%B7%A5%E5%85%B7/RBAC/5_1.png" alt></p><h3 id="5.2-%E7%90%86%E6%83%B3rbac%E6%A8%A1%E5%9E%8B%E8%A1%A8%E8%AE%BE%E8%AE%A1" tabindex="-1">5.2 理想RBAC模型表设计</h3><p><img src="/images/%E5%B7%A5%E5%85%B7/RBAC/5_2.png" alt></p><h2 id="%E5%8F%82%E8%80%83" tabindex="-1">参考</h2><p><a href="https://zhuanlan.zhihu.com/p/511846624">权限系统设计之RBAC</a><br><a href="https://zhuanlan.zhihu.com/p/516533087">权限系统之RBAC进阶</a><br><a href="https://blog.csdn.net/u010482601/article/details/104989532">全网最全的权限系统设计方案，不接受反驳！</a></p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0-rbac-%E5%92%8C-abac&quot; tabindex=&quot;-1&quot;&gt;0 RBAC 和 ABAC&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;RBAC：Role-Based Access Control 基于角色的访问控制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ABAC</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="RBAC" scheme="http://example.com/tags/RBAC/"/>
    
  </entry>
  
  <entry>
    <title>overleaf使用（Latex）</title>
    <link href="http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/overleaf%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/overleaf%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2023-08-16T13:48:11.644Z</published>
    <updated>2023-03-31T12:58:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>这个坑还是晚点再填吧，到时自己看书学学</p><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这个坑还是晚点再填吧，到时自己看书学学&lt;/p&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn.jsdelivr.net/npm/katex/dist/katex.min.css&quot;&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;//cdn</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Latex" scheme="http://example.com/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>git学习</title>
    <link href="http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/git%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2023/08/16/%E5%B7%A5%E5%85%B7/git%E5%AD%A6%E4%B9%A0/</id>
    <published>2023-08-16T13:48:11.642Z</published>
    <updated>2023-03-23T16:26:24.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://learngitbranching.js.org/?locale=zh_CN">连接</a></p><h2 id="%E5%9F%BA%E7%A1%80%E7%AF%87" tabindex="-1">基础篇</h2><ul><li><p><code>undo</code> 撤销一次更改</p></li><li><p><code>git commit</code><br>进行一次更改</p></li><li><p><code>git branch name</code><br>创建一个名为 name 的分支</p></li></ul><p>分支：可以理解为树分叉，每次选一个分叉进行开发</p><ul><li><p><code>git checkout name</code><br>切换到name的分支上</p></li><li><p><code>git checkout -b name</code><br>创建一个分支并转移到分支上</p></li><li><p><code>git merge name</code><br>将当前所在分支合并到name</p></li><li><p><code>git rebase name</code><br>将当前分支与name分支的另一种合并方法</p></li></ul><h2 id="%E9%AB%98%E7%BA%A7%E7%AF%87" tabindex="-1">高级篇</h2><p>head相当于当前指向位置</p><ul><li><p><code>git checkout hashval（绝对引用）</code><br>将head移动到对应hashval的节点上</p></li><li><p><code>git checkout name^</code> (相对应用)<br>表示将head指向name提交位置的父节点</p></li><li><p><code>git checkout name~x</code>（相对引用）<br>表示将head指向name提交位置后退x次的节点</p></li><li><p>使用相对引用最多的地方：移动分支<br><code>git branch -f main HEAD~3</code>表示将main分支强制指向HEAD的第三级父提交</p></li><li><p><code>git reset name ~x/^</code><br>改写历史，回到若干个节点前，已经改变的从未发生过，但仅对本地而言。<br>对于多人使用的远程分支是无效的。</p></li><li><p><code>git revert name ~x/^</code><br>前进一个节点，但新建的节点与回溯到的节点相同</p></li></ul><h2 id="%E8%BF%9B%E9%98%B6" tabindex="-1">进阶</h2><p>高级以上已经可应付90%，接下来是在复杂工作流中使用</p><ul><li><code>git cherry-pick &lt;提交号&gt;</code><br>将选择的提交号节点按顺序复制到当前head下</li><li><code>git rebase -i name ~x/^</code><br>将从HEAD当所选父节点的所有节点到可视化界面进行选择重排，复制到所选父节点下</li></ul><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/katex/dist/katex.min.css"><link rel="stylesheet" href="//cdn.jsdelivr.net/npm/markdown-it-texmath/css/texmath.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://learngitbranching.js.org/?locale=zh_CN&quot;&gt;连接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;%E5%9F%BA%E7%A1%80%E7%AF%87&quot; tabindex=&quot;-1&quot;&gt;基础篇&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="git" scheme="http://example.com/tags/git/"/>
    
  </entry>
  
</feed>
